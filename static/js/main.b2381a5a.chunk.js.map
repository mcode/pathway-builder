{"version":3,"sources":["camino-logo-dark.png","components/Graph/Graph.module.scss","components/ActionButton/ActionButton.module.scss","utils/ConfigManager.js","components/CurrentCriteriaProvider.tsx","styles/theme.tsx","components/ThemeProvider.tsx","components/Header/Header.tsx","components/Navigation/styles.tsx","utils/useRefState.ts","components/CurrentPathwayProvider.tsx","utils/nodeUtils.ts","utils/cpg.ts","utils/builder.ts","components/elements/ExportMenu/ExportMenu.tsx","components/Navigation/Navigation.tsx","components/Services/Services.tsx","components/PathwaysProvider.tsx","components/Sidebar/styles.tsx","components/CurrentNodeProvider.tsx","components/elements/DropDown/DropDown.tsx","components/SnackbarProvider.tsx","components/Sidebar/DeleteSnackbar.tsx","components/Sidebar/ConnectNodeButton.tsx","components/Sidebar/Sidebar.tsx","components/Sidebar/SidebarHeader.tsx","components/Sidebar/SidebarButton.tsx","engine/cql-to-elm.ts","components/Sidebar/ActionNodeEditor.tsx","components/CriteriaProvider.tsx","components/CriteriaBuilderProvider.tsx","components/Sidebar/BranchTransition.tsx","components/Sidebar/OutlinedDiv.tsx","components/Sidebar/DeleteModal.tsx","components/Sidebar/TransitionEditor.tsx","visualization/layout.ts","components/ExpandedNode/ExpandedNode.tsx","components/Node/Node.tsx","components/Arrow/styles.tsx","components/Arrow/Arrow.tsx","components/Graph/Graph.tsx","components/CriteriaBuilder/styles.tsx","components/CriteriaBuilder/CriteriaBuilder.tsx","components/Builder/styles.tsx","components/Builder/Builder.tsx","components/BuilderRoute.tsx","components/UserProvider.tsx","components/Tabs/styles.tsx","components/Tabs/Tabs.tsx","components/elements/Loading/Loading.tsx","components/PathwaysList/styles.tsx","components/PathwaysList/PathwayModal.tsx","components/ConfirmedDeletionButton/styles.tsx","components/ActionButton/ActionButton.tsx","components/ConfirmedDeletionButton/ConfirmedDeletionButton.tsx","components/PathwaysList/PathwaysTable.tsx","components/PathwaysList/PathwaysList.tsx","components/CriteriaList/styles.tsx","components/CriteriaList/CriteriaTable.tsx","components/CriteriaList/ImportCriteriaModal.tsx","components/CriteriaList/CriteriaList.tsx","components/App.tsx","index.js","components/Node/Node.module.scss","components/ExpandedNode/ExpandedNode.module.scss","components/Header/Header.module.scss","components/elements/Loading/Loading.module.scss"],"names":["module","exports","config","this","global","CONFIG","name","defaultValue","parts","split","context","value","i","conf","CurrentCriteriaContext","createContext","CurrentCriteriaProvider","memo","children","useState","currentCriteriaNodeId","setCurrentCriteriaNodeId","currentCriteriaCql","setCurrentCriteriaCql","buildCriteriaSelected","setBuildCriteriaSelected","criteriaName","setCriteriaName","resetCurrentCriteria","useCallback","Provider","useCurrentCriteriaContext","useContext","variables","spacing","globalPadding","colors","white","black","red","blue","blueLighter","gray","grayMedium","grayBlue","grayLight","grayLighter","grayDark","grayVeryDark","green","typography","fontFamily","join","materialUiOverridesBase","MuiButton","root","borderRadius","height","backgroundColor","color","contained","label","fontWeight","iconSizeMedium","fontSize","iconSizeSmall","MuiTableHead","MuiTableCell","head","padding","borderBottom","MuiFormControl","margin","MuiFormLabel","fontStyle","MuiInputBase","input","transitionDelay","transitionProperty","MuiTooltip","tooltip","arrow","MuiOutlinedInput","MuiSelect","icon","MuiPaper","rounded","MuiDialogTitle","MuiDialogContent","MuiDialogActions","MuiCard","overflow","MuiIconButton","materialUiOverridesDark","borderColor","notchedOutline","MuiMenuItem","paletteBase","primary","main","secondary","error","common","background","default","text","grey","800","lightTheme","createMuiTheme","palette","overrides","darkTheme","deepmerge","projectorTheme","getTheme","theme","useProjector","ThemeContext","ThemeProvider","setUseProjector","muiTheme","toggleTheme","currentUseProjector","anchorEl","setAnchorEl","openMenu","event","currentTarget","closeMenu","handleToggleTheme","className","styles","header","to","homeLink","onClick","src","logo","alt","aria-controls","aria-haspopup","faCog","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","makeStyles","display","alignItems","justifyContent","backButton","width","navigationIcons","cursor","pathwayName","marginLeft","index","useRefState","initialValue","state","setState","stateRef","useRef","useEffect","current","CurrentPathwayContext","CurrentPathwayProvider","pathway","pathwayRef","_setPathway","setPathway","useCurrentPathwayContext","isActionNode","node","undefined","action","isBranchNode","nodeTypeIsUndefined","resourceNameConversion","MedicationRequest","ServiceRequest","CarePlan","nodeTypeOptions","findParents","childNodeKey","parents","Object","keys","nodes","forEach","parentNodeKey","transitions","transition","push","willOrphanChild","transitionCount","nodeKey","canDeleteNode","canDeleteAllTransitions","redirect","pathwayId","history","url","encodeURIComponent","location","pathname","LIBRARY_DRAFT","R4","LibraryStatusKind","_draft","PLANDEFINITION_DRAFT","PlanDefinitionStatusKind","ACTIVITYDEFINITION_DRAFT","ActivityDefinitionStatusKind","BUNDLE_TRANSACTION","BundleTypeKind","_transaction","BUNDLE_PUT","Bundle_RequestMethodKind","_put","CONDITION_APPLICABILITY","PlanDefinition_ConditionKindKind","_applicability","EXPRESSION_CQL","ExpressionLanguageKind","_textCql","createAction","description","definition","title","code","coding","system","definitionCanonical","createPlanDefinition","type","libraryId","planDefinition","resourceType","meta","profile","extension","valueCode","version","substring","status","experimental","publisher","library","createBundleEntry","resource","fullUrl","request","method","toCPG","bundle","entry","uuidv4","content","elm","contentType","data","btoa","JSON","stringify","navigational","preconditions","createLibrary","cpgStrategy","key","cpgRecommendation","cpgStrategyAction","map","parent","find","condition","kind","expression","language","cql","cpgActivityDefinition","activityId","date","Date","toISOString","productCodeableConcept","medicationCodeableConcept","createActivityDefinition","cpgRecommendationAction","downloadPathway","cpg","pathwayString","exportPathway","pathwayBlob","Blob","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","identifier","schemaIdentifier","usings","def","localIdentifier","uri","localId","locator","statements","operand","dataType","includes","valueSets","codes","codeSystems","pathwayToExport","precondition","mergeElm","elmStatement","produce","getElmStatement","draftElmStatement","criteriaSource","draftPathway","setNavigationalElm","additionalElm","using","include","path","valueSet","codesystem","defaultStatementNames","createNode","shortid","generate","addNode","setNodeType","nodeType","setNodeAction","makeNodeAction","makeNodeBranch","console","addTransition","startNodeKey","endNodeKey","setTransitionCondition","transitionId","criteria","foundTransition","statement","getNodeType","getContentAnchorEl","anchorOrigin","vertical","horizontal","alert","Navigation","useStyles","useHistory","handleGoBack","IconButton","aria-label","faChevronLeft","faEllipsisH","useGetService","result","setResult","fetch","headers","Accept","getObject","then","response","json","listOfFiles","f","options","typedFetch","listOfPromises","Promise","all","list","payload","catch","PathwaysContext","PathwaysProvider","pathways","pathwaysRef","setPathways","service","get","servicePayload","addPathway","currentPathways","deletePathway","filter","updatePathway","newPathway","findIndex","slice","usePathwaysContext","flexDirection","minWidth","overflowY","float","formControl","divider","headerLabelStart","displayText","sidebarHeader","sidebarHeaderGroup","sidebarHeaderButton","headerLabelGroup","headerLabel","headerLabelText","marginBottom","editIcon","sidebarButtonGroup","sidebarButtonGroupExtraMargin","sidebarButton","marginRight","sidebarButtonText","outlinedDiv","outlinedDivError","toggleSidebar","cancelButton","alignSelf","marginTop","buildCriteriaContainer","buildCriteriaText","saveButton","transitionContainer","dividerHeader","textTransform","lineHeight","paddingLeft","dialogCloseButton","dialogContent","dialogContentText","alertIcon","connectDropdown","flexWrap","alignContent","connectText","cancelButtonDropdown","border","CurrentNodeContext","CurrentNodeProvider","currentNode","currentNodeRef","_setCurrentNode","setCurrentNode","useCurrentNodeContext","onChange","handleSetSelected","FormControl","variant","fullWidth","InputLabel","htmlFor","Select","MenuProps","transformOrigin","displayEmpty","option","SnackbarContext","SnackbarProvider","openSnackbar","setOpenSnackbar","snackbarText","setSnackbarText","handleCloseSnackbar","useSnackbarContext","Snackbar","autoHideDuration","message","Fragment","Button","size","faTimes","setOpen","rootNode","connectableNodes","ancestorNodes","getAncestorNodes","rootNodeKey","currNodeKey","ancestors","previousNodes","currNode","length","some","concat","rootNodeConnectsToNode","nodeIsAncestor","getConnectableNodes","optionsAvailable","connectToNode","target","showDropdown","buttonName","buttonIcon","faLevelDownAlt","buttonText","disabled","hasTooltip","tooltipTitle","headerElement","isExpanded","setIsExpanded","sidebarContainerElement","changeNodeType","selectNodeType","addPathwayNode","newNode","resize","style","innerHeight","clientHeight","addEventListener","removeEventListener","ref","isTransition","faPlus","displayTransitions","faChevronRight","showInput","setShowInput","openTooltip","setOpenTooltip","openDelete","setOpenDelete","inputRef","nodeLabel","goToParentNode","redirectToNode","changeNodeLabel","setNodeLabel","handleShowInput","deleteNode","filterTransition","removeNode","deleteTransition","removeTransition","openDeleteModal","closeDeleteModal","handleOpenTooltip","handleCloseTooltip","handleKeyPress","deleteNodeDisabled","deleteTransitionDisabled","deleteDisabled","titleText","Input","onBlur","onKeyPress","autoFocus","onFocus","select","clsx","faEdit","Tooltip","placement","onOpen","faTrashAlt","onDelete","extraMargin","ConditionalTooltip","startIcon","convertBasicCQL","body","codeSystemOptions","addActionCQL","currentNodeKey","cqlId","replace","codesystemStatement","returnStatement","retrieveStatement","defineStatement","escape","createCQL","setActionNodeElm","changeCode","draftAction","resetDisplay","changeDescription","changeTitle","selectCodeSystem","codeSystem","validateFunction","setActionResourceDisplay","onEnter","e","changeNodeTypeEnabled","TextField","inputProps","faCheckCircle","CriteriaContext","DEFAULT_ELM_STATEMENTS","elmLibraryToCriteria","custom","allElmStatements","elmStatements","labelTitle","modified","now","jsonToCriteria","rawElm","parse","CriteriaProvider","setCriteria","newCriteria","jsonCriterion","criterion","addCriteria","file","reader","FileReader","onload","currentCriteria","readAsText","deleteCriteria","addElmCriteria","useCriteriaContext","CriteriaBuilderContext","CriteriaBuilderProvider","selectedElement","setSelectedElement","selectedDemoElement","setSelectedDemoElement","gender","setGender","minimumAge","setMinimumAge","maximumAge","setMaximumAge","resetCriteriaBuilder","useCriteriaBuilderContext","criteriaOptions","useMemo","c","criteriaAvailable","useCriteriaSelected","setUseCriteriaSelected","criteriaDescription","criteriaIsValid","criteriaDisplayIsValid","hasCriteria","displayCriteria","transitionRef","handleUseCriteria","selectCriteriaSource","criteriaId","selectedCriteria","setCriteriaDisplay","criteriaDisplay","handleCriteriaName","handleBuildCriteria","handleBuildCriteriaCancel","handleBuildCriteriaSave","transitionSelected","faThList","faTools","FormControlLabel","Box","control","Checkbox","checked","faSave","InputComponent","OutlinedDiv","multiline","InputLabelProps","shrink","InputProps","inputComponent","classes","Dialog","aria-labelledby","maxWidth","DialogTitle","disableTypography","DialogContent","faExclamationCircle","DialogActions","transitionKey","transitionNode","Card","raised","graphLayoutProvider","layout","nodeDimensions","nodeKeys","g","dagre","graphlib","Graph","setGraph","setDefaultEdgeLabel","nodeDimension","setNode","setEdge","nodeCoordinates","startNodeShift","x","y","edges","edge","edgeName","v","w","start","end","points","p","layoutDagre","rank","NaN","horizontalPosition","canMove","initializeNodes","graph","assignRankToChildren","assignHorizontalPositionToNode","assignHorizontalPositionToNodesInRank","coordinates","NODE_HEIGHT","produceCoordinates","hPos","isNaN","hasOverlap","direction","Math","ceil","NODE_WIDTH","parentsOnHigherRank","parentKey","floor","splice","childNode","spreadChildrenEvenly","sum","reduce","b","nodesInRank","nodesOverlap","otherNode","nodesEqual","child","indexOf","assignRankToNode","err","layoutCustom","ExpandedNode","actionNode","ExpandedNodeMemo","ExpandedNodeField","descTitle","desc","returnElements","rel","faExternalLinkAlt","externalLink","renderAction","branch","infoTable","Node","forwardRef","pathwayNode","xCoordinate","yCoordinate","expanded","hasMetadata","setHasMetadata","onClickHandler","top","left","isActionable","topLevelClasses","expandedNodeClass","actionable","childActionable","childNotActionable","expandedNode","NodeIcon","faPlay","faPrescriptionBottleAlt","faSyringe","faBookMedical","faMicroscope","StatusIcon","faTimesCircle","stroke","strokeWidth","currentArrow","arrowhead","fill","currentArrowhead","ArrowPath","arrowheadId","widthOffset","pointsWithOffset","remainder","pathString","acc","point","arr","d","markerEnd","Arrow","isCurrentArrow","edgeNameNoWhitespace","markerWidth","markerHeight","refX","refY","orient","graphContainerWidth","interactive","nodeRefs","getGraphLayout","nodeElement","clientWidth","Array","from","graphLayout","setLayout","maxHeight","values","max","minX","min","toAdd","curr","lastSelectedNode","setExpanded","toggleExpanded","prevState","parentWidth","GraphMemo","useParams","position","xmlns","zIndex","elementContainer","elementSelect","addElementLabel","headerText","elementField","elementFieldLabel","onElementSelected","onDemoElementSelected","onGenderSelected","onMinimumAgeChange","parseInt","onMaximumAgeChange","handleClose","genderString","ageRangeString","toggleButtonCss","graphHeader","graphHeaderText","toggleButton","darken","toggleIcon","transform","useTheme","showCriteriaBuilder","setShowCriteriaBuilder","graphContainerElement","setGraphContainerElement","setGraphContainerWidth","toggleShowCriteria","handleGraphContainerElement","reactNode","ResizeSensor","faProjectDiagram","nodeId","decodeURIComponent","pathwayIndex","UserContext","UserProvider","user","setUser","tabs","tab","component","faSpinner","spin","createPathwayButton","pathwayList","pathwaysListButton","editPathway","createNewPathwayMeta","pathwayNameRef","pathwayDescRef","closeModal","handleCreateNewPathway","preventDefault","Start","createNewPathway","handleUpdatePathway","newEditPathway","draftEditPathway","metaDescription","onSubmit","required","container","paper","mozBackgroundClip","webkitBackgroundVlip","backgroundClip","whiteSpace","buttons","minHeight","LargeActionButton","largeActionButton","largeDecline","toUpperCase","SmallActionButton","accept","decline","smallActionButton","data-testid","faCheck","MediumActionButton","mediumActionButton","deleteId","deleteMethod","deleteType","deleteName","onAcceptHandler","onDeclineHandler","ClickAwayListener","onClickAway","Popover","editablePathway","setEditablePathway","openEditPathwayModal","closeEditPathwayModal","deletion","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","Link","RouterLink","underline","align","faFileDownload","openNewPathwayModal","closeNewPathwayModal","buttonRow","buildCriteriaButton","criteriaList","editButton","chooseFileInput","inputButton","fileName","datetime","moment","fromNow","setFileName","importFileRef","selectFile","files","handleChooseFile","faFileImport","openImportModal","closeImportModal","enableMapSet","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b2381a5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/camino-logo-dark.c8fc712a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Graph_root__1SJOc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectButton\":\"ActionButton_selectButton___qB5R\",\"accept\":\"ActionButton_accept__28b2D\",\"decline\":\"ActionButton_decline__zz-vG\",\"smallActionButton\":\"ActionButton_smallActionButton__1bPWu\",\"largeActionButton\":\"ActionButton_largeActionButton__blRdA\",\"largeDecline\":\"ActionButton_largeDecline__wz9Zw\",\"mediumActionButton\":\"ActionButton_mediumActionButton__3EpOp\"};","export class ConfigManager {\n  constructor(config = {}) {\n    this.config = global.CONFIG ? { ...global.CONFIG, ...config } : { ...config };\n  }\n\n  get(name, defaultValue) {\n    const parts = name.split('.');\n    let context = this.config;\n    let value = null;\n    for (const i in parts) {\n      const part = parts[i];\n      value = context[part];\n      context = value;\n    }\n    return value || defaultValue;\n  }\n\n  add(conf) {\n    if (conf) {\n      this.config = {\n        ...this.config,\n        ...conf\n      };\n    }\n  }\n}\n\nconst config = new ConfigManager();\nexport default config;\n","import React, {\n  createContext,\n  FC,\n  ReactNode,\n  memo,\n  useState,\n  useContext,\n  useCallback\n} from 'react';\n\ninterface CurrentCriteriaCql {\n  cql: string;\n  text?: string;\n}\n\ninterface CurrentCriteriaContextInterface {\n  buildCriteriaSelected: boolean;\n  currentCriteriaNodeId: string;\n  currentCriteriaCql: CurrentCriteriaCql | null;\n  criteriaName: string;\n  setBuildCriteriaSelected: (buildCriteriaSelect: boolean) => void;\n  setCurrentCriteriaNodeId: (id: string) => void;\n  setCurrentCriteriaCql: (currentCriteriaCql: CurrentCriteriaCql | null) => void;\n  setCriteriaName: (criteriaName: string) => void;\n  resetCurrentCriteria: () => void;\n}\n\nexport const CurrentCriteriaContext = createContext<CurrentCriteriaContextInterface>(\n  {} as CurrentCriteriaContextInterface\n);\n\ninterface CurrentCriteriaProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrentCriteriaProvider: FC<CurrentCriteriaProviderProps> = memo(({ children }) => {\n  const [currentCriteriaNodeId, setCurrentCriteriaNodeId] = useState<string>('');\n  const [currentCriteriaCql, setCurrentCriteriaCql] = useState<CurrentCriteriaCql | null>(null);\n  const [buildCriteriaSelected, setBuildCriteriaSelected] = useState<boolean>(false);\n  const [criteriaName, setCriteriaName] = useState<string>('');\n\n  const resetCurrentCriteria = useCallback(() => {\n    setCurrentCriteriaNodeId('');\n    setCurrentCriteriaCql(null);\n    setBuildCriteriaSelected(false);\n    setCriteriaName('');\n  }, [setCurrentCriteriaNodeId, setCurrentCriteriaCql, setBuildCriteriaSelected, setCriteriaName]);\n\n  return (\n    <CurrentCriteriaContext.Provider\n      value={{\n        buildCriteriaSelected,\n        setBuildCriteriaSelected,\n        currentCriteriaNodeId,\n        setCurrentCriteriaNodeId,\n        currentCriteriaCql,\n        setCurrentCriteriaCql,\n        criteriaName,\n        setCriteriaName,\n        resetCurrentCriteria\n      }}\n    >\n      {children}\n    </CurrentCriteriaContext.Provider>\n  );\n});\n\nexport const useCurrentCriteriaContext = (): CurrentCriteriaContextInterface =>\n  useContext(CurrentCriteriaContext);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport deepmerge from 'deepmerge';\n\ndeclare module '@material-ui/core/styles/createMuiTheme' {\n  interface Theme {\n    variables: {\n      spacing: {\n        globalPadding: string;\n      };\n    };\n  }\n  // allow configuration using `createMuiTheme`\n  interface ThemeOptions {\n    variables?: {\n      spacing?: {\n        globalPadding?: string;\n      };\n    };\n  }\n}\n\ndeclare module '@material-ui/core/styles/createPalette' {\n  interface CommonColors {\n    blue: string;\n    blueLighter: string;\n    red: string;\n    gray: string;\n    grayMedium: string;\n    grayBlue: string;\n    grayLighter: string;\n    grayDark: string;\n    grayVeryDark: string;\n    green: string;\n  }\n}\n\nconst variables = {\n  spacing: {\n    globalPadding: '2em'\n  }\n};\n\nconst colors = {\n  white: '#fff',\n  black: '#222',\n  red: '#d95d77',\n  blue: '#5d89a1',\n  blueLighter: '#9ad2f0',\n  gray: '#4a4a4a',\n  grayMedium: '#bbbdc0',\n  grayBlue: '#cbd5df',\n  grayLight: '#6c6c6c',\n  grayLighter: '#eaeef2',\n  grayDark: '#444',\n  grayVeryDark: '#3a3a3a',\n  green: '#2fa874'\n};\n\nconst typography = {\n  fontFamily: [\n    'Open Sans',\n    '-apple-system',\n    'BlinkMacSystemFont',\n    'Segoe UI',\n    'Roboto',\n    'Oxygen',\n    'Ubuntu',\n    'Cantarell',\n    'Fira Sans',\n    'Droid Sans',\n    'Helvetica Neue',\n    'sans-serif'\n  ].join(',')\n};\n\nconst materialUiOverridesBase = {\n  MuiButton: {\n    root: {\n      borderRadius: 0,\n      height: '38px',\n      '&$disabled': {\n        backgroundColor: colors.grayMedium,\n        color: colors.white\n      }\n    },\n    contained: {\n      '&$disabled': {\n        backgroundColor: colors.grayMedium,\n        color: colors.white\n      }\n    },\n    label: {\n      fontWeight: 600\n    },\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    },\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    }\n  },\n  MuiTableHead: {\n    root: {\n      backgroundColor: colors.grayLighter\n    }\n  },\n  MuiTableCell: {\n    root: {\n      fontSize: '1em'\n    },\n    head: {\n      padding: '5px 16px',\n      borderBottom: 'none'\n    }\n  },\n  MuiFormControl: {\n    root: {\n      margin: '10px 0'\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      fontStyle: 'italic',\n      '&.Mui-error': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      fontWeight: 600\n    },\n    input: {\n      '&::selection': {\n        color: colors.white,\n        backgroundColor: colors.grayDark\n      },\n      '&:-webkit-autofill': {\n        transitionDelay: '9999s',\n        transitionProperty: 'background-color, color'\n      }\n    }\n  },\n  MuiTooltip: {\n    tooltip: {\n      fontSize: 14,\n      backgroundColor: colors.black\n    },\n    arrow: {\n      color: colors.black\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      borderRadius: '0'\n    }\n  },\n  MuiSelect: {\n    icon: {\n      fontSize: '2em'\n    }\n  },\n  MuiPaper: {\n    rounded: {\n      borderRadius: '0'\n    }\n  },\n  MuiDialogTitle: {\n    root: {\n      padding: '1em'\n    }\n  },\n  MuiDialogContent: {\n    root: {\n      padding: '0 4em'\n    }\n  },\n  MuiDialogActions: {\n    root: {\n      padding: '2em 4em'\n    }\n  },\n  MuiCard: {\n    root: {\n      overflow: 'visible'\n    }\n  },\n  MuiIconButton: {\n    root: {\n      '&:disabled': {\n        color: colors.grayLight\n      }\n    }\n  }\n};\n\nconst materialUiOverridesDark = {\n  MuiFormControl: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      }\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      color: colors.white,\n      '&$focused': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      color: colors.white,\n      '&:hover': {\n        borderColor: colors.white,\n        backgroundColor: colors.grayDark\n      }\n    }\n  },\n  MuiTooltip: {\n    tooltip: {\n      fontSize: 14\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      },\n      '&:hover $notchedOutline': {\n        borderColor: colors.white\n      },\n      '&$focused $notchedOutline': {\n        borderColor: colors.white\n      }\n    },\n    notchedOutline: {\n      borderColor: colors.white\n    }\n  },\n  MuiSelect: {\n    icon: {\n      color: colors.white\n    }\n  },\n  MuiMenuItem: {\n    root: {\n      color: colors.grayDark\n    }\n  }\n};\n\nconst paletteBase = {\n  primary: {\n    main: colors.blue\n  },\n  secondary: {\n    main: colors.red\n  },\n  error: {\n    main: colors.red\n  },\n  common: colors,\n  background: {\n    default: colors.grayLighter\n  },\n  text: {\n    primary: colors.gray,\n    secondary: colors.gray\n  },\n  grey: {\n    800: colors.gray\n  }\n};\n\nconst lightTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: { ...paletteBase },\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nconst darkTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    text: {\n      primary: colors.white,\n      secondary: colors.white\n    }\n  }),\n  overrides: deepmerge(materialUiOverridesBase, materialUiOverridesDark),\n  variables: { ...variables }\n});\n\nconst projectorTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    background: {\n      default: colors.grayBlue\n    },\n    text: {\n      primary: colors.black,\n      secondary: colors.black\n    }\n  }),\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nexport default lightTheme;\nexport { lightTheme, darkTheme, projectorTheme };\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useState,\n  useCallback,\n  useContext,\n  ReactNode\n} from 'react';\nimport { ThemeProvider as MuiThemeProvider, Theme } from '@material-ui/core/styles';\nimport { lightTheme, darkTheme, projectorTheme } from '../styles/theme';\n\ninterface ThemeProviderProps {\n  theme: string;\n  children: ReactNode;\n}\n\ninterface ThemeContextInterface {\n  toggleTheme: () => void;\n  useProjector: boolean;\n}\n\nconst getTheme = ({ theme, useProjector }: { theme: string; useProjector: boolean }): Theme => {\n  if (useProjector) {\n    switch (theme) {\n      case 'dark':\n        // TODO: replace with dark projector theme\n        return darkTheme;\n\n      default:\n        return projectorTheme;\n    }\n  }\n\n  switch (theme) {\n    case 'dark':\n      return darkTheme;\n\n    default:\n      return lightTheme;\n  }\n};\n\nexport const ThemeContext = createContext({} as ThemeContextInterface);\nexport const useThemeToggle = (): (() => void) => {\n  const { toggleTheme } = useContext(ThemeContext);\n  return toggleTheme;\n};\nexport const useTheme = (theme: string): Theme => {\n  const { useProjector } = useContext(ThemeContext);\n  return getTheme({ theme, useProjector });\n};\n\nconst ThemeProvider: FC<ThemeProviderProps> = memo(({ theme = 'light', children }) => {\n  const [useProjector, setUseProjector] = useState(false);\n  const muiTheme = getTheme({ theme, useProjector });\n\n  const toggleTheme = useCallback(() => {\n    setUseProjector(currentUseProjector => !currentUseProjector);\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <ThemeContext.Provider value={{ useProjector, toggleTheme }}>\n        {children}\n      </ThemeContext.Provider>\n    </MuiThemeProvider>\n  );\n});\n\nexport default ThemeProvider;\n","import React, { FC, memo, useCallback, useState, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport { useThemeToggle } from '../ThemeProvider';\n\nimport logo from 'camino-logo-dark.png';\nimport styles from './Header.module.scss';\n\nconst Header: FC = () => {\n  const { resetCurrentCriteria } = useCurrentCriteriaContext();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const toggleTheme = useThemeToggle();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleToggleTheme = useCallback((): void => {\n    toggleTheme();\n    closeMenu();\n  }, [toggleTheme, closeMenu]);\n\n  return (\n    <header className={styles.header}>\n      <Link to=\"/\" className={styles.homeLink} onClick={(): void => resetCurrentCriteria()}>\n        <img src={logo} alt=\"logo\" className={styles.logo} />\n      </Link>\n\n      <button onClick={openMenu} aria-controls=\"options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faCog} />\n      </button>\n\n      <Menu\n        id=\"options-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n      >\n        <MenuItem onClick={handleToggleTheme}>Toggle Theme</MenuItem>\n      </Menu>\n    </header>\n  );\n};\n\nexport default memo(Header);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: '2em',\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary,\n      height: '6em',\n      justifyContent: 'space-between'\n    },\n    backButton: {\n      height: '45px',\n      width: '45px'\n    },\n    navigationIcons: {\n      fontSize: '20px',\n      color: theme.palette.common.gray,\n      cursor: 'pointer'\n    },\n    pathwayName: {\n      fontSize: '1.4em',\n      marginLeft: '1.5em'\n    }\n  }),\n  { name: 'Navigation', index: 1 }\n);\n","import { useEffect, useRef, useState, MutableRefObject } from 'react';\n\nfunction useRefState<T>(initialValue: T): [T, MutableRefObject<T>, Function] {\n  const [state, setState] = useState<T>(initialValue);\n  const stateRef = useRef(state);\n  useEffect(() => {\n    stateRef.current = state;\n  }, [state]);\n  return [state, stateRef, setState];\n}\n\nexport default useRefState;\n","import React, {\n  ReactNode,\n  createContext,\n  useContext,\n  FC,\n  memo,\n  useCallback,\n  MutableRefObject\n} from 'react';\nimport { Pathway } from 'pathways-model';\nimport useRefState from 'utils/useRefState';\n\ninterface CurrentPathwayContextInterface {\n  pathway: Pathway | null;\n  pathwayRef: MutableRefObject<Pathway | null>;\n  setPathway: (value: Pathway) => void;\n}\n\nexport const CurrentPathwayContext = createContext<CurrentPathwayContextInterface>(\n  {} as CurrentPathwayContextInterface\n);\n\ninterface CurrentPathwayProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrentPathwayProvider: FC<CurrentPathwayProviderProps> = memo(({ children }) => {\n  const [pathway, pathwayRef, _setPathway] = useRefState<Pathway | null>(null);\n\n  const setPathway = useCallback(\n    (value: Pathway) => {\n      _setPathway(value);\n    },\n    [_setPathway]\n  );\n\n  return (\n    <CurrentPathwayContext.Provider value={{ pathway, pathwayRef, setPathway }}>\n      {children}\n    </CurrentPathwayContext.Provider>\n  );\n});\n\nexport const useCurrentPathwayContext = (): CurrentPathwayContextInterface =>\n  useContext(CurrentPathwayContext);\n","import { PathwayNode, ActionNode, Pathway, Transition } from 'pathways-model';\nimport { History } from 'history';\n\nexport function isActionNode(node: PathwayNode): node is ActionNode {\n  const { action } = node as ActionNode;\n  return action !== undefined;\n}\n\nexport function isBranchNode(node: PathwayNode): boolean {\n  const { action, label, nodeTypeIsUndefined } = node as ActionNode;\n  return action === undefined && label !== 'Start' && !nodeTypeIsUndefined;\n}\n\ntype ConversionResource = {\n  [key: string]: string;\n};\nexport const resourceNameConversion: ConversionResource = {\n  MedicationRequest: 'Medication',\n  ServiceRequest: 'Procedure',\n  CarePlan: 'Regimen'\n};\n\nexport const nodeTypeOptions = [\n  { label: 'Medication', value: 'MedicationRequest' },\n  { label: 'Procedure', value: 'ServiceRequest' },\n  { label: 'Regimen', value: 'CarePlan' },\n  { label: 'Observation', value: 'Observation' }\n];\n\nexport function findParents(pathway: Pathway, childNodeKey: string): string[] {\n  const parents: string[] = [];\n  Object.keys(pathway.nodes).forEach(parentNodeKey => {\n    for (const transition of pathway.nodes[parentNodeKey].transitions) {\n      if (transition.transition === childNodeKey) {\n        parents.push(parentNodeKey);\n        break;\n      }\n    }\n  });\n  return parents;\n}\n\nexport function willOrphanChild(pathway: Pathway, childNodeKey: string): boolean {\n  // Count the number of transitions into the node\n  let transitionCount = 0;\n  Object.keys(pathway.nodes).forEach(nodeKey => {\n    pathway.nodes[nodeKey].transitions.forEach(transition => {\n      if (transition.transition === childNodeKey) transitionCount += 1;\n    });\n  });\n\n  return transitionCount >= 2 ? false : true;\n}\n\nexport function canDeleteNode(pathway: Pathway, transitions: Transition[]): boolean {\n  let canDeleteAllTransitions = true;\n  transitions.forEach(transition => {\n    if (willOrphanChild(pathway, transition.transition)) canDeleteAllTransitions = false;\n  });\n  return canDeleteAllTransitions;\n}\n\nexport function redirect(\n  pathwayId: string,\n  nodeKey: string,\n  history: History<History.PoorMansUnknown>\n): void {\n  const url = `/builder/${encodeURIComponent(pathwayId)}/node/${encodeURIComponent(nodeKey)}`;\n  if (url !== history.location.pathname) {\n    history.push(url);\n  }\n}\n\nconst getAncestorNodes = (\n  pathway: Pathway,\n  rootNodeKey: string,\n  currNodeKey: string\n): Array<PathwayNode> => {\n  let ancestors: Array<PathwayNode> = [];\n  let previousNodes: Array<PathwayNode> = [];\n  const currNode = pathway.nodes[currNodeKey];\n\n  currNode.transitions.forEach(transition => {\n    if (transition.transition === rootNodeKey) ancestors.push(currNode);\n    else {\n      previousNodes = getAncestorNodes(pathway, rootNodeKey, transition.transition);\n      if (previousNodes?.length) {\n        if (!ancestors.some(node => node.key === currNode.key)) ancestors.push(currNode);\n        ancestors = ancestors.concat(previousNodes);\n      }\n    }\n  });\n\n  return ancestors;\n};\n\nexport const getConnectableNodes = (\n  pathway: Pathway,\n  rootNode: PathwayNode\n): Array<{ label: string; value: string }> => {\n  const connectableNodes: Array<{ label: string; value: string }> = [];\n  const ancestorNodes = getAncestorNodes(pathway, rootNode.key ?? '', 'Start');\n  ancestorNodes.push(rootNode);\n\n  Object.keys(pathway.nodes).forEach(nodeKey => {\n    const node = pathway.nodes[nodeKey];\n    const rootNodeConnectsToNode = rootNode.transitions.some(\n      transition => transition.transition === nodeKey\n    );\n    const nodeIsAncestor = ancestorNodes.some(node => node.key === nodeKey);\n    if (!rootNodeConnectsToNode && !nodeIsAncestor && node.key)\n      connectableNodes.push({ label: node.label, value: node.key });\n  });\n\n  return connectableNodes;\n};\n","import { Action, Pathway } from 'pathways-model';\nimport {\n  ActivityDefinition,\n  PlanDefinition,\n  PlanDefinitionAction,\n  Bundle,\n  BundleEntry,\n  Library\n} from 'fhir-objects';\nimport { v4 as uuidv4 } from 'uuid';\nimport { isActionNode, findParents, isBranchNode } from './nodeUtils';\nimport { R4 } from '@ahryman40k/ts-fhir-types';\n\nconst LIBRARY_DRAFT = R4.LibraryStatusKind._draft;\nconst PLANDEFINITION_DRAFT = R4.PlanDefinitionStatusKind._draft;\nconst ACTIVITYDEFINITION_DRAFT = R4.ActivityDefinitionStatusKind._draft;\nconst BUNDLE_TRANSACTION = R4.BundleTypeKind._transaction;\nconst BUNDLE_PUT = R4.Bundle_RequestMethodKind._put;\nconst CONDITION_APPLICABILITY = R4.PlanDefinition_ConditionKindKind._applicability; // eslint-disable-line\nconst EXPRESSION_CQL = R4.ExpressionLanguageKind._textCql;\n\nexport function createActivityDefinition(action: Action): ActivityDefinition {\n  const activityId = uuidv4();\n  const kind =\n    action.resource.resourceType === 'Procedure' ? 'ServiceRequest' : action.resource.resourceType;\n\n  const activityDefinition: ActivityDefinition = {\n    id: activityId,\n    resourceType: 'ActivityDefinition',\n    meta: {\n      profile: ['http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-publishableactivity']\n    },\n    extension: [\n      {\n        url: 'http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability',\n        valueCode: 'publishable'\n      }\n    ],\n    url: `urn:uuid:${activityId}`,\n    version: '1.0',\n    name: `AD${activityId.substring(0, 7)}`,\n    title: `ActivityDefinition: ${activityId}`,\n    status: ACTIVITYDEFINITION_DRAFT,\n    experimental: true,\n    date: new Date().toISOString(),\n    publisher: 'Logged in user',\n    description: action.description,\n    kind: kind,\n    productCodeableConcept:\n      action.resource.resourceType === 'MedicationRequest'\n        ? action.resource.medicationCodeableConcept\n        : action.resource.code\n  };\n\n  return activityDefinition;\n}\n\nfunction createAction(id: string, description: string, definition: string): PlanDefinitionAction {\n  const cpgAction: PlanDefinitionAction = {\n    id: id,\n    title: `Action: ${id}`,\n    description: description,\n    code: [\n      {\n        coding: [\n          {\n            system: 'http://hl7.org/fhir/uv/cpg/CodeSystem/cpg-common-process',\n            code: 'guideline-based-care',\n            display: 'Guideline-based Care'\n          }\n        ]\n      }\n    ],\n    definitionCanonical: `http://pathway.com/${definition}`\n  };\n  return cpgAction;\n}\n\nexport function createPlanDefinition(\n  id: string,\n  title: string,\n  description: string,\n  type: 'strategy' | 'recommendation',\n  libraryId?: string\n): PlanDefinition {\n  const planDefinition: PlanDefinition = {\n    id: id,\n    resourceType: 'PlanDefinition',\n    meta: {\n      profile: [`http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-${type}definition`]\n    },\n    extension: [\n      {\n        url: 'http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability',\n        valueCode: 'executable'\n      }\n    ],\n    url: `urn:uuid:${id}`,\n    version: '1.0',\n    name: `PD${id.substring(0, 7)}`,\n    title: title,\n    type: {\n      coding: [\n        {\n          system: 'http://terminology.hl7.org/CodeSystem/plan-definition-type',\n          code: type === 'strategy' ? 'workflow-definition' : 'eca-rule',\n          display: type === 'strategy' ? 'Workflow Definition' : 'ECA Rule'\n        }\n      ]\n    },\n    status: PLANDEFINITION_DRAFT,\n    experimental: true,\n    publisher: 'Logged in user',\n    description: description,\n    action: []\n  };\n\n  if (type === 'strategy' && libraryId) {\n    planDefinition.library = [libraryId];\n  }\n\n  return planDefinition;\n}\n\nfunction createBundleEntry(resource: PlanDefinition | ActivityDefinition | Library): BundleEntry {\n  return {\n    fullUrl: `http://pathway.com/${resource.id}`,\n    resource: resource,\n    request: {\n      method: BUNDLE_PUT,\n      url: `/${resource.resourceType}/${resource.id}`\n    }\n  };\n}\n\nfunction createLibrary(pathway: Pathway): Library {\n  const libraryId = uuidv4();\n\n  const library: Library = {\n    id: libraryId,\n    resourceType: 'Library',\n    meta: {\n      profile: ['http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-executablelibrary']\n    },\n    extension: [\n      {\n        url: 'http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability',\n        valueCode: 'executable'\n      }\n    ],\n    url: `urn:uuid:${libraryId}`,\n    version: '1.0',\n    name: `LIB${libraryId.substring(0, 7)}`,\n    title: `Library for ${pathway.name}`,\n    status: LIBRARY_DRAFT,\n    experimental: true,\n    type: {\n      coding: [\n        {\n          system: 'http://terminology.hl7.org/CodeSystem/library-type',\n          code: 'logic-library',\n          display: 'Logic Library'\n        }\n      ]\n    },\n    publisher: 'Logged in user',\n    description: `ELM library for pathway: ${pathway.name}`,\n    content: []\n  };\n\n  if (pathway.elm) {\n    library.content.push(\n      {\n        id: 'navigational',\n        contentType: 'application/elm+json',\n        data: btoa(JSON.stringify(pathway.elm.navigational)),\n        title: 'ELM for navigating the pathway'\n      },\n      {\n        id: 'precondition',\n        contentType: 'application/elm+json',\n        data: btoa(JSON.stringify(pathway.elm.preconditions)),\n        title: 'ELM for pathway preconditions'\n      }\n    );\n  }\n\n  return library;\n}\n\nexport function toCPG(pathway: Pathway): Bundle {\n  const bundle: Bundle = {\n    id: pathway.id,\n    resourceType: 'Bundle',\n    type: BUNDLE_TRANSACTION,\n    entry: []\n  };\n  const library = createLibrary(pathway);\n  const cpgStrategy = createPlanDefinition(\n    uuidv4(),\n    pathway.name,\n    pathway.description ?? `Pathway For: ${pathway.name}`,\n    'strategy',\n    library.id\n  );\n\n  Object.keys(pathway.nodes).forEach(key => {\n    const node = pathway.nodes[key];\n    if (isActionNode(node) && node.key) {\n      const description = `Represents an action for ${node.label}`;\n      const cpgRecommendation = createPlanDefinition(\n        uuidv4(),\n        node.label,\n        description,\n        'recommendation'\n      );\n      const cpgStrategyAction = createAction(node.key, node.label, cpgRecommendation.id);\n      const parents = findParents(pathway, node.key).map(key => pathway.nodes[key]);\n      parents.forEach(parent => {\n        const transition = parent.transitions.find(\n          transition => transition.transition === node.key\n        );\n        if (isBranchNode(parent) && transition?.condition) {\n          const condition = {\n            kind: CONDITION_APPLICABILITY,\n            expression: {\n              language: EXPRESSION_CQL,\n              expression: transition.condition.cql\n            }\n          };\n          cpgStrategyAction.condition = cpgStrategyAction.condition || [];\n          cpgStrategyAction.condition?.push(condition);\n        }\n      });\n      node.action.forEach(action => {\n        const cpgActivityDefinition = createActivityDefinition(action);\n        const cpgRecommendationAction = createAction(\n          action.id ?? uuidv4(),\n          action.description,\n          cpgActivityDefinition.id\n        );\n        cpgRecommendation.action.push(cpgRecommendationAction);\n        bundle.entry.push(createBundleEntry(cpgActivityDefinition));\n      });\n      cpgStrategy.action.push(cpgStrategyAction);\n      bundle.entry.push(createBundleEntry(cpgRecommendation));\n    }\n  });\n  bundle.entry.push(createBundleEntry(library));\n  bundle.entry.push(createBundleEntry(cpgStrategy));\n\n  return bundle;\n}\n","import {\n  Pathway,\n  Precondition,\n  PathwayNode,\n  Transition,\n  Action,\n  ActionNode,\n  BranchNode\n} from 'pathways-model';\nimport { ElmLibrary, ElmStatement } from 'elm-model';\nimport shortid from 'shortid';\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\nimport produce from 'immer';\nimport { toCPG } from './cpg';\nimport { Criteria } from 'criteria-model';\n\nexport function createNewPathway(name: string, description?: string, pathwayId?: string): Pathway {\n  return {\n    id: pathwayId ?? shortid.generate(),\n    name: name,\n    description: description ?? '',\n    library: '',\n    preconditions: [],\n    nodes: {\n      Start: {\n        key: 'Start',\n        label: 'Start',\n        transitions: []\n      }\n    }\n  };\n}\n\nexport function downloadPathway(pathway: Pathway, cpg = false): void {\n  const pathwayString = exportPathway(pathway, cpg);\n  // Create blob from pathwayString to save to file system\n  const pathwayBlob = new Blob([pathwayString], {\n    type: 'application/json'\n  });\n  // Temporarily create hidden <a> tag to download pathwayBlob\n  // File name is set to <pathway-name>.json\n  const url = window.URL.createObjectURL(pathwayBlob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = `${pathway.name}.json`;\n  a.click();\n  window.URL.revokeObjectURL(url);\n}\n\nexport function exportPathway(pathway: Pathway, cpg: boolean): string {\n  if (cpg) return JSON.stringify(toCPG(pathway), undefined, 2);\n\n  const elm: ElmLibrary = {\n    library: {\n      identifier: {\n        id: pathway.id,\n        version: '1.0.0'\n      },\n      schemaIdentifier: {\n        id: 'urn:hl7-org:elm',\n        version: 'r1'\n      },\n      usings: {\n        def: [\n          {\n            localIdentifier: 'System',\n            uri: 'urn:hl7-org:elm-types:r1'\n          },\n          {\n            localId: '1',\n            locator: '3:1-3:26',\n            localIdentifier: 'FHIR',\n            uri: 'http://hl7.org/fhir',\n            version: '4.0.0'\n          }\n        ]\n      },\n      statements: {\n        def: [\n          {\n            locator: '13:1-13:15',\n            name: 'Patient',\n            context: 'Patient',\n            expression: {\n              type: 'SingletonFrom',\n              operand: {\n                locator: '13:1-13:15',\n                dataType: '{http://hl7.org/fhir}Patient',\n                type: 'Retrieve'\n              }\n            }\n          }\n        ]\n      },\n      includes: { def: [] },\n      valueSets: { def: [] },\n      codes: { def: [] },\n      codeSystems: { def: [] }\n    }\n  };\n\n  const pathwayToExport: Pathway = {\n    ...pathway,\n    // Strip id from each precondition\n    preconditions: pathway.preconditions.map((precondition: Precondition) => ({\n      ...precondition,\n      id: undefined\n    })),\n    nodes: { ...pathway.nodes }\n  };\n\n  Object.keys(pathwayToExport.nodes).forEach((nodeKey: string) => {\n    const node = pathway.nodes[nodeKey];\n    if ('elm' in node && node.elm && node.key) {\n      mergeElm(elm, node.elm);\n      const elmStatement = produce(getElmStatement(node.elm), (draftElmStatement: ElmStatement) => {\n        // state.key is defined due to if statement above\n        // eslint-disable-next-line\n        draftElmStatement.name = node.key!;\n      });\n      elm.library.statements.def.push(elmStatement);\n    }\n\n    pathwayToExport.nodes[nodeKey] = {\n      ...pathwayToExport.nodes[nodeKey],\n      // Strip key from each node\n      key: undefined,\n      elm: undefined,\n      // Strip id from each node.transition\n      transitions: node.transitions.map((transition: Transition) => {\n        if (transition.condition?.elm) {\n          // Add tranistion.condition.elm to elm\n          mergeElm(elm, transition.condition.elm);\n          const elmStatement = produce(\n            getElmStatement(transition.condition.elm),\n            (draftElmStatement: ElmStatement) => {\n              draftElmStatement.name = transition.condition?.description ?? 'Unknown';\n            }\n          );\n          elm.library.statements.def.push(elmStatement);\n        }\n        return {\n          ...transition,\n          id: undefined,\n          condition: transition.condition\n            ? { ...transition.condition, elm: undefined, criteriaSource: undefined }\n            : undefined\n        };\n      }),\n      // Strip id from each node.action\n      action:\n        (node as ActionNode).action == null\n          ? undefined\n          : (node as ActionNode).action.map((action: Action) => ({\n              ...action,\n              id: undefined\n            }))\n    };\n  });\n\n  return JSON.stringify(setNavigationalElm(pathwayToExport, elm), undefined, 2);\n}\n\nfunction mergeElm(elm: ElmLibrary, additionalElm: ElmLibrary): void {\n  // Merge usings\n  additionalElm.library.usings?.def.forEach(using => {\n    // Check if it is in ELM\n    if (!elm.library.usings?.def.find(def => def.uri === using.uri))\n      elm.library.usings?.def.push(using);\n  });\n\n  // Merge includes\n  additionalElm.library.includes?.def.forEach(include => {\n    if (!elm.library.includes?.def.find(def => def.path === include.path))\n      elm.library.includes?.def.push(include);\n  });\n\n  // Merge valueSets\n  additionalElm.library.valueSets?.def.forEach(valueSet => {\n    if (!elm.library.valueSets?.def.find(def => def.id === valueSet.id))\n      elm.library.valueSets?.def.push(valueSet);\n  });\n  // Merge codes\n  additionalElm.library.codes?.def.forEach(code => {\n    if (!elm.library.codes?.def.find(def => def.name === code.name))\n      elm.library.codes?.def.push(code);\n  });\n  // Merge codesystems\n  additionalElm.library.codeSystems?.def.forEach(codesystem => {\n    if (!elm.library.codeSystems?.def.find(def => def.name === codesystem.name))\n      elm.library.codeSystems?.def.push(codesystem);\n  });\n\n  // TODO: merge concepts\n}\n\nfunction getElmStatement(elm: ElmLibrary): ElmStatement {\n  const defaultStatementNames = [\n    'Patient',\n    'MeetsInclusionCriteria',\n    'InPopulation',\n    'Recommendation',\n    'Rationale',\n    'Errors'\n  ];\n  const elmStatement = elm.library.statements.def.find(\n    def => !defaultStatementNames.includes(def.name)\n  );\n\n  // elmStatement type is ElmStatement | undefined but criteria\n  // provider validates such a statement exists in the elm\n  return elmStatement as ElmStatement;\n}\n\n// TODO: possibly add more precondition methods\nexport function addPrecondition(\n  pathway: Pathway,\n  elementName: string,\n  expected: string,\n  cql: string\n): string {\n  const id = shortid.generate();\n  const precondition: Precondition = {\n    id: id,\n    elementName: elementName,\n    expected: expected,\n    cql: cql\n  };\n  pathway.preconditions.push(precondition);\n\n  return id;\n}\n\nexport function setNavigationalElm(pathway: Pathway, elm: object): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if (!draftPathway.elm) draftPathway.elm = {};\n    draftPathway.elm.navigational = elm;\n  });\n}\n\nexport function setPreconditionElm(pathway: Pathway, elm: object): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if (!draftPathway.elm) draftPathway.elm = {};\n    draftPathway.elm.preconditions = elm;\n  });\n}\n\nexport function createNode(key?: string): PathwayNode {\n  if (!key) key = shortid.generate();\n  const node: PathwayNode = {\n    key,\n    label: 'New Node',\n    transitions: [],\n    nodeTypeIsUndefined: true\n  };\n\n  return node;\n}\n\nexport function addNode(pathway: Pathway, node: PathwayNode): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.nodes[node.key as string] = node;\n  });\n}\n\nexport function addActionNode(pathway: Pathway): Pathway {\n  const node = createNode();\n  const newPathway = addNode(pathway, node);\n\n  return makeNodeAction(newPathway, node.key as string);\n}\n\nexport function setNodeLabel(pathway: Pathway, key: string, label: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.nodes[key].label = label;\n  });\n}\n\nexport function setNodeType(pathway: Pathway, nodeKey: string, nodeType: string): Pathway {\n  let action: Action;\n  let newPathway: Pathway;\n  switch (nodeType) {\n    case 'MedicationRequest':\n      newPathway = makeNodeAction(pathway, nodeKey);\n      action = {\n        type: 'create',\n        description: '',\n        id: shortid.generate(),\n        resource: {\n          resourceType: nodeType,\n          medicationCodeableConcept: {\n            coding: [\n              {\n                system: '',\n                code: '',\n                display: ''\n              }\n            ]\n          }\n        }\n      };\n      return setNodeAction(newPathway, nodeKey, [action]);\n    case 'ServiceRequest':\n      newPathway = makeNodeAction(pathway, nodeKey);\n      action = {\n        type: 'create',\n        description: '',\n        id: shortid.generate(),\n        resource: {\n          resourceType: nodeType,\n          code: {\n            coding: [\n              {\n                system: '',\n                code: '',\n                display: ''\n              }\n            ]\n          }\n        }\n      };\n      return setNodeAction(newPathway, nodeKey, [action]);\n    case 'CarePlan':\n      newPathway = makeNodeAction(pathway, nodeKey);\n      action = {\n        type: 'create',\n        description: '',\n        id: shortid.generate(),\n        resource: {\n          resourceType: nodeType,\n          title: ''\n        }\n      };\n      return setNodeAction(newPathway, nodeKey, [action]);\n    case 'Observation':\n      return makeNodeBranch(pathway, nodeKey);\n    default:\n      console.error('Unknown nodeType: ' + nodeType);\n      return pathway;\n  }\n}\n\nexport function setNodeAction(pathway: Pathway, key: string, action: Action[]): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as ActionNode).action = action;\n  });\n}\n\nexport function setNodeMcodeCriteria(\n  pathway: Pathway,\n  key: string,\n  mcodeCriteria: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as BranchNode).mcodeCriteria = mcodeCriteria;\n  });\n}\n\nexport function setNodeOtherCriteria(\n  pathway: Pathway,\n  key: string,\n  otherCriteria: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as BranchNode).otherCriteria = otherCriteria;\n  });\n}\n\nexport function addTransition(pathway: Pathway, startNodeKey: string, endNodeKey: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transition: Transition = {\n      id: shortid.generate(),\n      transition: endNodeKey\n    };\n\n    draftPathway.nodes[startNodeKey].transitions.push(transition);\n  });\n}\n\nexport function setTransitionCondition(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string,\n  criteria: Criteria\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const foundTransition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n\n    if (foundTransition)\n      foundTransition.condition = {\n        description: description,\n        cql: criteria.statement,\n        elm: criteria.elm,\n        criteriaSource: criteria.id\n      };\n  });\n}\n\nexport function setActionNodeElm(pathway: Pathway, nodeKey: string, elm: ElmLibrary): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[nodeKey] as ActionNode).elm = elm;\n    (draftPathway.nodes[nodeKey] as ActionNode).cql = getElmStatement(elm).name;\n  });\n}\n\n// TODO: possibly add more action methods\nexport function addAction(\n  pathway: Pathway,\n  key: string,\n  type: string,\n  description: string,\n  resource: MedicationRequest | ServiceRequest\n): string {\n  const id = shortid.generate();\n  const action = {\n    id: id,\n    type: type,\n    description: description,\n    resource: resource\n  };\n\n  const node = produce(pathway.nodes[key] as ActionNode, (draftState: ActionNode) => {\n    draftState.action.push(action);\n  });\n  pathway.nodes[key] = node;\n\n  return id;\n}\n\nexport function getNodeType(pathway: Pathway, key: string | undefined): string {\n  if (!key) {\n    return 'null';\n  }\n  const node = pathway.nodes[key];\n  if (!node || node.nodeTypeIsUndefined) {\n    return 'null';\n  } else if (!(node as ActionNode).action && key !== 'Start') {\n    return 'branch';\n  } else {\n    return 'action';\n  }\n}\n\n/*\nSet Element Functions\n*/\nexport function setPathwayName(pathway: Pathway, name: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.name = name;\n  });\n}\n\nexport function setPathwayDescription(pathway: Pathway, description: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.description = description;\n  });\n}\n\nexport function setLibrary(pathway: Pathway, library: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.library = library;\n  });\n}\n\nexport function setTransition(\n  pathway: Pathway,\n  startNodeKey: string,\n  endNodeKey: string,\n  transitionId: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n    if (transition) transition.transition = endNodeKey;\n  });\n}\n\nexport function setTransitionConditionDescription(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const foundTransition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n\n    if (foundTransition?.condition) {\n      foundTransition.condition.description = description;\n    } else if (foundTransition) {\n      foundTransition.condition = {\n        description: description,\n        cql: ''\n      };\n    }\n  });\n}\n\nexport function setTransitionConditionElm(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  criteria: Criteria\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const foundTransition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n\n    if (foundTransition?.condition) {\n      foundTransition.condition.elm = criteria.elm;\n      foundTransition.condition.cql = criteria.statement;\n    }\n  });\n}\n\nexport function setActionType(\n  pathway: Pathway,\n  nodeKey: string,\n  actionId: string,\n  type: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if ((draftPathway.nodes[nodeKey] as ActionNode).action) {\n      const action = (draftPathway.nodes[nodeKey] as ActionNode).action.find(\n        (action: Action) => action.id === actionId\n      );\n      if (action) action.type = type;\n    }\n  });\n}\n\nexport function setActionDescription(\n  pathway: Pathway,\n  nodeKey: string,\n  actionId: string,\n  description: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const node = (draftPathway.nodes[nodeKey] as ActionNode).action;\n\n    if (node) {\n      const action = node.find((action: Action) => action.id === actionId);\n      if (action) {\n        action.description = description;\n      }\n    }\n  });\n}\n\nexport function setActionResource(\n  pathway: Pathway,\n  nodeKey: string,\n  actionId: string,\n  resource: MedicationRequest | ServiceRequest\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if ((draftPathway.nodes[nodeKey] as ActionNode).action) {\n      const action = (draftPathway.nodes[nodeKey] as ActionNode).action.find(\n        (action: Action) => action.id === actionId\n      );\n      if (action) action.resource = resource;\n    }\n  });\n}\n\nexport function setActionResourceDisplay(action: Action, display: string): Action {\n  return produce(action, (draftAction: Action) => {\n    if (draftAction.resource.medicationCodeableConcept) {\n      draftAction.resource.medicationCodeableConcept.coding[0].display = display;\n    } else if (draftAction.resource.title) {\n      draftAction.resource.description = display;\n    } else {\n      draftAction.resource.code.coding[0].display = display;\n    }\n  });\n}\n\nexport function makeNodeAction(pathway: Pathway, nodeKey: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const node = draftPathway.nodes[nodeKey] as ActionNode;\n\n    if (node.cql === undefined && node.action === undefined) {\n      node.cql = '';\n      node.action = [];\n      node.nodeTypeIsUndefined = undefined;\n    }\n\n    node.transitions.forEach(transition => {\n      delete transition.condition;\n    });\n  });\n}\n\nexport function makeNodeBranch(pathway: Pathway, nodeKey: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const node = draftPathway.nodes[nodeKey] as ActionNode;\n\n    if (\n      node.cql !== undefined ||\n      node.elm !== undefined ||\n      node.action !== undefined ||\n      node.nodeTypeIsUndefined !== undefined\n    ) {\n      delete node.cql;\n      delete node.elm;\n      delete node.action;\n      delete node.nodeTypeIsUndefined;\n    }\n  });\n}\n\nexport function createCQL(action: Action, nodeKey: string): string {\n  const resource = action.resource;\n  // CQl identifier cannot start with a number or contain '-'\n  const cqlId = `cql${shortid.generate().replace(/-/g, 'a')}`;\n  let cql = `library ${cqlId} version '1'\\nusing FHIR version '4.0.0'\\n`;\n\n  const codesystemStatement = (system: string): string => `codesystem \"${system}\": '${system}'\\n`;\n\n  const returnStatement = (resourceType: string): string =>\n    `return Tuple{ resourceType: '${resourceType}', id: R.id.value, status: R.status.value}`;\n\n  const retrieveStatement = (resourceType: string): string => `[${resourceType}: \"${cqlId} code\"]`;\n\n  const defineStatement = (): string => `define \"${nodeKey}\":`;\n\n  if (resource.resourceType === 'MedicationRequest') {\n    const coding = resource.medicationCodeableConcept.coding[0];\n\n    cql += codesystemStatement(coding.system);\n\n    // eslint-disable-next-line\n    cql += `code \"${cqlId} code\": '${escape(coding.code)}' from \"${coding.system}\" display '${\n      coding.display\n    }'\\n`;\n    cql += `${defineStatement()}\n      ${retrieveStatement('MedicationRequest')} R ${returnStatement('MedicationRequest')}`;\n  } else if (resource.resourceType === 'ServiceRequest') {\n    const coding = resource.code.coding[0];\n\n    cql += codesystemStatement(coding.system);\n\n    // eslint-disable-next-line\n    cql += `code \"${cqlId} code\": '${escape(coding.code)}' from \"${coding.system}\" display '${\n      coding.display\n    }'\\n`;\n    cql += `${defineStatement()}\n      if exists ${retrieveStatement('Procedure')} \n      then ${retrieveStatement('Procedure')} R ${returnStatement('Procedure')} \n      else ${retrieveStatement('ServiceRequest')} R ${returnStatement('ServiceRequest')}`;\n  } else if (resource.resourceType === 'CarePlan') {\n    cql += `${defineStatement()}\n      [CarePlan] R where R.title.value = '${escape(resource.title)}' ${returnStatement(\n      'CarePlan'\n    )}`;\n  } else {\n    console.error(\n      'Auto generating CQL for action - unsupported resource type: ' + resource.resourceType\n    );\n  }\n\n  return cql;\n}\n\n/*\nRemove Element Function\n*/\nexport function removePathwayDescription(pathway: Pathway): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.description;\n  });\n}\n\nexport function removePrecondition(pathway: Pathway, id: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const preconditions = draftPathway.preconditions.filter(\n      (precondition: Precondition) => precondition.id !== id\n    );\n    draftPathway.preconditions = preconditions;\n  });\n}\n\nexport function removeNavigationalElm(pathway: Pathway): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.elm?.navigational;\n  });\n}\n\nexport function removePreconditionElm(pathway: Pathway): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.elm?.preconditions;\n  });\n}\n\nexport function removeNode(pathway: Pathway, key: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.nodes[key];\n\n    Object.keys(draftPathway.nodes).forEach((nodeKey: string) => {\n      const node = draftPathway.nodes[nodeKey];\n      node.transitions.forEach((transition: Transition) => {\n        if (transition.transition === key)\n          draftPathway.nodes[nodeKey].transitions = draftPathway.nodes[nodeKey].transitions.filter(\n            (filterTransition: Transition) => transition.id !== filterTransition.id\n          );\n      });\n    });\n  });\n}\n\nexport function removeTransitionCondition(\n  pathway: Pathway,\n  nodeKey: string,\n  transitionId: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transition = draftPathway.nodes[nodeKey].transitions.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n    if (transition) delete transition.condition;\n  });\n}\n\nexport function removeTransition(\n  pathway: Pathway,\n  parentNodeKey: string,\n  childNodeKey: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transitions = draftPathway.nodes[parentNodeKey].transitions.filter(\n      (transition: Transition) => transition.transition !== childNodeKey\n    );\n    draftPathway.nodes[parentNodeKey].transitions = transitions;\n  });\n}\n\nexport function removeAction(pathway: Pathway, nodeKey: string, actionId: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if ((draftPathway.nodes[nodeKey] as ActionNode).action) {\n      const actions = (draftPathway.nodes[nodeKey] as ActionNode).action.filter(\n        (action: Action) => action.id !== actionId\n      );\n      (draftPathway.nodes[nodeKey] as ActionNode).action = actions;\n    }\n  });\n}\n","import React, { FC, memo } from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { downloadPathway } from 'utils/builder';\n\ninterface ExportMenuPropsInterface {\n  anchorEl: HTMLElement | null;\n  closeMenu: () => void;\n}\n\nconst ExportMenu: FC<ExportMenuPropsInterface> = ({ anchorEl, closeMenu }) => {\n  const { pathway } = useCurrentPathwayContext();\n\n  return (\n    <Menu\n      id=\"pathway-options-menu\"\n      anchorEl={anchorEl}\n      getContentAnchorEl={null}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n      keepMounted\n      open={Boolean(anchorEl)}\n      onClose={closeMenu}\n    >\n      <MenuItem\n        onClick={(): void => {\n          if (pathway) downloadPathway(pathway);\n          else alert('No pathway to download!');\n          closeMenu();\n        }}\n      >\n        Export Pathway\n      </MenuItem>\n      <MenuItem\n        onClick={(): void => {\n          if (pathway) downloadPathway(pathway, true);\n          else alert('No pathway to download!');\n          closeMenu();\n        }}\n      >\n        Export to CPG\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(ExportMenu);\n","import React, { FC, useCallback, useState, MouseEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faEllipsisH } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton } from '@material-ui/core';\n\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport ExportMenu from 'components/elements/ExportMenu';\n\nconst Navigation: FC = () => {\n  const { resetCurrentCriteria } = useCurrentCriteriaContext();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const { pathway } = useCurrentPathwayContext();\n  const styles = useStyles();\n  const history = useHistory();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleGoBack = useCallback((): void => {\n    resetCurrentCriteria();\n    history.push('/');\n  }, [history, resetCurrentCriteria]);\n\n  return (\n    <nav className={styles.root}>\n      <div>\n        <IconButton className={styles.backButton} onClick={handleGoBack} aria-label=\"go back\">\n          <FontAwesomeIcon icon={faChevronLeft} className={styles.navigationIcons} />\n        </IconButton>\n\n        <span className={styles.pathwayName}>{pathway?.name}</span>\n      </div>\n      <IconButton onClick={openMenu} aria-controls=\"pathway-options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faEllipsisH} className={styles.navigationIcons} />\n      </IconButton>\n      <ExportMenu anchorEl={anchorEl} closeMenu={closeMenu} />\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { useState, useEffect } from 'react';\nimport { Service } from 'pathways-objects';\n\nfunction getObject(url: string): Promise<Response> {\n  return fetch(url, {\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n}\n\nfunction typedFetch<T>(url: string, options?: object): Promise<T> {\n  return fetch(url, options).then(response => response.json() as Promise<T>);\n}\n\nfunction useGetService<T>(url: string): Service<Array<T>> {\n  const [result, setResult] = useState<Service<Array<T>>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    getObject(url)\n      .then(response => response.json() as Promise<string[]>)\n      .then(listOfFiles => listOfFiles.map(f => typedFetch<T>(url + '/' + f)))\n      .then(listOfPromises => Promise.all(listOfPromises))\n      .then(list => setResult({ status: 'loaded', payload: list }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, [url]);\n\n  return result;\n}\n\nexport default useGetService;\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  ReactNode\n} from 'react';\nimport { Pathway } from 'pathways-model';\nimport { ServiceLoaded } from 'pathways-objects';\nimport config from 'utils/ConfigManager';\nimport useGetService from './Services';\nimport useRefState from 'utils/useRefState';\n\ninterface PathwaysContextInterface {\n  pathways: Pathway[];\n  status: string;\n  addPathway: (pathway: Pathway) => void;\n  deletePathway: (id: string) => void;\n  updatePathway: (pathway: Pathway) => void;\n}\n\nexport const PathwaysContext = createContext<PathwaysContextInterface>(\n  {} as PathwaysContextInterface\n);\n\ninterface PathwaysProviderProps {\n  children: ReactNode;\n}\n\nexport const PathwaysProvider: FC<PathwaysProviderProps> = memo(function PathwaysProvider({\n  children\n}) {\n  const [pathways, pathwaysRef, setPathways] = useRefState<Pathway[]>([]);\n  const service = useGetService<Pathway>(config.get('demoPathwaysService'));\n  const servicePayload = (service as ServiceLoaded<Pathway[]>).payload;\n\n  const addPathway = useCallback(\n    (pathway: Pathway) => {\n      setPathways((currentPathways: Pathway[]) => [...currentPathways, pathway]);\n    },\n    [setPathways]\n  );\n\n  const deletePathway = useCallback(\n    (id: string) => {\n      setPathways((currentPathways: Pathway[]) =>\n        currentPathways.filter(pathway => pathway.id !== id)\n      );\n    },\n    [setPathways]\n  );\n\n  const updatePathway = useCallback(\n    (newPathway: Pathway) => {\n      const index = pathwaysRef.current.findIndex(pathway => pathway.id === newPathway.id);\n      setPathways((currentPathways: Pathway[]) => [\n        ...currentPathways.slice(0, index),\n        newPathway,\n        ...currentPathways.slice(index + 1)\n      ]);\n    },\n    [pathwaysRef, setPathways]\n  );\n\n  useEffect(() => {\n    if (servicePayload) setPathways(servicePayload);\n  }, [servicePayload, setPathways]);\n\n  switch (service.status) {\n    case 'error':\n      return <div>Error loading pathways</div>;\n\n    default:\n      return (\n        <PathwaysContext.Provider\n          value={{\n            pathways,\n            addPathway,\n            deletePathway,\n            updatePathway,\n            status: service.status\n          }}\n        >\n          {children}\n        </PathwaysContext.Provider>\n      );\n  }\n});\n\nexport const usePathwaysContext = (): PathwaysContextInterface => useContext(PathwaysContext);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding,\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.common.gray,\n      width: '33%',\n      minWidth: '550px',\n      overflowY: 'scroll',\n      float: 'left'\n    },\n    formControl: {\n      margin: theme.spacing(1, 0),\n      minWidth: 375\n    },\n    divider: {\n      width: '100%'\n    },\n    headerLabelStart: {\n      cursor: 'default'\n    },\n    displayText: {\n      margin: '0 0 5px 0',\n      fontWeight: 900,\n      fontSize: '1em'\n    },\n    sidebarHeader: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    sidebarHeaderGroup: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    sidebarHeaderButton: {\n      height: '45px',\n      width: '45px',\n      color: theme.palette.text.primary\n    },\n    headerLabelGroup: {\n      display: 'flex',\n      cursor: 'pointer',\n      height: '60px'\n    },\n    headerLabel: {\n      display: 'flex',\n      alignItems: 'center',\n      fontSize: '1.6em',\n      fontWeight: 700,\n      margin: '0 5px'\n    },\n    headerLabelText: {\n      marginBottom: '5px'\n    },\n    editIcon: {\n      fontSize: '0.6em',\n      marginLeft: '10px'\n    },\n    sidebarButtonGroup: {\n      display: 'flex',\n      margin: '10px 0'\n    },\n    sidebarButtonGroupExtraMargin: {\n      display: 'flex',\n      margin: '20px 0 10px 0'\n    },\n    sidebarButton: {\n      minWidth: 180,\n      marginRight: '20px'\n    },\n    sidebarButtonText: {\n      fontStyle: 'italic'\n    },\n    outlinedDiv: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      '& div': {\n        width: '100%'\n      }\n    },\n    outlinedDivError: {\n      borderColor: `${theme.palette.error.main} !important`,\n      '&:hover': {\n        borderColor: `${theme.palette.error.main} !important`\n      }\n    },\n    toggleSidebar: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      float: 'left',\n      width: '50px',\n      minWidth: '50px',\n      height: '50px',\n      fontSize: '2em',\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.text.primary,\n      '&:hover': {\n        cursor: 'pointer'\n      }\n    },\n    cancelButton: {\n      alignSelf: 'flex-end',\n      marginTop: '5px',\n      padding: '5px 15px',\n      fontSize: '1em'\n    },\n    buildCriteriaContainer: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    buildCriteriaText: {\n      marginTop: '0.5em',\n      marginBottom: '1em'\n    },\n    saveButton: {\n      marginLeft: '1em',\n      backgroundColor: theme.palette.error.main,\n      borderColor: theme.palette.error.main,\n      '&:hover': {\n        backgroundColor: theme.palette.error.main\n      }\n    },\n    transitionContainer: {\n      backgroundColor: theme.palette.common.grayVeryDark,\n      padding: '5px 15px',\n      margin: '15px 0'\n    },\n    dividerHeader: {\n      width: '100%',\n      textTransform: 'uppercase',\n      borderBottom: '1px solid ' + theme.palette.common.blueLighter,\n      color: theme.palette.common.blueLighter,\n      lineHeight: '0.1em',\n      margin: '10px 0 20px',\n      fontWeight: 800,\n      paddingLeft: '15px',\n      '& span': {\n        background: theme.palette.common.gray,\n        padding: '0 10px'\n      }\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    },\n    dialogContent: {\n      color: theme.palette.common.black,\n      fontSize: '16px',\n      display: 'flex',\n      marginTop: '-25px'\n    },\n    dialogContentText: {\n      paddingLeft: '10px',\n      lineHeight: '40px'\n    },\n    alertIcon: {\n      color: theme.palette.common.red,\n      fontSize: '40px'\n    },\n    connectDropdown: {\n      margin: 'auto',\n      display: 'flex',\n      flexDirection: 'column',\n      flexWrap: 'nowrap',\n      alignContent: 'center'\n    },\n    connectText: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      fontSize: '0.95em',\n      fontStyle: 'italic'\n    },\n    cancelButtonDropdown: {\n      marginLeft: 'auto',\n      border: 'none',\n      alignSelf: 'center',\n      color: theme.palette.common.blueLighter,\n      fontSize: '1em',\n      fontStyle: 'italic',\n      textTransform: 'none'\n    }\n  }),\n  { name: 'Sidebar', index: 1 }\n);\n","import React, {\n  MutableRefObject,\n  createContext,\n  useCallback,\n  memo,\n  ReactNode,\n  FC,\n  useContext\n} from 'react';\nimport { PathwayNode } from 'pathways-model';\nimport useRefState from 'utils/useRefState';\n\ninterface CurrentNodeContextInterface {\n  currentNode: PathwayNode | null;\n  currentNodeRef: MutableRefObject<PathwayNode | null>;\n  setCurrentNode: (value: PathwayNode) => void;\n}\n\nexport const CurrentNodeContext = createContext<CurrentNodeContextInterface>(\n  {} as CurrentNodeContextInterface\n);\n\ninterface CurrentNodeProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrentNodeProvider: FC<CurrentNodeProviderProps> = memo(({ children }) => {\n  const [currentNode, currentNodeRef, _setCurrentNode] = useRefState<PathwayNode | null>(null);\n\n  const setCurrentNode = useCallback(\n    (value: PathwayNode) => {\n      _setCurrentNode(value);\n    },\n    [_setCurrentNode]\n  );\n\n  return (\n    <CurrentNodeContext.Provider value={{ currentNode, currentNodeRef, setCurrentNode }}>\n      {children}\n    </CurrentNodeContext.Provider>\n  );\n});\n\nexport const useCurrentNodeContext = (): CurrentNodeContextInterface =>\n  useContext(CurrentNodeContext);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { InputLabel, FormControl, Select, MenuItem } from '@material-ui/core';\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface DropDownProps {\n  id: string;\n  label: string;\n  options: Array<Option>;\n  value?: string;\n  onChange: Function | null;\n}\n\nconst DropDown: FC<DropDownProps> = ({ id, label, options, value, onChange }: DropDownProps) => {\n  const handleSetSelected = useCallback(\n    (event: ChangeEvent<{ value: unknown }>): void => {\n      if (onChange) onChange(event);\n    },\n    [onChange]\n  );\n\n  return (\n    <FormControl variant=\"outlined\" fullWidth>\n      <InputLabel id={id} htmlFor={`${id}-select`}>\n        {label}\n      </InputLabel>\n\n      <Select\n        id={`${id}-select`}\n        value={value || ''}\n        onChange={handleSetSelected}\n        label={label}\n        error={value == null || value === ''}\n        MenuProps={{\n          getContentAnchorEl: null,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'center'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          }\n        }}\n        displayEmpty\n      >\n        {options.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(DropDown);\n","import React, {\n  FC,\n  createContext,\n  useState,\n  memo,\n  ReactNode,\n  useContext,\n  useCallback\n} from 'react';\n\ninterface SnackbarContextInterface {\n  snackbarText: string;\n  openSnackbar: boolean;\n  handleCloseSnackbar: () => void;\n  setSnackbarText: (value: string) => void;\n  setOpenSnackbar: (value: boolean) => void;\n}\n\nexport const SnackbarContext = createContext<SnackbarContextInterface>(\n  {} as SnackbarContextInterface\n);\n\ninterface SnackbarProviderProps {\n  children: ReactNode;\n}\n\nexport const SnackbarProvider: FC<SnackbarProviderProps> = memo(({ children }) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n  const [snackbarText, setSnackbarText] = useState<string>('Deleted Successfully');\n\n  const handleCloseSnackbar = useCallback(() => {\n    setOpenSnackbar(false);\n  }, [setOpenSnackbar]);\n\n  return (\n    <SnackbarContext.Provider\n      value={{ snackbarText, openSnackbar, handleCloseSnackbar, setSnackbarText, setOpenSnackbar }}\n    >\n      {children}\n    </SnackbarContext.Provider>\n  );\n});\n\nexport const useSnackbarContext = (): SnackbarContextInterface => useContext(SnackbarContext);\n","import React, { FC, memo } from 'react';\nimport { Snackbar, Button, IconButton } from '@material-ui/core';\nimport { useSnackbarContext } from 'components/SnackbarProvider';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst DeleteSnackbar: FC = () => {\n  const { snackbarText, openSnackbar, handleCloseSnackbar } = useSnackbarContext();\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right'\n      }}\n      open={openSnackbar}\n      autoHideDuration={10000}\n      onClose={handleCloseSnackbar}\n      message={snackbarText}\n      action={\n        <React.Fragment>\n          <Button color=\"secondary\" size=\"small\" onClick={handleCloseSnackbar}>\n            UNDO\n          </Button>\n          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\n            <FontAwesomeIcon icon={faTimes} />\n          </IconButton>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default memo(DeleteSnackbar);\n","import React, { useState, memo, useCallback, ChangeEvent, FC } from 'react';\nimport { SidebarButton } from 'components/Sidebar';\nimport DropDown from 'components/elements/DropDown';\nimport useStyles from './styles';\nimport { addTransition } from 'utils/builder';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport { getConnectableNodes } from 'utils/nodeUtils';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\n\nimport { faLevelDownAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nconst ConnectNodeButton: FC = () => {\n  const { pathway, pathwayRef } = useCurrentPathwayContext();\n  const { currentNode, currentNodeRef } = useCurrentNodeContext();\n  const { updatePathway } = usePathwaysContext();\n\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const options: Array<{ label: string; value: string }> =\n    currentNode && pathway ? getConnectableNodes(pathway, currentNode) : [];\n  const optionsAvailable = options.length > 0;\n\n  const connectToNode = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      const nodeKey = event?.target.value;\n      if (pathwayRef.current && currentNodeRef.current?.key)\n        updatePathway(addTransition(pathwayRef.current, currentNodeRef.current.key, nodeKey));\n      setOpen(false);\n    },\n    [updatePathway, currentNodeRef, pathwayRef]\n  );\n\n  const showDropdown = useCallback(() => {\n    setOpen(!open);\n  }, [open]);\n\n  return (\n    <div>\n      {!open && (\n        <SidebarButton\n          buttonName=\"Connect Node\"\n          buttonIcon={faLevelDownAlt}\n          buttonText=\"Create a transition to an existing node in the pathway.\"\n          onClick={showDropdown}\n          disabled={!optionsAvailable}\n          hasTooltip={!optionsAvailable}\n          tooltipTitle=\"There are no possible nodes to connect to.\"\n        />\n      )}\n      {open && optionsAvailable && (\n        <div className={styles.connectDropdown}>\n          <DropDown\n            id=\"transitions\"\n            label=\"Node To Connect To\"\n            options={options}\n            onChange={connectToNode}\n          />\n          <div className={styles.connectText}>\n            Select node from list to add transition.\n            <Button\n              className={styles.cancelButtonDropdown}\n              size=\"small\"\n              variant=\"text\"\n              onClick={showDropdown}\n            >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(ConnectNodeButton);\n","import React, {\n  FC,\n  memo,\n  useCallback,\n  useState,\n  useEffect,\n  useRef,\n  RefObject,\n  ChangeEvent\n} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport {\n  SidebarHeader,\n  ActionNodeEditor,\n  SidebarButton,\n  TransitionEditor,\n  BranchTransition\n} from 'components/Sidebar';\nimport { setNodeType, addTransition, createNode, addNode, getNodeType } from 'utils/builder';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { isBranchNode, redirect } from 'utils/nodeUtils';\nimport { nodeTypeOptions } from 'utils/nodeUtils';\nimport DropDown from 'components/elements/DropDown';\nimport DeleteSnackbar from './DeleteSnackbar';\nimport ConnectNodeButton from 'components/Sidebar/ConnectNodeButton';\n\ninterface SidebarProps {\n  headerElement: RefObject<HTMLDivElement>;\n}\n\nconst Sidebar: FC<SidebarProps> = ({ headerElement }) => {\n  const { updatePathway } = usePathwaysContext();\n  const { pathway, pathwayRef } = useCurrentPathwayContext();\n  const { currentNode, currentNodeRef } = useCurrentNodeContext();\n  const [isExpanded, setIsExpanded] = useState<boolean>(true);\n  const styles = useStyles();\n  const history = useHistory();\n  const sidebarContainerElement = useRef<HTMLDivElement>(null);\n\n  const toggleSidebar = useCallback((): void => {\n    setIsExpanded(!isExpanded);\n  }, [isExpanded]);\n\n  const changeNodeType = useCallback(\n    (nodeType: string): void => {\n      if (currentNodeRef.current?.key && pathwayRef.current)\n        updatePathway(setNodeType(pathwayRef.current, currentNodeRef.current.key, nodeType));\n    },\n    [pathwayRef, updatePathway, currentNodeRef]\n  );\n\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  const addPathwayNode = useCallback((): void => {\n    if (!currentNodeRef.current?.key || !pathwayRef.current) return;\n\n    const newNode = createNode();\n    let newPathway = addNode(pathwayRef.current, newNode);\n    newPathway = addTransition(newPathway, currentNodeRef.current.key, newNode.key as string);\n    updatePathway(newPathway);\n    if (!isBranchNode(currentNodeRef.current) && newNode.key)\n      redirect(pathwayRef.current.id, newNode.key, history);\n  }, [pathwayRef, updatePathway, currentNodeRef, history]);\n\n  // Set the height of the sidebar container\n  useEffect(() => {\n    const resize = (): void => {\n      if (sidebarContainerElement?.current && headerElement?.current)\n        sidebarContainerElement.current.style.height =\n          window.innerHeight - headerElement.current.clientHeight + 'px';\n    };\n    resize();\n    window.addEventListener('resize', resize);\n    return (): void => window.removeEventListener('resize', resize);\n  }, [isExpanded, headerElement]);\n\n  if (!pathway) return <div>Error: No pathway</div>;\n  if (!currentNode) return <div>Error: No current node</div>;\n\n  if (currentNode.key === 'Start') {\n    return (\n      <>\n        {isExpanded && (\n          <div className={styles.root} ref={sidebarContainerElement}>\n            <SidebarHeader node={currentNode} isTransition={false} />\n            <h5 className={styles.dividerHeader}>\n              <></>{' '}\n            </h5>\n            <SidebarButton\n              buttonName=\"Add Node\"\n              buttonIcon={faPlus}\n              buttonText=\"Add a new transition to a new node in the pathway.\"\n              onClick={addPathwayNode}\n            />\n          </div>\n        )}\n\n        <DeleteSnackbar />\n      </>\n    );\n  } else {\n    const nodeType = getNodeType(pathway, currentNode.key);\n    const displayTransitions =\n      currentNode.key !== undefined &&\n      (currentNode.key !== 'Start' || currentNode.transitions.length === 0);\n\n    return (\n      <>\n        {isExpanded && (\n          <div className={styles.root} ref={sidebarContainerElement}>\n            <SidebarHeader node={currentNode} isTransition={false} />\n\n            <h5 className={styles.dividerHeader}>\n              <span>Details</span>\n            </h5>\n\n            {nodeType === 'null' && (\n              <DropDown\n                id=\"nodeType\"\n                label=\"Node Type\"\n                options={nodeTypeOptions}\n                onChange={selectNodeType}\n                value=\"\"\n              />\n            )}\n\n            {nodeType === 'action' && <ActionNodeEditor changeNodeType={changeNodeType} />}\n\n            {nodeType === 'branch' && (\n              <DropDown\n                id=\"nodeType\"\n                label=\"Node Type\"\n                options={nodeTypeOptions}\n                onChange={selectNodeType}\n                value=\"Observation\"\n              />\n            )}\n\n            <h5 className={styles.dividerHeader}>\n              <span>Transitions</span>\n            </h5>\n\n            {currentNode?.transitions.map(transition => {\n              return (\n                <TransitionEditor key={transition.id} transition={transition}>\n                  {nodeType === 'branch' && (\n                    <BranchTransition key={transition.id} transition={transition} />\n                  )}\n                </TransitionEditor>\n              );\n            })}\n\n            {displayTransitions && (\n              <>\n                <SidebarButton\n                  buttonName=\"Add New Node\"\n                  buttonIcon={faPlus}\n                  buttonText=\"Add a new transition to a new node in the pathway.\"\n                  onClick={addPathwayNode}\n                />\n                <ConnectNodeButton />\n              </>\n            )}\n          </div>\n        )}\n        <div className={styles.toggleSidebar} onClick={toggleSidebar}>\n          <FontAwesomeIcon icon={isExpanded ? faChevronLeft : faChevronRight} />\n        </div>\n        <DeleteSnackbar />\n      </>\n    );\n  }\n};\n\nexport default memo(Sidebar);\n","import React, { FC, memo, useCallback, useRef, useState, KeyboardEvent, FocusEvent } from 'react';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEdit,\n  faChevronLeft,\n  faChevronRight,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, FormControl, Input, Tooltip } from '@material-ui/core';\n\nimport { PathwayNode } from 'pathways-model';\nimport { setNodeLabel, removeNode, removeTransition } from 'utils/builder';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useHistory } from 'react-router-dom';\nimport { canDeleteNode, redirect, findParents, willOrphanChild } from 'utils/nodeUtils';\nimport { DeleteModal } from '.';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { useSnackbarContext } from 'components/SnackbarProvider';\n\ninterface SidebarHeaderProps {\n  node: PathwayNode;\n  isTransition?: boolean;\n}\n\nconst SidebarHeader: FC<SidebarHeaderProps> = ({ node, isTransition = false }) => {\n  const { updatePathway } = usePathwaysContext();\n  const [showInput, setShowInput] = useState<boolean>(false);\n  const [openTooltip, setOpenTooltip] = useState<boolean>(false);\n  const [openDelete, setOpenDelete] = useState<boolean>(false);\n  const { currentNodeRef } = useCurrentNodeContext();\n  const { setSnackbarText, setOpenSnackbar } = useSnackbarContext();\n  const { pathway, pathwayRef } = useCurrentPathwayContext();\n  const inputRef = useRef<HTMLInputElement>(null);\n  const nodeLabel = node?.label || '';\n  const styles = useStyles();\n  const history = useHistory();\n\n  const goToParentNode = useCallback(() => {\n    if (!pathwayRef.current || !node.key) return;\n    const parents = findParents(pathwayRef.current, node.key);\n    redirect(pathwayRef.current.id, parents[0], history);\n  }, [history, pathwayRef, node.key]);\n\n  const redirectToNode = useCallback(() => {\n    if (!pathwayRef.current || !node.key) return;\n    redirect(pathwayRef.current.id, node.key, history);\n  }, [history, pathwayRef, node.key]);\n\n  const changeNodeLabel = useCallback(() => {\n    const label = inputRef.current?.value ?? '';\n    if (node.key && pathwayRef.current)\n      updatePathway(setNodeLabel(pathwayRef.current, node.key, label));\n    setShowInput(false);\n  }, [pathwayRef, updatePathway, node.key]);\n\n  const handleShowInput = useCallback(() => {\n    setShowInput(true);\n  }, []);\n\n  const deleteNode = useCallback(() => {\n    if (node.key && pathwayRef.current && canDeleteNode(pathwayRef.current, node.transitions)) {\n      const parents = findParents(pathwayRef.current, node.key);\n      updatePathway(removeNode(pathwayRef.current, node.key));\n      redirect(pathwayRef.current.id, parents[0], history);\n      setOpenDelete(false);\n      setSnackbarText(`${node.label} node deleted successfully`);\n      setOpenSnackbar(true);\n    }\n  }, [\n    pathwayRef,\n    updatePathway,\n    setSnackbarText,\n    setOpenSnackbar,\n    node.key,\n    node.label,\n    node.transitions,\n    history\n  ]);\n\n  const deleteTransition = useCallback(() => {\n    if (\n      node.key &&\n      currentNodeRef.current?.key &&\n      pathwayRef.current &&\n      !willOrphanChild(pathwayRef.current, node.key)\n    ) {\n      updatePathway(removeTransition(pathwayRef.current, currentNodeRef.current.key, node.key));\n      setOpenDelete(false);\n      setSnackbarText(\n        `Transition from ${currentNodeRef.current.label} to ${node.label} deleted successfully`\n      );\n      setOpenSnackbar(true);\n    }\n  }, [pathwayRef, currentNodeRef, updatePathway, setSnackbarText, setOpenSnackbar, node]);\n\n  const openDeleteModal = useCallback((): void => {\n    setOpenDelete(true);\n  }, []);\n\n  const closeDeleteModal = useCallback((): void => {\n    setOpenDelete(false);\n  }, []);\n\n  const handleOpenTooltip = useCallback((): void => {\n    setOpenTooltip(true);\n  }, []);\n\n  const handleCloseTooltip = useCallback((): void => {\n    setOpenTooltip(false);\n  }, []);\n\n  const handleKeyPress = useCallback(\n    (event: KeyboardEvent<HTMLDivElement>): void => {\n      if (event.key === 'Enter') changeNodeLabel();\n    },\n    [changeNodeLabel]\n  );\n\n  const deleteNodeDisabled = pathway ? !canDeleteNode(pathway, node.transitions) : true;\n  const deleteTransitionDisabled = pathway && node.key ? willOrphanChild(pathway, node.key) : true;\n  const deleteDisabled = isTransition ? deleteTransitionDisabled : deleteNodeDisabled;\n  const titleText = isTransition\n    ? 'Deleting this transition would result in an orphaned node. To delete, first add the child node as a transition to another node, or delete it directly.'\n    : 'Deleting this node would result in an orphaned descendent node. To delete, first add another transition to the would-be orphaned node from another node, or delete it directly.';\n\n  return (\n    <div className={styles.sidebarHeader}>\n      <div className={styles.sidebarHeaderGroup}>\n        {node.key !== 'Start' && !isTransition && (\n          <IconButton\n            className={styles.sidebarHeaderButton}\n            onClick={goToParentNode}\n            aria-label=\"go to parent node\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft} />\n          </IconButton>\n        )}\n\n        <div className={styles.headerLabelGroup} onClick={handleShowInput}>\n          {showInput && node.key !== 'Start' ? (\n            <FormControl className={styles.formControl} fullWidth>\n              <Input\n                className={styles.headerLabel}\n                type=\"text\"\n                inputRef={inputRef}\n                onBlur={changeNodeLabel}\n                onKeyPress={handleKeyPress}\n                defaultValue={nodeLabel}\n                autoFocus\n                onFocus={(event: FocusEvent<HTMLInputElement>): void => event.target.select()}\n              />\n            </FormControl>\n          ) : (\n            <div\n              className={clsx(\n                styles.headerLabel,\n                styles.headerLabelText,\n                node.key === 'Start' && styles.headerLabelStart\n              )}\n            >\n              {nodeLabel}\n              {node.key !== 'Start' && (\n                <FontAwesomeIcon className={styles.editIcon} icon={faEdit} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className={styles.sidebarHeaderGroup}>\n        {node.key !== 'Start' && (\n          <Tooltip\n            placement=\"top\"\n            open={deleteDisabled ? openTooltip : false}\n            onClose={handleCloseTooltip}\n            onOpen={handleOpenTooltip}\n            title={titleText}\n            arrow\n          >\n            <span>\n              <IconButton\n                className={styles.sidebarHeaderButton}\n                onClick={openDeleteModal}\n                aria-label={isTransition ? 'delete transition' : 'delete node'}\n                disabled={deleteDisabled}\n              >\n                <FontAwesomeIcon icon={faTrashAlt} />\n              </IconButton>\n            </span>\n          </Tooltip>\n        )}\n\n        {isTransition && (\n          <IconButton\n            className={styles.sidebarHeaderButton}\n            onClick={redirectToNode}\n            aria-label={'go to transition node'}\n          >\n            <FontAwesomeIcon icon={faChevronRight} />\n          </IconButton>\n        )}\n      </div>\n\n      <DeleteModal\n        nodeLabel={node.label}\n        isTransition={isTransition}\n        open={openDelete}\n        onDelete={isTransition ? deleteTransition : deleteNode}\n        onClose={closeDeleteModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(SidebarHeader);\n","import React, { FC, memo } from 'react';\nimport { Button, Tooltip } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\n\nimport useStyles from './styles';\n\ninterface SidebarButtonProps {\n  buttonName: string;\n  buttonIcon: IconDefinition;\n  buttonText: string;\n  extraMargin?: boolean;\n  onClick?: () => void;\n  hasTooltip?: boolean;\n  tooltipTitle?: string;\n  disabled?: boolean;\n}\n\nconst SidebarButton: FC<SidebarButtonProps> = ({\n  buttonName,\n  buttonIcon,\n  buttonText,\n  extraMargin = false,\n  onClick,\n  hasTooltip = false,\n  tooltipTitle = '',\n  disabled = false\n}) => {\n  const styles = useStyles();\n\n  const ConditionalTooltip: FC = ({ children }) =>\n    hasTooltip ? (\n      <Tooltip title={tooltipTitle} placement=\"top\">\n        <span>{children}</span>\n      </Tooltip>\n    ) : (\n      <>{children}</>\n    );\n\n  return (\n    <div className={extraMargin ? styles.sidebarButtonGroupExtraMargin : styles.sidebarButtonGroup}>\n      <ConditionalTooltip>\n        <Button\n          className={styles.sidebarButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={buttonIcon} />}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {buttonName}\n        </Button>\n      </ConditionalTooltip>\n      <div className={styles.sidebarButtonText}>{buttonText}</div>\n    </div>\n  );\n};\n\nexport default memo(SidebarButton);\n","// External CQL -> ELM service\nimport { CqlObject } from './cql-extractor';\nimport config from 'utils/ConfigManager';\nimport {\n  extractJSONContent,\n  extractMultipartBoundary,\n  extractMultipartFileName\n} from 'utils/regexes';\nimport { ElmLibrary } from 'elm-model';\n\nconst url = config.get('cqlToElmWebserviceUrl');\n\nexport interface ElmObject {\n  main: object;\n  libraries: {\n    [key: string]: object;\n  };\n}\n\n/**\n * Function that requests web_service to convert the cql into elm.\n * @param cql - cql file that is the input to the function.\n * @return The resulting elm translation of the cql file.\n */\nexport default function convertCQL(cql: CqlObject): Promise<ElmObject> {\n  // Connect to web service\n  const formdata = new FormData();\n  Object.keys(cql.libraries).forEach((key, i) => {\n    formdata.append(`${key}`, cql.libraries[key]);\n  });\n\n  formdata.append('main', cql.main);\n  return fetch(url, {\n    method: 'POST',\n    body: formdata\n  }).then(elm => {\n    const header = elm.headers.get('content-type');\n    let boundary = '';\n    if (header) {\n      // sample header= \"multipart/form-data;boundary=Boundary_1\"\n      const result = extractMultipartBoundary.exec(header);\n      boundary = result ? `--${result[1]}` : '';\n    }\n    const obj: ElmObject = { main: {}, libraries: {} };\n    return elm.text().then(text => {\n      const elms = text.split(boundary).reduce((oldArray, line, i) => {\n        const body = extractJSONContent.exec(line);\n        if (body) {\n          const elmName = extractMultipartFileName.exec(line);\n          if (elmName && elmName[1] === 'main') {\n            oldArray[elmName[1]] = JSON.parse(body[1]);\n          } else if (elmName) {\n            oldArray.libraries[elmName[1]] = JSON.parse(body[1]);\n          }\n        }\n        return oldArray;\n      }, obj);\n\n      return elms;\n    });\n  });\n}\n\nexport function convertBasicCQL(cql: string): Promise<ElmLibrary> {\n  // Connect to web service\n\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/cql',\n      Accept: 'application/elm+json'\n    },\n    body: cql\n  }).then(elm => elm.json());\n}\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { SidebarButton } from '.';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport {\n  setNodeAction,\n  createCQL,\n  setActionNodeElm,\n  setActionResourceDisplay\n} from 'utils/builder';\nimport DropDown from 'components/elements/DropDown';\nimport { ActionNode, Action } from 'pathways-model';\nimport useStyles from './styles';\nimport { TextField } from '@material-ui/core';\nimport { convertBasicCQL } from 'engine/cql-to-elm';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport produce from 'immer';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { nodeTypeOptions } from 'utils/nodeUtils';\n\nconst codeSystemOptions = [\n  { label: 'ICD-9-CM', value: 'http://hl7.org/fhir/sid/icd-9-cm' },\n  { label: 'ICD-10-CM', value: 'http://hl7.org/fhir/sid/icd-10-cm' },\n  { label: 'LOINC', value: 'http://loinc.org' },\n  { label: 'NCI', value: 'http://ncimeta.nci.nih.gov' },\n  { label: 'RXNORM', value: 'http://www.nlm.nih.gov/research/umls/rxnorm' },\n  { label: 'SNOMED', value: 'http://snomed.info/sct' }\n];\n\ninterface ActionNodeEditorProps {\n  changeNodeType: (event: string) => void;\n}\n\nconst ActionNodeEditor: FC<ActionNodeEditorProps> = ({ changeNodeType }) => {\n  const { updatePathway } = usePathwaysContext();\n  const { pathwayRef } = useCurrentPathwayContext();\n  const { currentNode, currentNodeRef } = useCurrentNodeContext();\n  const styles = useStyles();\n\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  const addActionCQL = useCallback(\n    (action: Action, currentNodeKey: string): void => {\n      if (!pathwayRef.current) return;\n\n      const cql = createCQL(action, currentNodeKey);\n      convertBasicCQL(cql).then(elm => {\n        // Disable lint for no-null assertion since it is already checked above\n        // eslint-disable-next-line\n        updatePathway(setActionNodeElm(pathwayRef.current!, currentNodeKey, elm));\n      });\n    },\n    [pathwayRef, updatePathway]\n  );\n\n  const changeCode = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current?.key || !pathwayRef.current) return;\n\n      const code = event?.target.value || '';\n      const action = produce(\n        (currentNodeRef.current as ActionNode).action[0],\n        (draftAction: Action) => {\n          if (draftAction.resource.medicationCodeableConcept) {\n            draftAction.resource.medicationCodeableConcept.coding[0].code = code;\n          } else {\n            draftAction.resource.code.coding[0].code = code;\n          }\n        }\n      );\n      updatePathway(\n        setNodeAction(pathwayRef.current, currentNodeRef.current.key, [resetDisplay(action)])\n      );\n    },\n    [currentNodeRef, pathwayRef, updatePathway]\n  );\n\n  const changeDescription = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current?.key || !pathwayRef.current) return;\n\n      const description = event?.target.value || '';\n      const action = produce(\n        (currentNodeRef.current as ActionNode).action[0],\n        (draftAction: Action) => {\n          draftAction.description = description;\n        }\n      );\n      updatePathway(setNodeAction(pathwayRef.current, currentNodeRef.current.key, [action]));\n    },\n    [currentNodeRef, pathwayRef, updatePathway]\n  );\n\n  const changeTitle = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current?.key || !pathwayRef.current) return;\n\n      const title = event?.target.value || '';\n      const action = produce(\n        (currentNodeRef.current as ActionNode).action[0],\n        (draftAction: Action) => {\n          draftAction.resource.title = title;\n        }\n      );\n      updatePathway(\n        setNodeAction(pathwayRef.current, currentNodeRef.current.key, [resetDisplay(action)])\n      );\n\n      addActionCQL(action, currentNodeRef.current.key);\n    },\n    [currentNodeRef, pathwayRef, updatePathway, addActionCQL]\n  );\n\n  const selectCodeSystem = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current?.key || !pathwayRef.current) return;\n\n      const codeSystem = event?.target.value || '';\n      const action = produce(\n        (currentNodeRef.current as ActionNode).action[0],\n        (draftAction: Action) => {\n          if (draftAction.resource.medicationCodeableConcept) {\n            draftAction.resource.medicationCodeableConcept.coding[0].system = codeSystem;\n          } else {\n            draftAction.resource.code.coding[0].system = codeSystem;\n          }\n        }\n      );\n      updatePathway(\n        setNodeAction(pathwayRef.current, currentNodeRef.current.key, [resetDisplay(action)])\n      );\n    },\n    [currentNodeRef, pathwayRef, updatePathway]\n  );\n\n  const validateFunction = useCallback((): void => {\n    if (\n      currentNodeRef.current?.key &&\n      (currentNodeRef.current as ActionNode).action.length &&\n      pathwayRef.current\n    ) {\n      const action = setActionResourceDisplay(\n        (currentNodeRef.current as ActionNode).action[0],\n        'Example Text'\n      );\n      updatePathway(setNodeAction(pathwayRef.current, currentNodeRef.current.key, [action]));\n\n      addActionCQL(action, currentNodeRef.current.key);\n    } else {\n      console.error('No Actions -- Cannot Validate');\n    }\n  }, [currentNodeRef, pathwayRef, updatePathway, addActionCQL]);\n\n  const resetDisplay = (action: Action): Action => {\n    return produce(action, (draftAction: Action) => {\n      if (draftAction.resource.medicationCodeableConcept) {\n        draftAction.resource.medicationCodeableConcept.coding[0].display = '';\n      } else if (draftAction.resource.resourceType === 'CarePlan') {\n        draftAction.resource.description = '';\n      } else {\n        draftAction.resource.code.coding[0].display = ''; // TODO: actually validate\n      }\n    });\n  };\n\n  const onEnter = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key === 'Enter') {\n      validateFunction();\n    }\n  };\n\n  // The node has a key and is not the start node\n  const changeNodeTypeEnabled = currentNode?.key !== undefined && currentNode.key !== 'Start';\n  const action = (currentNode as ActionNode).action;\n  const resource = action?.length > 0 && action[0].resource;\n  let system = '';\n  let code = '';\n  let display = '';\n  if (resource.resourceType === 'MedicationRequest' || resource.resourceType === 'ServiceRequest') {\n    system = resource.code\n      ? resource.code.coding[0].system\n      : resource.medicationCodeableConcept.coding[0].system;\n    code = resource.code\n      ? resource.code.coding[0].code\n      : resource.medicationCodeableConcept.coding[0].code;\n    display = resource.code\n      ? resource.code.coding[0].display\n      : resource.medicationCodeableConcept.coding[0].display;\n  } else {\n    display = resource.description;\n  }\n\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <>\n          <DropDown\n            id=\"nodeType\"\n            label=\"Node Type\"\n            options={nodeTypeOptions}\n            onChange={selectNodeType}\n            value={resource.resourceType}\n          />\n\n          {(resource.resourceType === 'MedicationRequest' ||\n            resource.resourceType === 'ServiceRequest') && (\n            <>\n              <DropDown\n                id=\"codeSystem\"\n                label=\"Code System\"\n                options={codeSystemOptions}\n                onChange={selectCodeSystem}\n                value={system}\n              />\n              {system && (\n                <TextField\n                  id=\"code-input\"\n                  label=\"Code\"\n                  value={code}\n                  onChange={changeCode}\n                  variant=\"outlined\"\n                  error={code === ''}\n                  inputProps={{ onKeyPress: onEnter }}\n                />\n              )}\n              {code && (\n                <>\n                  {display ? (\n                    <div className={styles.displayText}>\n                      <FontAwesomeIcon icon={faCheckCircle} /> {display}\n                    </div>\n                  ) : (\n                    <SidebarButton\n                      buttonName=\"Validate\"\n                      buttonIcon={faCheckCircle}\n                      buttonText={display || 'Check validation of the input system and code'}\n                      onClick={validateFunction}\n                    />\n                  )}\n\n                  <TextField\n                    id=\"description-input\"\n                    label=\"Description\"\n                    value={action[0].description || ''}\n                    onChange={changeDescription}\n                    variant=\"outlined\"\n                    error={action[0].description === ''}\n                  />\n                </>\n              )}\n            </>\n          )}\n\n          {resource.resourceType === 'CarePlan' && (\n            <>\n              <TextField\n                id=\"title-input\"\n                label=\"Title\"\n                value={resource.title || ''}\n                onChange={changeTitle}\n                variant=\"outlined\"\n                error={resource.title == null}\n                inputProps={{ onKeyPress: onEnter }}\n              />\n              {resource.title && (\n                <TextField\n                  id=\"description-input\"\n                  label=\"Description\"\n                  value={action[0].description || ''}\n                  onChange={changeDescription}\n                  variant=\"outlined\"\n                  error={action[0].description === ''}\n                />\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(ActionNodeEditor);\n","import React, {\n  createContext,\n  ReactNode,\n  FC,\n  useState,\n  memo,\n  useContext,\n  useCallback,\n  useEffect\n} from 'react';\nimport shortid from 'shortid';\nimport { ElmStatement, ElmLibrary } from 'elm-model';\nimport config from 'utils/ConfigManager';\nimport useGetService from './Services';\nimport { ServiceLoaded } from 'pathways-objects';\nimport { Criteria } from 'criteria-model';\n\ninterface CriteriaContextInterface {\n  criteria: Criteria[];\n  addCriteria: (file: File) => void;\n  deleteCriteria: (id: string) => void;\n  addElmCriteria: (elm: ElmLibrary) => Criteria[];\n}\n\nexport const CriteriaContext = createContext<CriteriaContextInterface>(\n  {} as CriteriaContextInterface\n);\n\ninterface CriteriaProviderProps {\n  children: ReactNode;\n}\n\nconst DEFAULT_ELM_STATEMENTS = [\n  'Patient',\n  'MeetsInclusionCriteria',\n  'InPopulation',\n  'Recommendation',\n  'Rationale',\n  'Errors'\n];\n\nfunction elmLibraryToCriteria(elm: ElmLibrary, custom = false): Criteria[] {\n  const allElmStatements: ElmStatement[] = elm.library.statements.def;\n  const elmStatements = allElmStatements.filter(def => !DEFAULT_ELM_STATEMENTS.includes(def.name));\n  if (!elmStatements) {\n    alert('No elm statement found in that file');\n    return [];\n  }\n  const labelTitle = custom\n    ? `Criteria Builder (${elm.library.identifier.id.substring(0, 5)})`\n    : elm.library.identifier.id;\n  return elmStatements.map(statement => {\n    return {\n      id: shortid.generate(),\n      label: `${labelTitle}: ${statement.name}`,\n      version: elm.library.identifier.version,\n      modified: Date.now(),\n      elm: elm,\n      statement: statement.name\n    };\n  });\n}\n\nfunction jsonToCriteria(rawElm: string): Criteria[] | undefined {\n  const elm = JSON.parse(rawElm);\n  if (!elm.library?.identifier) {\n    alert('Please upload ELM file');\n    return;\n  }\n  return elmLibraryToCriteria(elm);\n}\n\nexport const CriteriaProvider: FC<CriteriaProviderProps> = memo(({ children }) => {\n  const [criteria, setCriteria] = useState<Criteria[]>([]);\n  const service = useGetService<Criteria>(config.get('demoCriteria'));\n  const payload = (service as ServiceLoaded<Criteria[]>).payload;\n\n  useEffect(() => {\n    if (payload) {\n      const newCriteria: Criteria[] = [];\n      payload.forEach(jsonCriterion => {\n        const criterion = jsonToCriteria(JSON.stringify(jsonCriterion));\n        if (criterion) newCriteria.push(...criterion);\n      });\n      setCriteria(newCriteria);\n    }\n  }, [payload]);\n\n  const addCriteria = useCallback((file: File) => {\n    const reader = new FileReader();\n    reader.onload = (event: ProgressEvent<FileReader>): void => {\n      if (event.target?.result) {\n        const rawElm = event.target.result as string;\n        const newCriteria = jsonToCriteria(rawElm);\n        if (newCriteria) setCriteria(currentCriteria => [...currentCriteria, ...newCriteria]);\n      } else alert('Unable to read that file');\n    };\n    reader.readAsText(file);\n  }, []);\n\n  const deleteCriteria = useCallback((id: string) => {\n    setCriteria(currentCriteria => currentCriteria.filter(criteria => criteria.id !== id));\n  }, []);\n\n  const addElmCriteria = useCallback((elm: ElmLibrary): Criteria[] => {\n    const newCriteria = elmLibraryToCriteria(elm, true);\n    setCriteria(currentCriteria => [...currentCriteria, ...newCriteria]);\n\n    return newCriteria;\n  }, []);\n\n  return (\n    <CriteriaContext.Provider\n      value={{\n        criteria,\n        addCriteria,\n        deleteCriteria,\n        addElmCriteria\n      }}\n    >\n      {children}\n    </CriteriaContext.Provider>\n  );\n});\n\nexport const useCriteriaContext = (): CriteriaContextInterface => useContext(CriteriaContext);\n","import React, {\n  createContext,\n  useCallback,\n  useState,\n  memo,\n  ReactNode,\n  FC,\n  useContext\n} from 'react';\n\ninterface CriteriaBuilderContextInterface {\n  selectedElement: string;\n  selectedDemoElement: string;\n  gender: string;\n  minimumAge: number;\n  maximumAge: number;\n  setSelectedElement: (selectedElement: string) => void;\n  setSelectedDemoElement: (selectedDemoElement: string) => void;\n  setGender: (gender: string) => void;\n  setMinimumAge: (age: number) => void;\n  setMaximumAge: (age: number) => void;\n  resetCriteriaBuilder: () => void;\n}\n\nexport const CriteriaBuilderContext = createContext<CriteriaBuilderContextInterface>(\n  {} as CriteriaBuilderContextInterface\n);\n\ninterface CriteriaBuilderProviderProps {\n  children: ReactNode;\n}\n\nexport const CriteriaBuilderProvider: FC<CriteriaBuilderProviderProps> = memo(({ children }) => {\n  const [selectedElement, setSelectedElement] = useState<string>('');\n  const [selectedDemoElement, setSelectedDemoElement] = useState<string>('');\n  const [gender, setGender] = useState<string>('');\n  const [minimumAge, setMinimumAge] = useState<number>(0);\n  const [maximumAge, setMaximumAge] = useState<number>(0);\n\n  const resetCriteriaBuilder = useCallback(() => {\n    setSelectedElement('');\n    setSelectedDemoElement('');\n    setGender('');\n    setMinimumAge(0);\n    setMaximumAge(0);\n  }, [setSelectedElement, setSelectedDemoElement, setGender, setMinimumAge, setMaximumAge]);\n\n  return (\n    <CriteriaBuilderContext.Provider\n      value={{\n        selectedElement,\n        selectedDemoElement,\n        gender,\n        minimumAge,\n        maximumAge,\n        setSelectedElement,\n        setSelectedDemoElement,\n        setGender,\n        setMinimumAge,\n        setMaximumAge,\n        resetCriteriaBuilder\n      }}\n    >\n      {children}\n    </CriteriaBuilderContext.Provider>\n  );\n});\n\nexport const useCriteriaBuilderContext = (): CriteriaBuilderContextInterface =>\n  useContext(CriteriaBuilderContext);\n","import React, { FC, memo, useState, useCallback, ChangeEvent, useMemo, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave, faTools, faTrashAlt, faThList } from '@fortawesome/free-solid-svg-icons';\nimport DropDown from 'components/elements/DropDown';\nimport { Button, Checkbox, FormControlLabel, TextField, Box } from '@material-ui/core';\nimport shortid from 'shortid';\nimport {\n  removeTransitionCondition,\n  setTransitionCondition,\n  setTransitionConditionDescription\n} from 'utils/builder';\nimport { OutlinedDiv, SidebarButton } from '.';\nimport { Transition } from 'pathways-model';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport { convertBasicCQL } from 'engine/cql-to-elm';\nimport { useCriteriaBuilderContext } from 'components/CriteriaBuilderProvider';\n\ninterface BranchTransitionProps {\n  transition: Transition;\n}\n\nconst BranchTransition: FC<BranchTransitionProps> = ({ transition }) => {\n  const { updatePathway } = usePathwaysContext();\n  const { criteria, addElmCriteria } = useCriteriaContext();\n  const {\n    buildCriteriaSelected,\n    setBuildCriteriaSelected,\n    currentCriteriaNodeId,\n    setCurrentCriteriaNodeId,\n    currentCriteriaCql,\n    setCurrentCriteriaCql,\n    criteriaName,\n    setCriteriaName,\n    resetCurrentCriteria\n  } = useCurrentCriteriaContext();\n  const { resetCriteriaBuilder } = useCriteriaBuilderContext();\n  const { pathwayRef } = useCurrentPathwayContext();\n  const { currentNodeRef } = useCurrentNodeContext();\n  const criteriaOptions = useMemo(() => criteria.map(c => ({ value: c.id, label: c.label })), [\n    criteria\n  ]);\n  const criteriaAvailable = criteriaOptions.length > 0;\n  const styles = useStyles();\n  const [useCriteriaSelected, setUseCriteriaSelected] = useState<boolean>(false);\n  const criteriaDescription = transition.condition?.description;\n  const criteriaIsValid = criteriaDescription != null;\n  const criteriaDisplayIsValid = criteriaDescription && criteriaDescription !== '';\n  const hasCriteria = transition.condition?.cql || transition.condition?.description;\n  const buttonText = hasCriteria ? 'DELETE' : 'CANCEL';\n  const icon = hasCriteria ? <FontAwesomeIcon icon={faTrashAlt} /> : null;\n  const displayCriteria =\n    criteriaAvailable &&\n    (useCriteriaSelected || transition.condition?.cql || transition.condition?.description);\n  const transitionRef = useRef(transition);\n\n  const handleUseCriteria = useCallback((): void => {\n    if (hasCriteria && transition.id && currentNodeRef.current?.key && pathwayRef.current) {\n      // delete the transition criteria\n      updatePathway(\n        removeTransitionCondition(pathwayRef.current, currentNodeRef.current.key, transition.id)\n      );\n      setUseCriteriaSelected(false);\n    } else {\n      setUseCriteriaSelected(!useCriteriaSelected);\n    }\n  }, [useCriteriaSelected, currentNodeRef, pathwayRef, hasCriteria, transition.id, updatePathway]);\n\n  const selectCriteriaSource = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current?.key || !transitionRef.current.id || !pathwayRef.current) return;\n\n      const criteriaId = event?.target.value || '';\n      const selectedCriteria = criteria.find(c => c.id === criteriaId);\n      if (!selectedCriteria) return;\n      const newPathway = setTransitionCondition(\n        pathwayRef.current,\n        currentNodeRef.current.key,\n        transitionRef.current.id,\n        transitionRef.current.condition?.description || '',\n        selectedCriteria\n      );\n\n      updatePathway(newPathway);\n    },\n    [currentNodeRef, updatePathway, pathwayRef, transitionRef, criteria]\n  );\n\n  const setCriteriaDisplay = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current?.key || !transition.id || !pathwayRef.current) return;\n\n      const criteriaDisplay = event?.target.value || '';\n      updatePathway(\n        setTransitionConditionDescription(\n          pathwayRef.current,\n          currentNodeRef.current.key,\n          transition.id,\n          criteriaDisplay\n        )\n      );\n    },\n    [currentNodeRef, transition.id, updatePathway, pathwayRef]\n  );\n\n  const handleCriteriaName = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setCriteriaName(event?.target.value || '');\n    },\n    [setCriteriaName]\n  );\n\n  const handleBuildCriteria = useCallback((): void => {\n    setCurrentCriteriaNodeId(transition.id ?? '');\n    setCurrentCriteriaCql(null);\n    setCriteriaName('');\n    if (!buildCriteriaSelected) setBuildCriteriaSelected(true);\n    resetCriteriaBuilder();\n  }, [\n    buildCriteriaSelected,\n    setCurrentCriteriaNodeId,\n    transition,\n    setBuildCriteriaSelected,\n    setCurrentCriteriaCql,\n    resetCriteriaBuilder,\n    setCriteriaName\n  ]);\n\n  const handleBuildCriteriaCancel = useCallback((): void => {\n    resetCurrentCriteria();\n    resetCriteriaBuilder();\n  }, [resetCurrentCriteria, resetCriteriaBuilder]);\n\n  const handleBuildCriteriaSave = useCallback(async (): Promise<void> => {\n    if (\n      !currentNodeRef.current?.key ||\n      !transitionRef.current.id ||\n      !pathwayRef.current ||\n      !currentCriteriaCql?.cql\n    )\n      return;\n\n    // CQl identifier cannot start with a number or contain '-'\n    const cqlId = `cql${shortid.generate().replace(/-/g, 'a')}`;\n    let cql = `library ${cqlId} version '1'\\nusing FHIR version '4.0.0'\\ncontext Patient\\n`;\n    cql += `define \"${criteriaName}\":\n      ${currentCriteriaCql.cql}`;\n    const elm = await convertBasicCQL(cql);\n    const criteria = addElmCriteria(elm);\n\n    const newPathway = setTransitionCondition(\n      pathwayRef.current,\n      currentNodeRef.current.key,\n      transitionRef.current.id,\n      criteriaName,\n      criteria[0]\n    );\n\n    updatePathway(newPathway);\n    handleBuildCriteriaCancel();\n  }, [\n    currentNodeRef,\n    updatePathway,\n    pathwayRef,\n    transitionRef,\n    currentCriteriaCql,\n    criteriaName,\n    handleBuildCriteriaCancel,\n    addElmCriteria\n  ]);\n\n  const transitionSelected = buildCriteriaSelected && currentCriteriaNodeId === transition.id;\n  return (\n    <>\n      {!displayCriteria && !transitionSelected && (\n        <SidebarButton\n          buttonName=\"Select Criteria\"\n          buttonIcon={faThList}\n          buttonText=\"Add previously built or imported criteria logic to branch node.\"\n          onClick={handleUseCriteria}\n          disabled={!criteriaAvailable}\n          hasTooltip={!criteriaAvailable}\n          tooltipTitle=\"No criteria to select. Add criteria to use.\"\n        />\n      )}\n\n      {displayCriteria && !transitionSelected && (\n        <OutlinedDiv label=\"Criteria Selector\" error={!criteriaIsValid || !criteriaDisplayIsValid}>\n          <>\n            <DropDown\n              id=\"Criteria\"\n              label=\"Criteria\"\n              options={criteriaOptions}\n              onChange={selectCriteriaSource}\n              value={transition.condition?.criteriaSource || undefined}\n            />\n\n            <TextField\n              label=\"Criteria Display\"\n              value={transition.condition?.description || ''}\n              variant=\"outlined\"\n              onChange={setCriteriaDisplay}\n              error={!criteriaDisplayIsValid}\n            />\n          </>\n\n          <Button\n            className={styles.cancelButton}\n            color=\"inherit\"\n            size=\"small\"\n            variant=\"outlined\"\n            startIcon={icon}\n            onClick={handleUseCriteria}\n          >\n            {buttonText}\n          </Button>\n        </OutlinedDiv>\n      )}\n\n      {!displayCriteria && !transitionSelected && (\n        <SidebarButton\n          buttonName=\"Build Criteria\"\n          buttonIcon={faTools}\n          buttonText=\"Create new criteria logic to add to branch node.\"\n          extraMargin\n          onClick={handleBuildCriteria}\n        />\n      )}\n\n      {transitionSelected && (\n        <OutlinedDiv label=\"Criteria Builder\" error={!criteriaIsValid || !criteriaDisplayIsValid}>\n          <TextField\n            error={criteriaName === ''}\n            label=\"Criteria Name\"\n            variant=\"outlined\"\n            onChange={handleCriteriaName}\n            value={criteriaName}\n            fullWidth\n          />\n          {currentCriteriaCql?.text && (\n            <span className={styles.buildCriteriaText}>{currentCriteriaCql.text}</span>\n          )}\n          <div className={styles.buildCriteriaContainer}>\n            <FormControlLabel\n              label={<Box fontStyle=\"italic\">Add to reusable criteria</Box>}\n              control={<Checkbox color=\"default\" />}\n              checked\n            />\n            <Button\n              color=\"inherit\"\n              size=\"large\"\n              variant=\"outlined\"\n              onClick={handleBuildCriteriaCancel}\n            >\n              Cancel\n            </Button>\n            <Button\n              className={styles.saveButton}\n              color=\"inherit\"\n              size=\"large\"\n              variant=\"outlined\"\n              startIcon={<FontAwesomeIcon icon={faSave} />}\n              disabled={criteriaName === '' || currentCriteriaCql === null}\n              onClick={handleBuildCriteriaSave}\n            >\n              Save\n            </Button>\n          </div>\n        </OutlinedDiv>\n      )}\n    </>\n  );\n};\n\nexport default memo(BranchTransition);\n","import React, { FC, ReactNode } from 'react';\nimport clsx from 'clsx';\n\nimport TextField from '@material-ui/core/TextField';\nimport useStyles from './styles';\n\ninterface InputComponentProps {\n  children?: ReactNode;\n}\n\nconst InputComponent: FC<InputComponentProps> = ({ children }) => {\n  return <>{children}</>;\n};\n\ninterface OutlinedDivProps {\n  children: ReactNode;\n  label: string;\n  error: boolean;\n}\n\nconst OutlinedDiv: FC<OutlinedDivProps> = ({ children, label, error }) => {\n  const styles = useStyles();\n\n  return (\n    <TextField\n      variant=\"outlined\"\n      label={label}\n      multiline\n      InputLabelProps={{ shrink: true }}\n      InputProps={{\n        inputComponent: InputComponent,\n        classes: {\n          root: clsx(styles.outlinedDiv, error && styles.outlinedDivError),\n          notchedOutline: clsx(error && styles.outlinedDivError)\n        }\n      }}\n      inputProps={{ children }}\n      fullWidth\n    />\n  );\n};\n\n// This is not memoized since one of its props is children\nexport default OutlinedDiv;\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton\n} from '@material-ui/core';\n\nimport useStyles from './styles';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\n\ninterface DeleteModalProps {\n  open: boolean;\n  nodeLabel: string;\n  isTransition: boolean;\n  onClose: () => void;\n  onDelete: () => void;\n}\n\nconst DeleteModal: FC<DeleteModalProps> = ({\n  open,\n  nodeLabel,\n  isTransition,\n  onClose,\n  onDelete\n}) => {\n  const styles = useStyles();\n  const { currentNode } = useCurrentNodeContext();\n\n  const text = isTransition ? (\n    <span>\n      Delete the transition from <strong>{currentNode?.label}</strong> to{' '}\n      <strong>{nodeLabel}</strong>? This will not delete either node, just the transition between\n      them.\n    </span>\n  ) : (\n    <span>\n      Delete the node <strong>{nodeLabel}</strong>? This will also remove any transitions to this\n      node.\n    </span>\n  );\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"create-pathway\"\n        fullWidth\n        maxWidth=\"md\"\n      >\n        <DialogTitle disableTypography>\n          <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n            <FontAwesomeIcon icon={faTimes} />\n          </IconButton>\n        </DialogTitle>\n\n        <DialogContent className={styles.dialogContent}>\n          <FontAwesomeIcon icon={faExclamationCircle} className={styles.alertIcon} />\n          <p className={styles.dialogContentText}>{text}</p>\n        </DialogContent>\n\n        <DialogActions>\n          <Button variant=\"text\" color=\"primary\" onClick={onClose}>\n            Cancel\n          </Button>\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDelete}>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default memo(DeleteModal);\n","import React, { FC, ReactNode, memo } from 'react';\nimport SidebarHeader from './SidebarHeader';\nimport useStyles from './styles';\nimport { Card } from '@material-ui/core';\nimport { Transition } from 'pathways-model';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\n\ninterface TransitionEditorProps {\n  transition: Transition;\n  children?: ReactNode;\n}\n\nconst TransitionEditor: FC<TransitionEditorProps> = ({ transition, children }) => {\n  const styles = useStyles();\n  const { pathway } = useCurrentPathwayContext();\n  const transitionKey = transition?.transition || '';\n  const transitionNode = pathway?.nodes[transitionKey];\n\n  return (\n    <Card raised className={styles.transitionContainer}>\n      {transitionNode && <SidebarHeader node={transitionNode} isTransition />}\n\n      {children}\n    </Card>\n  );\n};\n\nexport default memo(TransitionEditor);\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport { Pathway, PathwayNode } from 'pathways-model';\nimport { Node, Nodes, Layout, NodeCoordinates, Edges, NodeDimensions } from 'graph-model';\n\nimport dagre from 'dagre';\n\nimport config from 'utils/ConfigManager';\nconst graphLayoutProvider = config.get('graphLayoutProvider', 'dagre');\n\n/**\n * Obtain the graph layout for the pathway as coordinates for every node\n *\n * @param pathway - JSON pathway\n */\nexport default function layout(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  return graphLayoutProvider === 'dagre'\n    ? layoutDagre(pathway, nodeDimensions)\n    : layoutCustom(pathway);\n}\n\n/**\n * Layout the pathway using the Dagre layout engine.\n * @see {@link https://github.com/dagrejs/dagre}\n */\nfunction layoutDagre(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  const START = 'Start';\n  const NODE_HEIGHT = 50;\n  const NODE_WIDTH_FACTOR = 10; // factor to convert label length => width, assume font size roughly 10\n  const nodeKeys = Object.keys(pathway.nodes);\n  const g = new dagre.graphlib.Graph();\n\n  g.setGraph({});\n  g.setDefaultEdgeLabel(() => ({})); // dagre requires a default edge label, we want it to just be empty\n\n  nodeKeys.forEach(nodeKey => {\n    const node: PathwayNode = pathway.nodes[nodeKey];\n    const nodeDimension = nodeDimensions[nodeKey];\n\n    if (nodeDimension) {\n      g.setNode(nodeKey, {\n        label: node.label,\n        width: nodeDimension.width,\n        height: nodeDimension.height\n      });\n    } else {\n      g.setNode(nodeKey, {\n        label: node.label,\n        width: node.label.length * NODE_WIDTH_FACTOR,\n        height: NODE_HEIGHT\n      });\n    }\n\n    node.transitions.forEach(transition => {\n      const label = transition.condition\n        ? {\n            label: transition.condition.description,\n            width: 25,\n            height: 20\n          }\n        : {};\n\n      g.setEdge(nodeKey, transition.transition, label);\n    });\n  });\n\n  dagre.layout(g);\n  const nodeCoordinates: NodeCoordinates = {};\n  const startNodeShift = g.node(START).x;\n\n  for (const nodeKey of nodeKeys) {\n    const node = g.node(nodeKey);\n    // dagre returns coordinates for the center of the node,\n    // our renderer expects coordinates for the corner of the node.\n    // further, our renderer expects the Start node to be centered at x: 0\n    nodeCoordinates[nodeKey] = {\n      x: node.x - startNodeShift - node.width / 2,\n      y: node.y - node.height / 2,\n      width: node.width\n    };\n  }\n\n  const edges: Edges = {};\n\n  g.edges().forEach(e => {\n    const edge = g.edge(e);\n    const edgeName = `${e.v}, ${e.w}`;\n    const label = edge.label ? { text: edge.label, x: edge.x - startNodeShift, y: edge.y } : null;\n\n    edges[edgeName] = {\n      label,\n      start: e.v,\n      end: e.w,\n      points: edge.points.map(p => {\n        return {\n          x: p.x - startNodeShift,\n          y: p.y\n        };\n      })\n    };\n  });\n\n  return { nodeCoordinates, edges };\n}\n\n/**\n * Layout the pathway using our homegrown layout algorithm.\n */\nfunction layoutCustom(pathway: Pathway): Layout {\n  const START = 'Start';\n  const NODE_WIDTH = 100;\n  const NODE_HEIGHT = 50;\n  const MIN_MARGIN_X = 10;\n  const MIN_MARGIN_Y = 50;\n  const nodes: Nodes = initializeNodes(pathway);\n  const graph: string[][] = [[START]];\n  const HORIZONTAL_OFFSET = NODE_WIDTH + MIN_MARGIN_X;\n  const VERTICAL_OFFSET = NODE_HEIGHT + MIN_MARGIN_Y;\n\n  // Set the rank for every node\n  let rank = 0;\n  do {\n    // Iterate over each node on the current level\n    for (const nodeKey of graph[rank]) {\n      // Assign all children to the next rank\n      assignRankToChildren(nodes[nodeKey], rank + 1);\n    }\n\n    rank++;\n\n    // To start rank = 0 and graph.length = 1. In each iteration children will be added\n    // to the next rank incrementing the length of graph. When there are no new children\n    // the graph.length will remain unchanged but the rank would have increased by one.\n    // Therefore we stop when the rank and graph length are the same.\n  } while (graph.length !== rank);\n\n  // Set the position of nodes within the rank\n  assignHorizontalPositionToNode(nodes[START], -1 * (NODE_WIDTH / 2));\n  for (rank = 1; rank < graph.length; rank++) {\n    assignHorizontalPositionToNodesInRank(rank);\n  }\n\n  return {\n    nodeCoordinates: produceCoordinates(),\n    edges: {}\n  };\n\n  /**\n   * Convert the Nodes into a Coordinates object\n   *\n   * @returns Coordinates for every node\n   */\n  function produceCoordinates(): NodeCoordinates {\n    const coordinates: NodeCoordinates = {};\n\n    for (const nodeKey in nodes) {\n      const node = nodes[nodeKey];\n      coordinates[nodeKey] = {\n        x: node.horizontalPosition,\n        y: node.rank * VERTICAL_OFFSET\n      };\n    }\n\n    return coordinates;\n  }\n\n  /**\n   * Set the horizontal position for child elements of a parent\n   *\n   * @param parent - the parent Node\n   * @param nodes - the Nodes\n   */\n  function spreadChildrenEvenly(parent: Node): void {\n    const children = parent.children.filter(\n      c => isNaN(nodes[c].horizontalPosition) || nodes[c].canMove\n    );\n    if (children.length === 0) return;\n    if (children.length === 1) {\n      assignHorizontalPositionToNode(nodes[children[0]], parent.horizontalPosition);\n      return;\n    }\n    if (children.length % 2 === 1) children.splice(Math.ceil(children.length / 2), 1); // Remove middle element if odd\n\n    // TODO: this does not consider if there are connections between the children which order to put them in\n    for (let i = 0; i < children.length / 2; i++) {\n      // Set the left child i from the center\n      let childNode = nodes[children[children.length / 2 - i - 1]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition - (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n\n      // Set the right child i from the center\n      childNode = nodes[children[children.length / 2 + i]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition + (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n    }\n  }\n\n  /**\n   * Assigns the node given by nodeKey the horizontal position hPos if it is not already set\n   * @param node - the node to set the horizontal position of\n   * @param hPos - the horizontal position for the node\n   */\n  function assignHorizontalPositionToNode(node: Node, hPos: number): void {\n    if (isNaN(node.horizontalPosition) || node.canMove) {\n      node.horizontalPosition = hPos;\n\n      // Check the new position is not on top of another node\n      let i = 1;\n      while (hasOverlap(node)) {\n        // Update Horizontal position of this node\n        // Alternate directions moving further and further away\n        const direction = i % 2 === 0 ? -1 : 1;\n        node.horizontalPosition = hPos + direction * Math.ceil(i / 2) * HORIZONTAL_OFFSET;\n        i += 1;\n      }\n    }\n  }\n\n  /**\n   * Assigns the horizontal position of all nodes on the current level\n   *\n   * @param rank - the level of the graph to assign node positions of\n   */\n  function assignHorizontalPositionToNodesInRank(rank: number): void {\n    for (const nodeKey of graph[rank]) {\n      const node = nodes[nodeKey];\n      if (!isNaN(node.horizontalPosition)) continue;\n      const parentsOnHigherRank = node.parents.filter(p => nodes[p].rank < node.rank);\n      if (parentsOnHigherRank.length === 1) {\n        const parentKey = node.parents[0];\n        const parent = nodes[parentKey];\n\n        if (parent.children.length % 2 === 1) {\n          // Odd number of children: one directly below, others to the side\n          const childNode = nodes[parent.children[Math.floor(parent.children.length / 2)]];\n          assignHorizontalPositionToNode(childNode, parent.horizontalPosition);\n        }\n        spreadChildrenEvenly(parent);\n      } else {\n        // Multiple Parents: Place the node at the average of parents on higher rank\n        // TODO: collect all parents to be next to each other\n        const sum = parentsOnHigherRank\n          .map(p => nodes[p].horizontalPosition)\n          .reduce((a, b) => a + b, 0);\n\n        assignHorizontalPositionToNode(node, sum / parentsOnHigherRank.length);\n      }\n    }\n  }\n\n  /**\n   * Determines if the node overlaps with any other nodes in the rank\n   *\n   * @param node - the node to check for overlap with\n   * @returns true if the node overlaps with any other node in the rank, false otherwise\n   */\n  function hasOverlap(node: Node): boolean {\n    const nodesInRank = graph[node.rank].map(name => nodes[name]);\n\n    for (const otherNode of nodesInRank) {\n      if (nodesOverlap(node, otherNode)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Helper function to determine if two nodes are in the same slot\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the nodes share same rank and position, false otherwise\n   */\n  function nodesOverlap(node: Node, otherNode: Node): boolean {\n    if (nodesEqual(node, otherNode)) return false;\n    else\n      return (\n        !isNaN(node.rank) &&\n        !isNaN(node.horizontalPosition) &&\n        !isNaN(otherNode.rank) &&\n        !isNaN(otherNode.horizontalPosition) &&\n        node.rank === otherNode.rank &&\n        node.horizontalPosition === otherNode.horizontalPosition\n      );\n  }\n\n  /**\n   * Determine if two nodes are the same\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the two nodes are the same (have the same label)\n   */\n  function nodesEqual(node: Node, otherNode: Node): boolean {\n    return node.label === otherNode.label;\n  }\n\n  /**\n   * Assigns the rank to every child of node. If the child has a lower rank the entire\n   * subtree rooted at that child will be shifted down by recursively assigning rank to\n   * the children.\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param node - the node to get children from\n   * @param rank - the rank to assign to the children\n   */\n  function assignRankToChildren(node: Node, rank: number): void {\n    node.children.forEach(child => {\n      const childNode = nodes[child];\n\n      // If the child is on a higher rank than the parent (node) move subtree rooted at child down\n      if (childNode.rank < node.rank) {\n        // Remove node from previous rank\n        graph[childNode.rank].splice(graph[childNode.rank].indexOf(child), 1);\n\n        // Move this node down\n        assignRankToNode(child, rank);\n\n        // Move all children of this child down\n        assignRankToChildren(childNode, rank + 1);\n      } else if (isNaN(childNode.rank)) assignRankToNode(child, rank);\n    });\n  }\n\n  /**\n   * Assigns the node labeled by nodeKey the rank by updating graph and nodes data structures\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param nodeKey - the name of the node to set the rank of\n   * @param rank - the new rank for the node\n   */\n  function assignRankToNode(nodeKey: string, rank: number): void {\n    try {\n      graph[rank].push(nodeKey);\n    } catch (err) {\n      graph[rank] = [nodeKey];\n    } finally {\n      nodes[nodeKey].rank = rank;\n    }\n  }\n\n  /**\n   * Initialize the Nodes data structure for the graph representation\n   *\n   * @param pathway - JSON Pathway\n   * @returns initial Nodes data structure with default values\n   */\n  function initializeNodes(pathway: Pathway): Nodes {\n    const nodes: Nodes = {};\n\n    // Iniitalize each node with default values\n    let nodeKey: string;\n    for (nodeKey in pathway.nodes) {\n      nodes[nodeKey] = {\n        label: nodeKey,\n        rank: NaN,\n        horizontalPosition: NaN,\n        children: [],\n        parents: [],\n        canMove: true\n      };\n    }\n\n    // Set the child and parent properties of each node\n    Object.keys(pathway.nodes).forEach(nodeKey => {\n      const node: PathwayNode = pathway.nodes[nodeKey];\n\n      node.transitions.forEach(transition => {\n        if (!nodes[nodeKey].children.includes(transition.transition))\n          nodes[nodeKey].children.push(transition.transition);\n        if (!nodes[transition.transition].parents.includes(nodeKey))\n          nodes[transition.transition].parents.push(nodeKey);\n      });\n    });\n\n    nodes[START].rank = 0;\n\n    return nodes;\n  }\n}\n","import React, { FC, ReactNode, ReactElement, memo } from 'react';\nimport { ActionNode } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from './ExpandedNode.module.scss';\nimport { isBranchNode, resourceNameConversion, isActionNode } from 'utils/nodeUtils';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\n\ninterface ExpandedNodeProps {\n  actionNode: ActionNode;\n}\n\nconst ExpandedNode: FC<ExpandedNodeProps> = memo(({ actionNode }) => {\n  return (\n    <>\n      <ExpandedNodeMemo actionNode={actionNode} />\n    </>\n  );\n});\n\ntype ExpandedNodeFieldProps = {\n  title: string;\n  description: ReactNode;\n};\n\nconst ExpandedNodeField: FC<ExpandedNodeFieldProps> = ({ title, description }) => {\n  if (!description) return null;\n\n  return (\n    <tr>\n      <td className={styles.descTitle}>{title}</td>\n      <td className={styles.desc}>{description}</td>\n    </tr>\n  );\n};\n\nfunction isMedicationRequest(\n  request: MedicationRequest | ServiceRequest\n): request is MedicationRequest {\n  return (request as MedicationRequest).medicationCodeableConcept !== undefined;\n}\n\nfunction renderAction(actionNode: ActionNode): ReactElement[] {\n  let returnElements: ReactElement[] = [];\n  if (actionNode.action[0]) {\n    const resource = actionNode.action[0].resource;\n    const coding = isMedicationRequest(resource)\n      ? resource?.medicationCodeableConcept?.coding\n      : resource?.code?.coding;\n\n    const resourceType = resourceNameConversion[resource.resourceType]\n      ? resourceNameConversion[resource.resourceType]\n      : resource.resourceType;\n    returnElements = [\n      <ExpandedNodeField\n        key=\"Description\"\n        title=\"Description\"\n        description={actionNode.action[0].description}\n      />,\n      <ExpandedNodeField key=\"Type\" title=\"Type\" description={resourceType} />,\n      <ExpandedNodeField\n        key=\"System\"\n        title=\"System\"\n        description={\n          coding &&\n          coding[0].system && (\n            <>\n              {coding[0].system}\n              <a href={coding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n              </a>\n            </>\n          )\n        }\n      />,\n      <ExpandedNodeField key=\"Code\" title=\"Code\" description={coding && coding[0].code} />,\n      <ExpandedNodeField key=\"Display\" title=\"Display\" description={coding && coding[0].display} />,\n      <ExpandedNodeField key=\"Title\" title=\"Title\" description={resource.title} />\n    ];\n  }\n\n  return returnElements;\n}\n\nfunction renderBranch(): ReactElement {\n  return <ExpandedNodeField key=\"Type\" title=\"Type\" description=\"Observation\" />;\n}\n\ninterface ExpandedNodeMemoProps {\n  actionNode: ActionNode;\n}\n\nconst ExpandedNodeMemo: FC<ExpandedNodeMemoProps> = memo(({ actionNode }) => {\n  const action = isActionNode(actionNode) && renderAction(actionNode);\n  const branch = isBranchNode(actionNode) && renderBranch();\n  return (\n    <div className=\"expandedNode\">\n      <table className={styles.infoTable}>\n        <tbody>{action || branch}</tbody>\n      </table>\n    </div>\n  );\n});\n\nexport default ExpandedNode;\n","import React, { FC, Ref, forwardRef, memo, useCallback, useState, useEffect } from 'react';\nimport { ActionNode, PathwayNode } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './Node.module.scss';\nimport ExpandedNode from 'components/ExpandedNode';\nimport { isActionNode } from 'utils/nodeUtils';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faMicroscope,\n  faPlay,\n  faPrescriptionBottleAlt,\n  faSyringe,\n  faCheckCircle,\n  faTimesCircle,\n  faBookMedical\n} from '@fortawesome/free-solid-svg-icons';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\n\ninterface NodeProps {\n  nodeKey: string;\n  pathwayNode: PathwayNode;\n  xCoordinate: number;\n  yCoordinate: number;\n  expanded?: boolean;\n  onClick?: (nodeKey: string) => void;\n  nodeType: string;\n}\n\nconst Node: FC<NodeProps & { ref: Ref<HTMLDivElement> }> = memo(\n  forwardRef<HTMLDivElement, NodeProps>(\n    (\n      { nodeKey, pathwayNode, xCoordinate, yCoordinate, expanded = false, onClick, nodeType },\n      ref\n    ) => {\n      const { currentNode } = useCurrentNodeContext();\n      const [hasMetadata, setHasMetadata] = useState<boolean>(\n        isActionNode(pathwayNode) ? pathwayNode.action.length > 0 : false\n      );\n\n      const onClickHandler = useCallback(() => {\n        if (onClick) onClick(nodeKey);\n      }, [onClick, nodeKey]);\n\n      useEffect(() => {\n        if (!hasMetadata && isActionNode(pathwayNode) && pathwayNode.action.length > 0) {\n          setHasMetadata(true);\n          if (!expanded) {\n            onClickHandler();\n          }\n        }\n      }, [hasMetadata, pathwayNode, setHasMetadata, onClickHandler, expanded]);\n\n      const { label } = pathwayNode;\n      const style = {\n        top: yCoordinate,\n        left: xCoordinate\n      };\n\n      const isCurrentNode = pathwayNode.key === currentNode?.key;\n\n      const isActionable = isCurrentNode;\n      const topLevelClasses = [styles.node];\n      let expandedNodeClass = '';\n      if (expanded) topLevelClasses.push('expanded');\n      if (isActionable) {\n        topLevelClasses.push(styles.actionable);\n        expandedNodeClass = styles.childActionable;\n      } else {\n        expandedNodeClass = styles.childNotActionable;\n      }\n\n      return (\n        <div className={topLevelClasses.join(' ')} style={style} ref={ref}>\n          <div className={`nodeTitle ${onClickHandler && 'clickable'}`} onClick={onClickHandler}>\n            <div className=\"iconAndLabel\">\n              <NodeIcon pathwayNode={pathwayNode} nodeType={nodeType} />\n              {label}\n            </div>\n            <StatusIcon status={null} />\n          </div>\n          {expanded && (\n            <div className={`${styles.expandedNode} ${expandedNodeClass}`}>\n              <ExpandedNode actionNode={pathwayNode as ActionNode} />\n            </div>\n          )}\n        </div>\n      );\n    }\n  )\n);\n\ninterface NodeIconProps {\n  pathwayNode: PathwayNode;\n  nodeType: string;\n}\n\nconst NodeIcon: FC<NodeIconProps> = ({ pathwayNode, nodeType }) => {\n  let icon: IconDefinition | undefined;\n  if (pathwayNode.label === 'Start') {\n    icon = faPlay;\n  } else if (nodeType === 'action') {\n    const actionNode = pathwayNode as ActionNode;\n    if (actionNode.action.length > 0) {\n      const resourceType = actionNode.action[0].resource.resourceType;\n      if (resourceType === 'MedicationRequest') icon = faPrescriptionBottleAlt;\n      else if (resourceType === 'ServiceRequest') icon = faSyringe;\n      else if (resourceType === 'CarePlan') icon = faBookMedical;\n    }\n  } else if (nodeType === 'branch') {\n    icon = faMicroscope;\n  }\n\n  return icon ? <FontAwesomeIcon icon={icon} className={styles.icon} /> : null;\n};\n\ninterface StatusIconProps {\n  status: boolean | null;\n}\n\nconst StatusIcon: FC<StatusIconProps> = ({ status }) => {\n  if (status == null) {\n    return null;\n  }\n  const icon = status ? faCheckCircle : faTimesCircle;\n  return (\n    <div className=\"statusIcon\">\n      <FontAwesomeIcon icon={icon} className={styles.icon} />\n    </div>\n  );\n};\n\nexport default Node;\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    arrow: {\n      '& path': {\n        stroke: theme.palette.primary.main,\n        strokeWidth: 2\n      },\n      '& text': {\n        fontSize: '18px'\n      }\n    },\n    currentArrow: {\n      '& path': {\n        stroke: theme.palette.secondary.main\n      }\n    },\n    arrowhead: {\n      '& polygon': {\n        fill: theme.palette.primary.main\n      }\n    },\n    currentArrowhead: {\n      '& polygon': {\n        fill: theme.palette.secondary.main\n      }\n    }\n  }),\n  { name: 'Arrow', index: 1 }\n);\n","import React, { FC } from 'react';\nimport { Edge, Coordinate } from 'graph-model';\nimport { PathwayNode } from 'pathways-model';\nimport useStyles from './styles';\nimport clsx from 'clsx';\nimport { Tooltip } from '@material-ui/core';\n\ninterface ArrowProps {\n  edge: Edge;\n  edgeName: string;\n  widthOffset: number;\n  currentNode: PathwayNode;\n}\n\ninterface ArrowPathProps {\n  points: Coordinate[];\n  arrowheadId: string;\n  widthOffset: number;\n}\n\nconst Arrow: FC<ArrowProps> = ({ edge, edgeName, widthOffset, currentNode }) => {\n  const styles = useStyles();\n  const isCurrentArrow = edge.start === currentNode.key;\n  const edgeNameNoWhitespace = edgeName.replace(' ', '');\n  const arrowheadId = `arrowhead-${edgeNameNoWhitespace}`;\n\n  const { label } = edge;\n  return (\n    <svg className={clsx(styles.arrow, isCurrentArrow && styles.currentArrow)}>\n      <ArrowPath points={edge.points} arrowheadId={arrowheadId} widthOffset={widthOffset} />\n      {label ? (\n        label.text.length > 12 ? (\n          <Tooltip title={label.text} aria-label=\"tooltip\">\n            <text x={label.x + widthOffset} y={label.y}>\n              {label.text.substring(0, 11) + '...'}\n            </text>\n          </Tooltip>\n        ) : (\n          <text x={label.x + widthOffset} y={label.y}>\n            {label.text}\n          </text>\n        )\n      ) : null}\n      <defs>\n        <marker\n          id={arrowheadId}\n          className={clsx(isCurrentArrow ? styles.currentArrowhead : styles.arrowhead)}\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n    </svg>\n  );\n};\n\n// Returns path for arrow from edge points\nconst ArrowPath: FC<ArrowPathProps> = ({ points, arrowheadId, widthOffset }) => {\n  const pointsWithOffset = points.map(p => ({ x: p.x + widthOffset, y: p.y }));\n  const length = pointsWithOffset.length;\n  pointsWithOffset[length - 1].y -= 17.5;\n  let pathString = `M ${pointsWithOffset[0].x} ${pointsWithOffset[0].y} `;\n\n  /**\n   * The points to use in the Cubic command is determined by the length of points array\n   * If i % 3 is 0, use all points including the 1st point\n   * If i % 3 is 1, use all points except the 1st point\n   * If i % 3 is 2, use all points including the 1st point and reuse every 3rd point\n   * We need points to be a multiple of 3 because the Cubic command expects 3 points\n   */\n  const writeCommandString = (remainder: number): string => {\n    return pointsWithOffset.reduce((acc, point, i, arr) => {\n      return i % 3 !== remainder\n        ? acc\n        : `${acc} C ${point.x} ${point.y} ${arr[i + 1].x} ${arr[i + 1].y} ${arr[i + 2].x}\n        ${arr[i + 2].y}`;\n    }, pathString);\n  };\n\n  pathString = writeCommandString(length % 3);\n\n  return <path d={pathString} fill=\"transparent\" markerEnd={`url(#${arrowheadId})`} />;\n};\n\nexport default Arrow;\n","import React, { FC, useCallback, useEffect, useMemo, useRef, useState, memo } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport graphLayout from 'visualization/layout';\nimport Node from 'components/Node';\nimport Arrow from 'components/Arrow';\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport { Pathway, PathwayNode } from 'pathways-model';\nimport { Layout, NodeDimensions, NodeCoordinates, Edges } from 'graph-model';\nimport styles from './Graph.module.scss';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { getNodeType } from 'utils/builder';\nimport { redirect } from 'utils/nodeUtils';\n\ninterface GraphProps {\n  graphContainerWidth: number;\n  interactive?: boolean;\n}\n\ninterface ExpandedNode {\n  [key: string]: boolean | string | null;\n}\n\nconst Graph: FC<GraphProps> = memo(function Graph({ graphContainerWidth, interactive = true }) {\n  const { pathway } = useCurrentPathwayContext();\n  const { currentNode } = useCurrentNodeContext();\n  const nodeRefs = useRef<{ [key: string]: HTMLDivElement }>({});\n\n  // Get the layout of the graph\n  const getGraphLayout = useCallback((): Layout => {\n    const nodeDimensions: NodeDimensions = {};\n\n    // Retrieve dimensions from nodeRefs\n    if (nodeRefs?.current) {\n      Object.keys(nodeRefs.current).forEach(key => {\n        const nodeElement = nodeRefs.current[key];\n        const width = nodeElement.clientWidth;\n        // nodeElement can have multiple children so calculate the sum to get the node height\n        const height = Array.from(nodeElement.children).reduce(\n          (acc, child) => acc + child.clientHeight,\n          0\n        );\n\n        nodeDimensions[key] = { width, height };\n      });\n    }\n\n    if (pathway) return graphLayout(pathway, nodeDimensions);\n    else return {} as Layout;\n  }, [pathway]);\n\n  const [layout, setLayout] = useState(getGraphLayout());\n  const { nodeCoordinates, edges } = layout;\n  const maxHeight = useMemo(() => {\n    return nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          .map(x => x.y)\n          .reduce((a, b) => Math.max(a, b))\n      : 0;\n  }, [nodeCoordinates]);\n\n  // If a node has a negative x value, shift nodes and edges to the right by that value\n  const minX =\n    nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          .map(x => x.x + graphContainerWidth / 2)\n          .reduce((a, b) => Math.min(a, b))\n      : 0;\n\n  if (minX < 0) {\n    const toAdd = minX * -1;\n    Object.keys(nodeCoordinates).forEach(key => {\n      const node = nodeCoordinates[key];\n      node.x += toAdd;\n    });\n\n    Object.keys(edges).forEach(key => {\n      const edge = edges[key];\n\n      edge.points.forEach(p => (p.x += toAdd));\n      if (edge.label) edge.label.x += toAdd;\n    });\n  }\n\n  // Find node that is farthest to the right\n  const maxWidth = useMemo(() => {\n    return nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          // Add width of the node to account for x coordinate starting at top left corner\n          .map(x => x.x + graphContainerWidth / 2 + (x.width ?? 0))\n          .reduce((a, b) => Math.max(a, b))\n      : 0;\n  }, [nodeCoordinates, graphContainerWidth]);\n\n  const [expanded, setExpanded] = useState<ExpandedNode>(() =>\n    Object.keys(layout).reduce(\n      (acc, curr: string) => {\n        acc[curr] = false;\n        return acc;\n      },\n      { lastSelectedNode: null } as ExpandedNode\n    )\n  );\n\n  const toggleExpanded = useCallback((key: string) => {\n    if (key === 'Start') {\n      setExpanded(prevState => ({\n        ...prevState,\n        lastSelectedNode: key\n      }));\n    } else {\n      setExpanded(prevState => ({\n        ...prevState,\n        [key]:\n          !prevState[key] || prevState.lastSelectedNode === key ? !prevState[key] : prevState[key],\n        lastSelectedNode: key\n      }));\n    }\n  }, []);\n\n  // Recalculate graph layout if a node is expanded\n  useEffect(() => {\n    setLayout(getGraphLayout());\n  }, [pathway, expanded, getGraphLayout]);\n\n  if (!pathway) return <div>Error: No pathway loaded</div>;\n  else if (!currentNode) return <div>Error: No node selected</div>;\n  else\n    return (\n      <GraphMemo\n        interactive={interactive}\n        maxHeight={maxHeight}\n        nodeCoordinates={nodeCoordinates}\n        edges={edges}\n        pathway={pathway}\n        nodeRefs={nodeRefs}\n        parentWidth={graphContainerWidth}\n        maxWidth={maxWidth}\n        expanded={expanded}\n        toggleExpanded={toggleExpanded}\n        currentNode={currentNode}\n      />\n    );\n});\n\ninterface GraphMemoProps {\n  interactive: boolean;\n  maxHeight: number;\n  nodeCoordinates: NodeCoordinates;\n  edges: Edges;\n  pathway: Pathway;\n  nodeRefs: React.MutableRefObject<{\n    [key: string]: HTMLDivElement;\n  }>;\n  parentWidth: number;\n  maxWidth: number;\n  expanded: ExpandedNode;\n  toggleExpanded: (key: string) => void;\n  currentNode: PathwayNode;\n}\n\nconst GraphMemo: FC<GraphMemoProps> = memo(function GraphMemo({\n  interactive,\n  maxHeight,\n  nodeCoordinates,\n  edges,\n  pathway,\n  nodeRefs,\n  parentWidth,\n  maxWidth,\n  expanded,\n  toggleExpanded,\n  currentNode\n}) {\n  const { id: pathwayId } = useParams();\n  const history = useHistory();\n  const { resetCurrentCriteria } = useCurrentCriteriaContext();\n  const onClickHandler = useCallback(\n    (nodeKey: string) => {\n      if (interactive) {\n        redirect(pathwayId, nodeKey, history);\n        toggleExpanded(nodeKey);\n        resetCurrentCriteria();\n      }\n    },\n    [toggleExpanded, resetCurrentCriteria, interactive, history, pathwayId]\n  );\n\n  return (\n    <div\n      id=\"graph-root\"\n      className={styles.root}\n      style={{\n        height: interactive ? maxHeight + 150 : 'inherit',\n        width: maxWidth + 'px',\n        position: 'relative',\n        marginRight: '5px'\n      }}\n    >\n      {nodeCoordinates !== undefined\n        ? Object.keys(nodeCoordinates).map(nodeKey => {\n            if (Object.keys(pathway.nodes).includes(nodeKey)) {\n              return (\n                <Node\n                  key={nodeKey}\n                  nodeKey={nodeKey}\n                  ref={(node: HTMLDivElement): void => {\n                    if (node) nodeRefs.current[nodeKey] = node;\n                    else delete nodeRefs.current[nodeKey];\n                  }}\n                  pathwayNode={pathway.nodes[nodeKey]}\n                  xCoordinate={nodeCoordinates[nodeKey].x + parentWidth / 2}\n                  yCoordinate={nodeCoordinates[nodeKey].y}\n                  expanded={Boolean(expanded[nodeKey])}\n                  onClick={onClickHandler}\n                  nodeType={getNodeType(pathway, nodeKey)}\n                />\n              );\n            } else return null;\n          })\n        : []}\n\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{\n          width: maxWidth + 100,\n          height: maxHeight,\n          zIndex: 1,\n          top: 0,\n          left: 0,\n          overflow: 'visible'\n        }}\n      >\n        {edges !== undefined\n          ? Object.keys(edges).map(edgeName => {\n              const edge = edges[edgeName];\n              return (\n                <Arrow\n                  key={edgeName}\n                  edge={edge}\n                  edgeName={edgeName}\n                  widthOffset={parentWidth / 2}\n                  currentNode={currentNode}\n                />\n              );\n            })\n          : []}\n      </svg>\n    </div>\n  );\n});\n\nexport default Graph;\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    elementContainer: {\n      padding: '1em',\n      marginRight: '10px',\n      border: '0.1em solid',\n      borderRadius: '0.2em',\n      fontWeight: 500,\n      width: 'auto',\n      backgroundColor: theme.palette.common.grayLighter\n    },\n    elementSelect: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    addElementLabel: {\n      marginLeft: '1em',\n      minWidth: '120px'\n    },\n    headerText: {\n      marginRight: '10px',\n      fontStyle: 'italic',\n      fontSize: '0.8em'\n    },\n    elementField: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    elementFieldLabel: {\n      fontWeight: 'bold',\n      marginRight: '1em'\n    }\n  }),\n  { name: 'CriteriaBuilder' }\n);\n","import React, { FC, memo, useCallback, useEffect, ChangeEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, TextField } from '@material-ui/core';\n\nimport DropDown from 'components/elements/DropDown';\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport useStyles from './styles';\nimport { useCriteriaBuilderContext } from 'components/CriteriaBuilderProvider';\n\nconst CriteriaBuilder: FC = () => {\n  const {\n    selectedElement,\n    selectedDemoElement,\n    gender,\n    minimumAge,\n    maximumAge,\n    setSelectedElement,\n    setSelectedDemoElement,\n    setGender,\n    setMinimumAge,\n    setMaximumAge,\n    resetCriteriaBuilder\n  } = useCriteriaBuilderContext();\n  const styles = useStyles();\n  const { setCurrentCriteriaCql } = useCurrentCriteriaContext();\n  const elementOptions = [{ value: 'Demographics', label: 'Demographics' }];\n  const demoElementOptions = [\n    { value: 'Age Range', label: 'Age Range' },\n    { value: 'Gender', label: 'Gender' }\n  ];\n  const genderOptions = [\n    {\n      label: 'Male',\n      value: 'Male'\n    },\n    {\n      label: 'Female',\n      value: 'Female'\n    },\n    {\n      label: 'Other',\n      value: 'Other'\n    },\n    {\n      label: 'Unknown',\n      value: 'Unknown'\n    }\n  ];\n\n  const onElementSelected = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setSelectedElement(event?.target.value || '');\n    },\n    [setSelectedElement]\n  );\n\n  const onDemoElementSelected = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setSelectedDemoElement(event?.target.value || '');\n    },\n    [setSelectedDemoElement]\n  );\n\n  const onGenderSelected = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setGender(event?.target.value || '');\n    },\n    [setGender]\n  );\n\n  const onMinimumAgeChange = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setMinimumAge(parseInt(event?.target.value) || 0);\n    },\n    [setMinimumAge]\n  );\n\n  const onMaximumAgeChange = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setMaximumAge(parseInt(event?.target.value) || 0);\n    },\n    [setMaximumAge]\n  );\n\n  const handleClose = useCallback((): void => {\n    resetCriteriaBuilder();\n    setCurrentCriteriaCql(null);\n  }, [resetCriteriaBuilder, setCurrentCriteriaCql]);\n\n  const genderString = `The patient's gender is ${gender}`;\n  const ageRangeString = `The patient's age is between ${minimumAge} years and ${maximumAge} years`;\n\n  useEffect(() => {\n    const cql = `AgeInYears() >= ${minimumAge} and AgeInYears() < ${maximumAge}`;\n    if (selectedDemoElement === 'Age Range') {\n      if (minimumAge >= 0 && maximumAge > 0 && minimumAge < maximumAge) {\n        setCurrentCriteriaCql({ cql, text: ageRangeString });\n      } else {\n        setCurrentCriteriaCql(null);\n      }\n    }\n  }, [selectedDemoElement, minimumAge, maximumAge, ageRangeString, setCurrentCriteriaCql]);\n\n  useEffect(() => {\n    const cql = `Patient.gender.value = '${gender}'`;\n    if (selectedDemoElement === 'Gender') {\n      if (gender !== '') {\n        setCurrentCriteriaCql({ cql, text: genderString });\n      } else {\n        setCurrentCriteriaCql(null);\n      }\n    }\n  }, [selectedDemoElement, gender, genderString, setCurrentCriteriaCql]);\n\n  return (\n    <>\n      <div className={styles.headerText}>\n        Specify criteria to identify a target population that should receive a recommendation from\n        this artifact. Examples might include an age range, gender, presence of a certain condition,\n        or lab results within a specific range.\n      </div>\n      <div className={styles.elementContainer}>\n        {(selectedElement === '' || selectedDemoElement === '') && (\n          <div className={styles.elementSelect}>\n            <div className={styles.addElementLabel}>\n              <FontAwesomeIcon icon={faPlus} /> Add element\n            </div>\n            <DropDown\n              id=\"Choose Element Type\"\n              label=\"Choose Element Type\"\n              options={elementOptions}\n              onChange={onElementSelected}\n              value={selectedElement}\n            />\n            {selectedElement && (\n              <DropDown\n                id={`Select ${selectedElement} element`}\n                label={`Select ${selectedElement} element`}\n                options={demoElementOptions}\n                onChange={onDemoElementSelected}\n                value={selectedDemoElement}\n              />\n            )}\n          </div>\n        )}\n\n        {!(selectedElement === '' || selectedDemoElement === '') && (\n          <>\n            <span>{selectedDemoElement}</span>\n            <IconButton onClick={handleClose}>\n              <FontAwesomeIcon icon={faTimes} />\n            </IconButton>\n            <hr />\n            {selectedDemoElement === 'Gender' && (\n              <>\n                <span>{genderString}</span>\n                <DropDown\n                  id=\"Select Gender\"\n                  label=\"Gender\"\n                  options={genderOptions}\n                  onChange={onGenderSelected}\n                  value={gender}\n                />\n              </>\n            )}\n            {selectedDemoElement === 'Age Range' && (\n              <>\n                <span>{ageRangeString}</span>\n                <div className={styles.elementField}>\n                  <span className={styles.elementFieldLabel}>Minimum Age:</span>\n                  <TextField type=\"number\" value={minimumAge} onChange={onMinimumAgeChange} />\n                </div>\n                <div className={styles.elementField}>\n                  <span className={styles.elementFieldLabel}>Maximum Age:</span>\n                  <TextField type=\"number\" value={maximumAge} onChange={onMaximumAgeChange} />\n                </div>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(CriteriaBuilder);\n","import { makeStyles, Theme as AugmentedTheme, darken } from '@material-ui/core/styles';\n\nconst toggleButtonCss = {\n  borderRadius: '0%',\n  marginLeft: '1px',\n  width: '50px',\n  height: '50px'\n};\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    display: {\n      display: 'flex'\n    },\n    graph: {\n      width: '100%',\n      height: '100%',\n      'overflow-y': 'scroll'\n    },\n    graphHeader: {\n      display: 'flex',\n      height: '50px',\n      backgroundColor: theme.palette.common.white,\n      marginLeft: '1px'\n    },\n    graphHeaderText: {\n      height: '50px',\n      display: 'flex',\n      width: '100%',\n      backgroundColor: theme.palette.primary.main,\n      alignItems: 'center',\n      color: theme.palette.common.white,\n      fontSize: '1.4em',\n      paddingLeft: '1.5em'\n    },\n    toggleButton: {\n      '&-on': {\n        ...toggleButtonCss,\n        backgroundColor: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: darken(theme.palette.primary.main, 0.1)\n        }\n      },\n      '&-off': {\n        ...toggleButtonCss,\n        backgroundColor: theme.palette.text.primary,\n        '&:hover': {\n          backgroundColor: darken(theme.palette.text.primary, 0.1)\n        }\n      }\n    },\n    toggleIcon: {\n      transform: 'rotate(90deg) scaleY(-1)',\n      color: theme.palette.common.white\n    }\n  }),\n  { name: 'Builder', index: 1 }\n);\n","import React, { FC, useRef, useEffect, memo, useState, useCallback } from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\n\nimport Header from 'components/Header';\nimport Navigation from 'components/Navigation';\nimport Sidebar from 'components/Sidebar';\nimport Graph from 'components/Graph';\nimport CriteriaBuilder from 'components/CriteriaBuilder';\nimport { useTheme } from 'components/ThemeProvider';\nimport useStyles from './styles';\nimport { IconButton } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faProjectDiagram } from '@fortawesome/free-solid-svg-icons';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor';\n\nconst Builder: FC = () => {\n  const styles = useStyles();\n  const { pathway } = useCurrentPathwayContext();\n  const { currentCriteriaNodeId } = useCurrentCriteriaContext();\n  const headerElement = useRef<HTMLDivElement>(null);\n  const theme = useTheme('dark');\n  const [showCriteriaBuilder, setShowCriteriaBuilder] = useState<boolean>(true);\n  const [graphContainerElement, setGraphContainerElement] = useState<HTMLDivElement | null>(null);\n  const [graphContainerWidth, setGraphContainerWidth] = useState<number>(0);\n\n  const toggleShowCriteria = useCallback((): void => {\n    setShowCriteriaBuilder(!showCriteriaBuilder);\n  }, [showCriteriaBuilder]);\n\n  const handleGraphContainerElement = useCallback((reactNode: HTMLDivElement) => {\n    setGraphContainerElement(reactNode);\n    if (reactNode) {\n      setGraphContainerWidth(reactNode.clientWidth);\n    }\n  }, []);\n\n  // Recalculate graph layout if graph container size changes\n  useEffect(() => {\n    if (graphContainerElement) {\n      new ResizeSensor(graphContainerElement, function() {\n        setGraphContainerWidth(graphContainerElement.clientWidth);\n      });\n    }\n  }, [graphContainerElement]);\n\n  // Set the height of the graph container\n  useEffect(() => {\n    const resize = (): void => {\n      if (graphContainerElement && headerElement?.current)\n        graphContainerElement.style.height =\n          window.innerHeight - headerElement.current.clientHeight + 'px';\n    };\n    resize();\n    window.addEventListener('resize', resize);\n    return (): void => window.removeEventListener('resize', resize);\n  }, [pathway, headerElement, graphContainerElement]);\n\n  // Reset criteriaBuilderToggle to true if not currently building criteria\n  useEffect(() => {\n    if (!showCriteriaBuilder && currentCriteriaNodeId === '') setShowCriteriaBuilder(true);\n  }, [currentCriteriaNodeId, showCriteriaBuilder]);\n\n  return (\n    <>\n      <div ref={headerElement}>\n        <Header />\n        <Navigation />\n      </div>\n\n      {pathway && (\n        <div className={styles.display}>\n          <MuiThemeProvider theme={theme}>\n            <Sidebar headerElement={headerElement} />\n          </MuiThemeProvider>\n\n          <div ref={handleGraphContainerElement} className={styles.graph}>\n            {currentCriteriaNodeId !== '' && (\n              <div className={styles.graphHeader}>\n                <div className={styles.graphHeaderText}>\n                  <span>Criteria Builder</span>\n                </div>\n                <IconButton\n                  className={`${styles.toggleButton}-${showCriteriaBuilder ? 'on' : 'off'}`}\n                  onClick={toggleShowCriteria}\n                >\n                  <FontAwesomeIcon className={styles.toggleIcon} icon={faProjectDiagram} />\n                </IconButton>\n              </div>\n            )}\n            {currentCriteriaNodeId !== '' && showCriteriaBuilder ? (\n              <CriteriaBuilder />\n            ) : (\n              <Graph graphContainerWidth={graphContainerWidth} />\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default memo(Builder);\n","import React, { FC, memo, useMemo, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\n\nimport Builder from 'components/Builder';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport { useCurrentPathwayContext } from './CurrentPathwayProvider';\nimport { useCurrentNodeContext } from './CurrentNodeProvider';\n\nconst BuilderRoute: FC = () => {\n  const { id, nodeId } = useParams();\n  const { pathways } = usePathwaysContext();\n  const { setPathway } = useCurrentPathwayContext();\n  const { setCurrentNode } = useCurrentNodeContext();\n  const pathwayId = decodeURIComponent(id);\n  const pathwayIndex = useMemo(() => pathways.findIndex(pathway => pathway.id === pathwayId), [\n    pathwayId,\n    pathways\n  ]);\n  const pathway = pathways[pathwayIndex];\n  const currentNode = pathway?.nodes?.[decodeURIComponent(nodeId)];\n\n  useEffect(() => {\n    setPathway(pathway);\n  }, [pathway, setPathway]);\n\n  useEffect(() => {\n    setCurrentNode(currentNode);\n  }, [currentNode, setCurrentNode]);\n\n  if (pathway == null) return null;\n  if (currentNode == null) return <Redirect to={`/builder/${id}/node/Start`} />;\n\n  return <Builder />;\n};\n\nexport default memo(BuilderRoute);\n","import React, { FC, createContext, useContext, useState, ReactNode } from 'react';\n\ninterface UserContextInterface {\n  user: string | null;\n  setUser: Function;\n}\n\nexport const UserContext = createContext<UserContextInterface>({} as UserContextInterface);\n\ninterface UserProviderProps {\n  children: ReactNode;\n}\n\nexport const UserProvider: FC<UserProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<string | null>(null);\n  return <UserContext.Provider value={{ user, setUser }}>{children}</UserContext.Provider>;\n};\n\nexport const useUser = (): UserContextInterface => useContext(UserContext);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    label: {\n      padding: `0.2em 2em`,\n      textTransform: 'none',\n      fontSize: '1.2em',\n      fontWeight: 100\n    }\n  }),\n  { name: 'Tabs', index: 1 }\n);\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Tab as ReactTab, TabList, TabPanel, Tabs as ReactTabs } from 'react-tabs';\n\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\nimport shortid from 'shortid';\n\ninterface Tab {\n  label: string;\n  component: ReactNode;\n}\n\ninterface TabsProp {\n  tabs: Tab[];\n}\n\nconst Tabs: FC<TabsProp> = ({ tabs }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.root}>\n      <ReactTabs>\n        <TabList>\n          {tabs.map(tab => (\n            <ReactTab key={shortid.generate()}>\n              <Button classes={{ label: styles.label }}>{tab.label}</Button>\n            </ReactTab>\n          ))}\n        </TabList>\n\n        {tabs.map(tab => (\n          <TabPanel key={shortid.generate()}>{tab.component}</TabPanel>\n        ))}\n      </ReactTabs>\n    </div>\n  );\n};\n\nexport default memo(Tabs);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './Loading.module.scss';\n\nconst Loading: FC = () => {\n  return (\n    <div className={styles.root}>\n      <FontAwesomeIcon icon={faSpinner} className={styles.root} size=\"4x\" spin />\n    </div>\n  );\n};\n\nexport default memo(Loading);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    createPathwayButton: {\n      alignSelf: 'flex-end'\n    },\n    pathwayList: {\n      marginTop: '2em'\n    },\n    pathwaysListButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    }\n  }),\n  { name: 'PathwaysList', index: 1 }\n);\n","import React, { FC, useCallback, useRef, memo, FormEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  IconButton\n} from '@material-ui/core';\nimport shortid from 'shortid';\nimport produce from 'immer';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { createNewPathway } from 'utils/builder';\nimport { Pathway } from 'pathways-model';\n\ninterface PathwayModalProps {\n  open: boolean;\n  onClose: () => void;\n  editPathway?: Pathway;\n}\n\nconst PathwayModal: FC<PathwayModalProps> = ({ open, onClose, editPathway }) => {\n  const createNewPathwayMeta = !editPathway;\n  const styles = useStyles();\n  const history = useHistory();\n  const pathwayNameRef = useRef<HTMLInputElement>(null);\n  const pathwayDescRef = useRef<HTMLInputElement>(null);\n  const { addPathway, updatePathway } = usePathwaysContext();\n\n  const closeModal = useCallback(\n    (pathwayId: string): void => {\n      history.push(`/builder/${encodeURIComponent(pathwayId)}/node/Start`);\n      onClose();\n    },\n    [history, onClose]\n  );\n\n  const handleCreateNewPathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      const pathwayId = shortid.generate();\n      const name: string = pathwayNameRef.current?.value ?? '';\n      const description: string = pathwayDescRef.current?.value ?? '';\n      addPathway(createNewPathway(name, description, pathwayId));\n      closeModal(pathwayId);\n    },\n    [addPathway, closeModal]\n  );\n\n  const handleUpdatePathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      if (\n        editPathway &&\n        (pathwayNameRef.current?.value !== editPathway.name ||\n          pathwayDescRef.current?.value !== editPathway.description)\n      ) {\n        const newEditPathway = produce(editPathway, (draftEditPathway: Pathway) => {\n          if (pathwayNameRef.current?.value) draftEditPathway.name = pathwayNameRef.current?.value;\n          draftEditPathway.description = pathwayDescRef.current?.value;\n        });\n        updatePathway(newEditPathway);\n      }\n      onClose();\n    },\n    [updatePathway, editPathway, onClose]\n  );\n\n  let name, description;\n  if (editPathway) {\n    name = editPathway.name;\n    const metaDescription = editPathway.description;\n    if (metaDescription && metaDescription !== '') description = metaDescription;\n  }\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"create-pathway\" fullWidth maxWidth=\"md\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={createNewPathwayMeta ? handleCreateNewPathway : handleUpdatePathway}>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            autoFocus\n            label=\"Pathway Name\"\n            fullWidth\n            required={createNewPathwayMeta}\n            inputRef={pathwayNameRef}\n            defaultValue={createNewPathwayMeta ? undefined : name}\n          />\n\n          <TextField\n            variant=\"outlined\"\n            label=\"Pathway Description\"\n            fullWidth\n            inputRef={pathwayDescRef}\n            defaultValue={createNewPathwayMeta ? undefined : description}\n            multiline\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={createNewPathwayMeta && <FontAwesomeIcon icon={faPlus} />}\n            type=\"submit\"\n          >\n            {createNewPathwayMeta ? 'Create' : 'Save'}\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(PathwayModal);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    container: {\n      display: 'inline-block'\n    },\n    paper: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      borderRadius: '10px',\n      border: '5px solid rgba(74, 74, 74, 0.5)',\n      backgroundColor: theme.palette.common.gray,\n      color: theme.palette.common.white,\n      padding: '0.5em',\n      mozBackgroundClip: 'padding' /* Firefox 3.6 */,\n      webkitBackgroundVlip: 'padding' /* Safari 4? Chrome 6? */,\n      backgroundClip: 'padding-box' /* Firefox 4, Safari 5, Opera 10, IE 9 */\n    },\n    displayText: {\n      marginRight: '4em',\n      whiteSpace: 'nowrap'\n    },\n    buttons: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minWidth: '2.5em',\n      minHeight: '2em',\n      cursor: 'pointer',\n      borderRadius: '15%',\n      marginRight: '0.5em'\n    }\n  }),\n  { name: 'ConfirmedDeletionButton' }\n);\n","import React, { FC, memo } from 'react';\nimport styles from './ActionButton.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\n\ninterface ButtonProps {\n  type: 'accept' | 'decline';\n  onClick?: () => void;\n}\n\ninterface ActionButtonProps extends ButtonProps {\n  size: 'small' | 'large' | 'medium';\n}\n\nconst LargeActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <button\n      className={`${styles.largeActionButton} button ${type === 'decline' && styles.largeDecline}`}\n      type=\"button\"\n      onClick={onClick}\n    >\n      {type[0].toUpperCase() + type.slice(1)}\n    </button>\n  );\n};\n\nconst SmallActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.smallActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n    </div>\n  );\n};\n\nconst MediumActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  const buttonText = {\n    accept: 'Submit',\n    decline: 'Cancel'\n  };\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.mediumActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n      {buttonText[type]}\n    </div>\n  );\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({ type, size, onClick }) => {\n  switch (size) {\n    case 'small':\n      return <SmallActionButton type={type} onClick={onClick} />;\n    case 'large':\n      return <LargeActionButton type={type} onClick={onClick} />;\n    case 'medium':\n      return <MediumActionButton type={type} onClick={onClick} />;\n  }\n};\n\nexport default memo(ActionButton);\n","import React, { FC, memo, useState, MouseEvent, useCallback } from 'react';\n\nimport { Button } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport useStyles from './styles';\n\nimport ActionButton from 'components/ActionButton';\n\ninterface ConfirmedDeletionButtonProps {\n  deleteId: string;\n  deleteMethod: (id: string) => void;\n  deleteType?: string;\n  deleteName?: string;\n}\n\nconst ConfirmedDeletionButton: FC<ConfirmedDeletionButtonProps> = ({\n  deleteId,\n  deleteMethod,\n  deleteType,\n  deleteName\n}) => {\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const displayText =\n    'Are you sure' +\n    (deleteType && deleteMethod\n      ? ' that you would like to delete the ' + deleteName + ' ' + deleteType + ' ?'\n      : '?');\n\n  const onClickHandler = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n    setOpen(true);\n  }, []);\n\n  const onAcceptHandler = useCallback((): void => {\n    deleteMethod(deleteId);\n    setOpen(false);\n    setAnchorEl(null);\n  }, [deleteId, deleteMethod]);\n\n  const onDeclineHandler = useCallback((): void => {\n    setOpen(false);\n    setAnchorEl(null);\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <ClickAwayListener onClickAway={onDeclineHandler}>\n        <Button\n          color=\"secondary\"\n          size=\"small\"\n          startIcon={<FontAwesomeIcon icon={faTrashAlt} />}\n          onClick={onClickHandler}\n        >\n          Delete\n        </Button>\n      </ClickAwayListener>\n      <Popover\n        classes={{ paper: styles.paper }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n      >\n        <div className={styles.displayText}> {displayText} </div>\n        <div className={styles.buttons}>\n          <ActionButton size=\"small\" type=\"accept\" onClick={onAcceptHandler} />\n          <ActionButton size=\"small\" type=\"decline\" onClick={onDeclineHandler} />\n        </div>\n      </Popover>\n    </div>\n  );\n};\n\nexport default memo(ConfirmedDeletionButton);\n","import React, { FC, memo, useState, useCallback, MouseEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faFileDownload } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Link\n} from '@material-ui/core';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport PathwayModal from './PathwayModal';\n\nimport useStyles from './styles';\nimport { Pathway } from 'pathways-model';\nimport { Link as RouterLink } from 'react-router-dom';\nimport ConfirmedDeletionButton from 'components/ConfirmedDeletionButton';\nimport ExportMenu from 'components/elements/ExportMenu';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\n\nconst PathwaysTable: FC = () => {\n  const styles = useStyles();\n  const { pathways, deletePathway } = usePathwaysContext();\n  const { setPathway } = useCurrentPathwayContext();\n  const [open, setOpen] = useState(false);\n  const [editablePathway, setEditablePathway] = useState<Pathway>();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const openEditPathwayModal = useCallback((pathway: Pathway): void => {\n    setOpen(true);\n    setEditablePathway(pathway);\n  }, []);\n\n  const closeEditPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  const openMenu = useCallback(\n    (event: MouseEvent<HTMLButtonElement>): void => {\n      setAnchorEl(event.currentTarget);\n      const pathway = pathways.filter(pathway => pathway.id === event.currentTarget.id);\n      if (pathway.length) setPathway(pathway[0]);\n    },\n    [pathways, setPathway]\n  );\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const deletion = useCallback(\n    (id: string): void => {\n      deletePathway(id);\n    },\n    [deletePathway]\n  );\n\n  return (\n    <div>\n      <TableContainer className={styles.pathwayList}>\n        <Table aria-label=\"pathway list\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Pathway Name</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Last Updated</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {pathways.map(pathway => (\n              <TableRow key={pathway.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Link\n                    component={RouterLink}\n                    to={`/builder/${encodeURIComponent(pathway.id)}`}\n                    color=\"primary\"\n                    underline=\"none\"\n                  >\n                    {pathway.name}\n                  </Link>\n                </TableCell>\n\n                <TableCell>draft</TableCell>\n                <TableCell>2 days ago</TableCell>\n\n                <TableCell align=\"right\">\n                  <Button\n                    className={styles.pathwaysListButton}\n                    color=\"primary\"\n                    size=\"small\"\n                    startIcon={<FontAwesomeIcon icon={faEdit} />}\n                    onClick={(): void => openEditPathwayModal(pathway)}\n                  >\n                    Edit Info\n                  </Button>\n                  <Button\n                    id={pathway.id}\n                    className={styles.pathwaysListButton}\n                    color=\"primary\"\n                    size=\"small\"\n                    startIcon={<FontAwesomeIcon icon={faFileDownload} />}\n                    onClick={openMenu}\n                  >\n                    Export\n                  </Button>\n                  <ConfirmedDeletionButton\n                    deleteType=\"pathway\"\n                    deleteName={pathway.name}\n                    deleteId={pathway.id}\n                    deleteMethod={deletion}\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <ExportMenu anchorEl={anchorEl} closeMenu={closeMenu} />\n      <PathwayModal open={open} onClose={closeEditPathwayModal} editPathway={editablePathway} />\n    </div>\n  );\n};\n\nexport default memo(PathwaysTable);\n","import React, { FC, useCallback, useState, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport Loading from 'components/elements/Loading';\nimport PathwaysTable from './PathwaysTable';\nimport PathwayModal from './PathwayModal';\n\nimport useStyles from './styles';\n\nconst PathwaysList: FC = () => {\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n  const { status } = usePathwaysContext();\n\n  const openNewPathwayModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeNewPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <Button\n        className={styles.createPathwayButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<FontAwesomeIcon icon={faPlus} />}\n        onClick={openNewPathwayModal}\n      >\n        Create Pathway\n      </Button>\n\n      <PathwayModal open={open} onClose={closeNewPathwayModal} />\n      {status === 'loading' ? <Loading /> : <PathwaysTable />}\n    </div>\n  );\n};\n\nexport default memo(PathwaysList);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    buttonRow: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    buildCriteriaButton: {\n      alignSelf: 'flex-end',\n      marginLeft: '20px'\n    },\n    criteriaList: {\n      marginTop: '2em'\n    },\n    editButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    },\n    input: {\n      display: 'none'\n    },\n    chooseFileInput: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    inputButton: {\n      whiteSpace: 'nowrap',\n      marginRight: '1em'\n    },\n    fileName: {\n      fontStyle: 'italic'\n    }\n  }),\n  { name: 'CriteriaList', index: 1 }\n);\n","import React, { FC, memo, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport moment from 'moment';\n\nimport useStyles from './styles';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport ConfirmedDeletionButton from 'components/ConfirmedDeletionButton';\n\nconst CriteriaTable: FC = () => {\n  const styles = useStyles();\n  const { criteria, deleteCriteria } = useCriteriaContext();\n\n  const renderDate = (datetime: number): string => {\n    return moment(datetime).fromNow();\n  };\n\n  const deletion = useCallback(\n    (id: string): void => {\n      deleteCriteria(id);\n    },\n    [deleteCriteria]\n  );\n\n  return (\n    <TableContainer className={styles.criteriaList}>\n      <Table aria-label=\"criteria list\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Criteria Name</TableCell>\n            <TableCell>Version</TableCell>\n            <TableCell>Added</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {criteria.map(c => (\n            <TableRow key={c.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {c.label}\n              </TableCell>\n              <TableCell>{c.version}</TableCell>\n              <TableCell>{renderDate(c.modified)}</TableCell>\n\n              <TableCell align=\"right\">\n                <Button\n                  className={styles.editButton}\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faEdit} />}\n                >\n                  Edit\n                </Button>\n                <ConfirmedDeletionButton\n                  deleteType=\"criterion\"\n                  deleteName={c.label}\n                  deleteId={c.id}\n                  deleteMethod={deletion}\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default memo(CriteriaTable);\n","import React, { FC, useCallback, useRef, memo, FormEvent, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileImport, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Input,\n  IconButton\n} from '@material-ui/core';\n\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport useStyles from './styles';\n\ninterface ImportCriteriaModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst ImportCriteriaModal: FC<ImportCriteriaModalProps> = ({ open, onClose }) => {\n  const styles = useStyles();\n  const [fileName, setFileName] = useState<string>('');\n  const importFileRef = useRef<HTMLInputElement>(null);\n\n  const { addCriteria } = useCriteriaContext();\n\n  const selectFile = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      const files = importFileRef?.current?.files;\n      if (files?.length) addCriteria(files[0]);\n      onClose();\n      setFileName('');\n    },\n    [addCriteria, onClose]\n  );\n\n  const handleChooseFile = useCallback(() => {\n    if (importFileRef?.current?.files?.[0]) setFileName(importFileRef.current.files[0].name);\n  }, [importFileRef]);\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"import-criteria\" fullWidth maxWidth=\"sm\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={selectFile}>\n        <DialogContent>\n          <div className={styles.chooseFileInput}>\n            <Input\n              id=\"choose-file-input\"\n              className={styles.input}\n              inputRef={importFileRef}\n              type=\"file\"\n              inputProps={{ accept: '.json' }}\n              onChange={handleChooseFile}\n            />\n\n            <label htmlFor=\"choose-file-input\">\n              <Button\n                className={styles.inputButton}\n                variant=\"contained\"\n                color=\"primary\"\n                component=\"span\"\n              >\n                Choose File\n              </Button>\n            </label>\n\n            <div className={styles.fileName}>\n              {fileName ? <span>{fileName}</span> : <span>Choose ELM file to import.</span>}\n            </div>\n          </div>\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faFileImport} />}\n            type=\"submit\"\n          >\n            Import\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(ImportCriteriaModal);\n","import React, { FC, memo, useState, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTools, faFileImport } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport Loading from 'components/elements/Loading';\nimport CriteriaTable from './CriteriaTable';\nimport ImportCriteriaModal from './ImportCriteriaModal';\n\nimport useStyles from './styles';\n\nconst CriteriaList: FC = () => {\n  const styles = useStyles();\n  const { status } = usePathwaysContext();\n\n  const [open, setOpen] = useState<boolean>(false);\n  const openImportModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeImportModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.buttonRow}>\n        <Button\n          className={styles.buildCriteriaButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={faFileImport} />}\n          onClick={openImportModal}\n        >\n          Import Library\n        </Button>\n        <Button\n          className={styles.buildCriteriaButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={faTools} />}\n        >\n          Build Criteria\n        </Button>\n      </div>\n\n      <ImportCriteriaModal open={open} onClose={closeImportModal} />\n\n      {status === 'loading' ? <Loading /> : <CriteriaTable />}\n    </div>\n  );\n};\n\nexport default memo(CriteriaList);\n","import React, { FC, memo } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from 'components/Header';\n\nimport BuilderRoute from './BuilderRoute';\nimport ThemeProvider from './ThemeProvider';\nimport { PathwaysProvider } from './PathwaysProvider';\nimport { UserProvider } from './UserProvider';\nimport { CriteriaProvider } from './CriteriaProvider';\nimport Tabs from './Tabs';\nimport PathwaysList from './PathwaysList';\nimport CriteriaList from './CriteriaList';\nimport { CurrentPathwayProvider } from './CurrentPathwayProvider';\nimport { CurrentNodeProvider } from './CurrentNodeProvider';\nimport { CurrentCriteriaProvider } from './CurrentCriteriaProvider';\nimport { SnackbarProvider } from './SnackbarProvider';\nimport { CriteriaBuilderProvider } from './CriteriaBuilderProvider';\n\nconst App: FC = () => {\n  return (\n    <ThemeProvider theme=\"light\">\n      <UserProvider>\n        <CurrentPathwayProvider>\n          <PathwaysProvider>\n            <CurrentNodeProvider>\n              <CriteriaProvider>\n                <SnackbarProvider>\n                  <CurrentCriteriaProvider>\n                    <CriteriaBuilderProvider>\n                      <Router>\n                        <Switch>\n                          <Route path=\"/builder/:id/node/:nodeId\">\n                            <BuilderRoute />\n                          </Route>\n                          <Route path=\"/builder/:id\">\n                            <BuilderRoute />\n                          </Route>\n                          <Route path=\"/\">\n                            <Header />\n                            <Tabs\n                              tabs={[\n                                { label: 'Pathway', component: <PathwaysList /> },\n                                { label: 'Criteria', component: <CriteriaList /> }\n                              ]}\n                            />\n                          </Route>\n                        </Switch>\n                      </Router>\n                    </CriteriaBuilderProvider>\n                  </CurrentCriteriaProvider>\n                </SnackbarProvider>\n              </CriteriaProvider>\n            </CurrentNodeProvider>\n          </PathwaysProvider>\n        </CurrentPathwayProvider>\n      </UserProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default memo(App);\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { enableMapSet } from 'immer';\n\nimport App from 'components/App';\n\nimport './styles/index.scss';\n\n// Enable use of immer produce on maps\nenableMapSet();\n\n// Enable why did you render for development mode\n// Will automatically track all memoized components\nif (process.env.NODE_ENV === 'development') {\n  const whyDidYouRender = require('@welldone-software/why-did-you-render');\n  whyDidYouRender(React, {\n    trackAllPureComponents: true\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__38uoJ\",\"icon\":\"Node_icon__354W4\",\"actionable\":\"Node_actionable__bHXKd\",\"expandedNode\":\"Node_expandedNode__1ar-A\",\"childNotActionable\":\"Node_childNotActionable__1bfBq\",\"childActionable\":\"Node_childActionable__SwUjD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoTable\":\"ExpandedNode_infoTable__3v2tx\",\"descTitle\":\"ExpandedNode_descTitle__15ki8\",\"desc\":\"ExpandedNode_desc__3Xdkf\",\"externalLink\":\"ExpandedNode_externalLink__1Mr1x\",\"defaultTextButton\":\"ExpandedNode_defaultTextButton__2Bvq6\",\"commentsForm\":\"ExpandedNode_commentsForm__3Q20Y\",\"footer\":\"ExpandedNode_footer__FOCYI\",\"comments\":\"ExpandedNode_comments__9q-JW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3T0lc\",\"homeLink\":\"Header_homeLink__2ew4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Loading_root__3b6qy\"};"],"sourceRoot":""}