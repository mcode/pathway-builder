{"version":3,"sources":["assets/camino-builder-logo-light-bg.png","assets/example-pathway.png","assets/mitre.png","assets/mcode.png","components/ActionButton/ActionButton.module.scss","immer.js","components/CurrentCriteriaProvider.tsx","styles/theme.tsx","components/ThemeProvider.tsx","components/Header/Header.tsx","components/Navigation/styles.tsx","hooks/useRefUndoState.ts","utils/backend.ts","components/CurrentPathwayProvider.tsx","utils/nodeUtils.ts","utils/export.ts","utils/cpg.ts","utils/CaminoExporter.ts","utils/builder.ts","components/AlertProvider.tsx","hooks/usePathways.tsx","hooks/useCriteria.tsx","components/elements/ExportMenu/ExportMenu.tsx","components/Navigation/Navigation.tsx","components/Sidebar/styles.tsx","components/elements/DropDown/DropDown.tsx","components/SnackbarProvider.tsx","components/Sidebar/DeleteSnackbar.tsx","hooks/useCurrentNodeStatic.tsx","components/Sidebar/ConnectNodeButton.tsx","components/Sidebar/Sidebar.tsx","components/Sidebar/SidebarHeader.tsx","components/Sidebar/SidebarButton.tsx","utils/regexes.ts","engine/cql-to-elm.ts","components/Sidebar/ActionNodeEditor.tsx","components/Sidebar/ReferenceNodeEditor.tsx","components/CriteriaBuilderProvider.tsx","utils/criteria.ts","components/Sidebar/BranchTransition.tsx","components/Sidebar/OutlinedDiv.tsx","components/Sidebar/DeleteModal.tsx","components/Sidebar/TransitionEditor.tsx","components/DagreGraph/useCoordinatesCalculator.ts","components/DagreGraph/GraphProvider.tsx","components/DagreGraph/GraphEdges.styles.ts","components/DagreGraph/GraphEdges.tsx","components/DagreGraph/NodeDetails.styles.ts","components/DagreGraph/NodeDetails.tsx","components/DagreGraph/NodeIcon.styles.ts","components/DagreGraph/NodeIcon.tsx","components/DagreGraph/Node.styles.ts","components/DagreGraph/Node.tsx","components/DagreGraph/useExpandedState.ts","components/DagreGraph/useRedirectToNode.ts","components/DagreGraph/GraphNodes.tsx","components/DagreGraph/GraphRoot.styles.ts","components/DagreGraph/GraphRoot.tsx","components/DagreGraph/DagreGraph.tsx","components/CriteriaBuilder/styles.tsx","components/CriteriaBuilder/CriteriaBuilder.tsx","components/Builder/styles.tsx","hooks/useNodeId.ts","components/Builder/Builder.tsx","components/elements/Loading/Loading.tsx","hooks/usePathwayId.ts","components/BuilderRoute.tsx","components/UserProvider.tsx","components/Tabs/styles.tsx","components/Tabs/Tabs.tsx","components/PathwaysList/styles.tsx","components/PathwaysList/PathwayModal.tsx","components/ActionButton/ActionButton.tsx","components/elements/ConfirmationPopover/styles.tsx","components/elements/ConfirmationPopover/ConfirmationPopover.tsx","components/ConfirmedDeletionButton/ConfirmedDeletionButton.tsx","components/PathwaysList/PathwaysTable.tsx","components/FileImportModal/styles.tsx","components/FileImportModal/FileImportModal.tsx","hooks/useListCheckbox.tsx","components/PathwaysList/PathwaysList.tsx","components/CriteriaList/styles.tsx","components/CriteriaList/CriteriaTable.tsx","components/CriteriaList/CriteriaList.tsx","components/App.tsx","components/Auth/styles.tsx","components/elements/Modal/styles.tsx","components/elements/Modal/Modal.tsx","components/elements/TextInput/styles.tsx","components/elements/TextInput/TextInput.tsx","components/Auth/LoginModal.tsx","components/Auth/ResetModal.tsx","components/Auth/LinkSentModal.tsx","components/Auth/NewPasswordModal.tsx","components/Auth/PasswordResetModal.tsx","components/Auth/SignupModal.tsx","components/Auth/AuthModalProvider.tsx","components/Auth/Landing.tsx","components/Auth/LandingHeader.tsx","components/Auth/LandingBody.tsx","components/Auth/LandingFooter.tsx","components/StaticApp/Header/styles.tsx","components/StaticApp/Header/Header.tsx","components/StaticApp/Services/Services.tsx","hooks/useRefState.ts","components/StaticApp/CriteriaProvider.tsx","components/StaticApp/PathwaysProvider.tsx","components/StaticApp/CurrentPathwayProvider.tsx","components/StaticApp/elements/ExportMenu/ExportMenu.tsx","components/StaticApp/Navigation/Navigation.tsx","components/StaticApp/Sidebar/ConnectNodeButton.tsx","components/StaticApp/Sidebar/Sidebar.tsx","components/StaticApp/Sidebar/SidebarHeader.tsx","components/StaticApp/Sidebar/ActionNodeEditor.tsx","components/StaticApp/Sidebar/ReferenceNodeEditor.tsx","components/StaticApp/Sidebar/BranchTransition.tsx","components/StaticApp/Sidebar/TransitionEditor.tsx","components/StaticApp/DagreGraph/useRedirectToNode.ts","components/StaticApp/DagreGraph/GraphNodes.tsx","components/StaticApp/DagreGraph/DagreGraph.tsx","components/StaticApp/Builder/Builder.tsx","components/StaticApp/BuilderRoute.tsx","components/StaticApp/PathwaysList/PathwayModal.tsx","components/StaticApp/PathwaysList/PathwaysTable.tsx","components/StaticApp/PathwaysList/PathwaysList.tsx","components/StaticApp/CriteriaList/CriteriaTable.tsx","components/StaticApp/CriteriaList/CriteriaList.tsx","components/StaticApp/StaticApp.tsx","index.js","components/Header/Header.module.scss","assets/camino-logo-dark.png","components/elements/Loading/Loading.module.scss","utils/ConfigManager.js"],"names":["module","exports","enableAllPlugins","CurrentCriteriaContext","createContext","CurrentCriteriaProvider","memo","children","useState","currentCriteriaNodeId","setCurrentCriteriaNodeId","currentCriteria","setCurrentCriteria","buildCriteriaSelected","setBuildCriteriaSelected","criteriaName","setCriteriaName","resetCurrentCriteria","useCallback","Provider","value","useCurrentCriteriaContext","useContext","variables","spacing","globalPadding","colors","white","black","red","redDark","blue","blueDark","blueLighter","gray","grayMedium","grayBlue","grayBlueDark","grayLight","grayLighter","grayLightest","grayDark","grayVeryDark","green","typography","fontFamily","join","materialUiOverridesBase","MuiButton","root","borderRadius","height","backgroundColor","color","contained","label","fontWeight","iconSizeMedium","fontSize","iconSizeSmall","MuiTableHead","MuiTableCell","head","padding","borderBottom","MuiFormControl","margin","MuiFormLabel","fontStyle","MuiInputBase","input","transitionDelay","transitionProperty","MuiTooltip","tooltip","arrow","MuiOutlinedInput","MuiSelect","icon","MuiPaper","rounded","MuiDialogTitle","display","justifyContent","MuiDialogContent","flexDirection","lineHeight","overflowY","MuiDialogActions","marginBottom","MuiCard","overflow","MuiIconButton","sizeSmall","width","materialUiOverridesDark","borderColor","notchedOutline","MuiMenuItem","paletteBase","primary","main","secondary","error","common","background","default","text","grey","800","lightTheme","createMuiTheme","palette","overrides","darkTheme","deepmerge","projectorTheme","getTheme","theme","useProjector","ThemeContext","useThemeToggle","toggleTheme","useTheme","ThemeProvider","setUseProjector","muiTheme","currentUseProjector","anchorEl","setAnchorEl","openMenu","event","currentTarget","closeMenu","handleToggleTheme","className","styles","header","to","homeLink","onClick","src","logo","alt","aria-controls","aria-haspopup","faCog","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","makeStyles","alignItems","backButton","navigationIcons","cursor","pathwayName","marginLeft","name","index","useRefUndoState","initialValue","useUndo","state","setState","set","resetState","reset","undoState","undo","redoState","redo","canUndo","canRedo","stateRef","useRef","present","useEffect","current","baseUrl","config","get","deletePathway","axios","delete","updatePathway","pathway","put","deleteCriteria","updateCriteria","criteria","readFile","file","callback","reader","FileReader","onload","readAsText","CurrentPathwayContext","CurrentPathwayProvider","pathwayRef","canUndoPathway","canRedoPathway","_undoPathway","_redoPathway","_resetPathway","_setPathway","cache","useQueryCache","undoPathway","redoPathway","resetCurrentPathway","setCurrentPathway","useMutation","onSettled","invalidateQueries","mutateUpdatePathway","keyName","onKeyDown","useCurrentPathwayContext","getNodeType","node","type","isActionNode","isBranchNode","resourceNameConversion","MedicationRequest","ServiceRequest","CarePlan","nodeTypeOptions","findParent","nodes","childNodeKey","parents","findParents","length","Object","keys","forEach","parentNodeKey","transitions","transition","push","deepCopyPathway","JSON","parse","stringify","copyNode","newKey","newNode","deepCopyPathwayNode","key","willOrphanChild","transitionCount","nodeKey","canDeleteNode","canDeleteAllTransitions","redirect","pathwayId","history","demo","url","encodeURIComponent","location","pathname","getConnectableNodes","rootNode","connectableNodes","ancestorNodes","getAncestorNodes","rootNodeKey","currNodeKey","ancestors","previousNodes","currNode","some","concat","rootNodeConnectsToNode","nodeIsAncestor","getCodeableConceptFromAction","action","codeableConcept","resource","resourceType","medicationCodeableConcept","code","coding","system","title","constructCqlLibrary","libraryName","includedCqlLibraries","referencedDefines","builderDefines","includes","entries","map","details","version","definesList","srcLibrary","statement","cql","defines","LIBRARY_DRAFT","R4","LibraryStatusKind","_draft","PLANDEFINITION_DRAFT","PlanDefinitionStatusKind","ACTIVITYDEFINITION_DRAFT","ActivityDefinitionStatusKind","BUNDLE_TRANSACTION","BundleTypeKind","_transaction","BUNDLE_PUT","Bundle_RequestMethodKind","_put","CONDITION_APPLICABILITY","PlanDefinition_ConditionKindKind","_applicability","EXPRESSION_CQL","ExpressionLanguageKind","_textCql","CHILD_RELATIONSHIP","PlanDefinition_RelatedActionRelationshipKind","_beforeStart","PARENT_RELATIONSHIP","_afterEnd","CPGExporter","pathways","bundle","nestedBranch","libraries","activityDefinitions","pathwayCopy","cleanPathway","this","entry","strategyDefinition","createPlanDefinition","uuidv4","_export","createBundleEntry","referencedFrom","condition","pathwayAction","createAction","addRelatedAction","find","createLibraries","library","cpgRecommendation","description","queue","visited","shift","parentKey","filter","n","unshift","convertNode","definitionCanonical","formatUrl","l","data","content","activityId","kind","activityDefinition","meta","profile","extension","valueCode","substring","status","experimental","date","Date","toISOString","publisher","productCodeableConcept","setActivityDefinitionId","libraryId","planDefinition","mainLibrary","nodeId","criteriaSource","c","elm","libraryIdentifier","identifier","cqlLibraries","libName","libCql","builder","additionalLibraries","newId","contentType","btoa","libraryCql","navigational","preconditions","parent","descriptionDetails","createActivityDefinition","cpgAction","getActivityDefinitionId","createCondition","parentAction","tempParentKey","findAllChildActionNodes","childActionNodes","t","childKey","addActionToPlanDefinition","isReferenceNode","referencedPathway","referenceId","msg","alert","console","undefined","getTransition","expression","language","findAction","actions","foundAction","relatedId","relationship","relatedAction","actionId","fullUrl","request","method","definition","newNodes","allTransitions","findAllTransitions","subPathway","rootKey","oldKeyToNewKey","currentKey","currentNewKey","shortid","generate","findSubPathway","CaminoExporter","startsWith","addtlLibraries","values","createNewPathway","Start","updatePathwayCriteriaSources","updated","criteriaIds","crit","newPathway","produce","draftPathway","nodeIndex","transitionIndex","split","addCriteriaSource","downloadPathway","pathwaysToExport","allPathways","cpg","zip","JSZip","path","exportPathway","generateAsync","then","downloadFile","pathwayString","pathwayBlob","Blob","Promise","resolve","fileName","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","pathwayWithElm","setNavigationalElm","schemaIdentifier","usings","def","localIdentifier","uri","localId","locator","statements","context","operand","dataType","valueSets","codes","codeSystems","mergeElm","elmStatement","getElmStatement","draftElmStatement","generateNavigationalElm","pathwayToExport","export","additionalElm","using","include","valueSet","codesystem","defaultStatementNames","createNode","addNode","setNodeLabel","setNodeReference","referenceLabel","setNodeType","nodeType","setNodeAction","makeNodeAction","makeNodeBranch","makeNodeReference","addTransition","startNodeKey","endNodeKey","setTransitionCondition","transitionId","foundTransition","setActionNodeElm","setTransitionConditionDescription","setActionCode","draftAction","setActionCodeSystem","codeSystem","setActionDescription","draftaction","setActionTitle","setActionResourceDisplay","createCQL","cqlId","replace","codesystemStatement","returnStatement","retrieveStatement","defineStatement","escape","removeNode","filterTransition","removeTransitionCondition","removeTransition","BackendAlert","message","closeAlert","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","elevation","variant","severity","AlertContext","AlertProvider","openAlert","setOpenAlert","alertText","setAlertText","handleCloseAlert","useAlertContext","usePathways","setPathway","useQuery","fetch","res","json","ok","catch","isLoading","useCriteria","setCriteria","ExportMenu","exportCPG","getContentAnchorEl","ContextualExportMenu","Navigation","useStyles","useHistory","handleGoBack","IconButton","aria-label","faChevronLeft","Tooltip","placement","disabled","faUndo","faRedo","faEllipsisH","minWidth","formControl","referenceDropdown","referenceChevron","divider","headerLabelStart","displayText","sidebarHeader","sidebarHeaderGroup","sidebarHeaderButton","headerLabelGroup","headerLabel","headerLabelText","editIcon","sidebarButtonGroup","sidebarButtonGroupExtraMargin","sidebarButton","marginRight","sidebarButtonText","outlinedDiv","outlinedDivError","toggleSidebar","float","cancelButton","alignSelf","marginTop","editButton","buildCriteriaContainer","buildCriteriaText","saveButton","transitionContainer","dividerHeader","textTransform","paddingLeft","dialogCloseButton","dialogContent","dialogContentText","alertIcon","connectDropdown","flexWrap","alignContent","connectText","cancelButtonDropdown","border","criteriaText","options","onChange","autocomplete","handleSetSelected","target","handleAutoSelected","getValue","option","Autocomplete","fullWidth","popupIcon","faCaretDown","style","getOptionLabel","renderOption","renderInput","params","TextField","FormControl","InputLabel","htmlFor","Select","MenuProps","transformOrigin","displayEmpty","SnackbarContext","SnackbarProvider","openSnackbar","setOpenSnackbar","snackbarText","setSnackbarText","handleCloseSnackbar","useSnackbarContext","Fragment","Button","size","faTimes","useCurrentNodeStatic","useParams","currentNodeId","decodeURIComponent","currentNode","currentNodeStatic","setOpen","optionsAvailable","connectToNode","showDropdown","buttonName","buttonIcon","faLevelDownAlt","buttonText","hasTooltip","tooltipTitle","isExpanded","setIsExpanded","sidebarContainerElement","changeNodeType","addPathwayNode","ref","isTransition","faPlus","faChevronRight","displayTransitions","showInput","setShowInput","openTooltip","setOpenTooltip","openDelete","setOpenDelete","inputRef","nodeLabel","goToParentNode","redirectToNode","changeNodeLabel","handleShowInput","deleteNode","deleteTransition","openDeleteModal","closeDeleteModal","handleOpenTooltip","handleCloseTooltip","handleKeyPress","deleteNodeDisabled","deleteTransitionDisabled","deleteDisabled","titleText","Input","onBlur","onKeyPress","defaultValue","autoFocus","onFocus","select","clsx","faEdit","onOpen","faTrashAlt","onDelete","extraMargin","buttonColor","ConditionalTooltip","startIcon","extractMultipartBoundary","extractMultipartFileName","extractJSONContent","convertBasicCQL","headers","Accept","body","codeSystemOptions","addActionCQL","currentNodeKey","changeCode","resetDisplay","changeDescription","changeTitle","selectCodeSystem","validateFunction","onEnter","e","changeNodeTypeEnabled","inputProps","faCheckCircle","pathwayOptions","showReference","pathwayReferenceId","selectPathwayReference","CriteriaBuilderContext","CriteriaBuilderProvider","selectedElement","setSelectedElement","selectedDemoElement","setSelectedDemoElement","gender","setGender","minimumAge","setMinimumAge","maximumAge","setMaximumAge","resetCriteriaBuilder","setCriteriaBuilder","buildCriteria","min","max","useCriteriaBuilderContext","DEFAULT_ELM_STATEMENTS","elmLibraryToCriteria","custom","allElmStatements","elmStatements","includesTypes","s","resultTypeName","labelTitle","modified","now","cqlToCriteria","formdata","FormData","i","cqlLibrary","append","boundary","result","exec","elmLibraries","reduce","oldArray","line","elmName","convertCQL","elmLibrary","dependencies","flat","jsonToCriteria","rawElm","builderModelToCriteria","builderCriteria","transitionRef","useCriteriaSelected","setUseCriteriaSelected","criteriaOptions","useMemo","criteriaAvailable","displayCriteria","criteriaDescription","criteriaIsValid","criteriaDisplayIsValid","hasCriteria","transitionSelected","builderElements","dislayEditCriteria","handleUseCriteria","selectCriteriaSource","criteriaId","selectedCriteria","setCriteriaDisplay","criteriaDisplay","handleCriteriaName","handleBuildCriteria","handleEditCriteria","handleBuildCriteriaCancel","handleBuildCriteriaSave","newCriteria","addBuilderCriteria","faThList","helperText","faTools","FormControlLabel","Box","control","Checkbox","checked","faSave","InputComponent","OutlinedDiv","multiline","InputLabelProps","shrink","InputProps","inputComponent","classes","Dialog","aria-labelledby","maxWidth","DialogTitle","disableTypography","DialogContent","faExclamationCircle","DialogActions","transitionKey","transitionNode","Card","raised","useCoordinatesCalculator","edges","coordinates","setCoordinates","updateCoordinates","graph","graphWidth","xOffset","x","xOffsetCorrection","newCoordinates","y","Math","abs","edgeKey","edge","edgeName","v","w","points","point","isNaN","start","end","GraphContext","SetGraphWidthContext","GraphCoordinatesContext","createGraph","g","dagre","graphlib","Graph","setGraph","setDefaultEdgeLabel","GraphProvider","useRafState","setWidth","reflowRequired","setReflowRequired","reflow","graphValue","layout","useUpdateEffect","useGraphProvider","useGraphCoordinates","position","top","left","zIndex","fill","stroke","props","isActive","LabelTooltip","labelText","isEnabled","Edge","generatePathString","lines","isTruncated","truncated","allLines","slice","trimmedLine","trim","TRUNCATION_SIZE","d","strokeWidth","markerEnd","dy","edgeCoordinates","markerWidth","markerHeight","refX","refY","orient","edgeId","table","verticalAlign","textAlign","overflowWrap","externalLink","Field","BranchNodeContents","ActionNodeFields","actionNode","rel","faExternalLinkAlt","ReferenceNodeFields","referenceNode","pathwayNode","isStartNode","faPlay","faPrescriptionBottleAlt","faSyringe","faBookMedical","faMicroscope","minHeight","isActionable","nodeTitle","flex","nodeContent","clickable","createTransitionLabel","getBoundingClientRect","element","dimensions","ceil","xCoordinate","yCoordinate","openNode","onClickHandler","nodeRef","nodeStyle","useLifecycles","setNode","setEdge","transitionNodes","Set","outEdges","has","removeEdge","useExpandedState","lastSelectedNode","expanded","setExpanded","toggleExpanded","nodeName","prevState","closeNode","useRedirectToNode","interactive","expandedNodes","nodeCoordinates","GraphRoot","graphRef","setGraphWidth","b","graphHeight","rootStyles","graphElement","parentElement","sensor","ResizeSensor","detach","elementContainer","elementSelect","addElementLabel","headerText","elementField","elementFieldLabel","onMinimumAgeChange","parseInt","onMaximumAgeChange","handleClose","genderString","ageRangeString","toggleButtonCss","graphHeader","graphHeaderText","toggleButton","darken","toggleIcon","transform","useNodeId","showCriteriaBuilder","setShowCriteriaBuilder","toggleShowCriteria","faProjectDiagram","faSpinner","spin","usePathwayId","UserContext","UserProvider","user","setUser","tabs","tab","component","createPathwayButton","pathwayList","pathwaysListButton","buttonRow","tableTop","selectionOptions","selectionIcon","deleteIcon","editPathway","createNewPathwayMeta","pathwayNameRef","pathwayDescRef","closeModal","mutateAddPathway","handleCreateNewPathway","preventDefault","handleUpdatePathway","newEditPathway","draftEditPathway","metaDescription","onSubmit","required","LargeActionButton","largeActionButton","largeDecline","toUpperCase","SmallActionButton","accept","decline","smallActionButton","data-testid","faCheck","MediumActionButton","mediumActionButton","container","paper","mozBackgroundClip","webkitBackgroundVlip","backgroundClip","whiteSpace","buttons","ConfirmationPopover","React","forwardRef","onConfirm","onDecline","onAcceptHandler","onDeclineHandler","ClickAwayListener","onClickAway","Children","only","child","cloneElement","Popover","deleteId","deleteMethod","deleteType","deleteName","itemSelected","handleSelectClick","editablePathway","setEditablePathway","openEditPathwayModal","closeEditPathwayModal","mutateDelete","deletion","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","Link","RouterLink","underline","align","faFileDownload","chooseFileInput","inputButton","onSelectFile","allowedFileType","loading","setFileName","importFileRef","selectFile","files","handleChooseFile","faFileImport","endIcon","useListCheckbox","listItems","selected","setSelected","numSelected","rowCount","indeterminate","difference","Array","from","item","currentSelected","diff","handleSelectAllClick","add","importPathwayOpen","_setImportPathwayOpen","importLoading","setImportLoading","openNewPathwayModal","closeNewPathwayModal","openImportPathwayModal","closeImportPathwayModal","mutateAddCriteria","addCqlCriteria","criteriaToAdd","dbCriteria","loadPathwayLibraries","listOfPromises","lib","all","addPathway","rawContent","tempPathway","handleDelete","setPathwaysToExport","handleExportAll","faFileExport","buildCriteriaButton","criteriaList","datetime","moment","fromNow","openImportModal","closeImportModal","addCriteria","endsWith","loadAsync","zipFiles","zipFile","async","fileContents","QueryCache","queryCache","landing","logoLink","headerButtons","authButton","signupButton","loginButton","tryItButton","boxShadow","landingBody","landingContent","mainText","subText","link","socialMedia","iconGithub","iconEmail","iconEmailCircle","exampleImage","footer","footerLogo","mitreLogo","mcodeLogo","modalHeader","closeIcon","modalText","submitButton","handleShowModal","handleCloseModal","handleSaveModal","headerTitle","headerSubtitle","footerText","hasSecondaryButton","submitButtonText","textInput","placeholder","OutlinedInput","startAdornment","InputAdornment","onSignup","onReset","logIn","signUp","requestReset","faEnvelope","faLock","onLogin","onLinkSent","onPasswordReset","faBuilding","AuthModals","openLogin","openSignup","openReset","openLinkSent","openNewPassword","openPasswordReset","switchToLogin","switchToReset","switchToSignup","switchToLinkSent","switchToPasswordReset","closeLoginModal","closeSignupModal","closeResetModal","closeLinkSentModal","closeNewPasswordModal","closePasswordResetModal","AuthModalContext","AuthModalProvider","setOpenLogin","setOpenSignup","setOpenReset","setOpenLinkSent","setOpenNewPassword","setOpenPasswordReset","openLoginModal","openSignupModal","useAuthModalContext","faGithub","example","mitre","mcode","textDecoration","DemoBanner","styleOverrides","getObject","typedFetch","raw","response","useGetService","setResult","listOfFiles","f","list","payload","useRefState","CriteriaContext","CriteriaProvider","rawCql","listOfLists","addElmCriteria","matchingCriteria","useCriteriaContext","PathwaysContext","PathwaysProvider","pathwaysRef","setPathways","service","servicePayload","currentPathways","addPathwayFromFile","findIndex","usePathwaysContext","pathwayIndex","pathwayIds","ReactDOM","render","exact","Landing","App","StaticApp","getElementById","global","CONFIG","parts","conf"],"mappings":"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","file":"static/js/main.58440c02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/camino-builder-logo-light-bg.a225ed53.png\";","module.exports = __webpack_public_path__ + \"static/media/example-pathway.f89d4f23.png\";","module.exports = __webpack_public_path__ + \"static/media/mitre.54eb1f7d.png\";","module.exports = __webpack_public_path__ + \"static/media/mcode.644320c4.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectButton\":\"ActionButton_selectButton___qB5R\",\"accept\":\"ActionButton_accept__28b2D\",\"decline\":\"ActionButton_decline__zz-vG\",\"smallActionButton\":\"ActionButton_smallActionButton__1bPWu\",\"largeActionButton\":\"ActionButton_largeActionButton__blRdA\",\"largeDecline\":\"ActionButton_largeDecline__wz9Zw\",\"mediumActionButton\":\"ActionButton_mediumActionButton__3EpOp\"};","import { enableAllPlugins } from 'immer';\n\n// enables immer to run in IE11\nenableAllPlugins();\n","import React, {\n  createContext,\n  FC,\n  ReactNode,\n  memo,\n  useState,\n  useContext,\n  useCallback\n} from 'react';\n\nimport { BuilderModel } from 'criteria-model';\n\ninterface CurrentCriteriaContextInterface {\n  buildCriteriaSelected: boolean;\n  currentCriteriaNodeId: string;\n  currentCriteria: BuilderModel | null;\n  criteriaName: string;\n  setBuildCriteriaSelected: (buildCriteriaSelect: boolean) => void;\n  setCurrentCriteriaNodeId: (id: string) => void;\n  setCurrentCriteria: (currentCriteria: BuilderModel | null) => void;\n  setCriteriaName: (criteriaName: string) => void;\n  resetCurrentCriteria: () => void;\n}\n\nexport const CurrentCriteriaContext = createContext<CurrentCriteriaContextInterface>(\n  {} as CurrentCriteriaContextInterface\n);\n\ninterface CurrentCriteriaProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrentCriteriaProvider: FC<CurrentCriteriaProviderProps> = memo(({ children }) => {\n  const [currentCriteriaNodeId, setCurrentCriteriaNodeId] = useState<string>('');\n  const [currentCriteria, setCurrentCriteria] = useState<BuilderModel | null>(null);\n  const [buildCriteriaSelected, setBuildCriteriaSelected] = useState<boolean>(false);\n  const [criteriaName, setCriteriaName] = useState<string>('');\n\n  const resetCurrentCriteria = useCallback(() => {\n    setCurrentCriteriaNodeId('');\n    setCurrentCriteria(null);\n    setBuildCriteriaSelected(false);\n    setCriteriaName('');\n  }, [setCurrentCriteriaNodeId, setCurrentCriteria, setBuildCriteriaSelected, setCriteriaName]);\n\n  return (\n    <CurrentCriteriaContext.Provider\n      value={{\n        buildCriteriaSelected,\n        setBuildCriteriaSelected,\n        currentCriteriaNodeId,\n        setCurrentCriteriaNodeId,\n        currentCriteria: currentCriteria,\n        setCurrentCriteria: setCurrentCriteria,\n        criteriaName,\n        setCriteriaName,\n        resetCurrentCriteria\n      }}\n    >\n      {children}\n    </CurrentCriteriaContext.Provider>\n  );\n});\n\nexport const useCurrentCriteriaContext = (): CurrentCriteriaContextInterface =>\n  useContext(CurrentCriteriaContext);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport deepmerge from 'deepmerge';\nimport { Overrides } from '@material-ui/core/styles/overrides';\n\ndeclare module '@material-ui/core/styles/createMuiTheme' {\n  interface Theme {\n    variables: {\n      spacing: {\n        globalPadding: string;\n      };\n    };\n  }\n  // allow configuration using `createMuiTheme`\n  interface ThemeOptions {\n    variables?: {\n      spacing?: {\n        globalPadding?: string;\n      };\n    };\n  }\n}\n\ndeclare module '@material-ui/core/styles/createPalette' {\n  interface CommonColors {\n    blue: string;\n    blueDark: string;\n    blueLighter: string;\n    red: string;\n    redDark: string;\n    gray: string;\n    grayMedium: string;\n    grayBlue: string;\n    grayBlueDark: string;\n    grayLight: string;\n    grayLighter: string;\n    grayLightest: string;\n    grayDark: string;\n    grayVeryDark: string;\n    green: string;\n  }\n}\n\nconst variables = {\n  spacing: {\n    globalPadding: '2em'\n  }\n};\n\nconst colors = {\n  white: '#fff',\n  black: '#222',\n  red: '#d95d77',\n  redDark: '#bb3551',\n  blue: '#5d89a1',\n  blueDark: '#386883',\n  blueLighter: '#9ad2f0',\n  gray: '#4a4a4a',\n  grayMedium: '#bbbdc0',\n  grayBlue: '#cbd5df',\n  grayBlueDark: '#7d8892',\n  grayLight: '#6c6c6c',\n  grayLighter: '#aaaeb1',\n  grayLightest: '#eaeef2',\n  grayDark: '#444',\n  grayVeryDark: '#3a3a3a',\n  green: '#2fa874'\n};\n\nconst typography = {\n  fontFamily: [\n    'Open Sans',\n    '-apple-system',\n    'BlinkMacSystemFont',\n    'Segoe UI',\n    'Roboto',\n    'Oxygen',\n    'Ubuntu',\n    'Cantarell',\n    'Fira Sans',\n    'Droid Sans',\n    'Helvetica Neue',\n    'sans-serif'\n  ].join(',')\n};\n\nconst materialUiOverridesBase: Overrides = {\n  MuiButton: {\n    root: {\n      borderRadius: 0,\n      height: '38px',\n      '&$disabled': {\n        backgroundColor: colors.grayMedium,\n        color: colors.white\n      }\n    },\n    contained: {\n      '&$disabled': {\n        backgroundColor: colors.grayMedium,\n        color: colors.white\n      }\n    },\n    label: {\n      fontWeight: 600\n    },\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    },\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    }\n  },\n  MuiTableHead: {\n    root: {\n      backgroundColor: colors.grayLightest\n    }\n  },\n  MuiTableCell: {\n    root: {\n      fontSize: '1em'\n    },\n    head: {\n      padding: '5px 16px',\n      borderBottom: 'none'\n    }\n  },\n  MuiFormControl: {\n    root: {\n      margin: '10px 0'\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      fontStyle: 'italic',\n      '&.Mui-error': {\n        color: colors.white\n      },\n      '&.Mui-disabled': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      fontWeight: 600\n    },\n    input: {\n      '&::selection': {\n        color: colors.white,\n        backgroundColor: colors.grayDark\n      },\n      '&:-webkit-autofill': {\n        transitionDelay: '9999s',\n        transitionProperty: 'background-color, color'\n      },\n      '&$disabled': {\n        color: colors.white,\n        backgroundColor: colors.grayDark\n      }\n    }\n  },\n  MuiTooltip: {\n    tooltip: {\n      fontSize: 14,\n      backgroundColor: colors.black\n    },\n    arrow: {\n      color: colors.black\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      borderRadius: '0'\n    }\n  },\n  MuiSelect: {\n    icon: {\n      fontSize: '2em'\n    }\n  },\n  MuiPaper: {\n    rounded: {\n      borderRadius: '0'\n    }\n  },\n  MuiDialogTitle: {\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      padding: '1em 2em'\n    }\n  },\n  MuiDialogContent: {\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: '0 4em',\n      lineHeight: 'normal',\n      overflowY: 'initial',\n      color: colors.grayLighter\n    }\n  },\n  MuiDialogActions: {\n    root: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      padding: '2em 4em',\n      color: colors.grayLighter,\n      marginBottom: '2em'\n    }\n  },\n  MuiCard: {\n    root: {\n      overflow: 'visible'\n    }\n  },\n  MuiIconButton: {\n    root: {\n      color: colors.gray,\n      '&:disabled': {\n        color: colors.grayMedium\n      }\n    },\n    sizeSmall: {\n      width: '20px',\n      height: '20px',\n      margin: '9px'\n    }\n  }\n};\n\nconst materialUiOverridesDark: Overrides = {\n  MuiFormControl: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      }\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      color: colors.white,\n      '&$focused': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      color: colors.white,\n      '&:hover': {\n        borderColor: colors.white,\n        backgroundColor: colors.grayDark\n      }\n    }\n  },\n  MuiTooltip: {\n    tooltip: {\n      fontSize: 14\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      },\n      '&:hover $notchedOutline': {\n        borderColor: colors.white\n      },\n      '&$focused $notchedOutline': {\n        borderColor: colors.white\n      },\n      '&$disabled $notchedOutline': {\n        borderColor: colors.white\n      }\n    },\n    notchedOutline: {\n      borderColor: colors.white\n    }\n  },\n  MuiSelect: {\n    icon: {\n      color: colors.white\n    }\n  },\n  MuiMenuItem: {\n    root: {\n      color: colors.grayDark\n    }\n  },\n  MuiIconButton: {\n    root: {\n      color: colors.white,\n      '&:disabled': {\n        color: colors.grayLight\n      }\n    }\n  }\n};\n\nconst paletteBase = {\n  primary: {\n    main: colors.blue\n  },\n  secondary: {\n    main: colors.red\n  },\n  error: {\n    main: colors.red\n  },\n  common: colors,\n  background: {\n    default: colors.grayLightest\n  },\n  text: {\n    primary: colors.gray,\n    secondary: colors.gray\n  },\n  grey: {\n    800: colors.gray\n  }\n};\n\nconst lightTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: { ...paletteBase },\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nconst darkTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    text: {\n      primary: colors.white,\n      secondary: colors.white\n    }\n  }),\n  overrides: deepmerge(materialUiOverridesBase, materialUiOverridesDark),\n  variables: { ...variables }\n});\n\nconst projectorTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    background: {\n      default: colors.grayBlue\n    },\n    text: {\n      primary: colors.black,\n      secondary: colors.black\n    }\n  }),\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nexport default lightTheme;\nexport { lightTheme, darkTheme, projectorTheme };\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useState,\n  useCallback,\n  useContext,\n  ReactNode\n} from 'react';\nimport { ThemeProvider as MuiThemeProvider, Theme } from '@material-ui/core/styles';\nimport { lightTheme, darkTheme, projectorTheme } from '../styles/theme';\n\ninterface ThemeProviderProps {\n  theme: string;\n  children: ReactNode;\n}\n\ninterface ThemeContextInterface {\n  toggleTheme: () => void;\n  useProjector: boolean;\n}\n\nconst getTheme = ({ theme, useProjector }: { theme: string; useProjector: boolean }): Theme => {\n  if (useProjector) {\n    switch (theme) {\n      case 'dark':\n        // TODO: replace with dark projector theme\n        return darkTheme;\n\n      default:\n        return projectorTheme;\n    }\n  }\n\n  switch (theme) {\n    case 'dark':\n      return darkTheme;\n\n    default:\n      return lightTheme;\n  }\n};\n\nexport const ThemeContext = createContext({} as ThemeContextInterface);\nexport const useThemeToggle = (): (() => void) => {\n  const { toggleTheme } = useContext(ThemeContext);\n  return toggleTheme;\n};\nexport const useTheme = (theme: string): Theme => {\n  const { useProjector } = useContext(ThemeContext);\n  return getTheme({ theme, useProjector });\n};\n\nconst ThemeProvider: FC<ThemeProviderProps> = memo(({ theme = 'light', children }) => {\n  const [useProjector, setUseProjector] = useState(false);\n  const muiTheme = getTheme({ theme, useProjector });\n\n  const toggleTheme = useCallback(() => {\n    setUseProjector(currentUseProjector => !currentUseProjector);\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <ThemeContext.Provider value={{ useProjector, toggleTheme }}>\n        {children}\n      </ThemeContext.Provider>\n    </MuiThemeProvider>\n  );\n});\n\nexport default ThemeProvider;\n","import React, { FC, memo, useCallback, useState, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport { useThemeToggle } from '../ThemeProvider';\n\nimport logo from 'assets/camino-logo-dark.png';\nimport styles from './Header.module.scss';\n\nconst Header: FC = () => {\n  const { resetCurrentCriteria } = useCurrentCriteriaContext();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const toggleTheme = useThemeToggle();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleToggleTheme = useCallback((): void => {\n    toggleTheme();\n    closeMenu();\n  }, [toggleTheme, closeMenu]);\n\n  return (\n    <header className={styles.header}>\n      <Link to=\"/builder\" className={styles.homeLink} onClick={resetCurrentCriteria}>\n        <img src={logo} alt=\"logo\" className={styles.logo} />\n      </Link>\n\n      <button onClick={openMenu} aria-controls=\"options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faCog} />\n      </button>\n\n      <Menu\n        id=\"options-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n      >\n        <MenuItem onClick={handleToggleTheme}>Toggle Theme</MenuItem>\n      </Menu>\n    </header>\n  );\n};\n\nexport default memo(Header);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: '2em',\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary,\n      height: '6em',\n      justifyContent: 'space-between'\n    },\n    backButton: {\n      height: '45px',\n      width: '45px'\n    },\n    navigationIcons: {\n      fontSize: '20px',\n      cursor: 'pointer'\n    },\n    pathwayName: {\n      fontSize: '1.4em',\n      marginLeft: '1.5em'\n    }\n  }),\n  { name: 'Navigation', index: 1 }\n);\n","import { useEffect, useRef, MutableRefObject } from 'react';\nimport useUndo from 'use-undo';\n\nfunction useRefUndoState<T>(\n  initialValue: T\n): [T, MutableRefObject<T>, boolean, boolean, Function, Function, Function, Function] {\n  const [\n    state,\n    { set: setState, reset: resetState, undo: undoState, redo: redoState, canUndo, canRedo }\n  ] = useUndo<T>(initialValue);\n  const stateRef = useRef(state.present);\n\n  useEffect(() => {\n    stateRef.current = state.present;\n  }, [state]);\n\n  return [state.present, stateRef, canUndo, canRedo, undoState, redoState, resetState, setState];\n}\n\nexport default useRefUndoState;\n","import { Pathway } from 'pathways-model';\nimport axios, { AxiosResponse } from 'axios';\nimport config from './ConfigManager';\nimport { Criteria } from 'criteria-model';\n\nconst baseUrl = config.get('pathwaysBackend');\n\nexport function deletePathway(id: string): Promise<AxiosResponse<string>> {\n  return axios.delete<string>(`${baseUrl}/pathway/${id}`);\n}\n\nexport function updatePathway(pathway: Pathway): Promise<AxiosResponse<Pathway>> {\n  return axios.put<Pathway>(`${baseUrl}/pathway/${pathway.id}`, pathway);\n}\n\nexport function deleteCriteria(id: string): Promise<AxiosResponse<string>> {\n  return axios.delete<string>(`${baseUrl}/criteria/${id}`);\n}\n\nexport function updateCriteria(criteria: Criteria): Promise<AxiosResponse<Criteria>> {\n  return axios.put<Criteria>(`${baseUrl}/criteria/${criteria.id}`, criteria);\n}\n\nexport function readFile(file: File, callback: (event: ProgressEvent<FileReader>) => void): void {\n  const reader = new FileReader();\n  reader.onload = callback;\n  reader.readAsText(file);\n}\n","import React, {\n  ReactNode,\n  createContext,\n  useContext,\n  FC,\n  memo,\n  useCallback,\n  MutableRefObject,\n  useEffect\n} from 'react';\nimport { Pathway } from 'pathways-model';\nimport useRefUndoState from 'hooks/useRefUndoState';\nimport HotKeys from 'react-hot-keys';\nimport { updatePathway } from 'utils/backend';\nimport { useMutation, useQueryCache } from 'react-query';\n\ninterface CurrentPathwayContextInterface {\n  pathway: Pathway | null;\n  pathwayRef: MutableRefObject<Pathway | null>;\n  canUndoPathway: boolean;\n  canRedoPathway: boolean;\n  undoPathway: () => void;\n  redoPathway: () => void;\n  resetCurrentPathway: (value: Pathway) => void;\n  setCurrentPathway: (value: Pathway) => void;\n}\n\nexport const CurrentPathwayContext = createContext<CurrentPathwayContextInterface>(\n  {} as CurrentPathwayContextInterface\n);\n\ninterface CurrentPathwayProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrentPathwayProvider: FC<CurrentPathwayProviderProps> = memo(({ children }) => {\n  const [\n    pathway,\n    pathwayRef,\n    canUndoPathway,\n    canRedoPathway,\n    _undoPathway,\n    _redoPathway,\n    _resetPathway,\n    _setPathway\n  ] = useRefUndoState<Pathway | null>(null);\n  const cache = useQueryCache();\n\n  const undoPathway = useCallback(() => {\n    _undoPathway();\n  }, [_undoPathway]);\n\n  const redoPathway = useCallback(() => {\n    _redoPathway();\n  }, [_redoPathway]);\n\n  const resetCurrentPathway = useCallback(\n    (value: Pathway) => {\n      _resetPathway(value);\n    },\n    [_resetPathway]\n  );\n\n  const setCurrentPathway = useCallback(\n    (value: Pathway) => {\n      _setPathway(value);\n    },\n    [_setPathway]\n  );\n\n  const [mutateUpdatePathway] = useMutation(updatePathway, {\n    onSettled: () => cache.invalidateQueries('pathway')\n  });\n\n  useEffect(() => {\n    if (pathway) mutateUpdatePathway(pathway);\n  }, [pathway, mutateUpdatePathway]);\n\n  return (\n    <CurrentPathwayContext.Provider\n      value={{\n        pathway,\n        pathwayRef,\n        canUndoPathway,\n        canRedoPathway,\n        undoPathway,\n        redoPathway,\n        resetCurrentPathway,\n        setCurrentPathway\n      }}\n    >\n      <HotKeys keyName=\"control+z,command+z\" onKeyDown={undoPathway}>\n        <HotKeys keyName=\"control+y,command+y\" onKeyDown={redoPathway}>\n          {children}\n        </HotKeys>\n      </HotKeys>\n    </CurrentPathwayContext.Provider>\n  );\n});\n\nexport const useCurrentPathwayContext = (): CurrentPathwayContextInterface =>\n  useContext(CurrentPathwayContext);\n","import {\n  PathwayNode,\n  ActionNode,\n  Pathway,\n  Transition,\n  NodeObj,\n  Action,\n  BranchNode,\n  ReferenceNode\n} from 'pathways-model';\nimport { History } from 'history';\nimport shortid from 'shortid';\nimport { CodeableConcept } from 'fhir-objects';\n\nexport function getNodeType(\n  node?: ActionNode | BranchNode | ReferenceNode | PathwayNode | null\n): string {\n  if (!node || node.type === 'null') {\n    return 'null';\n  } else {\n    return node.type;\n  }\n}\n\nexport function isActionNode(node: PathwayNode): node is ActionNode {\n  return node.type === 'action';\n}\n\nexport function isBranchNode(node: PathwayNode): node is BranchNode {\n  return node.type === 'branch';\n}\n\nexport function isReferenceNode(node: PathwayNode): node is ReferenceNode {\n  return node.type === 'reference';\n}\ntype ConversionResource = {\n  [key: string]: string;\n};\nexport const resourceNameConversion: ConversionResource = {\n  MedicationRequest: 'Medication',\n  ServiceRequest: 'Procedure',\n  CarePlan: 'Regimen'\n};\n\nexport const nodeTypeOptions = [\n  { label: 'Medication', value: 'MedicationRequest' },\n  { label: 'Procedure', value: 'ServiceRequest' },\n  { label: 'Regimen', value: 'CarePlan' },\n  { label: 'Observation', value: 'Observation' },\n  { label: 'Pathway Reference', value: 'Reference' }\n];\n\nexport function findParent(nodes: NodeObj, childNodeKey: string): string | null {\n  const parents = findParents(nodes, childNodeKey);\n  if (parents.length === 1) return parents[0];\n  else return null;\n}\n\nexport function findParents(nodes: NodeObj, childNodeKey: string): string[] {\n  const parents: string[] = [];\n  Object.keys(nodes).forEach(parentNodeKey => {\n    for (const transition of nodes[parentNodeKey].transitions) {\n      if (transition.transition === childNodeKey) {\n        parents.push(parentNodeKey);\n        break;\n      }\n    }\n  });\n  return parents;\n}\n\nexport function findAllTransitions(nodes: NodeObj, key: string): Transition[] {\n  const transitions: Transition[] = [];\n  const parents = findParents(nodes, key);\n  parents.forEach(parentKey => {\n    const parent = nodes[parentKey];\n    parent.transitions.forEach(transition => {\n      if (transition.transition === key) transitions.push(transition);\n    });\n  });\n  return transitions;\n}\n\nexport function findAllChildActionNodes(nodes: NodeObj, key: string): string[] {\n  const childActionNodes: string[] = [];\n\n  const childKeys = nodes[key].transitions.map(t => t.transition);\n  childKeys.forEach(childKey => {\n    const child = nodes[childKey];\n    if (isActionNode(child)) childActionNodes.push(childKey);\n    else childActionNodes.push(...findAllChildActionNodes(nodes, childKey));\n  });\n\n  return childActionNodes;\n}\n\nexport function deepCopyPathway(pathway: Pathway): Pathway {\n  return JSON.parse(JSON.stringify(pathway)) as Pathway;\n}\n\nexport function deepCopyPathwayNode(node: PathwayNode): PathwayNode {\n  return JSON.parse(JSON.stringify(node)) as PathwayNode;\n}\n\nfunction copyNode(node: PathwayNode, newKey: string): PathwayNode {\n  const newNode = deepCopyPathwayNode(node);\n  newNode.key = newKey;\n  return newNode;\n}\n\nexport function findSubPathway(nodes: NodeObj, rootKey: string): NodeObj {\n  const subPathway: NodeObj = {};\n  const oldKeyToNewKey: { [key: string]: string } = {};\n\n  const transitions = (node: PathwayNode): string[] => node.transitions.map(t => t.transition);\n\n  // Copy the nodes over to the new sub pathway\n  let currentKey = rootKey;\n  let currentNewKey = shortid.generate();\n  oldKeyToNewKey[currentKey] = currentNewKey;\n  subPathway[currentNewKey] = copyNode(nodes[currentKey], currentNewKey);\n  const queue = transitions(nodes[currentKey]);\n  const visited = [currentKey];\n  while (queue.length) {\n    // currentKey is always defined because queue.length > 0\n    currentKey = queue.shift()!; // eslint-disable-line\n    if (!visited.includes(currentKey)) {\n      currentNewKey = shortid.generate();\n      oldKeyToNewKey[currentKey] = currentNewKey;\n      subPathway[currentNewKey] = copyNode(nodes[currentKey], currentNewKey);\n      queue.push(...transitions(nodes[currentKey]));\n      visited.push(currentKey);\n    }\n  }\n\n  // Update the transitions to use the new keys\n  Object.keys(subPathway).forEach(key => {\n    const node = subPathway[key];\n    node.transitions.forEach(\n      transition => (transition.transition = oldKeyToNewKey[transition.transition])\n    );\n  });\n\n  return subPathway;\n}\n\nexport function willOrphanChild(pathway: Pathway, childNodeKey: string): boolean {\n  // Count the number of transitions into the node\n  let transitionCount = 0;\n  Object.keys(pathway.nodes).forEach(nodeKey => {\n    pathway.nodes[nodeKey].transitions.forEach(transition => {\n      if (transition.transition === childNodeKey) transitionCount += 1;\n    });\n  });\n\n  return transitionCount >= 2 ? false : true;\n}\n\nexport function canDeleteNode(pathway: Pathway, transitions: Transition[]): boolean {\n  let canDeleteAllTransitions = true;\n  transitions.forEach(transition => {\n    if (willOrphanChild(pathway, transition.transition)) canDeleteAllTransitions = false;\n  });\n  return canDeleteAllTransitions;\n}\n\nexport function redirect(\n  pathwayId: string,\n  nodeKey: string,\n  history: History<History.PoorMansUnknown>,\n  demo = false\n): void {\n  const url = `${demo ? '/demo' : ''}/builder/${encodeURIComponent(\n    pathwayId\n  )}/node/${encodeURIComponent(nodeKey)}`;\n  if (url !== history.location.pathname) {\n    history.push(url);\n  }\n}\n\nconst getAncestorNodes = (\n  pathway: Pathway,\n  rootNodeKey: string,\n  currNodeKey: string\n): Array<PathwayNode> => {\n  let ancestors: Array<PathwayNode> = [];\n  let previousNodes: Array<PathwayNode> = [];\n  const currNode = pathway.nodes[currNodeKey];\n\n  currNode.transitions.forEach(transition => {\n    if (transition.transition === rootNodeKey) ancestors.push(currNode);\n    else {\n      previousNodes = getAncestorNodes(pathway, rootNodeKey, transition.transition);\n      if (previousNodes?.length) {\n        if (!ancestors.some(node => node.key === currNode.key)) ancestors.push(currNode);\n        ancestors = ancestors.concat(previousNodes);\n      }\n    }\n  });\n\n  return ancestors;\n};\n\nexport const getConnectableNodes = (\n  pathway: Pathway,\n  rootNode: PathwayNode\n): Array<{ label: string; value: string }> => {\n  const connectableNodes: Array<{ label: string; value: string }> = [];\n  const ancestorNodes = getAncestorNodes(pathway, rootNode.key ?? '', 'Start');\n  ancestorNodes.push(rootNode);\n\n  Object.keys(pathway.nodes).forEach(nodeKey => {\n    const node = pathway.nodes[nodeKey];\n    const rootNodeConnectsToNode = rootNode.transitions.some(\n      transition => transition.transition === nodeKey\n    );\n    const nodeIsAncestor = ancestorNodes.some(node => node.key === nodeKey);\n    if (!rootNodeConnectsToNode && !nodeIsAncestor && node.key)\n      connectableNodes.push({ label: node.label, value: node.key });\n  });\n\n  return connectableNodes;\n};\n\nexport const getTransition = (parent: PathwayNode, childKey: string): Transition | undefined => {\n  return parent.transitions.find(transition => transition.transition === childKey);\n};\n\nexport const getCodeableConceptFromAction = (action: Action): CodeableConcept => {\n  let codeableConcept;\n  switch (action.resource.resourceType) {\n    case 'MedicationRequest':\n      codeableConcept = action.resource.medicationCodeableConcept;\n      break;\n    case 'ServiceRequest':\n      codeableConcept = action.resource.code;\n      break;\n    case 'CarePlan':\n      // For now mock the CarePlan as a codeableconcept\n      codeableConcept = {\n        coding: [\n          {\n            system: 'FakeCarePlanSystem',\n            code: action.resource.title,\n            display: 'Fake CodeableConcept for CarePlan'\n          }\n        ],\n        text: 'Fake CodeableConcept for CarePlan'\n      };\n      break;\n    default:\n      // do nothing\n      break;\n  }\n  return codeableConcept;\n};\n","/**\n * Common interfaces and functions for exporting pathways\n */\n\n// interface purely for intermediate working objects\nexport interface IncludedCqlLibraries {\n  [id: string]: {\n    cql: string;\n    version: string;\n  };\n}\n\n/**\n * Constructs a CQL Library based on the provided CQL\n *\n * @param libraryName - The name to be used in the library\n * @param includedCqlLibraries - Libraries that should be included\n * @param referencedDefines - Definitions that should be defined in the constructed library\n *                            based on a definition in an included library\n * @param builderDefines - Definitions from the CQL builder that should be included\n */\nexport function constructCqlLibrary(\n  libraryName: string,\n  includedCqlLibraries: IncludedCqlLibraries,\n  referencedDefines: Record<string, string>,\n  builderDefines: Record<string, string>\n): string {\n  const includes = Object.entries(includedCqlLibraries)\n    .map(([name, details]) => `include \"${name}\" version '${details.version}' called ${name}\\n\\n`)\n    .join('');\n  const definesList = Object.entries(referencedDefines).map(\n    ([name, srcLibrary]) => `define \"${name}\": ${srcLibrary}.${name}\\n\\n`\n  );\n\n  Object.entries(builderDefines).forEach(([statement, cql]) =>\n    definesList.push(`define \"${statement}\": ${cql}\\n\\n`)\n  );\n\n  const defines = definesList.join('');\n\n  // NOTE: this library should use the same FHIR version as all referenced libraries\n  // and if we want to run it in cqf-ruler, as of today that needs to be FHIR 4.0.1 (NOT 4.0.0)\n  return `\nlibrary ${libraryName} version '1.0'\n\nusing FHIR version '4.0.1'\n\n${includes}\n\ncontext Patient\n\n${defines}\n`;\n}\n","import { Action, NodeObj, Pathway, PathwayNode } from 'pathways-model';\nimport {\n  ActivityDefinition,\n  Bundle,\n  BundleEntry,\n  Coding,\n  Library,\n  PlanDefinition,\n  PlanDefinitionAction,\n  PlanDefinitionCondition\n} from 'fhir-objects';\nimport { Criteria } from 'criteria-model';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  isActionNode,\n  isBranchNode,\n  isReferenceNode,\n  getTransition,\n  findSubPathway,\n  findParent,\n  findAllTransitions,\n  deepCopyPathway,\n  findAllChildActionNodes,\n  getCodeableConceptFromAction\n} from './nodeUtils';\nimport { R4 } from '@ahryman40k/ts-fhir-types';\nimport { PlanDefinition_RelatedActionRelationshipKind } from '@ahryman40k/ts-fhir-types/lib/R4/Resource/RTTI_PlanDefinition_RelatedAction'; // eslint-disable-line\nimport { constructCqlLibrary, IncludedCqlLibraries } from './export';\n\nconst LIBRARY_DRAFT = R4.LibraryStatusKind._draft;\nconst PLANDEFINITION_DRAFT = R4.PlanDefinitionStatusKind._draft;\nconst ACTIVITYDEFINITION_DRAFT = R4.ActivityDefinitionStatusKind._draft;\nconst BUNDLE_TRANSACTION = R4.BundleTypeKind._transaction;\nconst BUNDLE_PUT = R4.Bundle_RequestMethodKind._put;\nconst CONDITION_APPLICABILITY = R4.PlanDefinition_ConditionKindKind._applicability; // eslint-disable-line\nconst EXPRESSION_CQL = R4.ExpressionLanguageKind._textCql;\nconst CHILD_RELATIONSHIP = PlanDefinition_RelatedActionRelationshipKind._beforeStart; // eslint-disable-line\nconst PARENT_RELATIONSHIP = PlanDefinition_RelatedActionRelationshipKind._afterEnd; // eslint-disable-line\n\ninterface ActivityDefinitionMap {\n  // Code System or FakeCarePlanSystem\n  [key: string]: {\n    // Code or CarePlan title\n    [key: string]: string; // Resource ID\n  };\n}\n\nexport class CPGExporter {\n  pathway: Pathway;\n  pathways: Pathway[];\n  bundle: Bundle;\n  criteria: Criteria[];\n  nestedBranch: string[];\n  libraries: string[];\n  activityDefinitions: ActivityDefinitionMap;\n\n  // TODO: figure out if elm works correctly here\n  constructor(pathway: Pathway, pathways: Pathway[], criteria: Criteria[]) {\n    // Ensure each node only has one parent\n    const pathwayCopy = deepCopyPathway(pathway);\n    pathwayCopy.nodes = cleanPathway(pathwayCopy.nodes);\n    this.pathway = pathwayCopy;\n    this.bundle = {\n      id: this.pathway.id,\n      resourceType: 'Bundle',\n      type: BUNDLE_TRANSACTION,\n      entry: []\n    };\n    this.criteria = criteria;\n    this.nestedBranch = [];\n    this.activityDefinitions = {};\n    this.libraries = [];\n    this.pathways = pathways;\n  }\n\n  export(): Bundle {\n    const strategyDefinition = this.createPlanDefinition(\n      uuidv4(),\n      `Strategy${this.pathway.name}`,\n      `Strategy for ${this.pathway.name}`,\n      'strategy'\n    );\n\n    this._export(strategyDefinition, this.pathway);\n    this.bundle.entry.push(createBundleEntry(strategyDefinition));\n    return this.bundle;\n  }\n\n  _export(\n    strategyDefinition: PlanDefinition,\n    pathway: Pathway,\n    referencedFrom?: PlanDefinitionAction,\n    condition?: PlanDefinitionCondition[]\n  ): void {\n    // the action for the strategy definition\n    const pathwayAction = createAction(pathway.name, `Action for ${pathway.name}`);\n    if (referencedFrom?.id && pathwayAction.id) {\n      addRelatedAction(pathwayAction, referencedFrom.id, PARENT_RELATIONSHIP);\n      addRelatedAction(referencedFrom, pathwayAction.id, CHILD_RELATIONSHIP);\n      if (condition) {\n        pathwayAction.condition = condition;\n      }\n    }\n\n    const isInDefinition = strategyDefinition.action.find(action => {\n      return action.id === pathway.name;\n    });\n\n    if (!isInDefinition) {\n      const libraries = this.createLibraries(pathway);\n      const library = libraries[0];\n      const id = uuidv4();\n      const cpgRecommendation = this.createPlanDefinition(\n        id,\n        pathway.name,\n        pathway.description,\n        'recommendation',\n        library.id\n      );\n      /*\n      Use (modified) BFS to search the Pathway\n\n      Note: BFS is used as the basis here because it could be easily modified to ensure\n        the parent node is always visited before its children. This assumption is required\n        for the PlanDefinition.action creation algorithm to work correctly.\n    */\n      const queue = ['Start'];\n      const visited: string[] = [];\n      while (queue.length !== 0) {\n        // Key is always defined since queue.length > 0\n      const key = queue.shift()!; // eslint-disable-line\n        const node = pathway.nodes[key];\n        const parentKey = findParent(pathway.nodes, key);\n\n        /*\n        Check parent has been visited - if not:\n          Remove parent from queue if in it\n          Add parent to start of the queue\n          Reinsert key to the end of the list\n          Break (do not convert current node)\n      */\n        if (parentKey && !visited.includes(parentKey)) {\n          queue.filter(n => n !== parentKey);\n          queue.unshift(parentKey);\n          queue.push(key);\n          continue;\n        }\n\n        // Visit this node and convert it\n        if (parentKey)\n          this.convertNode(\n            key,\n            parentKey,\n            cpgRecommendation,\n            strategyDefinition,\n            pathway,\n            pathwayAction,\n            libraries\n          );\n        visited.push(key);\n\n        // Add all unvisited and unqueued node transitions to the queue\n        node.transitions.forEach(transition => {\n          if (!visited.includes(transition.transition) && !queue.includes(transition.transition)) {\n            queue.push(transition.transition);\n          }\n        });\n      }\n      if (cpgRecommendation.action.length) {\n        pathwayAction.definitionCanonical = formatUrl('PlanDefinition', id);\n        this.bundle.entry.push(createBundleEntry(cpgRecommendation));\n      }\n      strategyDefinition.action.push(pathwayAction);\n      libraries.forEach(l => {\n        const data = l.content[0].data;\n        const libraryExists = this.libraries.find(entry => {\n          return entry === data;\n        });\n        if (!libraryExists && data) {\n          this.bundle.entry.push(createBundleEntry(l));\n          this.libraries.push(data);\n        }\n      });\n    }\n  }\n\n  createActivityDefinition(action: Action): ActivityDefinition | null {\n    const activityId = uuidv4();\n    const kind = action.resource.resourceType;\n\n    const codeableConcept = getCodeableConceptFromAction(action);\n    const coding = codeableConcept.coding[0];\n\n    // Do not create a new resource if it already exists\n    if (\n      this.activityDefinitions[coding.system] &&\n      this.activityDefinitions[coding.system][coding.code]\n    )\n      return null;\n\n    const activityDefinition: ActivityDefinition = {\n      id: activityId,\n      resourceType: 'ActivityDefinition',\n      meta: {\n        profile: ['http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-publishableactivity']\n      },\n      extension: [\n        {\n          url: 'http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability',\n          valueCode: 'publishable'\n        }\n      ],\n      url: `urn:uuid:${activityId}`,\n      version: '1.0',\n      name: `AD${activityId.substring(0, 7)}`,\n      title: `ActivityDefinition: ${activityId}`,\n      status: ACTIVITYDEFINITION_DRAFT,\n      experimental: true,\n      date: new Date().toISOString(),\n      publisher: 'Logged in user',\n      description: action.description,\n      kind: kind\n    };\n\n    switch (kind) {\n      case 'MedicationRequest':\n        activityDefinition.productCodeableConcept = codeableConcept;\n        break;\n      case 'ServiceRequest':\n      case 'CarePlan':\n        activityDefinition.code = codeableConcept;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    this.setActivityDefinitionId(coding, activityId);\n\n    return activityDefinition;\n  }\n\n  createPlanDefinition(\n    id: string,\n    title: string,\n    description: string,\n    type: 'strategy' | 'recommendation',\n    libraryId?: string\n  ): PlanDefinition {\n    const planDefinition: PlanDefinition = {\n      id: id,\n      resourceType: 'PlanDefinition',\n      meta: {\n        profile: [`http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-${type}definition`]\n      },\n      extension: [\n        {\n          url: 'http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability',\n          valueCode: 'executable'\n        }\n      ],\n      url: `urn:uuid:${id}`,\n      version: '1.0',\n      name: `PD${id.substring(0, 7)}`,\n      title: title,\n      type: {\n        coding: [\n          {\n            system: 'http://terminology.hl7.org/CodeSystem/plan-definition-type',\n            code: type === 'strategy' ? 'workflow-definition' : 'eca-rule',\n            display: type === 'strategy' ? 'Workflow Definition' : 'ECA Rule'\n          }\n        ]\n      },\n      status: PLANDEFINITION_DRAFT,\n      experimental: true,\n      publisher: 'Logged in user',\n      description: description,\n      action: []\n    };\n\n    if (libraryId) planDefinition.library = [libraryId];\n\n    return planDefinition;\n  }\n\n  createLibraries(pathway: Pathway): Library[] {\n    const libraryId = uuidv4();\n    const libraryName = `LIB${libraryId.substring(0, 7)}`;\n\n    const mainLibrary: Library = {\n      id: libraryId,\n      resourceType: 'Library',\n      meta: {\n        profile: ['http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-executablelibrary']\n      },\n      extension: [\n        {\n          url: 'http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability',\n          valueCode: 'executable'\n        }\n      ],\n      url: `urn:uuid:${libraryId}`,\n      version: '1.0',\n      name: libraryName,\n      title: `Library for ${pathway.name}`,\n      status: LIBRARY_DRAFT,\n      experimental: true,\n      type: {\n        coding: [\n          {\n            system: 'http://terminology.hl7.org/CodeSystem/library-type',\n            code: 'logic-library',\n            display: 'Logic Library'\n          }\n        ]\n      },\n      publisher: 'Logged in user',\n      description: `CQL/ELM library for pathway: ${pathway.name}`,\n      content: []\n    };\n\n    const includedCqlLibraries: IncludedCqlLibraries = {};\n    const referencedDefines: Record<string, string> = {};\n\n    const builderDefines: Record<string, string> = {};\n\n    // iterate through the nodes and find all criteria that are actually used.\n    // for each one, add the criteria CQL to our appropriate map\n    //  - if it's an included library, keep track of the library name and version\n    //    as well as the specific definition we're referencing\n    //  - if it was constructed in the builder, track the name and raw CQL\n    for (const nodeId in pathway.nodes) {\n      const node = pathway.nodes[nodeId];\n      for (const transition of node.transitions) {\n        if (transition.condition?.criteriaSource) {\n          const criteriaSource = this.criteria.find(\n            c => c.id === transition.condition?.criteriaSource\n          );\n          if (criteriaSource?.elm && criteriaSource?.cql) {\n            const libraryIdentifier = criteriaSource.elm.library.identifier;\n            includedCqlLibraries[libraryIdentifier.id] = {\n              cql: criteriaSource.cql,\n              version: libraryIdentifier.version\n            };\n\n            referencedDefines[transition.condition.cql] = libraryIdentifier.id;\n\n            if (criteriaSource?.cqlLibraries) {\n              Object.entries(criteriaSource.cqlLibraries).forEach(entry => {\n                const [libName, libCql] = entry;\n                if (libCql.cql) {\n                  includedCqlLibraries[libName] = {\n                    cql: libCql.cql,\n                    version: libCql?.version || ''\n                  };\n                  referencedDefines[libCql.cql] = libName;\n                }\n              });\n            }\n          } else if (criteriaSource?.builder) {\n            builderDefines[criteriaSource.statement] = criteriaSource.builder.cql;\n          }\n        }\n      }\n    }\n\n    const additionalLibraries: Library[] = Object.entries(includedCqlLibraries).map(\n      ([name, details]) => {\n        const newId = uuidv4();\n        return {\n          id: newId,\n          resourceType: 'Library',\n          url: `urn:uuid:${newId}`,\n          version: details.version,\n          name: name,\n          title: name,\n          status: LIBRARY_DRAFT,\n          experimental: true,\n          type: {\n            coding: [\n              {\n                system: 'http://terminology.hl7.org/CodeSystem/library-type',\n                code: 'logic-library',\n                display: 'Logic Library'\n              }\n            ]\n          },\n          publisher: 'Logged in user',\n          description: `CQL/ELM library for pathway: ${pathway.name} / sublibrary ${name}`,\n          content: [\n            {\n              id: name,\n              contentType: 'text/cql',\n              data: btoa(details.cql),\n              title: `CQL for library ${name}`\n            }\n          ]\n        };\n      }\n    );\n\n    const libraryCql = constructCqlLibrary(\n      libraryName,\n      includedCqlLibraries,\n      referencedDefines,\n      builderDefines\n    );\n\n    mainLibrary.content.push({\n      id: 'navigational-cql',\n      contentType: 'text/cql',\n      data: btoa(libraryCql),\n      title: 'CQL for navigating the pathway'\n    });\n\n    if (pathway.elm) {\n      mainLibrary.content.push(\n        {\n          id: 'navigational-elm',\n          contentType: 'application/elm+json',\n          data: btoa(JSON.stringify(pathway.elm.navigational)),\n          title: 'ELM for navigating the pathway'\n        },\n        {\n          id: 'precondition',\n          contentType: 'application/elm+json',\n          data: btoa(JSON.stringify(pathway.elm.preconditions)),\n          title: 'ELM for pathway preconditions'\n        }\n      );\n    }\n\n    return [mainLibrary, ...additionalLibraries];\n  }\n\n  private convertNode(\n    key: string,\n    parentKey: string,\n    cpgRecommendation: PlanDefinition,\n    strategyDefinition: PlanDefinition,\n    pathway: Pathway,\n    pathwayAction: PlanDefinitionAction,\n    libraries: Library[]\n  ): void {\n    const node = pathway.nodes[key];\n    const parent = pathway.nodes[parentKey];\n    const descriptionDetails = `${node.label} (Key: ${key}) - Parent Node Key: ${parentKey}`;\n\n    if (isActionNode(node)) {\n      const activityDefinition = this.createActivityDefinition(node.action);\n      const description = `Action for ${descriptionDetails}`;\n      const activityDefinitionId = activityDefinition\n        ? activityDefinition.id\n        : this.getActivityDefinitionId(node.action);\n      const cpgAction = createAction(key, description, activityDefinitionId);\n\n      if (isBranchNode(parent)) cpgAction.condition = this.createCondition(parent, key, libraries);\n\n      // Traverse up to find closest action and add as related action\n      let parentAction = parent;\n      while (isBranchNode(parentAction)) {\n        const tempParentKey = findParent(pathway.nodes, parentAction.key);\n        if (tempParentKey) parentAction = pathway.nodes[tempParentKey];\n        else break;\n      }\n      if (parentAction.key !== 'Start')\n        addRelatedAction(cpgAction, parentAction.key, PARENT_RELATIONSHIP);\n\n      // Add a related action for each action child\n      const childActionNodeKeys = findAllChildActionNodes(pathway.nodes, key);\n      childActionNodeKeys.forEach(childKey =>\n        addRelatedAction(cpgAction, childKey, CHILD_RELATIONSHIP)\n      );\n\n      this.addActionToPlanDefinition(cpgAction, cpgRecommendation, parent.key);\n\n      if (activityDefinition) this.bundle.entry.push(createBundleEntry(activityDefinition));\n    } else if (isBranchNode(node)) {\n      const description = `Branch based on ${descriptionDetails}`;\n\n      // Add an action for the branch node if it nested\n      if (isBranchNode(parent)) {\n        const cpgAction = createAction(key, description);\n        cpgAction.condition = this.createCondition(parent, key, libraries);\n        this.nestedBranch.push(key);\n        this.addActionToPlanDefinition(cpgAction, cpgRecommendation, parent.key);\n      }\n    } else if (isReferenceNode(node)) {\n      const referencedPathway = this.pathways.find((pathway: Pathway) => {\n        return pathway.id === node.referenceId;\n      });\n      if (referencedPathway) {\n        const pathwayCopy = deepCopyPathway(referencedPathway);\n        pathwayCopy.nodes = cleanPathway(pathwayCopy.nodes);\n        if (isBranchNode(parent)) {\n          const condition = this.createCondition(parent, key, libraries);\n          this._export(strategyDefinition, pathwayCopy, pathwayAction, condition);\n        } else {\n          this._export(strategyDefinition, pathwayCopy, pathwayAction);\n        }\n      }\n    } else if (node.type !== 'start') {\n      const msg = `Error Exporting at Node ${node.label}\\n${node.label} Node does not have a node type. Please edit the node to have a node type and add applicable details and try again.`; // eslint-disable-line\n      alert(msg);\n      console.error(`${msg}\\n${JSON.stringify(node, undefined, 2)}`);\n      throw msg; // Prevent the export from continuing\n    }\n  }\n\n  private createCondition(\n    parent: PathwayNode,\n    key: string,\n    libraries: Library[]\n  ): PlanDefinitionCondition[] {\n    const library = libraries[0];\n    const transition = getTransition(parent, key);\n    if (transition) {\n      const criteriaSource = this.criteria.find(c => c.id === transition.condition?.criteriaSource);\n      return [\n        {\n          kind: CONDITION_APPLICABILITY,\n          expression: {\n            // TODO: this would be cleaner if it was \"text/cql.name\" instead of \"text/cql\"\n            // however the typescript type doesn't allow that.\n            // if we do eventually change it to cql.name,\n            // change expression below to just be criteriaSource.statement\n            language: EXPRESSION_CQL,\n            expression: `${library.name}.${criteriaSource?.statement}`\n          }\n        }\n      ];\n    } else return [];\n  }\n\n  private getActivityDefinitionId(action: Action): string {\n    const codeableConcept = getCodeableConceptFromAction(action);\n    const coding = codeableConcept.coding[0];\n    return this.activityDefinitions[coding.system][coding.code];\n  }\n\n  private setActivityDefinitionId(coding: Coding, id: string): void {\n    if (!this.activityDefinitions[coding.system]) this.activityDefinitions[coding.system] = {};\n    this.activityDefinitions[coding.system][coding.code] = id;\n  }\n\n  private addActionToPlanDefinition(\n    action: PlanDefinitionAction,\n    planDefinition: PlanDefinition,\n    parentKey: string\n  ): void {\n    if (this.nestedBranch.includes(parentKey)) {\n      const parentAction = findAction(planDefinition.action, parentKey);\n      if (!parentAction) return;\n      else if (parentAction.action?.length) parentAction.action.push(action);\n      else parentAction.action = [action];\n    } else planDefinition.action.push(action);\n  }\n}\n\nfunction formatUrl(resourceType: string, id: string): string {\n  return `http://example.com/${resourceType}/${id}`;\n}\n\nfunction addRelatedAction(\n  cpgAction: PlanDefinitionAction,\n  relatedId: string,\n  relationship: PlanDefinition_RelatedActionRelationshipKind // eslint-disable-line\n): void {\n  const relatedAction = {\n    actionId: relatedId,\n    relationship: relationship\n  };\n  if (cpgAction.relatedAction?.length) cpgAction.relatedAction.push(relatedAction);\n  else cpgAction.relatedAction = [relatedAction];\n}\n\nfunction findAction(actions: PlanDefinitionAction[], id: string): PlanDefinitionAction | undefined {\n  for (const action of actions) {\n    if (action.id === id) return action;\n    else if (action.action) {\n      const foundAction = findAction(action.action, id);\n      if (foundAction) return foundAction;\n    }\n  }\n  return;\n}\n\nfunction createBundleEntry(resource: PlanDefinition | ActivityDefinition | Library): BundleEntry {\n  return {\n    fullUrl: formatUrl(resource.resourceType, resource.id),\n    resource: resource,\n    request: {\n      method: BUNDLE_PUT,\n      url: `/${resource.resourceType}/${resource.id}`\n    }\n  };\n}\n\nfunction createAction(id: string, description: string, definition?: string): PlanDefinitionAction {\n  const cpgAction: PlanDefinitionAction = {\n    id: id,\n    title: `Action: ${id}`,\n    description: description,\n    code: [\n      {\n        coding: [\n          {\n            system: 'http://hl7.org/fhir/uv/cpg/CodeSystem/cpg-common-process',\n            code: 'guideline-based-care',\n            display: 'Guideline-based Care'\n          }\n        ]\n      }\n    ]\n  };\n  if (definition) cpgAction.definitionCanonical = formatUrl('ActivityDefinition', definition);\n  return cpgAction;\n}\n\nexport function cleanPathway(nodes: NodeObj): NodeObj {\n  const newNodes = nodes;\n  Object.keys(nodes).forEach(key => {\n    const allTransitions = findAllTransitions(nodes, key);\n\n    // Remove multiple transitions to node by copying subpathway\n    if (allTransitions.length > 1) {\n      allTransitions.shift(); // Remove one transition to maintain the original subpathway\n      allTransitions.forEach(transition => {\n        // Get the sub pathway rooted at current node\n        let subPathway = findSubPathway(nodes, key);\n        subPathway = cleanPathway(subPathway);\n\n        // Replace the transition with the copy\n        if (transition) {\n          transition.transition = subPathway[Object.keys(subPathway)[0]].key;\n          Object.keys(subPathway).forEach(nodeKey => (newNodes[nodeKey] = subPathway[nodeKey]));\n        }\n      });\n    }\n  });\n\n  return newNodes;\n}\n","import { Pathway } from 'pathways-model';\nimport { Criteria } from 'criteria-model';\nimport { v4 as uuidv4 } from 'uuid';\nimport { deepCopyPathway } from './nodeUtils';\nimport { constructCqlLibrary, IncludedCqlLibraries } from './export';\n\nexport class CaminoExporter {\n  pathway: Pathway;\n  criteria: Criteria[];\n\n  constructor(pathway: Pathway, criteria: Criteria[]) {\n    this.pathway = deepCopyPathway(pathway);\n    this.criteria = criteria;\n  }\n\n  export(): Pathway {\n    // goal here is to iterate through the pathway,\n    // find all referenced libraries,\n    // and update the CQL in the transition to point to them appropriately\n    const libraryId = uuidv4();\n    const libraryName = `LIB${libraryId.substring(0, 7)}`;\n\n    const includedCqlLibraries: IncludedCqlLibraries = {};\n    const referencedDefines: Record<string, string> = {};\n\n    const builderDefines: Record<string, string> = {};\n\n    // iterate through the nodes and find all criteria that are actually used.\n    // for each one, add the criteria CQL to our appropriate map\n    //  - if it's an included library, keep track of the library name and version\n    //    as well as the specific definition we're referencing\n    //  - if it was constructed in the builder, track the name and raw CQL\n    for (const nodeId in this.pathway.nodes) {\n      const node = this.pathway.nodes[nodeId];\n      for (const transition of node.transitions) {\n        if (transition.condition?.criteriaSource) {\n          const criteriaSource = this.criteria.find(\n            c => c.id === transition.condition?.criteriaSource\n          );\n          if (criteriaSource?.elm && criteriaSource?.cql) {\n            const libraryIdentifier = criteriaSource.elm.library.identifier;\n            includedCqlLibraries[libraryIdentifier.id] = {\n              cql: criteriaSource.cql,\n              version: libraryIdentifier.version\n            };\n\n            referencedDefines[transition.condition.cql] = libraryIdentifier.id;\n\n            if (criteriaSource?.cqlLibraries) {\n              Object.entries(criteriaSource.cqlLibraries).forEach(entry => {\n                const [libName, libCql] = entry;\n                if (libCql.cql) {\n                  includedCqlLibraries[libName] = {\n                    cql: libCql.cql,\n                    version: libCql?.version || ''\n                  };\n                  referencedDefines[libCql.cql] = libName;\n                }\n              });\n            }\n\n            // prepend the library name if not already done\n            if (!transition.condition.cql.startsWith(libraryIdentifier.id)) {\n              transition.condition.cql = `${libraryIdentifier.id}.${transition.condition.cql}`;\n            }\n          } else if (criteriaSource?.builder) {\n            builderDefines[criteriaSource.statement] = criteriaSource.builder.cql;\n\n            // prepend the library name\n            transition.condition.cql = `${libraryName}.${transition.condition.cql}`;\n          }\n        }\n      }\n    }\n\n    const libraries: string[] = [];\n\n    if (Object.keys(builderDefines).length > 0) {\n      // intentionally do not include any extra libraries here\n      const mainLibrary = constructCqlLibrary(libraryName, {}, {}, builderDefines);\n      libraries.push(mainLibrary);\n    }\n\n    // add any other libraries\n    if (Object.keys(includedCqlLibraries).length > 0) {\n      const addtlLibraries = Object.values(includedCqlLibraries).map(l => l.cql);\n      libraries.push(...addtlLibraries);\n    }\n\n    this.pathway.library = libraries;\n\n    return this.pathway;\n  }\n}\n","import {\n  Pathway,\n  Precondition,\n  PathwayNode,\n  Transition,\n  Action,\n  ActionNode,\n  BranchNode,\n  ReferenceNode\n} from 'pathways-model';\nimport { ElmLibrary, ElmStatement } from 'elm-model';\nimport shortid from 'shortid';\nimport produce from 'immer';\nimport { CPGExporter } from './cpg';\nimport { CaminoExporter } from './CaminoExporter';\nimport { Criteria } from 'criteria-model';\nimport { Bundle } from 'fhir-objects';\nimport JSZip from 'jszip';\n\nexport function createNewPathway(name: string, description: string, pathwayId?: string): Pathway {\n  return {\n    id: pathwayId ?? shortid.generate(),\n    name: name,\n    description: description,\n    library: [''],\n    preconditions: [],\n    nodes: {\n      Start: {\n        key: 'Start',\n        label: 'Start',\n        transitions: [],\n        type: 'start'\n      }\n    }\n  };\n}\n\ninterface AddCriteriaSourceInterface {\n  updated: boolean;\n  newPathway: Pathway;\n}\n\nexport function updatePathwayCriteriaSources(\n  pathway: Pathway,\n  criteria: Criteria[]\n): AddCriteriaSourceInterface {\n  let updated = false;\n  const criteriaIds = criteria.map(crit => crit.id);\n  const newPathway = produce(pathway, draftPathway => {\n    Object.entries(draftPathway.nodes).forEach(([nodeIndex, node]) => {\n      node.transitions.forEach(({ condition }, transitionIndex) => {\n        // If a matching criteria does not already exist, try and find one\n        if (condition && !criteriaIds.includes(condition.criteriaSource as string)) {\n          const [library, statement] = condition.cql.split('.');\n          const criteriaSource = criteria.find(\n            crit => crit.elm?.library.identifier.id === library && crit.statement === statement\n          )?.id;\n          // Only update if a criteria source is actually found.\n          if (criteriaSource) {\n            const condition = draftPathway.nodes[nodeIndex].transitions[transitionIndex].condition;\n            if (condition) {\n              updated = true;\n              condition.criteriaSource = criteriaSource;\n            }\n          }\n        }\n      });\n    });\n  });\n  return { updated, newPathway };\n}\n\nfunction addCriteriaSource(pathways: Pathway[], criteria: Criteria[]): Pathway[] {\n  return pathways.map(pathway => updatePathwayCriteriaSources(pathway, criteria).newPathway);\n}\n\nexport function downloadPathway(\n  pathwaysToExport: Pathway[],\n  allPathways: Pathway[],\n  criteria: Criteria[],\n  cpg = false\n): Promise<void> {\n  pathwaysToExport = addCriteriaSource(pathwaysToExport, criteria);\n  if (pathwaysToExport.length > 1) {\n    const zip = new JSZip();\n    // If multiple pathways are being exported\n    pathwaysToExport.forEach(path => {\n      zip.file(`${path.name}.json`, exportPathway(path, allPathways, criteria, cpg));\n    });\n    return zip.generateAsync({ type: 'blob' }).then(function(content) {\n      downloadFile(content, 'pathways.zip');\n    });\n  } else {\n    const pathwayString = exportPathway(pathwaysToExport[0], allPathways, criteria, cpg);\n    // Create blob from pathwayString to save to file system\n    const pathwayBlob = new Blob([pathwayString], {\n      type: 'application/json'\n    });\n    downloadFile(pathwayBlob, `${pathwaysToExport[0].name}.json`);\n    return Promise.resolve();\n  }\n}\n\nfunction downloadFile(file: Blob, fileName: string): void {\n  // Temporarily create hidden <a> tag to download pathwayBlob\n  // File name is set to <pathway-name>.json\n  const url = window.URL.createObjectURL(file);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = fileName;\n  a.click();\n  window.URL.revokeObjectURL(url);\n}\n\nexport function exportPathway(\n  pathway: Pathway,\n  pathways: Pathway[],\n  criteria: Criteria[],\n  cpg: boolean\n): string {\n  const elm = generateNavigationalElm(pathway);\n  const pathwayWithElm = setNavigationalElm(pathway, elm);\n  let pathwayToExport: Pathway | Bundle = pathwayWithElm;\n  if (cpg) {\n    const exporter = new CPGExporter(pathwayWithElm, pathways, criteria);\n    pathwayToExport = exporter.export();\n  } else {\n    const exporter = new CaminoExporter(pathwayWithElm, criteria);\n    pathwayToExport = exporter.export();\n  }\n  return JSON.stringify(pathwayToExport, undefined, 2);\n}\n\nfunction generateNavigationalElm(pathway: Pathway): ElmLibrary {\n  const elm: ElmLibrary = {\n    library: {\n      identifier: {\n        id: pathway.id,\n        version: '1.0.0'\n      },\n      schemaIdentifier: {\n        id: 'urn:hl7-org:elm',\n        version: 'r1'\n      },\n      usings: {\n        def: [\n          {\n            localIdentifier: 'System',\n            uri: 'urn:hl7-org:elm-types:r1'\n          },\n          {\n            localId: '1',\n            locator: '3:1-3:26',\n            localIdentifier: 'FHIR',\n            uri: 'http://hl7.org/fhir',\n            version: '4.0.0'\n          }\n        ]\n      },\n      statements: {\n        def: [\n          {\n            locator: '13:1-13:15',\n            name: 'Patient',\n            context: 'Patient',\n            expression: {\n              type: 'SingletonFrom',\n              operand: {\n                locator: '13:1-13:15',\n                dataType: '{http://hl7.org/fhir}Patient',\n                type: 'Retrieve'\n              }\n            }\n          }\n        ]\n      },\n      includes: { def: [] },\n      valueSets: { def: [] },\n      codes: { def: [] },\n      codeSystems: { def: [] }\n    }\n  };\n\n  Object.keys(pathway.nodes).forEach((nodeKey: string) => {\n    const node = pathway.nodes[nodeKey];\n    if ('elm' in node && node.elm) {\n      mergeElm(elm, node.elm);\n      const elmStatement = produce(getElmStatement(node.elm), (draftElmStatement: ElmStatement) => {\n        draftElmStatement.name = node.key;\n      });\n      elm.library.statements.def.push(elmStatement);\n    }\n\n    node.transitions.forEach((transition: Transition) => {\n      if (transition.condition?.elm) {\n        // Add tranistion.condition.elm to elm\n        mergeElm(elm, transition.condition.elm);\n        const elmStatement = produce(\n          getElmStatement(transition.condition.elm),\n          (draftElmStatement: ElmStatement) => {\n            draftElmStatement.name = transition.condition?.description ?? 'Unknown';\n          }\n        );\n        elm.library.statements.def.push(elmStatement);\n      }\n    });\n  });\n\n  return elm;\n}\n\nfunction mergeElm(elm: ElmLibrary, additionalElm: ElmLibrary): void {\n  // Merge usings\n  additionalElm.library.usings?.def.forEach(using => {\n    // Check if it is in ELM\n    if (!elm.library.usings?.def.find(def => def.uri === using.uri))\n      elm.library.usings?.def.push(using);\n  });\n\n  // Merge includes\n  additionalElm.library.includes?.def.forEach(include => {\n    if (!elm.library.includes?.def.find(def => def.path === include.path))\n      elm.library.includes?.def.push(include);\n  });\n\n  // Merge valueSets\n  additionalElm.library.valueSets?.def.forEach(valueSet => {\n    if (!elm.library.valueSets?.def.find(def => def.id === valueSet.id))\n      elm.library.valueSets?.def.push(valueSet);\n  });\n  // Merge codes\n  additionalElm.library.codes?.def.forEach(code => {\n    if (!elm.library.codes?.def.find(def => def.name === code.name))\n      elm.library.codes?.def.push(code);\n  });\n  // Merge codesystems\n  additionalElm.library.codeSystems?.def.forEach(codesystem => {\n    if (!elm.library.codeSystems?.def.find(def => def.name === codesystem.name))\n      elm.library.codeSystems?.def.push(codesystem);\n  });\n\n  // TODO: merge concepts\n}\n\nfunction getElmStatement(elm: ElmLibrary): ElmStatement {\n  const defaultStatementNames = [\n    'Patient',\n    'MeetsInclusionCriteria',\n    'InPopulation',\n    'Recommendation',\n    'Rationale',\n    'Errors'\n  ];\n  const elmStatement = elm.library.statements.def.find(\n    def => !defaultStatementNames.includes(def.name)\n  );\n\n  // elmStatement type is ElmStatement | undefined but criteria\n  // provider validates such a statement exists in the elm\n  return elmStatement as ElmStatement;\n}\n\n// TODO: possibly add more precondition methods\nexport function addPrecondition(\n  pathway: Pathway,\n  id: string,\n  elementName: string,\n  expected: string,\n  cql: string\n): Pathway {\n  const precondition: Precondition = {\n    id: id,\n    elementName: elementName,\n    expected: expected,\n    cql: cql\n  };\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.preconditions.push(precondition);\n  });\n}\n\nexport function setNavigationalElm(pathway: Pathway, elm: object): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if (!draftPathway.elm) draftPathway.elm = {};\n    draftPathway.elm.navigational = elm;\n  });\n}\n\nexport function setPreconditionElm(pathway: Pathway, elm: object): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if (!draftPathway.elm) draftPathway.elm = {};\n    draftPathway.elm.preconditions = elm;\n  });\n}\n\nexport function createNode(key?: string): PathwayNode {\n  if (!key) key = shortid.generate();\n  const node: PathwayNode = {\n    key,\n    label: 'New Node',\n    transitions: [],\n    type: 'null'\n  };\n\n  return node;\n}\n\nexport function addNode(pathway: Pathway, node: PathwayNode): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.nodes[node.key] = node;\n  });\n}\n\nexport function setNodeLabel(pathway: Pathway, key: string, label: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.nodes[key].label = label;\n  });\n}\nexport function setNodeReference(\n  pathway: Pathway,\n  key: string,\n  referenceId: string,\n  referenceLabel: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as ReferenceNode).referenceId = referenceId;\n    (draftPathway.nodes[key] as ReferenceNode).referenceLabel = referenceLabel;\n  });\n}\nexport function setNodeType(pathway: Pathway, nodeKey: string, nodeType: string): Pathway {\n  let action: Action;\n  let newPathway: Pathway;\n  switch (nodeType) {\n    case 'MedicationRequest':\n      newPathway = makeNodeAction(pathway, nodeKey);\n      action = {\n        type: 'create',\n        description: '',\n        id: shortid.generate(),\n        resource: {\n          resourceType: nodeType,\n          medicationCodeableConcept: {\n            coding: [\n              {\n                system: '',\n                code: '',\n                display: ''\n              }\n            ]\n          }\n        }\n      };\n      return setNodeAction(newPathway, nodeKey, action);\n    case 'ServiceRequest':\n      newPathway = makeNodeAction(pathway, nodeKey);\n      action = {\n        type: 'create',\n        description: '',\n        id: shortid.generate(),\n        resource: {\n          resourceType: nodeType,\n          code: {\n            coding: [\n              {\n                system: '',\n                code: '',\n                display: ''\n              }\n            ]\n          }\n        }\n      };\n      return setNodeAction(newPathway, nodeKey, action);\n    case 'CarePlan':\n      newPathway = makeNodeAction(pathway, nodeKey);\n      action = {\n        type: 'create',\n        description: '',\n        id: shortid.generate(),\n        resource: {\n          resourceType: nodeType,\n          title: ''\n        }\n      };\n      return setNodeAction(newPathway, nodeKey, action);\n    case 'Observation':\n      return makeNodeBranch(pathway, nodeKey);\n    case 'Reference':\n      return makeNodeReference(pathway, nodeKey);\n    default:\n      console.error('Unknown nodeType: ' + nodeType);\n      return pathway;\n  }\n}\n\nexport function setNodeAction(pathway: Pathway, key: string, action: Action): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as ActionNode).action = action;\n  });\n}\n\nexport function setNodeMcodeCriteria(\n  pathway: Pathway,\n  key: string,\n  mcodeCriteria: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as BranchNode).mcodeCriteria = mcodeCriteria;\n  });\n}\n\nexport function setNodeOtherCriteria(\n  pathway: Pathway,\n  key: string,\n  otherCriteria: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as BranchNode).otherCriteria = otherCriteria;\n  });\n}\n\nexport function addTransition(pathway: Pathway, startNodeKey: string, endNodeKey: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transition: Transition = {\n      id: shortid.generate(),\n      transition: endNodeKey\n    };\n\n    draftPathway.nodes[startNodeKey].transitions.push(transition);\n  });\n}\n\nexport function setTransitionCondition(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string,\n  criteria: Criteria\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const foundTransition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n\n    if (foundTransition) {\n      foundTransition.condition = {\n        description: description,\n        cql: criteria.statement,\n        elm: criteria.elm,\n        criteriaSource: criteria.id\n      };\n    }\n  });\n}\n\nexport function setActionNodeElm(pathway: Pathway, nodeKey: string, elm: ElmLibrary): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[nodeKey] as ActionNode).elm = elm;\n    (draftPathway.nodes[nodeKey] as ActionNode).cql = getElmStatement(elm).name;\n  });\n}\n\n/*\nSet Element Functions\n*/\nexport function setPathwayName(pathway: Pathway, name: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.name = name;\n  });\n}\n\nexport function setPathwayDescription(pathway: Pathway, description: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.description = description;\n  });\n}\n\nexport function setLibrary(pathway: Pathway, library: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.library = [library];\n  });\n}\n\nexport function setTransition(\n  pathway: Pathway,\n  startNodeKey: string,\n  endNodeKey: string,\n  transitionId: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n    if (transition) transition.transition = endNodeKey;\n  });\n}\n\nexport function setTransitionConditionDescription(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const foundTransition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n\n    if (foundTransition?.condition) {\n      foundTransition.condition.description = description;\n    } else if (foundTransition) {\n      foundTransition.condition = {\n        description: description,\n        criteriaSource: '',\n        cql: ''\n      };\n    }\n  });\n}\n\nexport function setTransitionConditionElm(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  criteria: Criteria\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const foundTransition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n\n    if (foundTransition?.condition) {\n      foundTransition.condition.elm = criteria.elm;\n      foundTransition.condition.cql = criteria.statement;\n    }\n  });\n}\n\nexport function setActionCode(action: Action, code: string): Action {\n  return produce(action, (draftAction: Action) => {\n    if (draftAction.resource.medicationCodeableConcept) {\n      draftAction.resource.medicationCodeableConcept.coding[0].code = code;\n    } else {\n      draftAction.resource.code.coding[0].code = code;\n    }\n  });\n}\n\nexport function setActionCodeSystem(action: Action, codeSystem: string): Action {\n  return produce(action, (draftAction: Action) => {\n    if (draftAction.resource.medicationCodeableConcept) {\n      draftAction.resource.medicationCodeableConcept.coding[0].system = codeSystem;\n    } else {\n      draftAction.resource.code.coding[0].system = codeSystem;\n    }\n  });\n}\n\nexport function setActionDescription(action: Action, description: string): Action {\n  return produce(action, (draftaction: Action) => {\n    draftaction.description = description;\n  });\n}\n\nexport function setActionTitle(action: Action, title: string): Action {\n  return produce(action, (draftaction: Action) => {\n    draftaction.resource.title = title;\n  });\n}\n\nexport function setActionResourceDisplay(action: Action, display: string): Action {\n  return produce(action, (draftAction: Action) => {\n    if (draftAction.resource.medicationCodeableConcept) {\n      draftAction.resource.medicationCodeableConcept.coding[0].display = display;\n    } else if (draftAction.resource.title) {\n      draftAction.resource.description = display;\n    } else {\n      draftAction.resource.code.coding[0].display = display;\n    }\n  });\n}\n\nexport function makeNodeAction(pathway: Pathway, nodeKey: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const node = draftPathway.nodes[nodeKey] as ActionNode;\n    node.type = 'action';\n    if (node.cql === undefined && node.action === undefined) {\n      node.cql = '';\n    }\n\n    node.transitions.forEach(transition => {\n      delete transition.condition;\n    });\n  });\n}\n\nexport function makeNodeBranch(pathway: Pathway, nodeKey: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const node = draftPathway.nodes[nodeKey];\n    const newNode: PathwayNode = {\n      key: node.key,\n      label: node.label,\n      transitions: node.transitions,\n      type: 'branch'\n    };\n\n    draftPathway.nodes[nodeKey] = newNode;\n  });\n}\n\nexport function makeNodeReference(pathway: Pathway, nodeKey: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const node = draftPathway.nodes[nodeKey] as ActionNode;\n    const newNode: ReferenceNode = {\n      key: node.key,\n      label: node.label,\n      transitions: node.transitions,\n      referenceId: '',\n      referenceLabel: '',\n      type: 'reference'\n    };\n    draftPathway.nodes[nodeKey] = newNode;\n  });\n}\nexport function createCQL(action: Action, nodeKey: string): string {\n  const resource = action.resource;\n  // CQl identifier cannot start with a number or contain '-'\n  const cqlId = `cql${shortid.generate().replace(/-/g, 'a')}`;\n  let cql = `library ${cqlId} version '1'\\nusing FHIR version '4.0.0'\\n`;\n\n  const codesystemStatement = (system: string): string => `codesystem \"${system}\": '${system}'\\n`;\n\n  const returnStatement = (resourceType: string): string =>\n    `return Tuple{ resourceType: '${resourceType}', id: R.id.value, status: R.status.value}`;\n\n  const retrieveStatement = (resourceType: string): string => `[${resourceType}: \"${cqlId} code\"]`;\n\n  const defineStatement = (): string => `define \"${nodeKey}\":`;\n\n  if (resource.resourceType === 'MedicationRequest') {\n    const coding = resource.medicationCodeableConcept.coding[0];\n\n    cql += codesystemStatement(coding.system);\n\n    // eslint-disable-next-line\n    cql += `code \"${cqlId} code\": '${escape(coding.code)}' from \"${coding.system}\" display '${\n      coding.display\n    }'\\n`;\n    cql += `${defineStatement()}\n      ${retrieveStatement('MedicationRequest')} R ${returnStatement('MedicationRequest')}`;\n  } else if (resource.resourceType === 'ServiceRequest') {\n    const coding = resource.code.coding[0];\n\n    cql += codesystemStatement(coding.system);\n\n    // eslint-disable-next-line\n    cql += `code \"${cqlId} code\": '${escape(coding.code)}' from \"${coding.system}\" display '${\n      coding.display\n    }'\\n`;\n    cql += `${defineStatement()}\n      if exists ${retrieveStatement('Procedure')}\n      then ${retrieveStatement('Procedure')} R ${returnStatement('Procedure')}\n      else ${retrieveStatement('ServiceRequest')} R ${returnStatement('ServiceRequest')}`;\n  } else if (resource.resourceType === 'CarePlan') {\n    cql += `${defineStatement()}\n      [CarePlan] R where R.title.value = '${escape(resource.title)}' ${returnStatement(\n      'CarePlan'\n    )}`;\n  } else {\n    console.error(\n      'Auto generating CQL for action - unsupported resource type: ' + resource.resourceType\n    );\n  }\n\n  return cql;\n}\n\n/*\nRemove Element Function\n*/\nexport function removePrecondition(pathway: Pathway, id: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const preconditions = draftPathway.preconditions.filter(\n      (precondition: Precondition) => precondition.id !== id\n    );\n    draftPathway.preconditions = preconditions;\n  });\n}\n\nexport function removeNavigationalElm(pathway: Pathway): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.elm?.navigational;\n  });\n}\n\nexport function removePreconditionElm(pathway: Pathway): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.elm?.preconditions;\n  });\n}\n\nexport function removeNode(pathway: Pathway, key: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.nodes[key];\n\n    Object.keys(draftPathway.nodes).forEach((nodeKey: string) => {\n      const node = draftPathway.nodes[nodeKey];\n      node.transitions.forEach((transition: Transition) => {\n        if (transition.transition === key)\n          draftPathway.nodes[nodeKey].transitions = draftPathway.nodes[nodeKey].transitions.filter(\n            (filterTransition: Transition) => transition.id !== filterTransition.id\n          );\n      });\n    });\n  });\n}\n\nexport function removeTransitionCondition(\n  pathway: Pathway,\n  nodeKey: string,\n  transitionId: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transition = draftPathway.nodes[nodeKey].transitions.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n    if (transition) delete transition.condition;\n  });\n}\n\nexport function removeTransition(\n  pathway: Pathway,\n  parentNodeKey: string,\n  childNodeKey: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transitions = draftPathway.nodes[parentNodeKey].transitions.filter(\n      (transition: Transition) => transition.transition !== childNodeKey\n    );\n    draftPathway.nodes[parentNodeKey].transitions = transitions;\n  });\n}\n","import React, {\n  FC,\n  createContext,\n  useState,\n  memo,\n  ReactNode,\n  useContext,\n  useCallback\n} from 'react';\nimport { Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\n\ninterface BackendAlertProps {\n  message: string;\n  open: boolean;\n  closeAlert: () => void;\n}\n\nconst BackendAlert: FC<BackendAlertProps> = ({ message, open, closeAlert }) => {\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={6000}\n      onClose={closeAlert}\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n    >\n      <MuiAlert elevation={6} variant=\"filled\" onClose={closeAlert} severity=\"error\">\n        {message}\n      </MuiAlert>\n    </Snackbar>\n  );\n};\n\ninterface AlertContextInterface {\n  setAlertText: (value: string) => void;\n  setOpenAlert: (value: boolean) => void;\n}\n\nexport const AlertContext = createContext<AlertContextInterface>({} as AlertContextInterface);\n\ninterface AlertProviderProps {\n  children: ReactNode;\n}\n\nexport const AlertProvider: FC<AlertProviderProps> = memo(({ children }) => {\n  const [openAlert, setOpenAlert] = useState<boolean>(false);\n  const [alertText, setAlertText] = useState<string>(\n    'An error occured. Please save your work and restart the app.'\n  );\n\n  const handleCloseAlert = useCallback(() => {\n    setOpenAlert(false);\n  }, [setOpenAlert]);\n\n  return (\n    <AlertContext.Provider value={{ setAlertText, setOpenAlert }}>\n      <BackendAlert message={alertText} open={openAlert} closeAlert={handleCloseAlert} />\n      {children}\n    </AlertContext.Provider>\n  );\n});\n\nexport const useAlertContext = (): AlertContextInterface => useContext(AlertContext);\n","import { useEffect, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { Pathway } from 'pathways-model';\nimport config from 'utils/ConfigManager';\nimport { useAlertContext } from 'components/AlertProvider';\n\ninterface UsePathwaysInterface {\n  isLoading: boolean;\n  error: unknown;\n  pathways: Pathway[];\n}\n\nconst usePathways = (): UsePathwaysInterface => {\n  const { setAlertText, setOpenAlert } = useAlertContext();\n  const baseUrl = config.get('pathwaysBackend');\n  const [pathways, setPathway] = useState<Pathway[]>([]);\n\n  const { isLoading, error, data } = useQuery('pathways', () =>\n    fetch(`${baseUrl}/pathway/`)\n      .then(async res => {\n        const data = await res.json();\n        if (res.ok) return data;\n        else {\n          console.error(res);\n          setAlertText(`Error loading pathways. Server returned ${res.status}`);\n          setOpenAlert(true);\n          return [];\n        }\n      })\n      .catch(error => {\n        console.error(error);\n        setAlertText('Error loading pathways. Please restart the server and try again.');\n        setOpenAlert(true);\n        return [];\n      })\n  );\n\n  useEffect(() => {\n    if (!error && !isLoading) setPathway(data as Pathway[]);\n  }, [isLoading, error, data]);\n\n  return { isLoading, error, pathways };\n};\n\nexport default usePathways;\n","import { useEffect, useState } from 'react';\nimport { Criteria } from 'criteria-model';\nimport { useQuery } from 'react-query';\nimport config from 'utils/ConfigManager';\nimport { useAlertContext } from 'components/AlertProvider';\n\ninterface UseCriteriaInterface {\n  isLoading: boolean;\n  error: unknown;\n  criteria: Criteria[];\n}\n\nconst useCriteria = (): UseCriteriaInterface => {\n  const { setAlertText, setOpenAlert } = useAlertContext();\n  const baseUrl = config.get('pathwaysBackend');\n  const [criteria, setCriteria] = useState<Criteria[]>([]);\n\n  const { isLoading, error, data } = useQuery('criteria', () =>\n    fetch(`${baseUrl}/criteria/`)\n      .then(async res => {\n        const data = await res.json();\n        if (res.ok) return data;\n        else {\n          console.error(res);\n          setAlertText(`Error loading criteria. Server returned ${res.status}`);\n          setOpenAlert(true);\n          return [];\n        }\n      })\n      .catch(error => {\n        console.error(error);\n        setAlertText('Error loading criteria. Please restart the server and try again.');\n        setOpenAlert(true);\n        return [];\n      })\n  );\n\n  useEffect(() => {\n    if (!error && !isLoading) setCriteria(data as Criteria[]);\n  }, [isLoading, error, data]);\n\n  return { isLoading, error, criteria };\n};\n\nexport default useCriteria;\n","import React, { FC, memo, useCallback } from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { downloadPathway } from 'utils/builder';\nimport { Pathway } from 'pathways-model';\nimport usePathways from 'hooks/usePathways';\nimport useCriteria from 'hooks/useCriteria';\n\ninterface ContextualExportMenuProps {\n  anchorEl: HTMLElement | null;\n  closeMenu: () => void;\n}\n\ninterface ExportMenuPropsInterface extends ContextualExportMenuProps {\n  pathway: Pathway[] | null;\n}\n\nconst ExportMenu: FC<ExportMenuPropsInterface> = ({ pathway, anchorEl, closeMenu }) => {\n  const { pathways } = usePathways();\n  const { criteria } = useCriteria();\n\n  const exportPathway = useCallback(() => {\n    if (pathway) downloadPathway(pathway, pathways, criteria);\n    else alert('No pathway to download!');\n    closeMenu();\n  }, [pathway, pathways, criteria, closeMenu]);\n\n  const exportCPG = useCallback(() => {\n    if (pathway) downloadPathway(pathway, pathways, criteria, true);\n    else alert('No pathway to download!');\n    closeMenu();\n  }, [pathway, pathways, criteria, closeMenu]);\n\n  return (\n    <Menu\n      id=\"pathway-options-menu\"\n      anchorEl={anchorEl}\n      getContentAnchorEl={null}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n      keepMounted\n      open={Boolean(anchorEl)}\n      onClose={closeMenu}\n    >\n      <MenuItem onClick={exportPathway}>\n        Export Pathway{pathway?.length && pathway.length > 1 ? 's' : ''}\n      </MenuItem>\n      <MenuItem onClick={exportCPG}>Export to CPG</MenuItem>\n    </Menu>\n  );\n};\n\nconst ContextualExportMenu: FC<ContextualExportMenuProps> = ({ anchorEl, closeMenu }) => {\n  const { pathway } = useCurrentPathwayContext();\n\n  return (\n    <ExportMenu pathway={pathway ? [pathway] : null} anchorEl={anchorEl} closeMenu={closeMenu} />\n  );\n};\n\nexport default memo(ExportMenu);\nexport { ContextualExportMenu };\n","import React, { FC, useCallback, useState, MouseEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faEllipsisH, faRedo, faUndo } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, Tooltip } from '@material-ui/core';\n\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { ContextualExportMenu } from 'components/elements/ExportMenu';\n\nconst Navigation: FC = () => {\n  const { resetCurrentCriteria } = useCurrentCriteriaContext();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const {\n    pathway,\n    canUndoPathway,\n    canRedoPathway,\n    undoPathway,\n    redoPathway\n  } = useCurrentPathwayContext();\n  const styles = useStyles();\n  const history = useHistory();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleGoBack = useCallback((): void => {\n    resetCurrentCriteria();\n    history.push('/builder');\n  }, [history, resetCurrentCriteria]);\n\n  return (\n    <nav className={styles.root}>\n      <div>\n        <IconButton className={styles.backButton} onClick={handleGoBack} aria-label=\"go back\">\n          <FontAwesomeIcon icon={faChevronLeft} className={styles.navigationIcons} />\n        </IconButton>\n\n        <span className={styles.pathwayName}>{pathway?.name}</span>\n      </div>\n      <div>\n        <Tooltip placement=\"top\" title=\"Undo\" arrow>\n          <span>\n            <IconButton onClick={undoPathway} disabled={!canUndoPathway} aria-label=\"undo\">\n              <FontAwesomeIcon icon={faUndo} className={styles.navigationIcons} />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip placement=\"top\" title=\"Redo\" arrow>\n          <span>\n            <IconButton onClick={redoPathway} disabled={!canRedoPathway} aria-label=\"redo\">\n              <FontAwesomeIcon icon={faRedo} className={styles.navigationIcons} />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <IconButton onClick={openMenu} aria-controls=\"pathway-options-menu\" aria-haspopup=\"true\">\n          <FontAwesomeIcon icon={faEllipsisH} className={styles.navigationIcons} />\n        </IconButton>\n        <ContextualExportMenu anchorEl={anchorEl} closeMenu={closeMenu} />\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding,\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.common.gray,\n      width: '33%',\n      minWidth: '550px',\n      overflowY: 'scroll'\n    },\n    formControl: {\n      margin: theme.spacing(1, 0),\n      minWidth: 375\n    },\n    referenceDropdown: {\n      display: 'flex'\n    },\n    referenceChevron: {\n      fontSize: '2em',\n      marginLeft: '1em',\n      lineHeight: '2.5em',\n      cursor: 'pointer',\n      '&:hover': {\n        color: theme.palette.common.grayLightest\n      }\n    },\n    divider: {\n      width: '100%'\n    },\n    headerLabelStart: {\n      cursor: 'default'\n    },\n    displayText: {\n      margin: '0 0 5px 0',\n      fontWeight: 900,\n      fontSize: '1em'\n    },\n    sidebarHeader: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    sidebarHeaderGroup: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    sidebarHeaderButton: {\n      height: '45px',\n      width: '45px',\n      color: theme.palette.text.primary\n    },\n    headerLabelGroup: {\n      display: 'flex',\n      cursor: 'pointer',\n      height: '60px'\n    },\n    headerLabel: {\n      display: 'flex',\n      alignItems: 'center',\n      fontSize: '1.6em',\n      fontWeight: 700,\n      margin: '0 5px'\n    },\n    headerLabelText: {\n      marginBottom: '5px'\n    },\n    editIcon: {\n      fontSize: '0.6em',\n      marginLeft: '10px'\n    },\n    sidebarButtonGroup: {\n      display: 'flex',\n      margin: '10px 0'\n    },\n    sidebarButtonGroupExtraMargin: {\n      display: 'flex',\n      margin: '20px 0 10px 0'\n    },\n    sidebarButton: {\n      minWidth: 180,\n      marginRight: '20px'\n    },\n    sidebarButtonText: {\n      fontStyle: 'italic'\n    },\n    outlinedDiv: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start'\n    },\n    outlinedDivError: {\n      borderColor: `${theme.palette.error.main} !important`,\n      '&:hover': {\n        borderColor: `${theme.palette.error.main} !important`\n      }\n    },\n    toggleSidebar: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      float: 'left',\n      width: '50px',\n      minWidth: '50px',\n      height: '50px',\n      fontSize: '2em',\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.text.primary,\n      '&:hover': {\n        cursor: 'pointer'\n      }\n    },\n    cancelButton: {\n      alignSelf: 'flex-end',\n      marginTop: '5px',\n      padding: '5px 15px',\n      fontSize: '1em'\n    },\n    editButton: {\n      marginLeft: '1em',\n      alignSelf: 'flex-end',\n      marginTop: '5px',\n      padding: '5px 15px',\n      fontSize: '1em',\n      backgroundColor: theme.palette.primary.main,\n      borderColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main\n      }\n    },\n    buildCriteriaContainer: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    buildCriteriaText: {\n      marginTop: '0.5em',\n      marginBottom: '1em'\n    },\n    saveButton: {\n      marginLeft: '1em',\n      backgroundColor: theme.palette.error.main,\n      borderColor: theme.palette.error.main,\n      '&:hover': {\n        backgroundColor: theme.palette.error.main\n      }\n    },\n    transitionContainer: {\n      backgroundColor: theme.palette.common.grayVeryDark,\n      padding: '5px 15px',\n      margin: '15px 0'\n    },\n    dividerHeader: {\n      width: '100%',\n      textTransform: 'uppercase',\n      borderBottom: '1px solid ' + theme.palette.common.blueLighter,\n      color: theme.palette.common.blueLighter,\n      lineHeight: '0.1em',\n      margin: '10px 0 20px',\n      fontWeight: 800,\n      paddingLeft: '15px',\n      '& span': {\n        background: theme.palette.common.gray,\n        padding: '0 10px'\n      }\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    },\n    dialogContent: {\n      color: theme.palette.common.black,\n      fontSize: '16px',\n      display: 'flex',\n      marginTop: '-25px'\n    },\n    dialogContentText: {\n      paddingLeft: '10px',\n      lineHeight: '40px'\n    },\n    alertIcon: {\n      color: theme.palette.common.red,\n      fontSize: '40px'\n    },\n    connectDropdown: {\n      margin: 'auto',\n      display: 'flex',\n      flexDirection: 'column',\n      flexWrap: 'nowrap',\n      alignContent: 'center'\n    },\n    connectText: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      fontSize: '0.95em',\n      fontStyle: 'italic'\n    },\n    cancelButtonDropdown: {\n      marginLeft: 'auto',\n      border: 'none',\n      alignSelf: 'center',\n      color: theme.palette.common.blueLighter,\n      fontSize: '1em',\n      fontStyle: 'italic',\n      textTransform: 'none'\n    },\n    criteriaText: {\n      width: '100%'\n    }\n  }),\n  { name: 'Sidebar', index: 1 }\n);\n","import React, { FC, memo, useCallback, ChangeEvent, ReactElement } from 'react';\nimport { InputLabel, FormControl, TextField, Select, MenuItem } from '@material-ui/core';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Autocomplete } from '@material-ui/lab';\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface DropDownProps {\n  id: string;\n  label: string;\n  options: Array<Option>;\n  value?: string;\n  onChange: Function | null;\n  autocomplete?: boolean;\n}\n\nconst DropDown: FC<DropDownProps> = ({\n  id,\n  label,\n  options,\n  value,\n  onChange,\n  autocomplete = true\n}: DropDownProps) => {\n  const handleSetSelected = useCallback(\n    (event: ChangeEvent<{ value: unknown }>): void => {\n      if (onChange) onChange(event.target.value || '');\n    },\n    [onChange]\n  );\n\n  const handleAutoSelected = useCallback(\n    (event: ChangeEvent<{}>, value: Option | null): void => {\n      if (onChange && value) onChange(value.value);\n    },\n    [onChange]\n  );\n\n  const getValue = (value: string | undefined): Option | undefined => {\n    return options.find(option => {\n      return option.value === value;\n    });\n  };\n\n  const renderAuto = (): ReactElement => {\n    return (\n      <Autocomplete\n        fullWidth\n        onChange={handleAutoSelected}\n        value={getValue(value) || null}\n        popupIcon={<FontAwesomeIcon icon={faCaretDown} style={{ color: 'white' }} />}\n        options={options}\n        getOptionLabel={(option): string => option.label}\n        renderOption={(option: Option): ReactElement => (\n          <div key={option.value} style={{ color: 'black' }}>\n            {option.label}\n          </div>\n        )}\n        renderInput={(params): ReactElement => (\n          <TextField\n            error={value == null || value === ''}\n            {...params}\n            variant=\"outlined\"\n            label={label}\n          />\n        )}\n      />\n    );\n  };\n\n  const renderManual = (): ReactElement => {\n    return (\n      <FormControl variant=\"outlined\" fullWidth>\n        <InputLabel id={id} htmlFor={`${id}-select`}>\n          {label}\n        </InputLabel>\n\n        <Select\n          id={`${id}-select`}\n          value={value || ''}\n          onChange={handleSetSelected}\n          label={label}\n          error={value == null || value === ''}\n          MenuProps={{\n            getContentAnchorEl: null,\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'center'\n            },\n            transformOrigin: {\n              vertical: 'top',\n              horizontal: 'center'\n            }\n          }}\n          displayEmpty\n        >\n          {options.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  return <>{autocomplete ? renderAuto() : renderManual()}</>;\n};\n\nexport default memo(DropDown);\n","import React, {\n  FC,\n  createContext,\n  useState,\n  memo,\n  ReactNode,\n  useContext,\n  useCallback\n} from 'react';\n\ninterface SnackbarContextInterface {\n  snackbarText: string;\n  openSnackbar: boolean;\n  handleCloseSnackbar: () => void;\n  setSnackbarText: (value: string) => void;\n  setOpenSnackbar: (value: boolean) => void;\n}\n\nexport const SnackbarContext = createContext<SnackbarContextInterface>(\n  {} as SnackbarContextInterface\n);\n\ninterface SnackbarProviderProps {\n  children: ReactNode;\n}\n\nexport const SnackbarProvider: FC<SnackbarProviderProps> = memo(({ children }) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n  const [snackbarText, setSnackbarText] = useState<string>('Deleted Successfully');\n\n  const handleCloseSnackbar = useCallback(() => {\n    setOpenSnackbar(false);\n  }, [setOpenSnackbar]);\n\n  return (\n    <SnackbarContext.Provider\n      value={{ snackbarText, openSnackbar, handleCloseSnackbar, setSnackbarText, setOpenSnackbar }}\n    >\n      {children}\n    </SnackbarContext.Provider>\n  );\n});\n\nexport const useSnackbarContext = (): SnackbarContextInterface => useContext(SnackbarContext);\n","import React, { FC, memo, useCallback } from 'react';\nimport { Snackbar, Button, IconButton } from '@material-ui/core';\nimport { useSnackbarContext } from 'components/SnackbarProvider';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\n\nconst DeleteSnackbar: FC = () => {\n  const { undoPathway } = useCurrentPathwayContext();\n  const { snackbarText, openSnackbar, handleCloseSnackbar } = useSnackbarContext();\n\n  const undo = useCallback(() => {\n    undoPathway();\n    handleCloseSnackbar();\n  }, [undoPathway, handleCloseSnackbar]);\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right'\n      }}\n      open={openSnackbar}\n      autoHideDuration={10000}\n      onClose={handleCloseSnackbar}\n      message={snackbarText}\n      action={\n        <React.Fragment>\n          <Button color=\"secondary\" size=\"small\" onClick={undo}>\n            UNDO\n          </Button>\n          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\n            <FontAwesomeIcon icon={faTimes} />\n          </IconButton>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default memo(DeleteSnackbar);\n","import { Pathway, PathwayNode } from 'pathways-model';\nimport { useParams } from 'react-router-dom';\nconst useCurrentNodeStatic = (pathway: Pathway | null): PathwayNode | undefined => {\n  const { nodeId } = useParams<{ nodeId: string }>();\n  const currentNodeId = decodeURIComponent(nodeId);\n  const currentNodeStatic = pathway?.nodes[currentNodeId];\n  return currentNodeStatic;\n};\nexport default useCurrentNodeStatic;\n","import React, { useState, memo, useCallback, FC } from 'react';\nimport { SidebarButton } from 'components/Sidebar';\nimport DropDown from 'components/elements/DropDown';\nimport useStyles from './styles';\nimport { addTransition } from 'utils/builder';\nimport { getConnectableNodes } from 'utils/nodeUtils';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\n\nimport { faLevelDownAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\nimport { PathwayNode } from 'pathways-model';\nimport useCurrentNodeStatic from 'hooks/useCurrentNodeStatic';\n\ninterface ConnectNodeButtonProps {\n  currentNode: PathwayNode | null;\n}\n\nconst ConnectNodeButton: FC<ConnectNodeButtonProps> = ({ currentNode }) => {\n  const { pathway, pathwayRef, setCurrentPathway } = useCurrentPathwayContext();\n  const currentNodeStatic = useCurrentNodeStatic(pathwayRef.current);\n\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const options: Array<{ label: string; value: string }> =\n    currentNode && pathway ? getConnectableNodes(pathway, currentNode) : [];\n  const optionsAvailable = options.length > 0;\n\n  const connectToNode = useCallback(\n    (nodeKey: string): void => {\n      if (pathwayRef.current && currentNodeStatic)\n        setCurrentPathway(addTransition(pathwayRef.current, currentNodeStatic.key, nodeKey));\n      setOpen(false);\n    },\n    [setCurrentPathway, currentNodeStatic, pathwayRef]\n  );\n\n  const showDropdown = useCallback(() => {\n    setOpen(!open);\n  }, [open]);\n\n  return (\n    <div>\n      {!open && (\n        <SidebarButton\n          buttonName=\"Connect Node\"\n          buttonIcon={faLevelDownAlt}\n          buttonText=\"Create a transition to an existing node in the pathway.\"\n          onClick={showDropdown}\n          disabled={!optionsAvailable}\n          hasTooltip={!optionsAvailable}\n          tooltipTitle=\"There are no possible nodes to connect to.\"\n        />\n      )}\n      {open && optionsAvailable && (\n        <div className={styles.connectDropdown}>\n          <DropDown\n            id=\"transitions\"\n            label=\"Node To Connect To\"\n            options={options}\n            onChange={connectToNode}\n          />\n          <div className={styles.connectText}>\n            Select node from list to add transition.\n            <Button\n              className={styles.cancelButtonDropdown}\n              size=\"small\"\n              variant=\"text\"\n              onClick={showDropdown}\n            >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(ConnectNodeButton);\n","import React, { FC, memo, useCallback, useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport {\n  SidebarHeader,\n  ActionNodeEditor,\n  SidebarButton,\n  TransitionEditor,\n  BranchTransition,\n  ReferenceNodeEditor\n} from 'components/Sidebar';\nimport { setNodeType, addTransition, createNode, addNode } from 'utils/builder';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { isBranchNode, redirect, getNodeType } from 'utils/nodeUtils';\nimport { nodeTypeOptions } from 'utils/nodeUtils';\nimport DropDown from 'components/elements/DropDown';\nimport DeleteSnackbar from './DeleteSnackbar';\nimport ConnectNodeButton from 'components/Sidebar/ConnectNodeButton';\nimport { PathwayNode } from 'pathways-model';\nimport useCurrentNodeStatic from 'hooks/useCurrentNodeStatic';\n\ninterface SidebarProps {\n  currentNode: PathwayNode | null;\n}\n\nconst Sidebar: FC<SidebarProps> = ({ currentNode }) => {\n  const { pathway, pathwayRef, setCurrentPathway } = useCurrentPathwayContext();\n  const currentNodeStatic = useCurrentNodeStatic(pathway);\n  const [isExpanded, setIsExpanded] = useState<boolean>(true);\n  const styles = useStyles();\n  const history = useHistory();\n  const sidebarContainerElement = useRef<HTMLDivElement>(null);\n\n  const toggleSidebar = useCallback((): void => {\n    setIsExpanded(!isExpanded);\n  }, [isExpanded]);\n\n  const changeNodeType = useCallback(\n    (nodeType: string): void => {\n      if (currentNodeStatic && pathwayRef.current)\n        setCurrentPathway(setNodeType(pathwayRef.current, currentNodeStatic.key, nodeType));\n    },\n    [pathwayRef, setCurrentPathway, currentNodeStatic]\n  );\n\n  const addPathwayNode = useCallback((): void => {\n    if (!currentNodeStatic || !pathwayRef.current) return;\n\n    const newNode = createNode();\n    let newPathway = addNode(pathwayRef.current, newNode);\n    newPathway = addTransition(newPathway, currentNodeStatic.key, newNode.key);\n    setCurrentPathway(newPathway);\n    if (!isBranchNode(currentNodeStatic)) redirect(pathwayRef.current.id, newNode.key, history);\n  }, [pathwayRef, setCurrentPathway, currentNodeStatic, history]);\n\n  if (!pathway) return <div>Error: No pathway</div>;\n  if (!currentNode) return <div>Error: No current node</div>;\n\n  if (currentNode.type === 'start') {\n    return (\n      <>\n        {isExpanded && (\n          <div className={styles.root} ref={sidebarContainerElement}>\n            <SidebarHeader node={currentNode} isTransition={false} />\n            <h5 className={styles.dividerHeader}>\n              <></>{' '}\n            </h5>\n            <SidebarButton\n              buttonName=\"Add Node\"\n              buttonIcon={faPlus}\n              buttonText=\"Add a new transition to a new node in the pathway.\"\n              onClick={addPathwayNode}\n            />\n          </div>\n        )}\n\n        <div className={styles.toggleSidebar} onClick={toggleSidebar}>\n          <FontAwesomeIcon icon={isExpanded ? faChevronLeft : faChevronRight} />\n        </div>\n        <DeleteSnackbar />\n      </>\n    );\n  } else {\n    const nodeType = getNodeType(currentNode);\n    const displayTransitions = nodeType !== 'start' || currentNode.transitions.length === 0;\n\n    return (\n      <>\n        {isExpanded && (\n          <div className={styles.root} ref={sidebarContainerElement}>\n            <SidebarHeader node={currentNode} isTransition={false} />\n\n            <h5 className={styles.dividerHeader}>\n              <span>Details</span>\n            </h5>\n\n            {nodeType === 'null' && (\n              <DropDown\n                id=\"nodeType\"\n                label=\"Node Type\"\n                options={nodeTypeOptions}\n                onChange={changeNodeType}\n                value=\"\"\n              />\n            )}\n            {nodeType === 'reference' && (\n              <ReferenceNodeEditor changeNodeType={changeNodeType} currentNode={currentNode} />\n            )}\n            {nodeType === 'action' && (\n              <ActionNodeEditor changeNodeType={changeNodeType} currentNode={currentNode} />\n            )}\n\n            {nodeType === 'branch' && (\n              <DropDown\n                id=\"nodeType\"\n                label=\"Node Type\"\n                options={nodeTypeOptions}\n                onChange={changeNodeType}\n                value=\"Observation\"\n              />\n            )}\n\n            <h5 className={styles.dividerHeader}>\n              <span>Transitions</span>\n            </h5>\n\n            {currentNode?.transitions.map(transition => {\n              return (\n                <TransitionEditor key={transition.id} transition={transition}>\n                  {nodeType === 'branch' && (\n                    <BranchTransition\n                      key={transition.id}\n                      transition={transition}\n                      currentNode={currentNode}\n                    />\n                  )}\n                </TransitionEditor>\n              );\n            })}\n\n            {displayTransitions && (\n              <>\n                <SidebarButton\n                  buttonName=\"Add New Node\"\n                  buttonIcon={faPlus}\n                  buttonText=\"Add a new transition to a new node in the pathway.\"\n                  onClick={addPathwayNode}\n                />\n                <ConnectNodeButton currentNode={currentNode} />\n              </>\n            )}\n          </div>\n        )}\n        <div className={styles.toggleSidebar} onClick={toggleSidebar}>\n          <FontAwesomeIcon icon={isExpanded ? faChevronLeft : faChevronRight} />\n        </div>\n        <DeleteSnackbar />\n      </>\n    );\n  }\n};\n\nexport default memo(Sidebar);\n","import React, { FC, memo, useCallback, useRef, useState, KeyboardEvent, FocusEvent } from 'react';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEdit,\n  faChevronLeft,\n  faChevronRight,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, FormControl, Input, Tooltip } from '@material-ui/core';\n\nimport { PathwayNode } from 'pathways-model';\nimport { setNodeLabel, removeNode, removeTransition } from 'utils/builder';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useHistory } from 'react-router-dom';\nimport { canDeleteNode, redirect, findParents, willOrphanChild } from 'utils/nodeUtils';\nimport { DeleteModal } from '.';\nimport { useSnackbarContext } from 'components/SnackbarProvider';\nimport useCurrentNodeStatic from 'hooks/useCurrentNodeStatic';\n\ninterface SidebarHeaderProps {\n  node: PathwayNode;\n  isTransition?: boolean;\n}\n\nconst SidebarHeader: FC<SidebarHeaderProps> = ({ node, isTransition = false }) => {\n  const [showInput, setShowInput] = useState<boolean>(false);\n  const [openTooltip, setOpenTooltip] = useState<boolean>(false);\n  const [openDelete, setOpenDelete] = useState<boolean>(false);\n  const { setSnackbarText, setOpenSnackbar } = useSnackbarContext();\n  const { pathway, pathwayRef, setCurrentPathway } = useCurrentPathwayContext();\n  const currentNodeStatic = useCurrentNodeStatic(pathway);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const nodeLabel = node?.label || '';\n  const styles = useStyles();\n  const history = useHistory();\n\n  const goToParentNode = useCallback(() => {\n    if (!pathwayRef.current) return;\n    const parents = findParents(pathwayRef.current.nodes, node.key);\n    redirect(pathwayRef.current.id, parents[0], history);\n  }, [history, pathwayRef, node.key]);\n\n  const redirectToNode = useCallback(() => {\n    if (!pathwayRef.current) return;\n    redirect(pathwayRef.current.id, node.key, history);\n  }, [history, pathwayRef, node.key]);\n\n  const changeNodeLabel = useCallback(() => {\n    const label = inputRef.current?.value ?? '';\n    if (pathwayRef.current) setCurrentPathway(setNodeLabel(pathwayRef.current, node.key, label));\n    setShowInput(false);\n  }, [pathwayRef, setCurrentPathway, node.key]);\n\n  const handleShowInput = useCallback(() => {\n    setShowInput(true);\n  }, []);\n\n  const deleteNode = useCallback(() => {\n    if (pathwayRef.current && canDeleteNode(pathwayRef.current, node.transitions)) {\n      const parents = findParents(pathwayRef.current.nodes, node.key);\n      setCurrentPathway(removeNode(pathwayRef.current, node.key));\n      redirect(pathwayRef.current.id, parents[0], history);\n      setOpenDelete(false);\n      setSnackbarText(`${node.label} node deleted successfully`);\n      setOpenSnackbar(true);\n    }\n  }, [\n    pathwayRef,\n    setCurrentPathway,\n    setSnackbarText,\n    setOpenSnackbar,\n    node.key,\n    node.label,\n    node.transitions,\n    history\n  ]);\n\n  const deleteTransition = useCallback(() => {\n    if (currentNodeStatic && pathwayRef.current && !willOrphanChild(pathwayRef.current, node.key)) {\n      setCurrentPathway(removeTransition(pathwayRef.current, currentNodeStatic.key, node.key));\n      setOpenDelete(false);\n      setSnackbarText(\n        `Transition from ${currentNodeStatic.label} to ${node.label} deleted successfully`\n      );\n      setOpenSnackbar(true);\n    }\n  }, [pathwayRef, currentNodeStatic, setCurrentPathway, setSnackbarText, setOpenSnackbar, node]);\n\n  const openDeleteModal = useCallback((): void => {\n    setOpenDelete(true);\n  }, []);\n\n  const closeDeleteModal = useCallback((): void => {\n    setOpenDelete(false);\n  }, []);\n\n  const handleOpenTooltip = useCallback((): void => {\n    setOpenTooltip(true);\n  }, []);\n\n  const handleCloseTooltip = useCallback((): void => {\n    setOpenTooltip(false);\n  }, []);\n\n  const handleKeyPress = useCallback(\n    (event: KeyboardEvent<HTMLDivElement>): void => {\n      if (event.key === 'Enter') changeNodeLabel();\n    },\n    [changeNodeLabel]\n  );\n\n  const deleteNodeDisabled = pathway ? !canDeleteNode(pathway, node.transitions) : true;\n  const deleteTransitionDisabled = pathway ? willOrphanChild(pathway, node.key) : true;\n  const deleteDisabled = isTransition ? deleteTransitionDisabled : deleteNodeDisabled;\n  const titleText = isTransition\n    ? 'Deleting this transition would result in an orphaned node. To delete, first add the child node as a transition to another node, or delete it directly.'\n    : 'Deleting this node would result in an orphaned descendent node. To delete, first add another transition to the would-be orphaned node from another node, or delete it directly.';\n\n  return (\n    <div className={styles.sidebarHeader}>\n      <div className={styles.sidebarHeaderGroup}>\n        {node.type !== 'start' && !isTransition && (\n          <IconButton\n            className={styles.sidebarHeaderButton}\n            onClick={goToParentNode}\n            aria-label=\"go to parent node\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft} />\n          </IconButton>\n        )}\n\n        <div className={styles.headerLabelGroup} onClick={handleShowInput}>\n          {showInput && node.type !== 'start' ? (\n            <FormControl className={styles.formControl} fullWidth>\n              <Input\n                className={styles.headerLabel}\n                type=\"text\"\n                inputRef={inputRef}\n                onBlur={changeNodeLabel}\n                onKeyPress={handleKeyPress}\n                defaultValue={nodeLabel}\n                autoFocus\n                onFocus={(event: FocusEvent<HTMLInputElement>): void => event.target.select()}\n              />\n            </FormControl>\n          ) : (\n            <div\n              className={clsx(\n                styles.headerLabel,\n                styles.headerLabelText,\n                node.type === 'start' && styles.headerLabelStart\n              )}\n            >\n              {nodeLabel}\n              {node.key !== 'Start' && (\n                <FontAwesomeIcon className={styles.editIcon} icon={faEdit} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className={styles.sidebarHeaderGroup}>\n        {node.type !== 'start' && (\n          <Tooltip\n            placement=\"top\"\n            open={deleteDisabled ? openTooltip : false}\n            onClose={handleCloseTooltip}\n            onOpen={handleOpenTooltip}\n            title={titleText}\n            arrow\n          >\n            <span>\n              <IconButton\n                className={styles.sidebarHeaderButton}\n                onClick={openDeleteModal}\n                aria-label={isTransition ? 'delete transition' : 'delete node'}\n                disabled={deleteDisabled}\n              >\n                <FontAwesomeIcon icon={faTrashAlt} />\n              </IconButton>\n            </span>\n          </Tooltip>\n        )}\n\n        {isTransition && (\n          <IconButton\n            className={styles.sidebarHeaderButton}\n            onClick={redirectToNode}\n            aria-label={'go to transition node'}\n          >\n            <FontAwesomeIcon icon={faChevronRight} />\n          </IconButton>\n        )}\n      </div>\n\n      <DeleteModal\n        nodeLabel={node.label}\n        isTransition={isTransition}\n        open={openDelete}\n        onDelete={isTransition ? deleteTransition : deleteNode}\n        onClose={closeDeleteModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(SidebarHeader);\n","import React, { FC, memo } from 'react';\nimport { Button, Tooltip, PropTypes } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\n\nimport useStyles from './styles';\n\ninterface SidebarButtonProps {\n  buttonName: string;\n  buttonIcon: IconDefinition;\n  buttonText: string;\n  extraMargin?: boolean;\n  onClick?: () => void;\n  hasTooltip?: boolean;\n  tooltipTitle?: string;\n  disabled?: boolean;\n  buttonColor?: PropTypes.Color;\n}\n\nconst SidebarButton: FC<SidebarButtonProps> = ({\n  buttonName,\n  buttonIcon,\n  buttonText,\n  extraMargin = false,\n  onClick,\n  hasTooltip = false,\n  tooltipTitle = '',\n  disabled = false,\n  buttonColor = 'primary'\n}) => {\n  const styles = useStyles();\n\n  const ConditionalTooltip: FC = ({ children }) =>\n    hasTooltip ? (\n      <Tooltip title={tooltipTitle} placement=\"top\">\n        <span>{children}</span>\n      </Tooltip>\n    ) : (\n      <>{children}</>\n    );\n\n  return (\n    <div className={extraMargin ? styles.sidebarButtonGroupExtraMargin : styles.sidebarButtonGroup}>\n      <ConditionalTooltip>\n        <Button\n          className={styles.sidebarButton}\n          variant=\"contained\"\n          color={buttonColor}\n          startIcon={<FontAwesomeIcon icon={buttonIcon} />}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {buttonName}\n        </Button>\n      </ConditionalTooltip>\n      <div className={styles.sidebarButtonText}>{buttonText}</div>\n    </div>\n  );\n};\n\nexport default memo(SidebarButton);\n","// sample header= \"multipart/form-data;boundary=Boundary_1\"\n// get the part after \"boundary=\" and before any subsequent ;\nexport const extractMultipartBoundary = /.*;boundary=(Boundary.*);?.*/;\n\nexport const extractMultipartFileName = /Content-Disposition: form-data; name=\"([^\"]+)\"/;\n\n// eveything between { } including newlines. [^] is like . but matches newline\nexport const extractJSONContent = /(\\{[^]*\\})/;\n\nexport const extractCQLInclude = /include .* called (.*)/;\n","// External CQL -> ELM service\nimport config from 'utils/ConfigManager';\nimport {\n  extractJSONContent,\n  extractMultipartBoundary,\n  extractMultipartFileName\n} from 'utils/regexes';\nimport { ElmLibrary, ElmLibraries } from 'elm-model';\n\nconst url = config.get('cqlToElmWebserviceUrl');\n\nexport interface CqlLibraries {\n  [name: string]: {\n    cql?: string;\n    version?: string;\n  };\n}\n\n/**\n * Function that requests web_service to convert the cql into elm.\n * @param cqlLibraries - object containing CqlLibraries that is the input to the function.\n * @return The resulting elm translation of the cql libraries.\n */\nexport function convertCQL(cqlLibraries: CqlLibraries): Promise<ElmLibraries> {\n  // Connect to web service\n  const formdata = new FormData();\n  Object.keys(cqlLibraries).forEach((key, i) => {\n    const cqlLibrary = cqlLibraries[key];\n    if (cqlLibrary.cql) {\n      formdata.append(`${key}`, cqlLibrary.cql);\n    }\n  });\n\n  return fetch(url, {\n    method: 'POST',\n    body: formdata\n  }).then(elm => {\n    const header = elm.headers.get('content-type');\n    let boundary = '';\n    if (header) {\n      // sample header= \"multipart/form-data;boundary=Boundary_1\"\n      const result = extractMultipartBoundary.exec(header);\n      boundary = result ? `--${result[1]}` : '';\n    }\n    const elmLibraries: ElmLibraries = {};\n    return elm.text().then(text => {\n      const elms = text.split(boundary).reduce((oldArray, line, i) => {\n        const body = extractJSONContent.exec(line);\n        if (body) {\n          const elmName = extractMultipartFileName.exec(line);\n          if (elmName) oldArray[elmName[1]] = JSON.parse(body[1]);\n        }\n        return oldArray;\n      }, elmLibraries);\n\n      return elms;\n    });\n  });\n}\n\nexport function convertBasicCQL(cql: string): Promise<ElmLibrary> {\n  // Connect to web service\n\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/cql',\n      Accept: 'application/elm+json'\n    },\n    body: cql\n  }).then(elm => elm.json());\n}\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { SidebarButton } from '.';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport {\n  setNodeAction,\n  createCQL,\n  setActionNodeElm,\n  setActionResourceDisplay,\n  setActionCode,\n  setActionDescription,\n  setActionTitle,\n  setActionCodeSystem\n} from 'utils/builder';\nimport DropDown from 'components/elements/DropDown';\nimport { ActionNode, Action, PathwayNode } from 'pathways-model';\nimport useStyles from './styles';\nimport { TextField } from '@material-ui/core';\nimport { convertBasicCQL } from 'engine/cql-to-elm';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport produce from 'immer';\nimport { nodeTypeOptions } from 'utils/nodeUtils';\nimport useCurrentNodeStatic from 'hooks/useCurrentNodeStatic';\n\nconst codeSystemOptions = [\n  { label: 'ICD-9-CM', value: 'http://hl7.org/fhir/sid/icd-9-cm' },\n  { label: 'ICD-10-CM', value: 'http://hl7.org/fhir/sid/icd-10-cm' },\n  { label: 'LOINC', value: 'http://loinc.org' },\n  { label: 'NCI', value: 'http://ncimeta.nci.nih.gov' },\n  { label: 'RXNORM', value: 'http://www.nlm.nih.gov/research/umls/rxnorm' },\n  { label: 'SNOMED', value: 'http://snomed.info/sct' }\n];\n\ninterface ActionNodeEditorProps {\n  changeNodeType: (event: string) => void;\n  currentNode: PathwayNode | null;\n}\n\nconst ActionNodeEditor: FC<ActionNodeEditorProps> = ({ changeNodeType, currentNode }) => {\n  const { pathwayRef, setCurrentPathway } = useCurrentPathwayContext();\n  const currentNodeStatic = useCurrentNodeStatic(pathwayRef.current) as ActionNode;\n  const styles = useStyles();\n\n  const addActionCQL = useCallback(\n    (action: Action, currentNodeKey: string): void => {\n      if (!pathwayRef.current) return;\n\n      const cql = createCQL(action, currentNodeKey);\n      convertBasicCQL(cql).then(elm => {\n        // Disable lint for no-null assertion since it is already checked above\n        // eslint-disable-next-line\n        setCurrentPathway(setActionNodeElm(pathwayRef.current!, currentNodeKey, elm));\n      });\n    },\n    [pathwayRef, setCurrentPathway]\n  );\n\n  const changeCode = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeStatic.action || !pathwayRef.current) return;\n\n      const code = event?.target.value || '';\n      const action = setActionCode(currentNodeStatic.action, code);\n      setCurrentPathway(\n        setNodeAction(pathwayRef.current, currentNodeStatic.key, resetDisplay(action))\n      );\n    },\n    [currentNodeStatic, pathwayRef, setCurrentPathway]\n  );\n\n  const changeDescription = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeStatic.action || !pathwayRef.current) return;\n\n      const description = event?.target.value || '';\n      const action = setActionDescription(currentNodeStatic.action, description);\n      setCurrentPathway(setNodeAction(pathwayRef.current, currentNodeStatic.key, action));\n    },\n    [currentNodeStatic, pathwayRef, setCurrentPathway]\n  );\n\n  const changeTitle = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeStatic.action || !pathwayRef.current) return;\n\n      const title = event?.target.value || '';\n      const action = setActionTitle(currentNodeStatic.action, title);\n      setCurrentPathway(\n        setNodeAction(pathwayRef.current, currentNodeStatic.key, resetDisplay(action))\n      );\n\n      addActionCQL(action, currentNodeStatic.key);\n    },\n    [currentNodeStatic, pathwayRef, setCurrentPathway, addActionCQL]\n  );\n\n  const selectCodeSystem = useCallback(\n    (codeSystem: string): void => {\n      if (!currentNodeStatic.action || !pathwayRef.current) return;\n      const action = setActionCodeSystem(currentNodeStatic.action, codeSystem);\n      setCurrentPathway(\n        setNodeAction(pathwayRef.current, currentNodeStatic.key, resetDisplay(action))\n      );\n    },\n    [currentNodeStatic, pathwayRef, setCurrentPathway]\n  );\n\n  const validateFunction = useCallback((): void => {\n    const currentNode = currentNodeStatic;\n    if (!currentNode.action || !pathwayRef.current) {\n      console.error('No Actions -- Cannot Validate');\n      return;\n    }\n\n    const action = setActionResourceDisplay(currentNode.action, 'Example Text');\n    setCurrentPathway(setNodeAction(pathwayRef.current, currentNode.key, action));\n\n    // TODO: move addActionCQL to builder.ts\n    addActionCQL(action, currentNode.key);\n  }, [currentNodeStatic, pathwayRef, setCurrentPathway, addActionCQL]);\n\n  const resetDisplay = (action: Action): Action => {\n    return produce(action, (draftAction: Action) => {\n      if (draftAction.resource.medicationCodeableConcept) {\n        draftAction.resource.medicationCodeableConcept.coding[0].display = '';\n      } else if (draftAction.resource.resourceType === 'CarePlan') {\n        draftAction.resource.description = '';\n      } else {\n        draftAction.resource.code.coding[0].display = ''; // TODO: actually validate\n      }\n    });\n  };\n\n  const onEnter = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key === 'Enter') {\n      validateFunction();\n    }\n  };\n\n  // The node has a key and is not the start node\n  const action = (currentNode as ActionNode).action;\n  if (!action) return <></>;\n\n  const changeNodeTypeEnabled = currentNode?.key && currentNode.type !== 'start';\n  const resource = action.resource;\n  let system = '';\n  let code = '';\n  let display = '';\n  if (resource.resourceType === 'MedicationRequest' || resource.resourceType === 'ServiceRequest') {\n    system = resource.code\n      ? resource.code.coding[0].system\n      : resource.medicationCodeableConcept.coding[0].system;\n    code = resource.code\n      ? resource.code.coding[0].code\n      : resource.medicationCodeableConcept.coding[0].code;\n    display = resource.code\n      ? resource.code.coding[0].display\n      : resource.medicationCodeableConcept.coding[0].display;\n  } else {\n    display = resource.description;\n  }\n\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <>\n          <DropDown\n            id=\"nodeType\"\n            label=\"Node Type\"\n            options={nodeTypeOptions}\n            onChange={changeNodeType}\n            value={resource.resourceType}\n          />\n\n          {(resource.resourceType === 'MedicationRequest' ||\n            resource.resourceType === 'ServiceRequest') && (\n            <>\n              <DropDown\n                id=\"codeSystem\"\n                label=\"Code System\"\n                options={codeSystemOptions}\n                onChange={selectCodeSystem}\n                value={system}\n              />\n              {system && (\n                <TextField\n                  id=\"code-input\"\n                  label=\"Code\"\n                  value={code}\n                  onChange={changeCode}\n                  variant=\"outlined\"\n                  error={code === ''}\n                  inputProps={{ onKeyPress: onEnter }}\n                />\n              )}\n              {code && (\n                <>\n                  {display ? (\n                    <div className={styles.displayText}>\n                      <FontAwesomeIcon icon={faCheckCircle} /> {display}\n                    </div>\n                  ) : (\n                    <SidebarButton\n                      buttonName=\"Validate\"\n                      buttonIcon={faCheckCircle}\n                      buttonText={display || 'Check validation of the input system and code'}\n                      onClick={validateFunction}\n                    />\n                  )}\n\n                  <TextField\n                    id=\"description-input\"\n                    label=\"Description\"\n                    value={action.description || ''}\n                    onChange={changeDescription}\n                    variant=\"outlined\"\n                    error={action.description === ''}\n                  />\n                </>\n              )}\n            </>\n          )}\n\n          {resource.resourceType === 'CarePlan' && (\n            <>\n              <TextField\n                id=\"title-input\"\n                label=\"Title\"\n                value={resource.title || ''}\n                onChange={changeTitle}\n                variant=\"outlined\"\n                error={resource.title == null}\n                inputProps={{ onKeyPress: onEnter }}\n              />\n              {resource.title && (\n                <TextField\n                  id=\"description-input\"\n                  label=\"Description\"\n                  value={action.description || ''}\n                  onChange={changeDescription}\n                  variant=\"outlined\"\n                  error={action.description === ''}\n                />\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(ActionNodeEditor);\n","import React, { FC, memo, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport DropDown from 'components/elements/DropDown';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { nodeTypeOptions, redirect } from 'utils/nodeUtils';\nimport { Pathway, PathwayNode, ReferenceNode } from 'pathways-model';\nimport { useHistory } from 'react-router-dom';\nimport { setNodeReference } from 'utils/builder';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport usePathways from 'hooks/usePathways';\nimport useCurrentNodeStatic from 'hooks/useCurrentNodeStatic';\n\ninterface ReferenceNodeEditorProps {\n  changeNodeType: (event: string) => void;\n  currentNode: PathwayNode | null;\n}\n\nconst ReferenceNodeEditor: FC<ReferenceNodeEditorProps> = ({ changeNodeType, currentNode }) => {\n  const history = useHistory();\n  const { isLoading, pathways } = usePathways();\n  const { pathway, pathwayRef, setCurrentPathway } = useCurrentPathwayContext();\n  const currentNodeStatic = useCurrentNodeStatic(pathway);\n\n  const pathwayOptions = pathways.map((pathway: Pathway) => {\n    return {\n      label: pathway.name,\n      value: pathway.id\n    };\n  });\n  const styles = useStyles();\n\n  const showReference = useCallback((): void => {\n    const pathwayReferenceId = (currentNode as ReferenceNode).referenceId;\n    const referencedPathway = pathways.find(pathway => {\n      return pathway.id === pathwayReferenceId;\n    });\n    if (referencedPathway) {\n      setCurrentPathway(referencedPathway);\n    }\n  }, [currentNode, pathways, setCurrentPathway]);\n\n  const selectPathwayReference = useCallback(\n    (referenceId: string): void => {\n      const referenceLabel =\n        pathwayOptions.find(option => {\n          return option.value === referenceId;\n        })?.label || '';\n      if (currentNodeStatic && pathwayRef.current)\n        setCurrentPathway(\n          setNodeReference(pathwayRef.current, currentNodeStatic.key, referenceId, referenceLabel)\n        );\n    },\n    [currentNodeStatic, pathwayOptions, pathwayRef, setCurrentPathway]\n  );\n\n  const changeNodeTypeEnabled = currentNode?.key && currentNode.type !== 'start';\n\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <>\n          <div>\n            <DropDown\n              id=\"nodeType\"\n              label=\"Node Type\"\n              options={nodeTypeOptions}\n              onChange={changeNodeType}\n              value=\"Reference\"\n            />\n            <div className={styles.referenceDropdown}>\n              <DropDown\n                id=\"reference\"\n                label=\"Pathway Reference\"\n                options={pathwayOptions}\n                onChange={selectPathwayReference}\n                value={isLoading ? '' : (currentNode as ReferenceNode).referenceId}\n              />\n              <div className={styles.referenceChevron}>\n                <FontAwesomeIcon\n                  icon={faChevronRight}\n                  onClick={(): void => {\n                    showReference();\n                    redirect((currentNode as ReferenceNode).referenceId, '', history);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(ReferenceNodeEditor);\n","import React, {\n  createContext,\n  useCallback,\n  useState,\n  memo,\n  ReactNode,\n  FC,\n  useContext\n} from 'react';\nimport { BuilderModel } from 'criteria-model';\n\ninterface CriteriaBuilderContextInterface {\n  selectedElement: string;\n  selectedDemoElement: string;\n  gender: string;\n  minimumAge: number;\n  maximumAge: number;\n  setSelectedElement: (selectedElement: string) => void;\n  setSelectedDemoElement: (selectedDemoElement: string) => void;\n  setGender: (gender: string) => void;\n  setMinimumAge: (age: number) => void;\n  setMaximumAge: (age: number) => void;\n  resetCriteriaBuilder: () => void;\n  setCriteriaBuilder: (buildCriteria: BuilderModel) => void;\n}\n\nexport const CriteriaBuilderContext = createContext<CriteriaBuilderContextInterface>(\n  {} as CriteriaBuilderContextInterface\n);\n\ninterface CriteriaBuilderProviderProps {\n  children: ReactNode;\n}\n\nexport const CriteriaBuilderProvider: FC<CriteriaBuilderProviderProps> = memo(({ children }) => {\n  const [selectedElement, setSelectedElement] = useState<string>('');\n  const [selectedDemoElement, setSelectedDemoElement] = useState<string>('');\n  const [gender, setGender] = useState<string>('');\n  const [minimumAge, setMinimumAge] = useState<number>(0);\n  const [maximumAge, setMaximumAge] = useState<number>(0);\n\n  const resetCriteriaBuilder = useCallback(() => {\n    setSelectedElement('');\n    setSelectedDemoElement('');\n    setGender('');\n    setMinimumAge(0);\n    setMaximumAge(0);\n  }, [setSelectedElement, setSelectedDemoElement, setGender, setMinimumAge, setMaximumAge]);\n\n  const setCriteriaBuilder = useCallback((buildCriteria: BuilderModel) => {\n    setSelectedElement('Demographics');\n    if (buildCriteria.type === 'gender') {\n      setSelectedDemoElement('Gender');\n      setGender(buildCriteria.gender);\n    } else {\n      setSelectedDemoElement('Age Range');\n      setMinimumAge(buildCriteria.min);\n      setMaximumAge(buildCriteria.max);\n    }\n  }, []);\n\n  return (\n    <CriteriaBuilderContext.Provider\n      value={{\n        selectedElement,\n        selectedDemoElement,\n        gender,\n        minimumAge,\n        maximumAge,\n        setSelectedElement,\n        setSelectedDemoElement,\n        setGender,\n        setMinimumAge,\n        setMaximumAge,\n        resetCriteriaBuilder,\n        setCriteriaBuilder\n      }}\n    >\n      {children}\n    </CriteriaBuilderContext.Provider>\n  );\n});\n\nexport const useCriteriaBuilderContext = (): CriteriaBuilderContextInterface =>\n  useContext(CriteriaBuilderContext);\n","import { BuilderModel, Criteria } from 'criteria-model';\nimport { ElmLibrary, ElmStatement } from 'elm-model';\nimport { convertBasicCQL, convertCQL, CqlLibraries } from 'engine/cql-to-elm';\nimport shortid from 'shortid';\nimport { updateCriteria } from './backend';\n\nconst DEFAULT_ELM_STATEMENTS = [\n  'Patient',\n  'MeetsInclusionCriteria',\n  'InPopulation',\n  'Recommendation',\n  'Rationale',\n  'Errors'\n];\n\nexport function elmLibraryToCriteria(\n  elm: ElmLibrary,\n  cql: string | undefined = undefined,\n  cqlLibraries: CqlLibraries | undefined = undefined,\n  custom = false\n): Criteria[] {\n  // the cql-to-elm webservice always responds with ELM\n  // even if the CQL was complete garbage\n  // TODO: consider showing the error messages from the annotations?\n  if (!elm.library?.identifier?.id) {\n    // we're async right now so don't show an error here\n    // just return empty\n    return [];\n  }\n  const allElmStatements: ElmStatement[] = elm.library.statements.def;\n  let elmStatements = allElmStatements.filter(def => !DEFAULT_ELM_STATEMENTS.includes(def.name));\n  const includesTypes = !!allElmStatements.find(s => s.resultTypeName);\n  if (includesTypes) {\n    // if we have types, filter down to just booleans\n    elmStatements = elmStatements.filter(\n      s => s.resultTypeName === '{urn:hl7-org:elm-types:r1}Boolean'\n    );\n  }\n  if (!elmStatements) {\n    alert('No elm statement found in that file');\n    return [];\n  }\n  const labelTitle = custom\n    ? `Criteria Builder (${elm.library.identifier.id.substring(0, 5)})`\n    : elm.library.identifier.id;\n  return elmStatements.map(statement => {\n    return {\n      id: shortid.generate(),\n      label: `${labelTitle}: ${statement.name}`,\n      display: statement.name,\n      version: elm.library.identifier.version,\n      modified: Date.now(),\n      elm: elm,\n      cql: cql,\n      statement: statement.name,\n      ...(cqlLibraries && { cqlLibraries })\n    };\n  });\n}\n\nexport function cqlToCriteria(cql: string | CqlLibraries): Promise<Criteria[]> {\n  if (typeof cql === 'string')\n    return convertBasicCQL(cql).then(elm => elmLibraryToCriteria(elm, cql));\n  else {\n    return convertCQL(cql).then(elm => {\n      // Append library versions\n      Object.keys(elm).forEach(key => {\n        const cqlLibrary = cql[key];\n        const elmLibrary = elm[key];\n        if (cqlLibrary) cqlLibrary.version = elmLibrary.library.identifier.version;\n      });\n\n      // Loop through all elm libraries searching for criteria, use other libraries as dependencies\n      return Object.keys(elm)\n        .map(key => {\n          // Exclude current library from the list of cql libraries to pass to elmLibraryToCriteria\n          const { [key]: keyToExclude, ...dependencies } = cql;\n          return elmLibraryToCriteria(elm[key], cql[key].cql, dependencies);\n        })\n        .flat(1);\n    });\n  }\n}\n\nexport function jsonToCriteria(rawElm: string): Criteria[] | undefined {\n  const elm = JSON.parse(rawElm);\n  if (!elm.library?.identifier) {\n    alert('Please upload ELM file');\n    return;\n  }\n  return elmLibraryToCriteria(elm);\n}\n\nexport function builderModelToCriteria(\n  criteria: BuilderModel,\n  label: string,\n  id?: string\n): Criteria {\n  return {\n    id: id ? id : shortid.generate(),\n    label,\n    display: label,\n    modified: Date.now(),\n    builder: criteria,\n    statement: label\n  };\n}\n\nexport function addBuilderCriteria(\n  buildCriteria: BuilderModel,\n  label: string,\n  criteriaSource: string | undefined\n): Criteria[] {\n  const newCriteria = builderModelToCriteria(buildCriteria, label, criteriaSource);\n\n  updateCriteria(newCriteria);\n\n  return [newCriteria];\n}\n","import React, { FC, memo, useState, useCallback, ChangeEvent, useMemo, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave, faTools, faTrashAlt, faThList, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport DropDown from 'components/elements/DropDown';\nimport { Button, Checkbox, FormControlLabel, TextField, Box } from '@material-ui/core';\nimport {\n  removeTransitionCondition,\n  setTransitionCondition,\n  setTransitionConditionDescription\n} from 'utils/builder';\nimport { OutlinedDiv, SidebarButton } from '.';\nimport { PathwayNode, Transition } from 'pathways-model';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport { useCriteriaBuilderContext } from 'components/CriteriaBuilderProvider';\nimport { BuilderModel, Criteria } from 'criteria-model';\nimport useCriteria from 'hooks/useCriteria';\nimport { addBuilderCriteria } from 'utils/criteria';\nimport useCurrentNodeStatic from 'hooks/useCurrentNodeStatic';\n\ninterface BranchTransitionProps {\n  transition: Transition;\n  currentNode: PathwayNode | null;\n}\n\nconst BranchTransition: FC<BranchTransitionProps> = ({ transition, currentNode }) => {\n  const styles = useStyles();\n  const { criteria } = useCriteria();\n  const transitionRef = useRef(transition);\n  const {\n    buildCriteriaSelected,\n    setBuildCriteriaSelected,\n    currentCriteriaNodeId,\n    setCurrentCriteriaNodeId,\n    currentCriteria,\n    setCurrentCriteria,\n    criteriaName,\n    setCriteriaName,\n    resetCurrentCriteria\n  } = useCurrentCriteriaContext();\n  const { resetCriteriaBuilder, setCriteriaBuilder } = useCriteriaBuilderContext();\n  const { pathwayRef, setCurrentPathway } = useCurrentPathwayContext();\n  const [useCriteriaSelected, setUseCriteriaSelected] = useState<boolean>(false);\n  const currentNodeStatic = useCurrentNodeStatic(pathwayRef.current);\n  const criteriaOptions = useMemo(() => criteria.map(c => ({ value: c.id, label: c.label })), [\n    criteria\n  ]);\n  const criteriaAvailable = criteriaOptions.length > 0;\n  const displayCriteria =\n    criteriaAvailable &&\n    (useCriteriaSelected || transition.condition?.cql || transition.condition?.description);\n\n  const criteriaDescription = transition.condition?.description;\n  const criteriaIsValid = criteriaDescription != null;\n  const criteriaDisplayIsValid = criteriaDescription && criteriaDescription !== '';\n  const hasCriteria = transition.condition?.cql || transition.condition?.description;\n  const buttonText = hasCriteria ? 'DELETE' : 'CANCEL';\n  const icon = hasCriteria ? <FontAwesomeIcon icon={faTrashAlt} /> : null;\n  const transitionSelected = buildCriteriaSelected && currentCriteriaNodeId === transition.id;\n  // Check if criteria was built by criteria builder\n  let builderElements: BuilderModel | null = null;\n  let builderCriteria: Criteria | undefined;\n  if (transition.condition) {\n    builderCriteria = criteria.find(c => c.id === transition.condition?.criteriaSource);\n    if (builderCriteria?.builder) builderElements = builderCriteria.builder;\n  }\n  const dislayEditCriteria = !transitionSelected && builderElements;\n\n  const handleUseCriteria = useCallback((): void => {\n    if (hasCriteria && currentNodeStatic && pathwayRef.current) {\n      // delete the transition criteria\n      setCurrentPathway(\n        removeTransitionCondition(pathwayRef.current, currentNodeStatic.key, transition.id)\n      );\n      setUseCriteriaSelected(false);\n    } else {\n      setUseCriteriaSelected(!useCriteriaSelected);\n    }\n  }, [\n    useCriteriaSelected,\n    currentNodeStatic,\n    pathwayRef,\n    hasCriteria,\n    transition.id,\n    setCurrentPathway\n  ]);\n\n  const selectCriteriaSource = useCallback(\n    (criteriaId: string): void => {\n      if (!currentNodeStatic || !pathwayRef.current) return;\n\n      const selectedCriteria = criteria.find(c => c.id === criteriaId);\n      if (!selectedCriteria) return;\n      const newPathway = setTransitionCondition(\n        pathwayRef.current,\n        currentNodeStatic.key,\n        transitionRef.current.id,\n        transitionRef.current.condition?.description || selectedCriteria.display,\n        selectedCriteria\n      );\n\n      setCurrentPathway(newPathway);\n    },\n    [currentNodeStatic, setCurrentPathway, pathwayRef, transitionRef, criteria]\n  );\n\n  const setCriteriaDisplay = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeStatic || !pathwayRef.current) return;\n\n      const criteriaDisplay = event?.target.value || '';\n      setCurrentPathway(\n        setTransitionConditionDescription(\n          pathwayRef.current,\n          currentNodeStatic.key,\n          transition.id,\n          criteriaDisplay\n        )\n      );\n    },\n    [currentNodeStatic, transition.id, setCurrentPathway, pathwayRef]\n  );\n\n  const handleCriteriaName = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setCriteriaName(event?.target.value || '');\n    },\n    [setCriteriaName]\n  );\n\n  const handleBuildCriteria = useCallback((): void => {\n    setCurrentCriteriaNodeId(transition.id);\n    setCurrentCriteria(null);\n    setCriteriaName('');\n    if (!buildCriteriaSelected) setBuildCriteriaSelected(true);\n    resetCriteriaBuilder();\n  }, [\n    buildCriteriaSelected,\n    setCurrentCriteriaNodeId,\n    transition,\n    setBuildCriteriaSelected,\n    setCurrentCriteria,\n    resetCriteriaBuilder,\n    setCriteriaName\n  ]);\n\n  const handleEditCriteria = useCallback((): void => {\n    setCurrentCriteriaNodeId(transition.id);\n    setCurrentCriteria(builderElements as BuilderModel);\n    if (builderCriteria?.label) setCriteriaName(builderCriteria?.label);\n    if (!buildCriteriaSelected) setBuildCriteriaSelected(true);\n    if (builderElements) setCriteriaBuilder(builderElements);\n  }, [\n    buildCriteriaSelected,\n    builderCriteria,\n    builderElements,\n    transition,\n    setCurrentCriteriaNodeId,\n    setCurrentCriteria,\n    setCriteriaName,\n    setBuildCriteriaSelected,\n    setCriteriaBuilder\n  ]);\n\n  const handleBuildCriteriaCancel = useCallback((): void => {\n    resetCurrentCriteria();\n    resetCriteriaBuilder();\n  }, [resetCurrentCriteria, resetCriteriaBuilder]);\n\n  const handleBuildCriteriaSave = useCallback(() => {\n    if (!currentNodeStatic || !pathwayRef.current || !currentCriteria?.cql) return;\n\n    const criteria = addBuilderCriteria(\n      currentCriteria,\n      criteriaName,\n      transition.condition?.criteriaSource\n    );\n    const newPathway = setTransitionCondition(\n      pathwayRef.current,\n      currentNodeStatic.key,\n      transitionRef.current.id,\n      criteriaName,\n      criteria[0]\n    );\n\n    setCurrentPathway(newPathway);\n    handleBuildCriteriaCancel();\n  }, [\n    currentNodeStatic,\n    setCurrentPathway,\n    pathwayRef,\n    transitionRef,\n    currentCriteria,\n    criteriaName,\n    transition,\n    handleBuildCriteriaCancel\n  ]);\n\n  return (\n    <>\n      {!displayCriteria && !transitionSelected && (\n        <SidebarButton\n          buttonName=\"Select Criteria\"\n          buttonIcon={faThList}\n          buttonColor=\"secondary\"\n          buttonText=\"Add previously built or imported criteria logic to branch node.\"\n          onClick={handleUseCriteria}\n          disabled={!criteriaAvailable}\n          hasTooltip={!criteriaAvailable}\n          tooltipTitle=\"No criteria to select. Add criteria to use.\"\n        />\n      )}\n\n      {displayCriteria && !transitionSelected && !dislayEditCriteria && (\n        <OutlinedDiv label=\"Criteria Selector\" error={!criteriaIsValid || !criteriaDisplayIsValid}>\n          <>\n            <DropDown\n              id=\"Criteria\"\n              label=\"Criteria\"\n              options={criteriaOptions}\n              onChange={selectCriteriaSource}\n              value={transition.condition?.criteriaSource || undefined}\n            />\n\n            <TextField\n              label=\"Criteria Display\"\n              className={styles.criteriaText}\n              value={transition.condition?.description || ''}\n              variant=\"outlined\"\n              onChange={setCriteriaDisplay}\n              error={!criteriaDisplayIsValid}\n              helperText='Use commas \",\" to separate into multiple lines (up to 3)'\n            />\n          </>\n\n          <Button\n            className={styles.cancelButton}\n            color=\"inherit\"\n            size=\"small\"\n            variant=\"outlined\"\n            startIcon={icon}\n            onClick={handleUseCriteria}\n          >\n            {buttonText}\n          </Button>\n        </OutlinedDiv>\n      )}\n\n      {dislayEditCriteria && (\n        <OutlinedDiv label=\"Criteria Builder\" error={false}>\n          <TextField\n            label=\"Criteria Name\"\n            variant=\"outlined\"\n            value={builderCriteria?.label}\n            fullWidth\n            disabled\n          />\n          <span className={styles.buildCriteriaText}>{builderElements?.text}</span>\n          <div className={styles.buildCriteriaContainer}>\n            <Button\n              className={styles.cancelButton}\n              color=\"inherit\"\n              size=\"small\"\n              variant=\"outlined\"\n              startIcon={icon}\n              onClick={handleUseCriteria}\n            >\n              DELETE CRITERIA\n            </Button>\n            <Button\n              className={styles.editButton}\n              color=\"inherit\"\n              size=\"small\"\n              variant=\"outlined\"\n              startIcon={<FontAwesomeIcon icon={faEdit} />}\n              onClick={handleEditCriteria}\n            >\n              EDIT CRITERIA\n            </Button>\n          </div>\n        </OutlinedDiv>\n      )}\n\n      {!displayCriteria && !transitionSelected && (\n        <SidebarButton\n          buttonName=\"Build Criteria\"\n          buttonColor=\"secondary\"\n          buttonIcon={faTools}\n          buttonText=\"Create new criteria logic to add to branch node.\"\n          extraMargin\n          onClick={handleBuildCriteria}\n        />\n      )}\n\n      {transitionSelected && (\n        <OutlinedDiv label=\"Criteria Builder\" error={!criteriaIsValid || !criteriaDisplayIsValid}>\n          <TextField\n            error={criteriaName === ''}\n            label=\"Criteria Name\"\n            variant=\"outlined\"\n            onChange={handleCriteriaName}\n            value={criteriaName}\n            fullWidth\n          />\n          {currentCriteria?.text && (\n            <span className={styles.buildCriteriaText}>{currentCriteria.text}</span>\n          )}\n          <div className={styles.buildCriteriaContainer}>\n            <FormControlLabel\n              label={<Box fontStyle=\"italic\">Add to reusable criteria</Box>}\n              control={<Checkbox color=\"default\" />}\n              checked\n            />\n            <Button\n              color=\"inherit\"\n              size=\"large\"\n              variant=\"outlined\"\n              onClick={handleBuildCriteriaCancel}\n            >\n              Cancel\n            </Button>\n            <Button\n              className={styles.saveButton}\n              color=\"inherit\"\n              size=\"large\"\n              variant=\"outlined\"\n              startIcon={<FontAwesomeIcon icon={faSave} />}\n              disabled={criteriaName === '' || currentCriteria === null}\n              onClick={handleBuildCriteriaSave}\n            >\n              Save\n            </Button>\n          </div>\n        </OutlinedDiv>\n      )}\n    </>\n  );\n};\n\nexport default memo(BranchTransition);\n","import React, { FC, ReactNode } from 'react';\nimport clsx from 'clsx';\n\nimport TextField from '@material-ui/core/TextField';\nimport useStyles from './styles';\n\ninterface InputComponentProps {\n  children?: ReactNode;\n}\n\nconst InputComponent: FC<InputComponentProps> = ({ children }) => {\n  return <>{children}</>;\n};\n\ninterface OutlinedDivProps {\n  children: ReactNode;\n  label: string;\n  error: boolean;\n}\n\nconst OutlinedDiv: FC<OutlinedDivProps> = ({ children, label, error }) => {\n  const styles = useStyles();\n\n  return (\n    <TextField\n      variant=\"outlined\"\n      label={label}\n      multiline\n      InputLabelProps={{ shrink: true }}\n      InputProps={{\n        inputComponent: InputComponent,\n        classes: {\n          root: clsx(styles.outlinedDiv, error && styles.outlinedDivError),\n          notchedOutline: clsx(error && styles.outlinedDivError)\n        }\n      }}\n      inputProps={{ children }}\n      fullWidth\n    />\n  );\n};\n\n// This is not memoized since one of its props is children\nexport default OutlinedDiv;\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton\n} from '@material-ui/core';\n\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport useCurrentNodeStatic from 'hooks/useCurrentNodeStatic';\n\ninterface DeleteModalProps {\n  open: boolean;\n  nodeLabel: string;\n  isTransition: boolean;\n  onClose: () => void;\n  onDelete: () => void;\n}\n\nconst DeleteModal: FC<DeleteModalProps> = ({\n  open,\n  nodeLabel,\n  isTransition,\n  onClose,\n  onDelete\n}) => {\n  const styles = useStyles();\n  const { pathway } = useCurrentPathwayContext();\n  const currentNodeStatic = useCurrentNodeStatic(pathway);\n\n  const text = isTransition ? (\n    <span>\n      Delete the transition from <strong>{currentNodeStatic?.label}</strong> to{' '}\n      <strong>{nodeLabel}</strong>? This will not delete either node, just the transition between\n      them.\n    </span>\n  ) : (\n    <span>\n      Delete the node <strong>{nodeLabel}</strong>? This will also remove any transitions to this\n      node.\n    </span>\n  );\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"create-pathway\"\n        fullWidth\n        maxWidth=\"md\"\n      >\n        <DialogTitle disableTypography>\n          <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n            <FontAwesomeIcon icon={faTimes} />\n          </IconButton>\n        </DialogTitle>\n\n        <DialogContent className={styles.dialogContent}>\n          <FontAwesomeIcon icon={faExclamationCircle} className={styles.alertIcon} />\n          <p className={styles.dialogContentText}>{text}</p>\n        </DialogContent>\n\n        <DialogActions>\n          <Button variant=\"text\" color=\"primary\" onClick={onClose}>\n            Cancel\n          </Button>\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDelete}>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default memo(DeleteModal);\n","import React, { FC, ReactNode, memo } from 'react';\nimport SidebarHeader from './SidebarHeader';\nimport useStyles from './styles';\nimport { Card } from '@material-ui/core';\nimport { Transition } from 'pathways-model';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\n\ninterface TransitionEditorProps {\n  transition: Transition;\n  children?: ReactNode;\n}\n\nconst TransitionEditor: FC<TransitionEditorProps> = ({ transition, children }) => {\n  const styles = useStyles();\n  const { pathway } = useCurrentPathwayContext();\n  const transitionKey = transition?.transition || '';\n  const transitionNode = pathway?.nodes[transitionKey];\n\n  return (\n    <Card raised className={styles.transitionContainer}>\n      {transitionNode && <SidebarHeader node={transitionNode} isTransition />}\n\n      {children}\n    </Card>\n  );\n};\n\nexport default memo(TransitionEditor);\n","import { useCallback, useState } from 'react';\nimport { graphlib, Node } from 'dagre';\nimport { Edges } from 'graph-model';\n\nexport interface GraphCoordinates {\n  nodes: NodeCoordinates;\n  edges: Edges;\n}\n\nexport interface NodeCoordinates {\n  [nodeName: string]: Node;\n}\n\nexport interface UpdateCoordinatesInterface {\n  graph: graphlib.Graph;\n  graphWidth: number;\n}\n\nexport interface CoordinatesCalculator {\n  coordinates: GraphCoordinates;\n  updateCoordinates: (graph: UpdateCoordinatesInterface) => void;\n}\n\n// number of pixels to add as a buffer to the top of the graph\nconst OFFSET_TOP = 16;\n\nconst useCoordinatesCalculator = (): CoordinatesCalculator => {\n  const [coordinates, setCoordinates] = useState<GraphCoordinates>({\n    nodes: {},\n    edges: {}\n  } as GraphCoordinates);\n\n  const updateCoordinates = useCallback(\n    ({ graph, graphWidth }: UpdateCoordinatesInterface): void => {\n      const startNodeShift = graph.node('Start').x;\n\n      const xOffset = 0 - startNodeShift + graphWidth / 2;\n      let xOffsetCorrection = 0;\n      const yOffset = OFFSET_TOP;\n\n      const newCoordinates: GraphCoordinates = { nodes: {}, edges: {} };\n\n      for (const nodeKey of graph.nodes()) {\n        const node = graph.node(nodeKey);\n\n        // dagre returns coordinates for the center of the node,\n        // our renderer expects coordinates for the corner of the node.\n        // further, our renderer expects the Start node to be centered at x: 0\n        newCoordinates.nodes[nodeKey] = {\n          ...node,\n          x: node.x - node.width / 2 + xOffset,\n          y: node.y - node.height / 2 + yOffset\n        };\n\n        xOffsetCorrection = Math.min(0, xOffsetCorrection, newCoordinates.nodes[nodeKey].x);\n      }\n      xOffsetCorrection = Math.abs(xOffsetCorrection);\n\n      if (xOffsetCorrection > 0) {\n        for (const nodeKey of graph.nodes()) {\n          newCoordinates.nodes[nodeKey].x += xOffsetCorrection;\n        }\n      }\n\n      for (const edgeKey of graph.edges()) {\n        const edge = graph.edge(edgeKey);\n        const edgeName = `${edgeKey.v}, ${edgeKey.w}`;\n        const label = edge.label\n          ? { text: edge.label, x: edge.x + xOffset, y: edge.y + yOffset }\n          : null;\n\n        const points = edge.points.map(point => ({\n          x: (isNaN(point.x) ? 0 : point.x) + xOffset + xOffsetCorrection,\n          y: (isNaN(point.y) ? 0 : point.y) + yOffset\n        }));\n\n        // move the last point up to make room for the arrowhead\n        if (points.length > 0) points[points.length - 1].y -= 17.5;\n\n        newCoordinates.edges[edgeName] = {\n          label,\n          start: edgeKey.v,\n          end: edgeKey.w,\n          points\n        };\n      }\n\n      setCoordinates(newCoordinates);\n    },\n    []\n  );\n\n  return { coordinates, updateCoordinates };\n};\n\nexport default useCoordinatesCalculator;\n","import React, {\n  createContext,\n  FC,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState\n} from 'react';\nimport { useRafState, useUpdateEffect } from 'react-use';\nimport dagre, { graphlib } from 'dagre';\n\nimport useCoordinatesCalculator, { GraphCoordinates } from './useCoordinatesCalculator';\n\ninterface GraphContextInterface {\n  graph: graphlib.Graph;\n  reflow: () => void;\n}\n\ntype SetGraphWidthInterface = (width: number) => void;\n\nexport const GraphContext = createContext<GraphContextInterface>({} as GraphContextInterface);\nexport const SetGraphWidthContext = createContext<SetGraphWidthInterface>(() => undefined);\nexport const GraphCoordinatesContext = createContext<GraphCoordinates>({\n  nodes: {},\n  edges: {}\n} as GraphCoordinates);\n\ninterface GraphProviderProps {\n  children: ReactNode;\n}\n\nconst createGraph = (): graphlib.Graph => {\n  const g = new dagre.graphlib.Graph();\n  g.setGraph({});\n\n  // dagre requires a default edge label, we want it to just be empty\n  g.setDefaultEdgeLabel(() => ({}));\n  return g;\n};\n\nconst GraphProvider: FC<GraphProviderProps> = ({ children }) => {\n  const graph = useMemo(createGraph, []);\n  const { coordinates, updateCoordinates } = useCoordinatesCalculator();\n  const [width, setWidth] = useRafState<number>(0);\n  const [reflowRequired, setReflowRequired] = useState(true);\n  const reflow = useCallback(() => setReflowRequired(true), []);\n  const graphValue = useMemo(() => ({ graph, reflow }), [graph, reflow]);\n\n  useEffect(() => {\n    if (!reflowRequired) return;\n\n    dagre.layout(graph);\n    updateCoordinates({ graph, graphWidth: width });\n\n    setReflowRequired(false);\n  }, [graph, reflowRequired, setReflowRequired, width, updateCoordinates]);\n\n  useUpdateEffect(() => {\n    setReflowRequired(true);\n  }, [width]);\n\n  return (\n    <GraphContext.Provider value={graphValue}>\n      <SetGraphWidthContext.Provider value={setWidth}>\n        <GraphCoordinatesContext.Provider value={coordinates}>\n          {children}\n        </GraphCoordinatesContext.Provider>\n      </SetGraphWidthContext.Provider>\n    </GraphContext.Provider>\n  );\n};\n\nexport default GraphProvider;\nexport const useGraphProvider = (): GraphContextInterface => useContext(GraphContext);\nexport const useSetGraphWidth = (): SetGraphWidthInterface => useContext(SetGraphWidthContext);\nexport const useGraphCoordinates = (): GraphCoordinates => useContext(GraphCoordinatesContext);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\ninterface StyleProps {\n  isActive?: boolean;\n}\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    edges: {\n      display: 'block',\n      position: 'absolute',\n      top: '0',\n      left: '0',\n      overflow: 'visible',\n      width: '100%',\n      height: '100%',\n      zIndex: 1,\n      '& text': {\n        fontSize: '14px'\n      },\n      '& #arrowhead-inactive polygon': {\n        fill: theme.palette.common.blue\n      },\n      '& #arrowhead-active polygon': {\n        fill: theme.palette.common.red\n      }\n    },\n    edge: {\n      stroke: (props?: StyleProps): string => theme.palette.common[props?.isActive ? 'red' : 'blue']\n    }\n  }),\n  { name: 'DagreGraph-GraphEdges' }\n);\n","import React, { FC, ReactElement, memo, useMemo } from 'react';\nimport { Tooltip } from '@material-ui/core';\n\nimport { Label, Coordinate } from 'graph-model';\nimport { useGraphCoordinates } from './GraphProvider';\nimport useStyles from './GraphEdges.styles';\nimport { PathwayNode } from 'pathways-model';\n\ninterface EdgeProps {\n  label: Label | null;\n  points: Coordinate[];\n  isActive: boolean;\n}\n\ninterface LabelTooltipProps {\n  labelText?: string | null;\n  isEnabled: boolean;\n  children: ReactElement;\n}\n\nconst TRUNCATION_SIZE = 20;\n\n/**\n * The points to use in the Cubic command is determined by the length of points array\n * If i % 3 is 0, use all points including the 1st point\n * If i % 3 is 1, use all points except the 1st point\n * If i % 3 is 2, use all points including the 1st point and reuse every 3rd point\n * We need points to be a multiple of 3 because the Cubic command expects 3 points\n */\nconst generatePathString = (points: Coordinate[]): string =>\n  points.reduce(\n    (path, point, i) =>\n      i % 3 === points.length % 3\n        ? `${path} C ${point.x} ${point.y} ${points[i + 1].x} ${points[i + 1].y} ${\n            points[i + 2].x\n          } ${points[i + 2].y}`\n        : path,\n    `M ${points[0].x} ${points[0].y} `\n  );\n\nconst LabelTooltip: FC<LabelTooltipProps> = ({ labelText, isEnabled, children }) => {\n  if (isEnabled && labelText) {\n    return <Tooltip title={labelText} children={children} />;\n  } else {\n    return <>{children}</>;\n  }\n};\n\nconst Edge: FC<EdgeProps> = ({ label, points, isActive }) => {\n  const styles = useStyles({ isActive });\n  const path = useMemo(() => generatePathString(points), [points]);\n\n  const labelText = label?.text;\n  const { lines, isTruncated } = useMemo(() => {\n    if (labelText == null) return { lines: [], isTruncated: false };\n\n    let truncated = false;\n    const allLines = labelText.split(',');\n    const condensedLines =\n      allLines.length > 3 ? [allLines[0], allLines[1], allLines.slice(2).join(',')] : allLines;\n\n    const labelTextLines = condensedLines.map(line => {\n      const trimmedLine = line.trim();\n      if (trimmedLine.length > TRUNCATION_SIZE) {\n        truncated = true;\n        return `${trimmedLine.substring(0, TRUNCATION_SIZE - 1)}...`;\n      }\n      return trimmedLine;\n    });\n\n    return { lines: labelTextLines, isTruncated: truncated };\n  }, [labelText]);\n\n  return (\n    <>\n      <path\n        d={path}\n        fill=\"transparent\"\n        className={styles.edge}\n        strokeWidth=\"2\"\n        markerEnd={`url(#arrowhead-${isActive ? 'active' : 'inactive'})`}\n      />\n      {label && (\n        <LabelTooltip labelText={labelText} isEnabled={isTruncated}>\n          <text x={label.x} y={label.y} dy=\"0\">\n            {lines.map((line, index) => {\n              return (\n                <tspan x={label.x} dy={index === 0 ? 0 : '1.2em'} key={line}>\n                  {line}\n                </tspan>\n              );\n            })}\n          </text>\n        </LabelTooltip>\n      )}\n    </>\n  );\n};\n\ninterface GraphEdgesProps {\n  currentNode: PathwayNode | null;\n}\n\nconst GraphEdges: FC<GraphEdgesProps> = ({ currentNode }) => {\n  const styles = useStyles();\n  const { edges: edgeCoordinates } = useGraphCoordinates();\n\n  return (\n    <svg className={styles.edges}>\n      <defs>\n        <marker\n          id=\"arrowhead-inactive\"\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n\n        <marker\n          id=\"arrowhead-active\"\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n\n      {Object.entries(edgeCoordinates).map(([edgeId, edge]) => (\n        <Edge\n          key={edgeId}\n          label={edge.label}\n          points={edge.points}\n          isActive={edge.start === currentNode?.key}\n        />\n      ))}\n    </svg>\n  );\n};\n\nexport default memo(GraphEdges);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    table: {\n      '& tr': {\n        verticalAlign: 'top'\n      }\n    },\n    title: {\n      fontWeight: 'bold',\n      textAlign: 'right',\n      minWidth: '80px'\n    },\n    description: {\n      paddingLeft: theme.spacing(2),\n      fontStyle: 'italic',\n      overflowWrap: 'break-word'\n    },\n    externalLink: {\n      color: theme.palette.common.blue,\n      marginLeft: theme.spacing(1),\n\n      '&:hover, &:focus': {\n        color: theme.palette.common.grayDark\n      }\n    }\n  }),\n  { name: 'NodeDetails' }\n);\n","import React, { FC, ReactNode, memo } from 'react';\nimport { ActionNode, BranchNode, PathwayNode, ReferenceNode } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\nimport { getNodeType } from 'utils/nodeUtils';\nimport { resourceNameConversion } from 'utils/nodeUtils';\nimport useStyles from './NodeDetails.styles';\n\ninterface NodeDetailsProps {\n  pathwayNode: ActionNode | BranchNode | PathwayNode;\n}\n\ninterface FieldProps {\n  title: string;\n  description: string | ReactNode;\n}\n\ninterface ActionNodeFieldsProps {\n  actionNode: ActionNode;\n}\n\ninterface ReferenceNodeProps {\n  referenceNode: ReferenceNode;\n}\nconst isMedicationRequest = (\n  request: MedicationRequest | ServiceRequest\n): request is MedicationRequest =>\n  (request as MedicationRequest).medicationCodeableConcept !== undefined;\n\nconst Field: FC<FieldProps> = ({ title, description }) => {\n  const styles = useStyles();\n\n  if (!description) return null;\n\n  return (\n    <tr>\n      <td className={styles.title}>{title}</td>\n      <td className={styles.description}>{description}</td>\n    </tr>\n  );\n};\n\nconst BranchNodeContents: FC = () => <Field title=\"Type\" description=\"Observation\" />;\n\nconst ActionNodeFields: FC<ActionNodeFieldsProps> = ({ actionNode }) => {\n  const styles = useStyles();\n\n  if (actionNode.action === null) return null;\n\n  const resource = actionNode.action.resource;\n  const coding = isMedicationRequest(resource)\n    ? resource?.medicationCodeableConcept?.coding\n    : resource?.code?.coding;\n  const resourceType = resourceNameConversion[resource.resourceType]\n    ? resourceNameConversion[resource.resourceType]\n    : resource.resourceType;\n\n  return (\n    <>\n      <Field title=\"Description\" description={actionNode.action.description} />\n      <Field key=\"Type\" title=\"Type\" description={resourceType} />\n      <Field\n        key=\"System\"\n        title=\"System\"\n        description={\n          coding?.[0]?.system && (\n            <>\n              {coding[0].system}\n              <a href={coding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n              </a>\n            </>\n          )\n        }\n      />\n      <Field key=\"Code\" title=\"Code\" description={coding?.[0]?.code} />\n      <Field key=\"Display\" title=\"Display\" description={coding?.[0]?.display} />\n      <Field key=\"Title\" title=\"Title\" description={resource.title} />\n    </>\n  );\n};\n\nconst ReferenceNodeFields: FC<ReferenceNodeProps> = ({ referenceNode }) => (\n  <>\n    <Field title=\"Type\" description=\"Reference\" />\n    <Field title=\"Pathway\" description={referenceNode.referenceLabel} />\n  </>\n);\n\nconst NodeDetails: FC<NodeDetailsProps> = ({ pathwayNode }) => {\n  const styles = useStyles();\n  const nodeType = getNodeType(pathwayNode);\n\n  if (nodeType == null) return null;\n\n  return (\n    <table className={styles.table}>\n      <tbody>\n        {nodeType === 'branch' && <BranchNodeContents />}\n        {nodeType === 'reference' && (\n          <ReferenceNodeFields referenceNode={pathwayNode as ReferenceNode} />\n        )}\n        {nodeType === 'action' && <ActionNodeFields actionNode={pathwayNode as ActionNode} />}\n      </tbody>\n    </table>\n  );\n};\n\nexport default memo(NodeDetails);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    icon: {\n      marginRight: theme.spacing(1),\n      fontSize: '0.9rem'\n    }\n  }),\n  { name: 'DagreGraph-NodeIcon' }\n);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faMicroscope,\n  faPlay,\n  faPrescriptionBottleAlt,\n  faSyringe,\n  faBookMedical,\n  faLevelDownAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport useStyles from './NodeIcon.styles';\n\ninterface NodeIconProps {\n  isStartNode: boolean;\n  nodeType: string;\n  resourceType?: string;\n}\n\nconst NodeIcon: FC<NodeIconProps> = ({ isStartNode, nodeType, resourceType }) => {\n  const styles = useStyles();\n  let icon: IconDefinition | undefined;\n  if (isStartNode) {\n    icon = faPlay;\n  } else if (nodeType === 'action' && resourceType) {\n    if (resourceType === 'MedicationRequest') icon = faPrescriptionBottleAlt;\n    else if (resourceType === 'ServiceRequest') icon = faSyringe;\n    else if (resourceType === 'CarePlan') icon = faBookMedical;\n  } else if (nodeType === 'branch') {\n    icon = faMicroscope;\n  } else if (nodeType === 'reference') {\n    icon = faLevelDownAlt;\n  }\n\n  return icon ? <FontAwesomeIcon icon={icon} className={styles.icon} /> : null;\n};\n\nexport default memo(NodeIcon);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\ninterface StyleProps {\n  isActionable: boolean;\n  isExpanded: boolean;\n}\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    node: {\n      position: 'absolute',\n      width: 'auto',\n      minWidth: ({ isExpanded }: StyleProps): string => (isExpanded ? '400px' : '100px'),\n      maxWidth: '600px',\n      minHeight: '50px',\n      display: 'flex',\n      alignItems: 'stretch',\n      flexDirection: 'column',\n      border: ({ isActionable }: StyleProps): string =>\n        `1px solid ${theme.palette.common[isActionable ? 'red' : 'blue']}`,\n      backgroundColor: theme.palette.common.white,\n      zIndex: 2,\n      overflow: 'hidden'\n    },\n    nodeTitle: {\n      padding: theme.spacing(2),\n      flex: '1',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: theme.palette.common.white,\n      backgroundColor: ({ isActionable }: StyleProps): string =>\n        theme.palette.common[isActionable ? 'red' : 'blue']\n    },\n    nodeContent: {\n      padding: theme.spacing(2)\n    },\n    clickable: {\n      cursor: 'pointer'\n    }\n  }),\n  { name: 'DagreGraph-Node' }\n);\n","import React, { FC, memo, useCallback, useMemo, useRef } from 'react';\nimport clsx from 'clsx';\nimport { useLifecycles, useUpdateEffect } from 'react-use';\n\nimport { ActionNode, BranchNode, PathwayNode, Transition } from 'pathways-model';\nimport { getNodeType } from 'utils/nodeUtils';\nimport NodeDetails from './NodeDetails';\nimport { useGraphProvider } from './GraphProvider';\nimport NodeIcon from './NodeIcon';\nimport useStyles from './Node.styles';\n\ninterface NodeProps {\n  nodeKey: string;\n  pathwayNode: ActionNode | BranchNode | PathwayNode;\n  isActionable: boolean;\n  isExpanded: boolean;\n  onClick?: (nodeName: string) => void;\n  xCoordinate: number;\n  yCoordinate: number;\n  openNode: (nodeName: string) => void;\n}\n\ninterface BoundingClientRectResponse {\n  width: number;\n  height: number;\n}\n\nconst createTransitionLabel = ({ condition }: Transition): { [key: string]: string | number } =>\n  condition\n    ? {\n        label: condition.description,\n        width: 25,\n        height: 20\n      }\n    : {};\n\nconst getBoundingClientRect = (element: HTMLDivElement | null): BoundingClientRectResponse => {\n  const dimensions = element?.getBoundingClientRect() ?? { width: 0, height: 0 };\n  return { width: Math.ceil(dimensions.width), height: Math.ceil(dimensions.height) };\n};\n\nconst Node: FC<NodeProps> = ({\n  nodeKey,\n  pathwayNode,\n  isActionable,\n  isExpanded,\n  onClick,\n  xCoordinate,\n  yCoordinate,\n  openNode\n}) => {\n  const styles = useStyles({ isExpanded, isActionable });\n  const onClickHandler = useCallback(() => {\n    if (onClick) onClick(nodeKey);\n  }, [onClick, nodeKey]);\n  const nodeRef = useRef<HTMLDivElement>(null);\n  const { graph, reflow } = useGraphProvider();\n  const nodeStyle = useMemo(() => ({ top: `${yCoordinate}px`, left: `${xCoordinate}px` }), [\n    xCoordinate,\n    yCoordinate\n  ]);\n  const nodeType = getNodeType(pathwayNode);\n  const action = (pathwayNode as ActionNode).action;\n\n  const { label, transitions } = pathwayNode;\n\n  useLifecycles(\n    (): void => {\n      const { width, height } = getBoundingClientRect(nodeRef.current);\n      graph.setNode(nodeKey, {\n        width,\n        height\n      });\n      transitions.forEach(transition => {\n        graph.setEdge(nodeKey, transition.transition, createTransitionLabel(transition));\n      });\n    },\n    (): void => {\n      graph.removeNode(nodeKey);\n    }\n  );\n\n  useUpdateEffect(() => {\n    if (!nodeRef.current) return undefined;\n\n    const { width, height } = getBoundingClientRect(nodeRef.current);\n    const node = graph.node(nodeKey);\n\n    if (node.width !== width || node.height !== height) {\n      graph.setNode(nodeKey, {\n        ...node,\n        width,\n        height\n      });\n      reflow();\n    }\n  });\n\n  useUpdateEffect(() => {\n    // remove transitions that no longer exist\n    const transitionNodes = new Set(transitions.map(({ transition }) => transition));\n    graph.outEdges(nodeKey)?.forEach(({ w }) => {\n      if (!transitionNodes.has(w)) {\n        graph.removeEdge(nodeKey, w);\n      }\n    });\n\n    transitions.forEach(transition => {\n      graph.setEdge(nodeKey, transition.transition, createTransitionLabel(transition));\n    });\n    reflow();\n  }, [nodeKey, transitions]);\n\n  useUpdateEffect(() => {\n    if (!action) return;\n    openNode(nodeKey);\n  }, [action, nodeKey]);\n\n  return (\n    <div className={styles.node} style={nodeStyle} ref={nodeRef}>\n      <div className={clsx(styles.nodeTitle, onClick && styles.clickable)} onClick={onClickHandler}>\n        <NodeIcon\n          resourceType={action ? action.resource?.resourceType : undefined}\n          nodeType={nodeType}\n          isStartNode={pathwayNode.type === 'start'}\n        />\n        {label}\n      </div>\n\n      {isExpanded && (\n        <div className={styles.nodeContent}>\n          <NodeDetails pathwayNode={pathwayNode} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Node);\n","import { useState, useCallback } from 'react';\n\nexport interface ExpandedState {\n  [key: string]: boolean | string | null;\n}\n\ninterface ExpandedStateToggle {\n  expanded: ExpandedState;\n  toggleExpanded: (nodeName: string) => void;\n  openNode: (nodeName: string) => void;\n  closeNode: (nodeName: string) => void;\n}\n\nconst useExpandedState = (): ExpandedStateToggle => {\n  const [expanded, setExpanded] = useState<ExpandedState>({\n    lastSelectedNode: null\n  } as ExpandedState);\n\n  const toggleExpanded = useCallback((nodeName: string) => {\n    if (nodeName === 'Start') {\n      setExpanded(prevState => ({\n        ...prevState,\n        lastSelectedNode: nodeName\n      }));\n    } else {\n      setExpanded(prevState => ({\n        ...prevState,\n        [nodeName]:\n          !prevState[nodeName] || prevState.lastSelectedNode === nodeName\n            ? !prevState[nodeName]\n            : prevState[nodeName],\n        lastSelectedNode: nodeName\n      }));\n    }\n  }, []);\n\n  const openNode = useCallback((nodeName: string) => {\n    setExpanded(prevState => {\n      if (prevState[nodeName] && prevState.lastSelectedNode === nodeName) return prevState;\n\n      return {\n        ...prevState,\n        [nodeName]: true,\n        lastSelectedNode: nodeName\n      };\n    });\n  }, []);\n\n  const closeNode = useCallback((nodeName: string) => {\n    setExpanded(prevState => {\n      if (!prevState[nodeName]) return prevState;\n\n      return {\n        ...prevState,\n        [nodeName]: false\n      };\n    });\n  }, []);\n\n  return { expanded, toggleExpanded, openNode, closeNode };\n};\n\nexport default useExpandedState;\n","import { useCallback } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nexport type RedirectToNodeCallback = (nodeId: string) => void;\n\nconst useRedirectToNode = (): RedirectToNodeCallback => {\n  const { id: pathwayId } = useParams();\n  const history = useHistory();\n  const redirectToNode = useCallback(\n    nodeId => {\n      const url = `/builder/${encodeURIComponent(pathwayId)}/node/${encodeURIComponent(nodeId)}`;\n      if (url !== history.location.pathname) {\n        history.push(url);\n      }\n    },\n    [history, pathwayId]\n  );\n\n  return redirectToNode;\n};\n\nexport default useRedirectToNode;\n","import React, { FC, memo, useCallback } from 'react';\nimport { useUpdateEffect } from 'react-use';\n\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useGraphCoordinates, useGraphProvider } from './GraphProvider';\nimport Node from './Node';\nimport useExpandedState from './useExpandedState';\nimport useRedirectToNode from './useRedirectToNode';\nimport { PathwayNode } from 'pathways-model';\n\ninterface GraphNodesProps {\n  interactive: boolean;\n  currentNode: PathwayNode | null;\n}\n\nconst GraphNodes: FC<GraphNodesProps> = ({ interactive, currentNode }) => {\n  const { pathway } = useCurrentPathwayContext();\n  const { expanded: expandedNodes, toggleExpanded, openNode } = useExpandedState();\n  const { reflow } = useGraphProvider();\n  const { nodes: nodeCoordinates } = useGraphCoordinates();\n  const redirectToNode = useRedirectToNode();\n  const { resetCurrentCriteria } = useCurrentCriteriaContext();\n  const onClick = useCallback(\n    (nodeName: string) => {\n      redirectToNode(nodeName);\n      toggleExpanded(nodeName);\n      resetCurrentCriteria();\n    },\n    [redirectToNode, toggleExpanded, resetCurrentCriteria]\n  );\n\n  const nodes = Object.entries(pathway?.nodes ?? {});\n\n  useUpdateEffect(() => {\n    reflow();\n  }, [nodes.length]);\n\n  return (\n    <>\n      {nodes.map(([nodeName, pathwayNode]) => {\n        const coordinates = nodeCoordinates[nodeName] ?? { x: -999, y: -999 };\n\n        return (\n          <Node\n            key={nodeName}\n            nodeKey={nodeName}\n            pathwayNode={pathwayNode}\n            isActionable={pathwayNode.key === currentNode?.key}\n            isExpanded={Boolean(expandedNodes[nodeName])}\n            onClick={interactive ? onClick : undefined}\n            xCoordinate={coordinates.x}\n            yCoordinate={coordinates.y}\n            openNode={openNode}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default memo(GraphNodes);\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  {\n    root: {\n      position: 'relative',\n      minWidth: '100%',\n      minHeight: '100%'\n    }\n  },\n  { name: 'DagreGraph-GraphRoot' }\n);\n","import React, { FC, ReactNode, useEffect, useMemo, useRef } from 'react';\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor';\n\nimport { useSetGraphWidth, useGraphCoordinates } from './GraphProvider';\nimport useStyles from './GraphRoot.styles';\n\ninterface GraphRootProps {\n  children: ReactNode | ReactNode[];\n}\n\n// padding, in pixels, to add to the width and height of the graph\nconst GRAPH_PADDING = 150;\n\nconst GraphRoot: FC<GraphRootProps> = ({ children }) => {\n  const styles = useStyles();\n  const graphRef = useRef<HTMLDivElement>(null);\n  const setGraphWidth = useSetGraphWidth();\n  const { nodes: nodeCoordinates } = useGraphCoordinates();\n  const graphWidth = useMemo(() => {\n    return Math.ceil(\n      GRAPH_PADDING +\n        (nodeCoordinates !== undefined\n          ? Object.values(nodeCoordinates)\n              .map(({ x, width }) => x + width)\n              .reduce((a, b) => Math.max(a, b), 0)\n          : 0)\n    );\n  }, [nodeCoordinates]);\n  const graphHeight = useMemo(() => {\n    return Math.ceil(\n      GRAPH_PADDING +\n        (nodeCoordinates !== undefined\n          ? Object.values(nodeCoordinates)\n              .map(({ y, height }) => y + height)\n              .reduce((a, b) => Math.max(a, b), 0)\n          : 0)\n    );\n  }, [nodeCoordinates]);\n  const rootStyles = useMemo(() => ({ width: `${graphWidth}px`, height: `${graphHeight}px` }), [\n    graphWidth,\n    graphHeight\n  ]);\n\n  useEffect(() => {\n    const graphElement = graphRef.current;\n    if (graphElement?.parentElement) {\n      const { width } = graphElement.parentElement.getBoundingClientRect();\n      setGraphWidth(Math.ceil(width));\n      const sensor = new ResizeSensor(graphElement.parentElement, () => {\n        const { width } = graphElement?.parentElement?.getBoundingClientRect() ?? { width: 0 };\n        setGraphWidth(Math.ceil(width));\n      });\n      return (): void => {\n        sensor.detach();\n      };\n    }\n  }, [graphRef, setGraphWidth]);\n\n  return (\n    <div ref={graphRef} className={styles.root} style={rootStyles}>\n      {children}\n    </div>\n  );\n};\n\nexport default GraphRoot;\n","import React, { FC, memo } from 'react';\n\nimport GraphEdges from './GraphEdges';\nimport GraphProvider from './GraphProvider';\nimport GraphNodes from './GraphNodes';\nimport GraphRoot from './GraphRoot';\nimport { PathwayNode } from 'pathways-model';\n\ninterface DagreGraphProps {\n  interactive?: boolean;\n  currentNode: PathwayNode | null;\n}\n\nconst DagreGraph: FC<DagreGraphProps> = ({ interactive = true, currentNode }) => {\n  return (\n    <GraphProvider>\n      <GraphRoot>\n        <GraphNodes interactive={interactive} currentNode={currentNode} />\n        <GraphEdges currentNode={currentNode} />\n      </GraphRoot>\n    </GraphProvider>\n  );\n};\n\nexport default memo(DagreGraph);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    elementContainer: {\n      padding: '1em',\n      marginRight: '10px',\n      border: '0.1em solid',\n      borderRadius: '0.2em',\n      fontWeight: 500,\n      width: 'auto',\n      backgroundColor: theme.palette.common.grayLightest\n    },\n    elementSelect: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    addElementLabel: {\n      marginLeft: '1em',\n      minWidth: '120px'\n    },\n    headerText: {\n      marginRight: '10px',\n      fontStyle: 'italic',\n      fontSize: '0.8em'\n    },\n    elementField: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    elementFieldLabel: {\n      fontWeight: 'bold',\n      marginRight: '1em'\n    }\n  }),\n  { name: 'CriteriaBuilder' }\n);\n","import React, { FC, memo, useCallback, useEffect, ChangeEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, TextField } from '@material-ui/core';\n\nimport DropDown from 'components/elements/DropDown';\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport useStyles from './styles';\nimport { useCriteriaBuilderContext } from 'components/CriteriaBuilderProvider';\n\nconst CriteriaBuilder: FC = () => {\n  const {\n    selectedElement,\n    selectedDemoElement,\n    gender,\n    minimumAge,\n    maximumAge,\n    setSelectedElement,\n    setSelectedDemoElement,\n    setGender,\n    setMinimumAge,\n    setMaximumAge,\n    resetCriteriaBuilder\n  } = useCriteriaBuilderContext();\n  const styles = useStyles();\n  const { setCurrentCriteria } = useCurrentCriteriaContext();\n  const elementOptions = [{ value: 'Demographics', label: 'Demographics' }];\n  const demoElementOptions = [\n    { value: 'Age Range', label: 'Age Range' },\n    { value: 'Gender', label: 'Gender' }\n  ];\n  const genderOptions = [\n    {\n      label: 'Male',\n      value: 'Male'\n    },\n    {\n      label: 'Female',\n      value: 'Female'\n    },\n    {\n      label: 'Other',\n      value: 'Other'\n    },\n    {\n      label: 'Unknown',\n      value: 'Unknown'\n    }\n  ];\n\n  const onMinimumAgeChange = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setMinimumAge(parseInt(event?.target.value) || 0);\n    },\n    [setMinimumAge]\n  );\n\n  const onMaximumAgeChange = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setMaximumAge(parseInt(event?.target.value) || 0);\n    },\n    [setMaximumAge]\n  );\n\n  const handleClose = useCallback((): void => {\n    resetCriteriaBuilder();\n    setCurrentCriteria(null);\n  }, [resetCriteriaBuilder, setCurrentCriteria]);\n\n  const genderString = `The patient's gender is ${gender}`;\n  const ageRangeString = `The patient's age is between ${minimumAge} years and ${maximumAge} years`;\n\n  useEffect(() => {\n    const cql = `AgeInYears() >= ${minimumAge} and AgeInYears() < ${maximumAge}`;\n    if (selectedDemoElement === 'Age Range') {\n      if (minimumAge >= 0 && maximumAge > 0 && minimumAge < maximumAge) {\n        setCurrentCriteria({\n          cql,\n          text: ageRangeString,\n          type: 'age',\n          min: minimumAge,\n          max: maximumAge\n        });\n      } else {\n        setCurrentCriteria(null);\n      }\n    }\n  }, [selectedDemoElement, minimumAge, maximumAge, ageRangeString, setCurrentCriteria]);\n\n  useEffect(() => {\n    const cql = `Patient.gender.value ~ '${gender}'`;\n    if (selectedDemoElement === 'Gender') {\n      if (gender !== '') {\n        setCurrentCriteria({ cql, text: genderString, type: 'gender', gender });\n      } else {\n        setCurrentCriteria(null);\n      }\n    }\n  }, [selectedDemoElement, gender, genderString, setCurrentCriteria]);\n\n  return (\n    <>\n      <div className={styles.headerText}>\n        Specify criteria to identify a target population that should receive a recommendation from\n        this artifact. Examples might include an age range, gender, presence of a certain condition,\n        or lab results within a specific range.\n      </div>\n      <div className={styles.elementContainer}>\n        {(selectedElement === '' || selectedDemoElement === '') && (\n          <div className={styles.elementSelect}>\n            <div className={styles.addElementLabel}>\n              <FontAwesomeIcon icon={faPlus} /> Add element\n            </div>\n            <DropDown\n              id=\"Choose Element Type\"\n              label=\"Choose Element Type\"\n              options={elementOptions}\n              onChange={setSelectedElement}\n              value={selectedElement}\n            />\n            {selectedElement && (\n              <DropDown\n                id={`Select ${selectedElement} element`}\n                label={`Select ${selectedElement} element`}\n                options={demoElementOptions}\n                onChange={setSelectedDemoElement}\n                value={selectedDemoElement}\n              />\n            )}\n          </div>\n        )}\n\n        {!(selectedElement === '' || selectedDemoElement === '') && (\n          <>\n            <span>{selectedDemoElement}</span>\n            <IconButton onClick={handleClose}>\n              <FontAwesomeIcon icon={faTimes} />\n            </IconButton>\n            <hr />\n            {selectedDemoElement === 'Gender' && (\n              <>\n                <span>{genderString}</span>\n                <DropDown\n                  id=\"Select Gender\"\n                  label=\"Gender\"\n                  options={genderOptions}\n                  onChange={setGender}\n                  value={gender}\n                />\n              </>\n            )}\n            {selectedDemoElement === 'Age Range' && (\n              <>\n                <span>{ageRangeString}</span>\n                <div className={styles.elementField}>\n                  <span className={styles.elementFieldLabel}>Minimum Age:</span>\n                  <TextField type=\"number\" value={minimumAge} onChange={onMinimumAgeChange} />\n                </div>\n                <div className={styles.elementField}>\n                  <span className={styles.elementFieldLabel}>Maximum Age:</span>\n                  <TextField type=\"number\" value={maximumAge} onChange={onMaximumAgeChange} />\n                </div>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(CriteriaBuilder);\n","import { makeStyles, Theme as AugmentedTheme, darken } from '@material-ui/core/styles';\n\nconst toggleButtonCss = {\n  borderRadius: '0%',\n  marginLeft: '1px',\n  width: '50px',\n  height: '50px'\n};\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh'\n    },\n    main: {\n      flex: '1',\n      display: 'flex',\n      alignItems: 'stretch',\n      overflowY: 'auto'\n    },\n    graph: {\n      'overflow-y': 'auto',\n      flex: '1'\n    },\n    graphHeader: {\n      display: 'flex',\n      height: '50px',\n      backgroundColor: theme.palette.common.white,\n      marginLeft: '1px'\n    },\n    graphHeaderText: {\n      height: '50px',\n      display: 'flex',\n      width: '100%',\n      backgroundColor: theme.palette.primary.main,\n      alignItems: 'center',\n      color: theme.palette.common.white,\n      fontSize: '1.4em',\n      paddingLeft: '1.5em'\n    },\n    toggleButton: {\n      '&-on': {\n        ...toggleButtonCss,\n        backgroundColor: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: darken(theme.palette.primary.main, 0.1)\n        }\n      },\n      '&-off': {\n        ...toggleButtonCss,\n        backgroundColor: theme.palette.text.primary,\n        '&:hover': {\n          backgroundColor: darken(theme.palette.text.primary, 0.1)\n        }\n      }\n    },\n    toggleIcon: {\n      transform: 'rotate(90deg) scaleY(-1)',\n      color: theme.palette.common.white\n    }\n  }),\n  { name: 'Builder', index: 1 }\n);\n","import { useParams } from 'react-router-dom';\n\nconst useNodeId = (): string => {\n  const { nodeId } = useParams<{ nodeId: string }>();\n  return decodeURIComponent(nodeId);\n};\n\nexport default useNodeId;\n","import React, { FC, useEffect, memo, useState, useCallback } from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\n\nimport Header from 'components/Header';\nimport Navigation from 'components/Navigation';\nimport Sidebar from 'components/Sidebar';\nimport DagreGraph from 'components/DagreGraph';\nimport CriteriaBuilder from 'components/CriteriaBuilder';\nimport { useTheme } from 'components/ThemeProvider';\nimport useStyles from './styles';\nimport { IconButton } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faProjectDiagram } from '@fortawesome/free-solid-svg-icons';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { PathwayNode } from 'pathways-model';\nimport useNodeId from 'hooks/useNodeId';\n\nconst Builder: FC = () => {\n  const styles = useStyles();\n  const currentNodeId = useNodeId();\n  const { pathway } = useCurrentPathwayContext();\n  const { currentCriteriaNodeId } = useCurrentCriteriaContext();\n  const theme = useTheme('dark');\n  const [showCriteriaBuilder, setShowCriteriaBuilder] = useState<boolean>(true);\n  let currentNode: PathwayNode | null = null;\n  if (pathway?.nodes[currentNodeId]) {\n    currentNode = pathway.nodes[currentNodeId];\n  } else if (pathway) {\n    currentNode = pathway.nodes['Start'];\n  }\n  const toggleShowCriteria = useCallback((): void => {\n    setShowCriteriaBuilder(!showCriteriaBuilder);\n  }, [showCriteriaBuilder]);\n\n  // Reset criteriaBuilderToggle to true if not currently building criteria\n  useEffect(() => {\n    if (!showCriteriaBuilder && currentCriteriaNodeId === '') setShowCriteriaBuilder(true);\n  }, [currentCriteriaNodeId, showCriteriaBuilder]);\n\n  return (\n    <div className={styles.root}>\n      <div>\n        <Header />\n        <Navigation />\n      </div>\n\n      {pathway && (\n        <div className={styles.main}>\n          <MuiThemeProvider theme={theme}>\n            <Sidebar currentNode={currentNode} />\n          </MuiThemeProvider>\n\n          <div className={styles.graph}>\n            {currentCriteriaNodeId !== '' && (\n              <div className={styles.graphHeader}>\n                <div className={styles.graphHeaderText}>\n                  <span>Criteria Builder</span>\n                </div>\n                <IconButton\n                  className={`${styles.toggleButton}-${showCriteriaBuilder ? 'on' : 'off'}`}\n                  onClick={toggleShowCriteria}\n                >\n                  <FontAwesomeIcon className={styles.toggleIcon} icon={faProjectDiagram} />\n                </IconButton>\n              </div>\n            )}\n            {currentCriteriaNodeId !== '' && showCriteriaBuilder ? (\n              <CriteriaBuilder />\n            ) : (\n              <DagreGraph currentNode={currentNode} />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Builder);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './Loading.module.scss';\n\nconst Loading: FC = () => {\n  return (\n    <div className={styles.root}>\n      <FontAwesomeIcon icon={faSpinner} className={styles.root} size=\"4x\" spin />\n    </div>\n  );\n};\n\nexport default memo(Loading);\n","import { useParams } from 'react-router-dom';\n\nconst usePathwayId = (): string => {\n  const { id } = useParams<{ id: string }>();\n  return decodeURIComponent(id);\n};\n\nexport default usePathwayId;\n","import React, { FC, memo, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useQuery } from 'react-query';\n\nimport Builder from 'components/Builder';\nimport config from 'utils/ConfigManager';\nimport { useCurrentPathwayContext } from './CurrentPathwayProvider';\nimport Loading from './elements/Loading';\nimport { Pathway } from 'pathways-model';\nimport usePathwayId from 'hooks/usePathwayId';\nimport useNodeId from 'hooks/useNodeId';\nimport { useAlertContext } from './AlertProvider';\n\nconst BuilderRoute: FC = () => {\n  const pathwayId = usePathwayId();\n  const currentNodeId = useNodeId();\n  const { setAlertText, setOpenAlert } = useAlertContext();\n  const baseUrl = config.get('pathwaysBackend');\n  const { pathway, pathwayRef, resetCurrentPathway } = useCurrentPathwayContext();\n\n  const { isLoading, error, data } = useQuery('pathway', () =>\n    fetch(`${baseUrl}/pathway/${pathwayId}`).then(res => res.json())\n  );\n\n  useEffect(() => {\n    const pathway = data as Pathway;\n    if (pathwayRef.current?.id !== pathway?.id) resetCurrentPathway(pathway);\n  }, [data, pathwayRef, resetCurrentPathway]);\n\n  if (isLoading && !error) return <Loading />;\n  else if (error) {\n    setAlertText('Connection to server lost. Please save your work then restart the server.');\n    setOpenAlert(true);\n    return <Builder />;\n  } else if (data) {\n    if (currentNodeId && pathway?.nodes[currentNodeId]) return <Builder />;\n    else return <Redirect to={`/builder/${pathwayId}/node/Start`} />;\n  } else return <Redirect to={`/builder`} />;\n};\n\nexport default memo(BuilderRoute);\n","import React, { FC, createContext, useContext, useState, ReactNode } from 'react';\n\ninterface UserContextInterface {\n  user: string | null;\n  setUser: Function;\n}\n\nexport const UserContext = createContext<UserContextInterface>({} as UserContextInterface);\n\ninterface UserProviderProps {\n  children: ReactNode;\n}\n\nexport const UserProvider: FC<UserProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<string | null>(null);\n  return <UserContext.Provider value={{ user, setUser }}>{children}</UserContext.Provider>;\n};\n\nexport const useUser = (): UserContextInterface => useContext(UserContext);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    label: {\n      padding: `0.2em 2em`,\n      textTransform: 'none',\n      fontSize: '1.2em',\n      fontWeight: 100\n    }\n  }),\n  { name: 'Tabs', index: 1 }\n);\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Tab as ReactTab, TabList, TabPanel, Tabs as ReactTabs } from 'react-tabs';\n\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\nimport shortid from 'shortid';\n\ninterface Tab {\n  label: string;\n  component: ReactNode;\n}\n\ninterface TabsProp {\n  tabs: Tab[];\n}\n\nconst Tabs: FC<TabsProp> = ({ tabs }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.root}>\n      <ReactTabs>\n        <TabList>\n          {tabs.map(tab => (\n            <ReactTab key={shortid.generate()}>\n              <Button classes={{ label: styles.label }}>{tab.label}</Button>\n            </ReactTab>\n          ))}\n        </TabList>\n\n        {tabs.map(tab => (\n          <TabPanel key={shortid.generate()}>{tab.component}</TabPanel>\n        ))}\n      </ReactTabs>\n    </div>\n  );\n};\n\nexport default memo(Tabs);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    createPathwayButton: {\n      alignSelf: 'flex-end',\n      marginLeft: '20px'\n    },\n    pathwayList: {\n      marginTop: '1em'\n    },\n    pathwaysListButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    },\n    buttonRow: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    tableTop: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    selectionOptions: {\n      display: 'flex',\n      paddingLeft: '4px',\n      justifyContent: 'space-between',\n      alignItems: 'flex-end'\n    },\n    selectionIcon: {\n      color: theme.palette.primary.main\n    },\n    deleteIcon: {\n      color: theme.palette.secondary.main\n    }\n  }),\n  { name: 'PathwaysList', index: 1 }\n);\n","import React, { FC, useCallback, useRef, memo, FormEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  IconButton\n} from '@material-ui/core';\nimport shortid from 'shortid';\nimport produce from 'immer';\nimport { useQueryCache, useMutation } from 'react-query';\n\nimport useStyles from './styles';\nimport { createNewPathway } from 'utils/builder';\nimport { Pathway } from 'pathways-model';\nimport { updatePathway } from 'utils/backend';\n\ninterface PathwayModalProps {\n  open: boolean;\n  onClose: () => void;\n  editPathway?: Pathway;\n}\n\nconst PathwayModal: FC<PathwayModalProps> = ({ open, onClose, editPathway }) => {\n  const createNewPathwayMeta = !editPathway;\n  const styles = useStyles();\n  const history = useHistory();\n  const cache = useQueryCache();\n  const pathwayNameRef = useRef<HTMLInputElement>(null);\n  const pathwayDescRef = useRef<HTMLInputElement>(null);\n\n  const closeModal = useCallback(\n    (pathwayId: string): void => {\n      history.push(`/builder/${encodeURIComponent(pathwayId)}/node/Start`);\n      onClose();\n    },\n    [history, onClose]\n  );\n\n  const [mutateAddPathway] = useMutation(updatePathway, {\n    onSettled: () => cache.invalidateQueries('pathways')\n  });\n\n  const [mutateUpdatePathway] = useMutation(updatePathway, {\n    onSettled: () => cache.invalidateQueries('pathways')\n  });\n\n  const handleCreateNewPathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      const pathwayId = shortid.generate();\n      const name: string = pathwayNameRef.current?.value ?? '';\n      const description: string = pathwayDescRef.current?.value ?? '';\n      mutateAddPathway(createNewPathway(name, description, pathwayId));\n      closeModal(pathwayId);\n    },\n    [mutateAddPathway, closeModal]\n  );\n\n  const handleUpdatePathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      if (\n        editPathway &&\n        (pathwayNameRef.current?.value !== editPathway.name ||\n          pathwayDescRef.current?.value !== editPathway.description)\n      ) {\n        const newEditPathway = produce(editPathway, (draftEditPathway: Pathway) => {\n          if (pathwayNameRef.current?.value) draftEditPathway.name = pathwayNameRef.current.value;\n          if (pathwayDescRef.current?.value)\n            draftEditPathway.description = pathwayDescRef.current.value;\n        });\n        mutateUpdatePathway(newEditPathway);\n      }\n      onClose();\n    },\n    [mutateUpdatePathway, editPathway, onClose]\n  );\n\n  let name, description;\n  if (editPathway) {\n    name = editPathway.name;\n    const metaDescription = editPathway.description;\n    if (metaDescription && metaDescription !== '') description = metaDescription;\n  }\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"create-pathway\" fullWidth maxWidth=\"md\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={createNewPathwayMeta ? handleCreateNewPathway : handleUpdatePathway}>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            autoFocus\n            label=\"Pathway Name\"\n            fullWidth\n            required={createNewPathwayMeta}\n            inputRef={pathwayNameRef}\n            defaultValue={createNewPathwayMeta ? undefined : name}\n          />\n\n          <TextField\n            variant=\"outlined\"\n            label=\"Pathway Description\"\n            fullWidth\n            inputRef={pathwayDescRef}\n            defaultValue={createNewPathwayMeta ? undefined : description}\n            multiline\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={createNewPathwayMeta && <FontAwesomeIcon icon={faPlus} />}\n            type=\"submit\"\n          >\n            {createNewPathwayMeta ? 'Create' : 'Save'}\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(PathwayModal);\n","import React, { FC, memo } from 'react';\nimport styles from './ActionButton.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\n\ninterface ButtonProps {\n  type: 'accept' | 'decline';\n  onClick?: () => void;\n}\n\ninterface ActionButtonProps extends ButtonProps {\n  size: 'small' | 'large' | 'medium';\n}\n\nconst LargeActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <button\n      className={`${styles.largeActionButton} button ${type === 'decline' && styles.largeDecline}`}\n      type=\"button\"\n      onClick={onClick}\n    >\n      {type[0].toUpperCase() + type.slice(1)}\n    </button>\n  );\n};\n\nconst SmallActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.smallActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n    </div>\n  );\n};\n\nconst MediumActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  const buttonText = {\n    accept: 'Submit',\n    decline: 'Cancel'\n  };\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.mediumActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n      {buttonText[type]}\n    </div>\n  );\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({ type, size, onClick }) => {\n  switch (size) {\n    case 'small':\n      return <SmallActionButton type={type} onClick={onClick} />;\n    case 'large':\n      return <LargeActionButton type={type} onClick={onClick} />;\n    case 'medium':\n      return <MediumActionButton type={type} onClick={onClick} />;\n  }\n};\n\nexport default memo(ActionButton);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    container: {\n      display: 'inline-block'\n    },\n    paper: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      borderRadius: '10px',\n      border: '5px solid rgba(74, 74, 74, 0.5)',\n      backgroundColor: theme.palette.common.gray,\n      color: theme.palette.common.white,\n      padding: '0.5em',\n      mozBackgroundClip: 'padding' /* Firefox 3.6 */,\n      webkitBackgroundVlip: 'padding' /* Safari 4? Chrome 6? */,\n      backgroundClip: 'padding-box' /* Firefox 4, Safari 5, Opera 10, IE 9 */\n    },\n    displayText: {\n      marginRight: '4em',\n      whiteSpace: 'nowrap'\n    },\n    buttons: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minWidth: '2.5em',\n      minHeight: '2em',\n      cursor: 'pointer',\n      borderRadius: '15%',\n      marginRight: '0.5em'\n    }\n  }),\n  { name: 'ConfirmationPopover' }\n);\n","import React, { memo, MouseEvent, ReactElement, useCallback, useState } from 'react';\nimport { Popover } from '@material-ui/core';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport ActionButton from 'components/ActionButton';\nimport useStyles from './styles';\n\ninterface ConfirmationPopoverProps {\n  children: ReactElement;\n  displayText: string;\n  onConfirm?: () => void;\n  onDecline?: () => void;\n}\n\ntype Ref = HTMLDivElement;\n\nconst ConfirmationPopover = React.forwardRef<Ref, ConfirmationPopoverProps>(\n  ({ children, displayText, onConfirm, onDecline, ...props }, ref) => {\n    const styles = useStyles();\n    const [open, setOpen] = useState(false);\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n    const onClickHandler = useCallback((event: MouseEvent<HTMLElement>): void => {\n      setAnchorEl(event.currentTarget);\n      setOpen(true);\n    }, []);\n\n    const onAcceptHandler = useCallback((): void => {\n      if (onConfirm) onConfirm();\n      setOpen(false);\n      setAnchorEl(null);\n    }, [onConfirm]);\n\n    const onDeclineHandler = useCallback((): void => {\n      if (onDecline) onDecline();\n      setOpen(false);\n      setAnchorEl(null);\n    }, [onDecline]);\n\n    return (\n      <div className={styles.container}>\n        <ClickAwayListener onClickAway={onDeclineHandler}>\n          {React.Children.only(children) ? (\n            <div className={styles.container} onClick={onClickHandler}>\n              {React.Children.map(children, (child: ReactElement) =>\n                React.cloneElement(child, { ref, ...props })\n              )}\n            </div>\n          ) : (\n            <div onClick={onClickHandler} className={styles.container} {...props} ref={ref}>\n              {children}\n            </div>\n          )}\n        </ClickAwayListener>\n        <Popover\n          classes={{ paper: styles.paper }}\n          open={open}\n          anchorEl={anchorEl}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n          transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n        >\n          <div className={styles.displayText}> {displayText} </div>\n          <div className={styles.buttons}>\n            <ActionButton size=\"small\" type=\"accept\" onClick={onAcceptHandler} />\n            <ActionButton size=\"small\" type=\"decline\" onClick={onDeclineHandler} />\n          </div>\n        </Popover>\n      </div>\n    );\n  }\n);\n\nexport default memo(ConfirmationPopover);\n","import React, { FC, memo, useCallback } from 'react';\nimport { Button } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport ConfirmationPopover from 'components/elements/ConfirmationPopover';\n\ninterface ConfirmedDeletionButtonProps {\n  deleteId: string;\n  deleteMethod: (id: string) => void;\n  deleteType?: string;\n  deleteName?: string;\n}\n\nconst ConfirmedDeletionButton: FC<ConfirmedDeletionButtonProps> = ({\n  deleteId,\n  deleteMethod,\n  deleteType,\n  deleteName\n}) => {\n  const displayText =\n    'Are you sure' +\n    (deleteType && deleteMethod\n      ? ' that you would like to delete the ' + deleteName + ' ' + deleteType + ' ?'\n      : '?');\n\n  const onConfirm = useCallback((): void => {\n    deleteMethod(deleteId);\n  }, [deleteId, deleteMethod]);\n\n  return (\n    <ConfirmationPopover onConfirm={onConfirm} displayText={displayText}>\n      <Button color=\"secondary\" size=\"small\" startIcon={<FontAwesomeIcon icon={faTrashAlt} />}>\n        Delete\n      </Button>\n    </ConfirmationPopover>\n  );\n};\n\nexport default memo(ConfirmedDeletionButton);\n","import React, { FC, memo, useState, useCallback, MouseEvent, ChangeEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faFileDownload } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Link\n} from '@material-ui/core';\nimport { useQueryCache, useMutation } from 'react-query';\n\nimport PathwayModal from './PathwayModal';\n\nimport useStyles from './styles';\nimport { Pathway } from 'pathways-model';\nimport { Link as RouterLink } from 'react-router-dom';\nimport ConfirmedDeletionButton from 'components/ConfirmedDeletionButton';\nimport { ContextualExportMenu } from 'components/elements/ExportMenu';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { deletePathway } from 'utils/backend';\nimport usePathways from 'hooks/usePathways';\n\ninterface PathwaysTableProps {\n  itemSelected: (item: string) => boolean;\n  handleSelectClick: (item: string) => (event: ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst PathwaysTable: FC<PathwaysTableProps> = ({ itemSelected, handleSelectClick }) => {\n  const styles = useStyles();\n  const cache = useQueryCache();\n  const { pathways } = usePathways();\n  const { setCurrentPathway } = useCurrentPathwayContext();\n  const [open, setOpen] = useState(false);\n  const [editablePathway, setEditablePathway] = useState<Pathway>();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const openEditPathwayModal = useCallback((pathway: Pathway): void => {\n    setOpen(true);\n    setEditablePathway(pathway);\n  }, []);\n\n  const closeEditPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  const openMenu = useCallback(\n    (event: MouseEvent<HTMLButtonElement>): void => {\n      setAnchorEl(event.currentTarget);\n      const pathway = pathways.filter(pathway => pathway.id === event.currentTarget.id);\n      if (pathway.length) setCurrentPathway(pathway[0]);\n    },\n    [pathways, setCurrentPathway]\n  );\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const [mutateDelete] = useMutation(deletePathway, {\n    onSettled: () => {\n      cache.invalidateQueries('pathways');\n      cache.invalidateQueries('pathway'); // TODO: only invalidate the deleted one\n    }\n  });\n\n  const deletion = useCallback(\n    (id: string): void => {\n      mutateDelete(id);\n    },\n    [mutateDelete]\n  );\n\n  return (\n    <div>\n      <TableContainer className={styles.pathwayList}>\n        <Table aria-label=\"pathway list\">\n          <TableHead>\n            <TableRow>\n              <TableCell padding=\"checkbox\"></TableCell>\n              <TableCell>Pathway Name</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Last Updated</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {pathways.map(pathway => (\n              <TableRow key={pathway.id}>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={itemSelected(pathway.id)}\n                    onChange={handleSelectClick(pathway.id)}\n                  />\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Link\n                    component={RouterLink}\n                    to={`/builder/${encodeURIComponent(pathway.id)}`}\n                    color=\"primary\"\n                    underline=\"none\"\n                  >\n                    {pathway.name}\n                  </Link>\n                </TableCell>\n\n                <TableCell>draft</TableCell>\n                <TableCell>2 days ago</TableCell>\n\n                <TableCell align=\"right\">\n                  <Button\n                    className={styles.pathwaysListButton}\n                    color=\"primary\"\n                    size=\"small\"\n                    startIcon={<FontAwesomeIcon icon={faEdit} />}\n                    onClick={(): void => openEditPathwayModal(pathway)}\n                  >\n                    Edit Info\n                  </Button>\n                  <Button\n                    id={pathway.id}\n                    className={styles.pathwaysListButton}\n                    color=\"primary\"\n                    size=\"small\"\n                    startIcon={<FontAwesomeIcon icon={faFileDownload} />}\n                    onClick={openMenu}\n                  >\n                    Export\n                  </Button>\n                  <ConfirmedDeletionButton\n                    deleteType=\"pathway\"\n                    deleteName={pathway.name}\n                    deleteId={pathway.id}\n                    deleteMethod={deletion}\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <ContextualExportMenu anchorEl={anchorEl} closeMenu={closeMenu} />\n      <PathwayModal open={open} onClose={closeEditPathwayModal} editPathway={editablePathway} />\n    </div>\n  );\n};\n\nexport default memo(PathwaysTable);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    },\n    input: {\n      display: 'none'\n    },\n    chooseFileInput: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    inputButton: {\n      whiteSpace: 'nowrap',\n      marginRight: '1em'\n    },\n    fileName: {\n      fontStyle: 'italic'\n    }\n  }),\n  { name: 'FileImportModal', index: 1 }\n);\n","import React, { FC, useState, useRef, FormEvent, useCallback, memo } from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Input\n} from '@material-ui/core';\nimport useStyles from './styles';\nimport { faFileImport, faSpinner, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ninterface FileImportModalProps {\n  open: boolean;\n  onClose: () => void;\n  onSelectFile: (files: FileList | undefined | null) => void;\n  allowedFileType?: string; // Setting this to undefined will allow any file type to be selected\n  loading?: boolean;\n}\n\nconst FileImportModal: FC<FileImportModalProps> = ({\n  open,\n  onClose,\n  onSelectFile,\n  allowedFileType,\n  loading = false\n}) => {\n  const styles = useStyles();\n  const [fileName, setFileName] = useState<string>('');\n  const importFileRef = useRef<HTMLInputElement>(null);\n\n  const selectFile = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      const files = importFileRef?.current?.files;\n      onSelectFile(files);\n      setFileName('');\n    },\n    [onSelectFile]\n  );\n\n  const handleChooseFile = useCallback(() => {\n    if (importFileRef?.current?.files?.[0]) setFileName(importFileRef.current.files[0].name);\n  }, [importFileRef]);\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"import-pathway\" fullWidth maxWidth=\"sm\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={selectFile}>\n        <DialogContent>\n          <div className={styles.chooseFileInput}>\n            <Input\n              id=\"choose-file-input\"\n              className={styles.input}\n              inputRef={importFileRef}\n              type=\"file\"\n              inputProps={{ accept: allowedFileType }} // TODO: how to allow multiple types?\n              onChange={handleChooseFile}\n            />\n            <label htmlFor=\"choose-file-input\">\n              <Button\n                className={styles.inputButton}\n                variant=\"contained\"\n                color=\"primary\"\n                component=\"span\"\n              >\n                Choose File\n              </Button>\n            </label>\n\n            <div className={styles.fileName}>\n              {fileName ? <span>{fileName}</span> : <span>Choose file to import.</span>}\n            </div>\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faFileImport} />}\n            endIcon={loading ? <FontAwesomeIcon icon={faSpinner} spin /> : null}\n            type=\"submit\"\n            disabled={loading}\n          >\n            Import\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(FileImportModal);\n","import { ChangeEvent, useCallback, useEffect, useMemo, useState } from 'react';\nimport produce from 'immer';\n\nexport interface ListCheckboxReturn {\n  indeterminate: boolean;\n  checked: boolean;\n  handleSelectAllClick: (event: ChangeEvent<HTMLInputElement>) => void;\n  itemSelected: (item: string) => boolean;\n  handleSelectClick: (item: string) => (event: ChangeEvent<HTMLInputElement>) => void;\n  selected: Set<string>;\n  setSelected: (selection: Set<string>) => void;\n  numSelected: number;\n}\n\nconst useListCheckbox = (listItems: Array<string>): ListCheckboxReturn => {\n  const [selected, setSelected] = useState<Set<string>>(new Set());\n  const numSelected = useMemo(() => selected.size, [selected.size]);\n  const rowCount = useMemo(() => listItems.length, [listItems.length]);\n  const indeterminate = useMemo(() => numSelected > 0 && numSelected < rowCount, [\n    numSelected,\n    rowCount\n  ]);\n  const checked = useMemo(() => rowCount > 0 && numSelected === rowCount, [numSelected, rowCount]);\n\n  useEffect(() => {\n    const difference = Array.from(selected).filter(item => !listItems.includes(item));\n    if (difference.length > 0) {\n      setSelected(\n        produce(currentSelected => {\n          difference.forEach(diff => currentSelected.delete(diff));\n        })\n      );\n    }\n  }, [listItems, selected]);\n\n  const handleSelectAllClick = useCallback(\n    event => {\n      if (event.target.checked) {\n        setSelected(new Set(listItems));\n      } else setSelected(new Set());\n    },\n    [listItems]\n  );\n  const itemSelected = useCallback(\n    item => {\n      return selected.has(item);\n    },\n    [selected]\n  );\n  const handleSelectClick = useCallback((id: string) => {\n    return (event: ChangeEvent<HTMLInputElement>): void => {\n      event.target.checked\n        ? setSelected(\n            produce(currentSelected => {\n              currentSelected.add(id);\n            })\n          )\n        : setSelected(\n            produce(currentSelected => {\n              currentSelected.delete(id);\n            })\n          );\n    };\n  }, []);\n\n  return {\n    indeterminate,\n    checked,\n    handleSelectAllClick,\n    itemSelected,\n    handleSelectClick,\n    selected,\n    setSelected,\n    numSelected\n  };\n};\n\nexport default useListCheckbox;\n","import React, { FC, useCallback, useState, memo, MouseEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faFileImport,\n  faPlus,\n  faFileDownload,\n  faFileExport,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport { Button, Checkbox, IconButton, Tooltip } from '@material-ui/core';\nimport { useQueryCache, useMutation } from 'react-query';\n\nimport Loading from 'components/elements/Loading';\nimport PathwaysTable from './PathwaysTable';\nimport PathwayModal from './PathwayModal';\n\nimport useStyles from './styles';\nimport FileImportModal from 'components/FileImportModal';\nimport useListCheckbox from 'hooks/useListCheckbox';\nimport ExportMenu from 'components/elements/ExportMenu';\nimport ConfirmationPopover from 'components/elements/ConfirmationPopover';\nimport { readFile, updateCriteria, updatePathway } from 'utils/backend';\nimport { Pathway } from 'pathways-model';\nimport { deletePathway } from 'utils/backend';\nimport usePathways from 'hooks/usePathways';\nimport { updatePathwayCriteriaSources } from 'utils/builder';\nimport useCriteria from 'hooks/useCriteria';\nimport { cqlToCriteria } from 'utils/criteria';\nimport { Criteria } from 'criteria-model';\n\nconst PathwaysList: FC = () => {\n  const styles = useStyles();\n  const cache = useQueryCache();\n  const { criteria } = useCriteria();\n  const { isLoading, pathways } = usePathways();\n  const [open, setOpen] = useState(false);\n  const [importPathwayOpen, _setImportPathwayOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [importLoading, setImportLoading] = useState<boolean>(false);\n\n  const {\n    indeterminate,\n    checked,\n    handleSelectAllClick,\n    itemSelected,\n    handleSelectClick,\n    selected,\n    numSelected\n  } = useListCheckbox(isLoading ? [] : pathways.map(n => n.id));\n\n  const openNewPathwayModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeNewPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  const openImportPathwayModal = useCallback((): void => _setImportPathwayOpen(true), []);\n\n  const closeImportPathwayModal = useCallback((): void => _setImportPathwayOpen(false), []);\n\n  const [mutateAddPathway] = useMutation(updatePathway, {\n    onSettled: () => cache.invalidateQueries('pathways')\n  });\n\n  const [mutateAddCriteria] = useMutation(updateCriteria, {\n    onSettled: () => cache.invalidateQueries('criteria')\n  });\n\n  const addCqlCriteria = useCallback(\n    (cql: string, criteriaToAdd: Criteria[]) => {\n      const dbCriteria = criteria.map(c => c.label);\n      return cqlToCriteria(cql).then(newCriteria => {\n        if (newCriteria.length > 0) {\n          // Do not add CQL Criteria that already exists\n          newCriteria.forEach(c => {\n            if (!dbCriteria.includes(c.label)) {\n              criteriaToAdd.push(c);\n              mutateAddCriteria(c);\n            }\n          });\n        } else {\n          alert('No valid criteria were found in the provided file');\n        }\n      });\n    },\n    [criteria, mutateAddCriteria]\n  );\n\n  const loadPathwayLibraries = useCallback(\n    async (pathway: Pathway): Promise<Criteria[]> => {\n      const newCriteria: Criteria[] = [];\n      const listOfPromises: Promise<void>[] = [];\n      pathway.library.forEach(lib => listOfPromises.push(addCqlCriteria(lib, newCriteria)));\n      return Promise.all(listOfPromises).then(() => newCriteria);\n    },\n    [addCqlCriteria]\n  );\n\n  const addPathway = useCallback(\n    (files: FileList | undefined | null) => {\n      if (files) {\n        setImportLoading(true);\n        readFile(files[0], (event: ProgressEvent<FileReader>): void => {\n          if (event.target?.result) {\n            const rawContent = event.target.result as string;\n            const tempPathway = JSON.parse(rawContent) as Pathway;\n            loadPathwayLibraries(tempPathway).then(newCriteria => {\n              const { newPathway } = updatePathwayCriteriaSources(tempPathway, [\n                ...criteria,\n                ...newCriteria\n              ]);\n              mutateAddPathway(newPathway);\n              closeImportPathwayModal();\n              setImportLoading(false);\n            });\n          }\n        });\n      } else {\n        closeImportPathwayModal();\n      }\n    },\n    [criteria, mutateAddPathway, loadPathwayLibraries, closeImportPathwayModal]\n  );\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const [mutateDelete] = useMutation(deletePathway, {\n    onSettled: () => cache.invalidateQueries('pathways')\n  });\n\n  const handleDelete = useCallback(() => {\n    selected.forEach(id => {\n      mutateDelete(id);\n    });\n  }, [mutateDelete, selected]);\n\n  const [pathwaysToExport, setPathwaysToExport] = useState<Pathway[]>([]);\n  const handleExportAll = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      setPathwaysToExport(pathways.filter(pathway => selected.has(pathway.id)));\n      setAnchorEl(event.currentTarget);\n    },\n    [pathways, selected]\n  );\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.tableTop}>\n        <div className={styles.selectionOptions}>\n          <Tooltip placement=\"top\" title=\"Select All\" arrow>\n            <Checkbox\n              indeterminate={indeterminate}\n              checked={checked}\n              onChange={handleSelectAllClick}\n            />\n          </Tooltip>\n          {numSelected > 0 && (\n            <>\n              <Tooltip placement=\"top\" title=\"Export\" arrow>\n                <IconButton size=\"small\" onClick={handleExportAll}>\n                  <FontAwesomeIcon icon={faFileDownload} className={styles.selectionIcon} />\n                </IconButton>\n              </Tooltip>\n              <Tooltip placement=\"top\" title=\"Move to\" arrow>\n                <IconButton size=\"small\">\n                  <FontAwesomeIcon icon={faFileExport} className={styles.selectionIcon} />\n                </IconButton>\n              </Tooltip>\n              <Tooltip placement=\"top\" title=\"Delete\" arrow>\n                <ConfirmationPopover\n                  onConfirm={handleDelete}\n                  displayText={`Are you sure that you would like to delete the selected pathway${\n                    numSelected > 1 ? 's' : ''\n                  }?`}\n                >\n                  <IconButton size=\"small\">\n                    <FontAwesomeIcon icon={faTrashAlt} className={styles.deleteIcon} />\n                  </IconButton>\n                </ConfirmationPopover>\n              </Tooltip>\n            </>\n          )}\n        </div>\n        <div className={styles.buttonRow}>\n          <Button\n            className={styles.createPathwayButton}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faFileImport} />}\n            onClick={openImportPathwayModal}\n          >\n            Import Pathway\n          </Button>\n\n          <Button\n            className={styles.createPathwayButton}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faPlus} />}\n            onClick={openNewPathwayModal}\n          >\n            Create Pathway\n          </Button>\n        </div>\n      </div>\n      <FileImportModal\n        open={importPathwayOpen}\n        onClose={closeImportPathwayModal}\n        onSelectFile={addPathway}\n        allowedFileType=\".json\"\n        loading={importLoading}\n      />\n      <PathwayModal open={open} onClose={closeNewPathwayModal} />\n      <ExportMenu pathway={pathwaysToExport} anchorEl={anchorEl} closeMenu={closeMenu} />\n\n      {isLoading && <Loading />}\n      {!isLoading && pathways && (\n        <PathwaysTable handleSelectClick={handleSelectClick} itemSelected={itemSelected} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PathwaysList);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    buttonRow: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    buildCriteriaButton: {\n      alignSelf: 'flex-end',\n      marginLeft: '20px'\n    },\n    criteriaList: {\n      marginTop: '1em'\n    },\n    editButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    },\n    input: {\n      display: 'none'\n    },\n    chooseFileInput: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    inputButton: {\n      whiteSpace: 'nowrap',\n      marginRight: '1em'\n    },\n    fileName: {\n      fontStyle: 'italic'\n    },\n    tableTop: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    selectionOptions: {\n      display: 'flex',\n      paddingLeft: '4px',\n      justifyContent: 'space-between',\n      alignItems: 'flex-end'\n    },\n    selectionIcon: {\n      color: theme.palette.primary.main\n    },\n    deleteIcon: {\n      color: theme.palette.secondary.main\n    }\n  }),\n  { name: 'CriteriaList', index: 1 }\n);\n","import React, { ChangeEvent, FC, memo, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport moment from 'moment';\n\nimport useStyles from './styles';\nimport ConfirmedDeletionButton from 'components/ConfirmedDeletionButton';\nimport { useMutation, useQueryCache } from 'react-query';\nimport { deleteCriteria } from 'utils/backend';\nimport useCriteria from 'hooks/useCriteria';\n\ninterface CriteriaTableProps {\n  itemSelected: (item: string) => boolean;\n  handleSelectClick: (item: string) => (event: ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst CriteriaTable: FC<CriteriaTableProps> = ({ itemSelected, handleSelectClick }) => {\n  const styles = useStyles();\n  const cache = useQueryCache();\n  const { criteria } = useCriteria();\n\n  const renderDate = (datetime: number): string => {\n    return moment(datetime).fromNow();\n  };\n\n  const [mutateDelete] = useMutation(deleteCriteria, {\n    onSettled: () => cache.invalidateQueries('criteria')\n  });\n\n  const deletion = useCallback(\n    (id: string): void => {\n      mutateDelete(id);\n    },\n    [mutateDelete]\n  );\n\n  return (\n    <TableContainer className={styles.criteriaList}>\n      <Table aria-label=\"criteria list\">\n        <TableHead>\n          <TableRow>\n            <TableCell padding=\"checkbox\"></TableCell>\n            <TableCell>Criteria Name</TableCell>\n            <TableCell>Version</TableCell>\n            <TableCell>Added</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {criteria.map(c => (\n            <TableRow key={c.id}>\n              <TableCell padding=\"checkbox\">\n                <Checkbox checked={itemSelected(c.id)} onChange={handleSelectClick(c.id)} />\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {c.label}\n              </TableCell>\n              <TableCell>{c.version}</TableCell>\n              <TableCell>{renderDate(c.modified)}</TableCell>\n\n              <TableCell align=\"right\">\n                <Button\n                  className={styles.editButton}\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faEdit} />}\n                >\n                  Edit\n                </Button>\n                <ConfirmedDeletionButton\n                  deleteType=\"criterion\"\n                  deleteName={c.label}\n                  deleteId={c.id}\n                  deleteMethod={deletion}\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default memo(CriteriaTable);\n","import React, { FC, memo, useState, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTools, faFileImport, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Button, Checkbox, IconButton, Tooltip } from '@material-ui/core';\nimport { useMutation, useQueryCache } from 'react-query';\n\nimport Loading from 'components/elements/Loading';\nimport CriteriaTable from './CriteriaTable';\n\nimport useStyles from './styles';\nimport FileImportModal from 'components/FileImportModal';\nimport useListCheckbox from 'hooks/useListCheckbox';\nimport ConfirmationPopover from 'components/elements/ConfirmationPopover';\nimport { deleteCriteria, readFile, updateCriteria } from 'utils/backend';\nimport { cqlToCriteria, jsonToCriteria } from 'utils/criteria';\nimport useCriteria from 'hooks/useCriteria';\nimport JSZip from 'jszip';\nimport { CqlLibraries } from 'engine/cql-to-elm';\n\nconst CriteriaList: FC = () => {\n  const styles = useStyles();\n  const cache = useQueryCache();\n  const { isLoading, criteria } = useCriteria();\n  const [open, setOpen] = useState<boolean>(false);\n\n  const {\n    indeterminate,\n    checked,\n    handleSelectAllClick,\n    itemSelected,\n    handleSelectClick,\n    selected,\n    setSelected,\n    numSelected\n  } = useListCheckbox(isLoading ? [] : criteria.map(n => n.id));\n\n  const openImportModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeImportModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  const [mutateAddCriteria] = useMutation(updateCriteria, {\n    onSettled: () => cache.invalidateQueries('criteria')\n  });\n\n  const addCqlCriteria = useCallback(\n    (cql: string | CqlLibraries): void => {\n      cqlToCriteria(cql).then(newCriteria => {\n        // eslint-disable-next-line\n        if (newCriteria.length) newCriteria.forEach(c => mutateAddCriteria(c));\n        else alert('No valid criteria were found in the provided file');\n      });\n    },\n    [mutateAddCriteria]\n  );\n\n  const addCriteria = useCallback(\n    (files: FileList | undefined | null) => {\n      if (files) {\n        readFile(files[0], (event: ProgressEvent<FileReader>): void => {\n          if (event.target?.result) {\n            const rawContent = event.target.result as string;\n            // TODO: more robust file type identification?\n            if (files[0].name.endsWith('.json')) {\n              const newCriteria = jsonToCriteria(rawContent);\n              if (newCriteria) newCriteria.forEach(criteria => mutateAddCriteria(criteria)); // eslint-disable-line\n            } else if (files[0].name.endsWith('.cql')) {\n              addCqlCriteria(rawContent);\n            } else if (files[0].name.endsWith('.zip')) {\n              const cqlLibraries: CqlLibraries = {};\n              JSZip.loadAsync(files[0]).then(async zip => {\n                const zipFiles = Object.values(zip.files);\n                // Check for criteria in each of the cql files, add cql to libraries if no criteria\n                for (let i = 0; i < zipFiles.length; i++) {\n                  const zipFile = zipFiles[i];\n\n                  // Skip files that do not end with .cql\n                  if (!zipFile.name.endsWith('.cql')) continue;\n                  const fileContents = await zipFile.async('string');\n                  cqlLibraries[zipFile.name] = { cql: fileContents };\n                }\n                addCqlCriteria(cqlLibraries);\n              });\n            }\n          } else alert('Unable to read that file');\n        });\n      }\n      closeImportModal();\n    },\n    [mutateAddCriteria, closeImportModal, addCqlCriteria]\n  );\n\n  const [mutateDelete] = useMutation(deleteCriteria, {\n    onSettled: () => cache.invalidateQueries('criteria')\n  });\n\n  const handleDelete = useCallback(() => {\n    selected.forEach(id => {\n      mutateDelete(id);\n      setSelected(new Set());\n    });\n  }, [selected, setSelected, mutateDelete]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.tableTop}>\n        <div className={styles.selectionOptions}>\n          <Tooltip placement=\"top\" title=\"Select All\" arrow>\n            <Checkbox\n              indeterminate={indeterminate}\n              checked={checked}\n              onChange={handleSelectAllClick}\n            />\n          </Tooltip>\n          {numSelected > 0 && (\n            <>\n              <Tooltip placement=\"top\" title=\"Delete\" arrow>\n                <ConfirmationPopover\n                  onConfirm={handleDelete}\n                  displayText={`Are you sure that you would like to delete the selected ${\n                    numSelected > 1 ? 'criteria' : 'criterion'\n                  }?`}\n                >\n                  <IconButton size=\"small\">\n                    <FontAwesomeIcon icon={faTrashAlt} className={styles.deleteIcon} />\n                  </IconButton>\n                </ConfirmationPopover>\n              </Tooltip>\n            </>\n          )}\n        </div>\n        <div className={styles.buttonRow}>\n          <Button\n            className={styles.buildCriteriaButton}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faFileImport} />}\n            onClick={openImportModal}\n          >\n            Import Library\n          </Button>\n          <Button\n            className={styles.buildCriteriaButton}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faTools} />}\n          >\n            Build Criteria\n          </Button>\n        </div>\n      </div>\n\n      <FileImportModal\n        open={open}\n        onClose={closeImportModal}\n        onSelectFile={addCriteria}\n        allowedFileType=\".cql, .zip\"\n      />\n\n      {isLoading && <Loading />}\n      {!isLoading && criteria && (\n        <CriteriaTable handleSelectClick={handleSelectClick} itemSelected={itemSelected} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(CriteriaList);\n","import React, { FC, memo } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from 'components/Header';\n\nimport BuilderRoute from './BuilderRoute';\nimport { UserProvider } from './UserProvider';\nimport Tabs from './Tabs';\nimport PathwaysList from './PathwaysList';\nimport CriteriaList from './CriteriaList';\nimport { CurrentPathwayProvider } from './CurrentPathwayProvider';\nimport { CurrentCriteriaProvider } from './CurrentCriteriaProvider';\nimport { SnackbarProvider } from './SnackbarProvider';\nimport { CriteriaBuilderProvider } from './CriteriaBuilderProvider';\nimport { QueryCache, ReactQueryCacheProvider } from 'react-query';\nimport { AlertProvider } from './AlertProvider';\n\nconst cache = new QueryCache();\n\nconst App: FC = () => {\n  return (\n    <ReactQueryCacheProvider queryCache={cache}>\n      <UserProvider>\n        <CurrentPathwayProvider>\n          <AlertProvider>\n            <SnackbarProvider>\n              <CurrentCriteriaProvider>\n                <CriteriaBuilderProvider>\n                  <Router>\n                    <Switch>\n                      <Route path=\"/builder/:id/node/:nodeId\">\n                        <BuilderRoute />\n                      </Route>\n                      <Route path=\"/builder/:id\">\n                        <BuilderRoute />\n                      </Route>\n                      <Route path=\"/\">\n                        <Header />\n                        <Tabs\n                          tabs={[\n                            { label: 'Pathway', component: <PathwaysList /> },\n                            { label: 'Criteria', component: <CriteriaList /> }\n                          ]}\n                        />\n                      </Route>\n                    </Switch>\n                  </Router>\n                </CriteriaBuilderProvider>\n              </CurrentCriteriaProvider>\n            </SnackbarProvider>\n          </AlertProvider>\n        </CurrentPathwayProvider>\n      </UserProvider>\n    </ReactQueryCacheProvider>\n  );\n};\n\nexport default memo(App);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    landing: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh'\n    },\n    header: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      height: '7em',\n      backgroundColor: theme.palette.common.grayLightest,\n      padding: '0 4em'\n    },\n    logoLink: {\n      display: 'block'\n    },\n    logo: {\n      height: '5em'\n    },\n    headerButtons: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    authButton: {\n      padding: '30px',\n      fontSize: '1.5em',\n      '& span': {\n        fontFamily: ['Roboto Condensed', 'sans-serif'].join(','),\n        fontWeight: 400,\n        lineHeight: '0.2em'\n      }\n    },\n    signupButton: {\n      backgroundColor: theme.palette.common.red,\n      color: theme.palette.common.white,\n      marginRight: '20px',\n      marginLeft: 'auto',\n      '&:hover': {\n        backgroundColor: theme.palette.common.redDark\n      }\n    },\n    loginButton: {\n      backgroundColor: theme.palette.common.white,\n      border: '1px solid',\n      borderColor: theme.palette.common.grayBlueDark,\n      color: theme.palette.common.grayBlueDark,\n      '&:hover': {\n        color: theme.palette.common.grayVeryDark\n      }\n    },\n    tryItButton: {\n      height: '60px',\n      width: '200px',\n      marginBottom: '1em',\n      '& button': {\n        backgroundColor: theme.palette.common.red,\n        color: theme.palette.common.white,\n        boxShadow: '4px 4px 12px 0 rgba(0,0,0,0.50)',\n        fontSize: '2.5em',\n        height: '100%',\n        width: '100%'\n      },\n      '& button:hover': {\n        backgroundColor: theme.palette.common.redDark\n      },\n      '& button span': {\n        fontFamily: ['Roboto Condensed', 'sans-serif'].join(','),\n        fontWeight: 400,\n        textTransform: 'none',\n        lineHeight: '0.2em'\n      }\n    },\n    landingBody: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-around',\n      flex: '1',\n      margin: '4em'\n    },\n    landingContent: {\n      display: 'flex',\n      flexDirection: 'column',\n      marginRight: '10em'\n    },\n    text: {\n      fontFamily: ['Roboto Condensed', 'sans-serif'].join(','),\n      fontWeight: 300,\n      lineHeight: '1.2em'\n    },\n    mainText: {\n      fontSize: '4em',\n      color: theme.palette.common.grayBlueDark,\n      marginBottom: '0.5em'\n    },\n    subText: {\n      fontSize: '2.5em',\n      color: theme.palette.common.grayLighter,\n      marginBottom: '2em',\n      width: '80%'\n    },\n    link: {\n      fontWeight: 500,\n      color: theme.palette.common.blue,\n      '&:hover': {\n        color: theme.palette.common.blueDark\n      }\n    },\n    socialMedia: {\n      display: 'flex',\n      color: theme.palette.common.grayDark\n    },\n    iconGithub: {\n      fontSize: '3em'\n    },\n    iconEmail: {\n      marginLeft: '5px',\n      color: theme.palette.common.white,\n      '& svg': {\n        fontSize: '1.8em',\n        padding: '5px'\n      }\n    },\n    iconEmailCircle: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-around',\n      backgroundColor: theme.palette.common.grayDark,\n      borderRadius: '50%',\n      width: '42px',\n      height: '42px'\n    },\n    exampleImage: {\n      width: '50%',\n      maxWidth: '800px'\n    },\n    footer: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      backgroundColor: theme.palette.common.grayLightest,\n      padding: '0.5em 4em'\n    },\n    footerLogo: {\n      display: 'flex'\n    },\n    mitreLogo: {\n      marginRight: '20px',\n      height: '60px'\n    },\n    mcodeLogo: {\n      height: '30px'\n    }\n  }),\n  { name: 'Auth', index: 1 }\n);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      padding: theme.variables.spacing.globalPadding\n    },\n    modalHeader: {\n      fontSize: '4em',\n      fontWeight: 600,\n      margin: '-40px 0 10px',\n      color: theme.palette.common.blue\n    },\n    closeIcon: {\n      width: '20px',\n      height: '20px',\n      padding: '20px'\n    },\n    modalText: {\n      fontSize: '1.5em',\n      color: theme.palette.common.grayLighter,\n      marginBottom: '40px'\n    },\n    submitButton: {\n      fontSize: '1.3em',\n      padding: '25px',\n      '& span': {\n        fontFamily: ['Roboto Condensed', 'sans-serif'].join(','),\n        fontWeight: 400,\n        lineHeight: '0.2em'\n      }\n    }\n  }),\n  { name: 'Modal', index: 1 }\n);\n","import React, { FC, memo, ReactNode } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton\n} from '@material-ui/core';\n\nimport useStyles from './styles';\n\ninterface ModalProps {\n  handleShowModal: boolean;\n  handleCloseModal: () => void;\n  handleSaveModal: () => void;\n  headerTitle: string;\n  headerSubtitle: string;\n  footerText?: ReactNode;\n  hasSecondaryButton?: boolean;\n  submitButtonText: string;\n  children?: ReactNode;\n}\n\nconst Modal: FC<ModalProps> = ({\n  handleShowModal,\n  handleCloseModal,\n  handleSaveModal,\n  headerTitle,\n  headerSubtitle,\n  footerText = '',\n  hasSecondaryButton = false,\n  submitButtonText,\n  children\n}) => {\n  const styles = useStyles();\n\n  return (\n    <Dialog open={handleShowModal} onClose={handleCloseModal} fullWidth maxWidth=\"sm\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={handleCloseModal} className={styles.closeIcon}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <DialogContent>\n        <div className={styles.modalHeader}>{headerTitle}</div>\n        <div className={styles.modalText}>{headerSubtitle}</div>\n\n        {children && children}\n      </DialogContent>\n\n      <DialogActions>\n        <div>{footerText}</div>\n\n        {hasSecondaryButton && (\n          <Button variant=\"contained\" onClick={handleCloseModal}>\n            Cancel\n          </Button>\n        )}\n\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          type=\"submit\"\n          onClick={handleSaveModal}\n          className={styles.submitButton}\n        >\n          {submitButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default memo(Modal);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    textInput: {\n      margin: '10px 0'\n    },\n    input: {\n      width: '100%',\n      '& input::placeholder': {\n        color: theme.palette.common.grayDark,\n        fontStyle: 'italic'\n      }\n    },\n    icon: {\n      color: theme.palette.common.grayBlueDark,\n      marginRight: '20px'\n    }\n  }),\n  { name: 'TextInput', index: 1 }\n);\n","import React, { FC, memo, ReactNode } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { OutlinedInput, InputAdornment } from '@material-ui/core';\n\nimport useStyles from './styles';\n\ninterface TextInputProps {\n  id: string;\n  placeholder?: string;\n  icon: IconProp;\n  type?: string;\n  helperText?: ReactNode;\n}\n\nconst TextInput: FC<TextInputProps> = ({\n  id,\n  placeholder = '',\n  icon,\n  type = 'text',\n  helperText = ''\n}) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.textInput}>\n      <OutlinedInput\n        id={id}\n        type={type}\n        placeholder={placeholder || ''}\n        className={styles.input}\n        startAdornment={\n          <InputAdornment position=\"start\" className={styles.icon}>\n            <FontAwesomeIcon icon={icon} />\n          </InputAdornment>\n        }\n      />\n      {helperText}\n    </div>\n  );\n};\n\nexport default memo(TextInput);\n","import React, { FC, memo, useCallback } from 'react';\nimport { faEnvelope, faLock } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport Modal from 'components/elements/Modal';\nimport TextInput from 'components/elements/TextInput';\n\ninterface LoginModalProps {\n  open: boolean;\n  onClose: () => void;\n  onSignup: () => void;\n  onReset: () => void;\n}\n\nconst LoginModal: FC<LoginModalProps> = ({ open, onClose, onSignup, onReset }) => {\n  const logIn = useCallback((): void => {\n    return; // TODO\n  }, []);\n\n  const signUp = (\n    <>\n      Don't have an account?{' '}\n      <Button variant=\"text\" color=\"primary\" onClick={onSignup}>\n        Sign up.\n      </Button>\n    </>\n  );\n\n  const requestReset = (\n    <>\n      <label>Forgot your password?</label>\n      <Button variant=\"text\" color=\"primary\" onClick={onReset}>\n        Request a reset link.\n      </Button>\n    </>\n  );\n\n  return (\n    <Modal\n      handleShowModal={open}\n      handleCloseModal={onClose}\n      handleSaveModal={logIn}\n      headerTitle=\"Log in\"\n      headerSubtitle=\"Log in to access your account and manage your clinical pathways\"\n      footerText={signUp}\n      submitButtonText=\"Log in\"\n    >\n      <>\n        <TextInput id=\"email\" placeholder=\"Email\" type=\"email\" icon={faEnvelope} />\n        <TextInput\n          id=\"password\"\n          placeholder=\"Password\"\n          type=\"password\"\n          icon={faLock}\n          helperText={requestReset}\n        />\n      </>\n    </Modal>\n  );\n};\n\nexport default memo(LoginModal);\n","import React, { FC, memo } from 'react';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport Modal from 'components/elements/Modal';\nimport TextInput from 'components/elements/TextInput';\n\ninterface ResetModalProps {\n  open: boolean;\n  onClose: () => void;\n  onLogin: () => void;\n  onLinkSent: () => void;\n}\n\nconst ResetModal: FC<ResetModalProps> = ({ open, onClose, onLogin, onLinkSent }) => {\n  const logIn = (\n    <>\n      Already know your password?{' '}\n      <Button variant=\"text\" color=\"primary\" onClick={onLogin}>\n        Log in.\n      </Button>\n    </>\n  );\n\n  return (\n    <Modal\n      handleShowModal={open}\n      handleCloseModal={onClose}\n      handleSaveModal={onLinkSent}\n      headerTitle=\"Reset password\"\n      headerSubtitle=\"Enter your email address you're using for your account below and we'll send you a password reset link\"\n      footerText={logIn}\n      submitButtonText=\"Reset\"\n    >\n      <>\n        <TextInput id=\"email\" placeholder=\"Email\" type=\"email\" icon={faEnvelope} />\n      </>\n    </Modal>\n  );\n};\n\nexport default memo(ResetModal);\n","import React, { FC, memo } from 'react';\n\nimport Modal from 'components/elements/Modal';\n\ninterface LinkSentModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst LinkSentModal: FC<LinkSentModalProps> = ({ open, onClose }) => {\n  return (\n    <Modal\n      handleShowModal={open}\n      handleCloseModal={onClose}\n      handleSaveModal={onClose}\n      headerTitle=\"Link sent\"\n      headerSubtitle=\"A password reset link was successfully sent. Please check your email to set your new password.\"\n      submitButtonText=\"Close\"\n    />\n  );\n};\n\nexport default memo(LinkSentModal);\n","import React, { FC, memo } from 'react';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport Modal from 'components/elements/Modal';\nimport TextInput from 'components/elements/TextInput';\n\ninterface NewPasswordModalProps {\n  open: boolean;\n  onClose: () => void;\n  onPasswordReset: () => void;\n}\n\nconst NewPasswordModal: FC<NewPasswordModalProps> = ({ open, onClose, onPasswordReset }) => {\n  return (\n    <Modal\n      handleShowModal={open}\n      handleCloseModal={onClose}\n      handleSaveModal={onPasswordReset}\n      headerTitle=\"Reset password\"\n      headerSubtitle=\"Enter your new password for your account\"\n      submitButtonText=\"Reset\"\n    >\n      <>\n        <TextInput id=\"password\" placeholder=\"Password\" type=\"password\" icon={faLock} />\n\n        <TextInput\n          id=\"confirm-password\"\n          placeholder=\"Confirm password\"\n          type=\"password\"\n          icon={faLock}\n        />\n      </>\n    </Modal>\n  );\n};\n\nexport default memo(NewPasswordModal);\n","import React, { FC, memo } from 'react';\n\nimport Modal from 'components/elements/Modal';\n\ninterface PasswordResetModalProps {\n  open: boolean;\n  onClose: () => void;\n  onLogin: () => void;\n}\n\nconst PasswordResetModal: FC<PasswordResetModalProps> = ({ open, onClose, onLogin }) => {\n  return (\n    <Modal\n      handleShowModal={open}\n      handleCloseModal={onClose}\n      handleSaveModal={onLogin}\n      headerTitle=\"Password reset\"\n      headerSubtitle=\"Your password was successfully reset! You can now use your new password to log in.\"\n      submitButtonText=\"Log in\"\n    />\n  );\n};\n\nexport default memo(PasswordResetModal);\n","import React, { FC, memo, useCallback } from 'react';\nimport { faEnvelope, faBuilding, faLock } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport Modal from 'components/elements/Modal';\nimport TextInput from 'components/elements/TextInput';\n\ninterface SignupModalProps {\n  open: boolean;\n  onClose: () => void;\n  onLogin: () => void;\n}\n\nconst SignupModal: FC<SignupModalProps> = ({ open, onClose, onLogin }) => {\n  const signUp = useCallback((): void => {\n    return; // TODO\n  }, []);\n\n  const logIn = (\n    <>\n      Already signed up?{' '}\n      <Button variant=\"text\" color=\"primary\" onClick={onLogin}>\n        Log in.\n      </Button>\n    </>\n  );\n\n  return (\n    <Modal\n      handleShowModal={open}\n      handleCloseModal={onClose}\n      handleSaveModal={signUp}\n      headerTitle=\"Sign up\"\n      headerSubtitle=\"Create an account to start building your own clinical pathways\"\n      footerText={logIn}\n      submitButtonText=\"Sign up\"\n    >\n      <>\n        <TextInput id=\"email\" placeholder=\"Email\" type=\"email\" icon={faEnvelope} />\n        <TextInput id=\"organization\" placeholder=\"Organization (optional)\" icon={faBuilding} />\n        <TextInput id=\"password\" placeholder=\"Password\" type=\"password\" icon={faLock} />\n\n        <TextInput\n          id=\"confirm-password\"\n          placeholder=\"Confirm Password\"\n          type=\"password\"\n          icon={faLock}\n        />\n      </>\n    </Modal>\n  );\n};\n\nexport default memo(SignupModal);\n","import React, {\n  createContext,\n  FC,\n  memo,\n  ReactNode,\n  useCallback,\n  useContext,\n  useState\n} from 'react';\n\nimport LoginModal from './LoginModal';\nimport ResetModal from './ResetModal';\nimport LinkSentModal from './LinkSentModal';\nimport NewPasswordModal from './NewPasswordModal';\nimport PasswordResetModal from './PasswordResetModal';\nimport SignupModal from './SignupModal';\n\ninterface AuthModalsProps {\n  openLogin: boolean;\n  openSignup: boolean;\n  openReset: boolean;\n  openLinkSent: boolean;\n  openNewPassword: boolean;\n  openPasswordReset: boolean;\n  switchToLogin: () => void;\n  switchToReset: () => void;\n  switchToSignup: () => void;\n  switchToLinkSent: () => void;\n  switchToPasswordReset: () => void;\n  closeLoginModal: () => void;\n  closeSignupModal: () => void;\n  closeResetModal: () => void;\n  closeLinkSentModal: () => void;\n  closeNewPasswordModal: () => void;\n  closePasswordResetModal: () => void;\n}\n\nconst AuthModals: FC<AuthModalsProps> = ({\n  openLogin,\n  openSignup,\n  openReset,\n  openLinkSent,\n  openNewPassword,\n  openPasswordReset,\n  switchToLogin,\n  switchToReset,\n  switchToSignup,\n  switchToLinkSent,\n  switchToPasswordReset,\n  closeLoginModal,\n  closeSignupModal,\n  closeResetModal,\n  closeLinkSentModal,\n  closeNewPasswordModal,\n  closePasswordResetModal\n}) => {\n  return (\n    <>\n      <LoginModal\n        open={openLogin}\n        onClose={closeLoginModal}\n        onSignup={switchToSignup}\n        onReset={switchToReset}\n      />\n\n      <SignupModal open={openSignup} onClose={closeSignupModal} onLogin={switchToLogin} />\n\n      <ResetModal\n        open={openReset}\n        onClose={closeResetModal}\n        onLogin={switchToLogin}\n        onLinkSent={switchToLinkSent}\n      />\n\n      <LinkSentModal open={openLinkSent} onClose={closeLinkSentModal} />\n\n      <NewPasswordModal\n        open={openNewPassword}\n        onClose={closeNewPasswordModal}\n        onPasswordReset={switchToPasswordReset}\n      />\n\n      <PasswordResetModal\n        open={openPasswordReset}\n        onClose={closePasswordResetModal}\n        onLogin={switchToLogin}\n      />\n    </>\n  );\n};\n\ninterface AuthModalContextInterface {\n  openLoginModal: () => void;\n  closeLoginModal: () => void;\n  openSignupModal: () => void;\n  closeSignupModal: () => void;\n}\n\nexport const AuthModalContext = createContext<AuthModalContextInterface>(\n  {} as AuthModalContextInterface\n);\n\ninterface AuthModalProviderProps {\n  children: ReactNode;\n}\n\nconst AuthModalProvider: FC<AuthModalProviderProps> = memo(({ children }) => {\n  const [openLogin, setOpenLogin] = useState<boolean>(false);\n  const [openSignup, setOpenSignup] = useState<boolean>(false);\n  const [openReset, setOpenReset] = useState<boolean>(false);\n  const [openLinkSent, setOpenLinkSent] = useState<boolean>(false);\n  const [openNewPassword, setOpenNewPassword] = useState<boolean>(false);\n  const [openPasswordReset, setOpenPasswordReset] = useState<boolean>(false);\n\n  const switchToLogin = useCallback((): void => {\n    setOpenSignup(false);\n    setOpenReset(false);\n    setOpenLogin(true);\n    setOpenPasswordReset(false);\n  }, []);\n\n  const switchToReset = useCallback((): void => {\n    setOpenSignup(false);\n    setOpenLogin(false);\n    setOpenReset(true);\n  }, []);\n\n  const switchToSignup = useCallback((): void => {\n    setOpenLogin(false);\n    setOpenReset(false);\n    setOpenSignup(true);\n  }, []);\n\n  const switchToLinkSent = useCallback((): void => {\n    setOpenReset(false);\n    setOpenLinkSent(true);\n  }, []);\n\n  const switchToPasswordReset = useCallback((): void => {\n    setOpenPasswordReset(true);\n    setOpenNewPassword(false);\n  }, []);\n\n  const openLoginModal = useCallback((): void => {\n    setOpenLogin(true);\n  }, []);\n\n  const closeLoginModal = useCallback((): void => {\n    setOpenLogin(false);\n  }, []);\n\n  const openSignupModal = useCallback((): void => {\n    setOpenSignup(true);\n  }, []);\n\n  const closeSignupModal = useCallback((): void => {\n    setOpenSignup(false);\n  }, []);\n\n  const closeResetModal = useCallback((): void => {\n    setOpenReset(false);\n  }, []);\n\n  const closeLinkSentModal = useCallback((): void => {\n    setOpenLinkSent(false);\n  }, []);\n\n  const closeNewPasswordModal = useCallback((): void => {\n    setOpenNewPassword(false);\n  }, []);\n\n  const closePasswordResetModal = useCallback((): void => {\n    setOpenPasswordReset(false);\n  }, []);\n\n  return (\n    <AuthModalContext.Provider\n      value={{ openLoginModal, closeLoginModal, openSignupModal, closeSignupModal }}\n    >\n      <AuthModals\n        openLogin={openLogin}\n        openSignup={openSignup}\n        openReset={openReset}\n        openLinkSent={openLinkSent}\n        openNewPassword={openNewPassword}\n        openPasswordReset={openPasswordReset}\n        switchToLogin={switchToLogin}\n        switchToReset={switchToReset}\n        switchToSignup={switchToSignup}\n        switchToLinkSent={switchToLinkSent}\n        switchToPasswordReset={switchToPasswordReset}\n        closeLoginModal={closeLoginModal}\n        closeSignupModal={closeSignupModal}\n        closeResetModal={closeResetModal}\n        closeLinkSentModal={closeLinkSentModal}\n        closeNewPasswordModal={closeNewPasswordModal}\n        closePasswordResetModal={closePasswordResetModal}\n      />\n      {children}\n    </AuthModalContext.Provider>\n  );\n});\n\nexport default AuthModalProvider;\nexport const useAuthModalContext = (): AuthModalContextInterface => useContext(AuthModalContext);\n","import React, { FC, memo } from 'react';\n\nimport { LandingHeader, LandingBody, LandingFooter } from 'components/Auth';\nimport useStyles from './styles';\nimport { useAuthModalContext } from './AuthModalProvider';\n\nconst Landing: FC = () => {\n  const styles = useStyles();\n  const { openLoginModal, openSignupModal } = useAuthModalContext();\n\n  return (\n    <div className={styles.landing}>\n      <LandingHeader openLogin={openLoginModal} openSignup={openSignupModal} />\n      <LandingBody />\n      <LandingFooter />\n    </div>\n  );\n};\n\nexport default memo(Landing);\n","import React, { FC, memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport clsx from 'clsx';\n\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\n\nimport logo from 'assets/camino-builder-logo-light-bg.png';\nimport useStyles from './styles';\n\ninterface LandingHeaderProps {\n  openLogin: () => void;\n  openSignup: () => void;\n}\n\nconst LandingHeader: FC<LandingHeaderProps> = ({ openLogin, openSignup }) => {\n  const styles = useStyles();\n  const { resetCurrentCriteria } = useCurrentCriteriaContext();\n\n  return (\n    <header className={styles.header}>\n      <Link to=\"/\" onClick={resetCurrentCriteria} className={styles.logoLink}>\n        <img src={logo} alt=\"logo\" className={styles.logo} />\n      </Link>\n\n      <div className={styles.headerButtons}>\n        <Button className={clsx(styles.authButton, styles.signupButton)} onClick={openSignup}>\n          SIGN UP\n        </Button>\n\n        <Button className={clsx(styles.authButton, styles.loginButton)} onClick={openLogin}>\n          LOGIN\n        </Button>\n      </div>\n    </header>\n  );\n};\n\nexport default memo(LandingHeader);\n","import React, { FC, memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, IconButton } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport clsx from 'clsx';\n\nimport example from 'assets/example-pathway.png';\nimport useStyles from './styles';\n\nconst LandingBody: FC = () => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.landingBody}>\n      <div className={styles.landingContent}>\n        <div className={clsx(styles.text, styles.mainText)}>\n          A simple app to build customized clinical pathways\n        </div>\n\n        <div className={clsx(styles.text, styles.subText)}>\n          using{' '}\n          <a\n            href=\"https://mcodeinitiative.org/\"\n            className={styles.link}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            mCODE\n          </a>\n          , a standardized data model around cancer\n        </div>\n\n        <Link to=\"/demo\" className={styles.tryItButton}>\n          <Button>Try It</Button>\n        </Link>\n\n        <div className={styles.socialMedia}>\n          <a\n            href=\"https://github.com/mcode/pathway-builder\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <IconButton className={styles.iconGithub}>\n              <FontAwesomeIcon icon={faGithub} />\n            </IconButton>\n          </a>\n\n          {/*TODO: hook up*/}\n          <IconButton className={styles.iconEmail}>\n            <div className={styles.iconEmailCircle}>\n              <FontAwesomeIcon icon={faEnvelope} />\n            </div>\n          </IconButton>\n        </div>\n      </div>\n\n      <>\n        <img src={example} alt=\"pathway\" className={styles.exampleImage} />\n      </>\n    </div>\n  );\n};\n\nexport default memo(LandingBody);\n","import React, { FC, memo } from 'react';\n\nimport mitre from 'assets/mitre.png';\nimport mcode from 'assets/mcode.png';\nimport useStyles from './styles';\n\nconst LandingFooter: FC = () => {\n  const styles = useStyles();\n\n  return (\n    <footer className={styles.footer}>\n      <a\n        href=\"https://www.mitre.org/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className={styles.footerLogo}\n      >\n        <img src={mitre} alt=\"mitre logo\" className={styles.mitreLogo} />\n      </a>\n\n      <a\n        href=\"https://mcodeinitiative.org/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className={styles.footerLogo}\n      >\n        <img src={mcode} alt=\"mcode logo\" className={styles.mcodeLogo} />\n      </a>\n    </footer>\n  );\n};\n\nexport default memo(LandingFooter);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles((theme: AugmentedTheme) => ({\n  root: {\n    color: theme.palette.common.white,\n    backgroundColor: theme.palette.secondary.main,\n    padding: '15px 0px 15px 35px'\n  },\n  icon: {\n    marginRight: '10px'\n  },\n  underline: {\n    textDecoration: 'underline',\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  }\n}));\n","import React, { FC, memo, useCallback, useState, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog, faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport { useThemeToggle } from 'components/ThemeProvider';\n\nimport logo from 'assets/camino-logo-dark.png';\nimport styles from 'components/Header/Header.module.scss';\nimport useStyles from './styles';\nimport { useAuthModalContext } from 'components/Auth/AuthModalProvider';\n\nconst DemoBanner: FC = () => {\n  const styleOverrides = useStyles();\n  const { openLoginModal, openSignupModal } = useAuthModalContext();\n\n  return (\n    <div className={styleOverrides.root}>\n      <FontAwesomeIcon icon={faExclamationCircle} className={styleOverrides.icon} />\n      You are currently viewing syntheic demo data. Any changes made will not be saved. To create\n      your own pathways,{' '}\n      <span className={styleOverrides.underline} onClick={openLoginModal}>\n        login\n      </span>{' '}\n      or{' '}\n      <span className={styleOverrides.underline} onClick={openSignupModal}>\n        sign up\n      </span>\n      .\n    </div>\n  );\n};\n\nconst Header: FC = () => {\n  const { resetCurrentCriteria } = useCurrentCriteriaContext();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const toggleTheme = useThemeToggle();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleToggleTheme = useCallback((): void => {\n    toggleTheme();\n    closeMenu();\n  }, [toggleTheme, closeMenu]);\n\n  return (\n    <>\n      <header className={styles.header}>\n        <Link to=\"/\" className={styles.homeLink} onClick={resetCurrentCriteria}>\n          <img src={logo} alt=\"logo\" className={styles.logo} />\n        </Link>\n\n        <button onClick={openMenu} aria-controls=\"options-menu\" aria-haspopup=\"true\">\n          <FontAwesomeIcon icon={faCog} />\n        </button>\n\n        <Menu\n          id=\"options-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={closeMenu}\n        >\n          <MenuItem onClick={handleToggleTheme}>Toggle Theme</MenuItem>\n        </Menu>\n      </header>\n      <DemoBanner />\n    </>\n  );\n};\n\nexport default memo(Header);\n","import { useState, useEffect } from 'react';\nimport { Service } from 'pathways-objects';\n\nfunction getObject(url: string): Promise<Response> {\n  return fetch(url, {\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n}\n\nfunction typedFetch<T>(url: string, raw: boolean, options?: object): Promise<T> {\n  return fetch(url, options).then(\n    response => (raw ? response.text() : response.json()) as Promise<T>\n  );\n}\n\nfunction useGetService<T>(url: string, raw = false): Service<Array<T>> {\n  const [result, setResult] = useState<Service<Array<T>>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    getObject(url)\n      .then(response => response.json() as Promise<string[]>)\n      .then(listOfFiles => listOfFiles.map(f => typedFetch<T>(url + '/' + f, raw)))\n      .then(listOfPromises => Promise.all(listOfPromises))\n      .then(list => setResult({ status: 'loaded', payload: list }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, [url, raw]);\n\n  return result;\n}\n\nexport default useGetService;\n","import { useEffect, useRef, useState, MutableRefObject } from 'react';\n\nfunction useRefState<T>(initialValue: T): [T, MutableRefObject<T>, Function] {\n  const [state, setState] = useState<T>(initialValue);\n  const stateRef = useRef(state);\n  useEffect(() => {\n    stateRef.current = state;\n  }, [state]);\n  return [state, stateRef, setState];\n}\n\nexport default useRefState;\n","import React, {\n  createContext,\n  ReactNode,\n  FC,\n  useState,\n  memo,\n  useContext,\n  useCallback,\n  useEffect\n} from 'react';\nimport JSZip from 'jszip';\nimport { ElmLibrary } from 'elm-model';\nimport config from 'utils/ConfigManager';\nimport useGetService from 'components/StaticApp/Services';\nimport { ServiceLoaded } from 'pathways-objects';\nimport { Criteria, BuilderModel } from 'criteria-model';\nimport {\n  builderModelToCriteria,\n  cqlToCriteria,\n  elmLibraryToCriteria,\n  jsonToCriteria\n} from 'utils/criteria';\nimport { CqlLibraries } from 'engine/cql-to-elm';\n\ninterface CriteriaContextInterface {\n  criteria: Criteria[];\n  addCriteria: (file: File) => void;\n  addCqlCriteria: (cql: string) => void;\n  deleteCriteria: (id: string) => void;\n  addElmCriteria: (elm: ElmLibrary) => Criteria[];\n  addBuilderCriteria: (\n    criteria: BuilderModel,\n    label: string,\n    criteriaSource: string | undefined\n  ) => Criteria[];\n}\n\nexport const CriteriaContext = createContext<CriteriaContextInterface>(\n  {} as CriteriaContextInterface\n);\n\ninterface CriteriaProviderProps {\n  children: ReactNode;\n}\n\nexport const CriteriaProvider: FC<CriteriaProviderProps> = memo(({ children }) => {\n  const [criteria, setCriteria] = useState<Criteria[]>([]);\n  const service = useGetService<string>(config.get('demoCriteria'), true);\n  const payload = (service as ServiceLoaded<string[]>).payload;\n\n  useEffect(() => {\n    if (payload) {\n      const listOfPromises = payload.map(rawCql => cqlToCriteria(rawCql));\n      Promise.all(listOfPromises)\n        .then(listOfLists => listOfLists.flat())\n        .then(newCriteria => setCriteria(newCriteria));\n    }\n  }, [payload]);\n\n  const addCqlCriteria = useCallback((cql: string | CqlLibraries) => {\n    cqlToCriteria(cql).then(newCriteria => {\n      if (newCriteria.length > 0) {\n        setCriteria(currentCriteria => {\n          // Do not add CQL Criteria that already exists\n          return currentCriteria.find(crit => crit.cql === cql)\n            ? currentCriteria\n            : [...currentCriteria, ...newCriteria];\n        });\n      } else {\n        alert('No valid criteria were found in the provided file');\n      }\n    });\n  }, []);\n\n  const addCriteria = useCallback(\n    (file: File) => {\n      // figure out incoming file type\n      const reader = new FileReader();\n      reader.onload = async (event: ProgressEvent<FileReader>): Promise<void> => {\n        if (event.target?.result) {\n          const rawContent = event.target.result as string;\n          // TODO: more robust file type identification?\n          if (file.name.endsWith('.json')) {\n            const newCriteria = jsonToCriteria(rawContent);\n            if (newCriteria) setCriteria(currentCriteria => [...currentCriteria, ...newCriteria]);\n          } else if (file.name.endsWith('.cql')) {\n            addCqlCriteria(rawContent);\n          } else if (file.name.endsWith('.zip')) {\n            const cqlLibraries: CqlLibraries = {};\n            const zip = await JSZip.loadAsync(file);\n            const zipFiles = Object.values(zip.files);\n            // Check for criteria in each of the cql files, add cql to libraries if no criteria\n            for (let i = 0; i < zipFiles.length; i++) {\n              const zipFile = zipFiles[i];\n\n              // Skip files that do not end with .cql\n              if (!zipFile.name.endsWith('.cql')) continue;\n              const fileContents = await zipFile.async('string');\n              cqlLibraries[zipFile.name] = { cql: fileContents };\n            }\n            addCqlCriteria(cqlLibraries);\n          }\n        } else alert('Unable to read that file');\n      };\n      reader.readAsText(file);\n    },\n    [addCqlCriteria]\n  );\n\n  const deleteCriteria = useCallback((id: string) => {\n    setCriteria(currentCriteria => currentCriteria.filter(criteria => criteria.id !== id));\n  }, []);\n\n  const addElmCriteria = useCallback((elm: ElmLibrary): Criteria[] => {\n    const newCriteria = elmLibraryToCriteria(elm, undefined, undefined, true);\n    setCriteria(currentCriteria => [...currentCriteria, ...newCriteria]);\n\n    return newCriteria;\n  }, []);\n\n  const addBuilderCriteria = useCallback(\n    (\n      buildCriteria: BuilderModel,\n      label: string,\n      criteriaSource: string | undefined\n    ): Criteria[] => {\n      const newCriteria = builderModelToCriteria(buildCriteria, label);\n      if (criteriaSource) {\n        // Find criteria that is being edited\n        const matchingCriteria = criteria.find(c => c.id === criteriaSource);\n        if (matchingCriteria) {\n          newCriteria.id = matchingCriteria.id;\n          setCriteria(currentCriteria => [\n            ...currentCriteria.filter(c => c.id !== matchingCriteria.id),\n            newCriteria\n          ]);\n        }\n      } else {\n        setCriteria(currentCriteria => [...currentCriteria, newCriteria]);\n      }\n\n      return [newCriteria];\n    },\n    [criteria]\n  );\n\n  return (\n    <CriteriaContext.Provider\n      value={{\n        criteria,\n        addCriteria,\n        addCqlCriteria,\n        deleteCriteria,\n        addElmCriteria,\n        addBuilderCriteria\n      }}\n    >\n      {children}\n    </CriteriaContext.Provider>\n  );\n});\n\nexport const useCriteriaContext = (): CriteriaContextInterface => useContext(CriteriaContext);\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  ReactNode\n} from 'react';\nimport { Pathway } from 'pathways-model';\nimport { ServiceLoaded } from 'pathways-objects';\nimport config from 'utils/ConfigManager';\nimport useGetService from './Services';\nimport useRefState from 'hooks/useRefState';\nimport { useCriteriaContext } from './CriteriaProvider';\n\ninterface PathwaysContextInterface {\n  pathways: Pathway[];\n  status: string;\n  addPathway: (pathway: Pathway) => void;\n  addPathwayFromFile: (file: File) => void;\n  deletePathway: (id: string) => void;\n  updatePathway: (pathway: Pathway) => void;\n}\n\nexport const PathwaysContext = createContext<PathwaysContextInterface>(\n  {} as PathwaysContextInterface\n);\n\ninterface PathwaysProviderProps {\n  children: ReactNode;\n}\n\nexport const PathwaysProvider: FC<PathwaysProviderProps> = memo(function PathwaysProvider({\n  children\n}) {\n  const [pathways, pathwaysRef, setPathways] = useRefState<Pathway[]>([]);\n  const service = useGetService<Pathway>(config.get('demoPathwaysService'));\n  const servicePayload = (service as ServiceLoaded<Pathway[]>).payload;\n  const { addCqlCriteria } = useCriteriaContext();\n\n  const addPathway = useCallback(\n    (pathway: Pathway) => {\n      setPathways((currentPathways: Pathway[]) => [...currentPathways, pathway]);\n    },\n    [setPathways]\n  );\n\n  const loadPathwayLibraries = useCallback(\n    (pathway: Pathway): void => {\n      pathway.library.forEach(lib => addCqlCriteria(lib));\n    },\n    [addCqlCriteria]\n  );\n\n  const addPathwayFromFile = useCallback(\n    (file: File) => {\n      const reader = new FileReader();\n      reader.onload = (event: ProgressEvent<FileReader>): void => {\n        if (event.target?.result) {\n          const rawContent = event.target.result as string;\n          const pathway = JSON.parse(rawContent);\n          setPathways((currentPathways: Pathway[]) => {\n            if (!currentPathways.map(path => path.id).includes(pathway.id)) {\n              loadPathwayLibraries(pathway);\n              return [...currentPathways, pathway];\n            } else {\n              alert('Pathway with that id already exists!');\n              return currentPathways;\n            }\n          });\n        } else alert('Unable to read that file');\n      };\n      reader.readAsText(file);\n    },\n    [loadPathwayLibraries, setPathways]\n  );\n\n  const deletePathway = useCallback(\n    (id: string) => {\n      setPathways((currentPathways: Pathway[]) =>\n        currentPathways.filter(pathway => pathway.id !== id)\n      );\n    },\n    [setPathways]\n  );\n\n  const updatePathway = useCallback(\n    (newPathway: Pathway) => {\n      const index = pathwaysRef.current.findIndex(pathway => pathway.id === newPathway.id);\n      setPathways((currentPathways: Pathway[]) => [\n        ...currentPathways.slice(0, index),\n        newPathway,\n        ...currentPathways.slice(index + 1)\n      ]);\n    },\n    [pathwaysRef, setPathways]\n  );\n\n  // Load the pathways present at the configured service\n  useEffect(() => {\n    if (servicePayload) setPathways(servicePayload);\n  }, [servicePayload, setPathways]);\n\n  switch (service.status) {\n    case 'error':\n      return <div>Error loading pathways</div>;\n\n    default:\n      return (\n        <PathwaysContext.Provider\n          value={{\n            pathways,\n            addPathway,\n            addPathwayFromFile,\n            deletePathway,\n            updatePathway,\n            status: service.status\n          }}\n        >\n          {children}\n        </PathwaysContext.Provider>\n      );\n  }\n});\n\nexport const usePathwaysContext = (): PathwaysContextInterface => useContext(PathwaysContext);\n","import React, {\n  ReactNode,\n  createContext,\n  useContext,\n  FC,\n  memo,\n  useCallback,\n  MutableRefObject,\n  useEffect\n} from 'react';\nimport { Pathway } from 'pathways-model';\nimport useRefUndoState from 'hooks/useRefUndoState';\nimport { usePathwaysContext } from './PathwaysProvider';\nimport HotKeys from 'react-hot-keys';\nimport { updatePathwayCriteriaSources } from 'utils/builder';\nimport { useCriteriaContext } from './CriteriaProvider';\n\ninterface CurrentPathwayContextInterface {\n  pathway: Pathway | null;\n  pathwayRef: MutableRefObject<Pathway | null>;\n  canUndoPathway: boolean;\n  canRedoPathway: boolean;\n  undoPathway: () => void;\n  redoPathway: () => void;\n  resetCurrentPathway: (value: Pathway) => void;\n  setCurrentPathway: (value: Pathway) => void;\n}\n\nexport const CurrentPathwayContext = createContext<CurrentPathwayContextInterface>(\n  {} as CurrentPathwayContextInterface\n);\n\ninterface CurrentPathwayProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrentPathwayProvider: FC<CurrentPathwayProviderProps> = memo(({ children }) => {\n  const [\n    pathway,\n    pathwayRef,\n    canUndoPathway,\n    canRedoPathway,\n    _undoPathway,\n    _redoPathway,\n    _resetPathway,\n    _setPathway\n  ] = useRefUndoState<Pathway | null>(null);\n  const { criteria } = useCriteriaContext();\n  const { updatePathway } = usePathwaysContext();\n\n  const undoPathway = useCallback(() => {\n    _undoPathway();\n  }, [_undoPathway]);\n\n  const redoPathway = useCallback(() => {\n    _redoPathway();\n  }, [_redoPathway]);\n\n  const resetCurrentPathway = useCallback(\n    (value: Pathway) => {\n      _resetPathway(value);\n    },\n    [_resetPathway]\n  );\n\n  const setCurrentPathway = useCallback(\n    (value: Pathway) => {\n      _setPathway(value);\n    },\n    [_setPathway]\n  );\n\n  useEffect(() => {\n    if (pathway) updatePathway(pathway);\n  }, [pathway, updatePathway]);\n\n  // Update criteriaSource if criteria change\n  useEffect(() => {\n    if (!pathway) return;\n\n    const { updated, newPathway } = updatePathwayCriteriaSources(pathway, criteria);\n    if (updated) resetCurrentPathway(newPathway);\n  }, [criteria, pathway, resetCurrentPathway]);\n\n  return (\n    <CurrentPathwayContext.Provider\n      value={{\n        pathway,\n        pathwayRef,\n        canUndoPathway,\n        canRedoPathway,\n        undoPathway,\n        redoPathway,\n        resetCurrentPathway,\n        setCurrentPathway\n      }}\n    >\n      <HotKeys keyName=\"control+z,command+z\" onKeyDown={undoPathway}>\n        <HotKeys keyName=\"control+y,command+y\" onKeyDown={redoPathway}>\n          {children}\n        </HotKeys>\n      </HotKeys>\n    </CurrentPathwayContext.Provider>\n  );\n});\n\nexport const useCurrentPathwayContext = (): CurrentPathwayContextInterface =>\n  useContext(CurrentPathwayContext);\n","import React, { FC, memo } from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\nimport { useCurrentPathwayContext } from 'components/StaticApp/CurrentPathwayProvider';\nimport { useCriteriaContext } from 'components/StaticApp/CriteriaProvider';\nimport { downloadPathway } from 'utils/builder';\nimport { usePathwaysContext } from 'components/StaticApp/PathwaysProvider';\nimport { Pathway } from 'pathways-model';\nimport { Criteria } from 'criteria-model';\n\ninterface ContextualExportMenuProps {\n  anchorEl: HTMLElement | null;\n  closeMenu: () => void;\n}\n\ninterface ExportMenuPropsInterface extends ContextualExportMenuProps {\n  pathway: Pathway[] | null;\n  allPathways: Pathway[];\n  criteria: Criteria[];\n}\n\nconst ExportMenu: FC<ExportMenuPropsInterface> = ({\n  pathway,\n  allPathways,\n  criteria,\n  anchorEl,\n  closeMenu\n}) => {\n  return (\n    <Menu\n      id=\"pathway-options-menu\"\n      anchorEl={anchorEl}\n      getContentAnchorEl={null}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n      keepMounted\n      open={Boolean(anchorEl)}\n      onClose={closeMenu}\n    >\n      <MenuItem\n        onClick={(): void => {\n          if (pathway) downloadPathway(pathway, allPathways, criteria);\n          else alert('No pathway to download!');\n          closeMenu();\n        }}\n      >\n        Export Pathway{pathway?.length && pathway.length > 1 ? 's' : ''}\n      </MenuItem>\n      <MenuItem\n        onClick={(): void => {\n          if (pathway) downloadPathway(pathway, allPathways, criteria, true);\n          else alert('No pathway to download!');\n          closeMenu();\n        }}\n      >\n        Export to CPG\n      </MenuItem>\n    </Menu>\n  );\n};\n\nconst ContextualExportMenu: FC<ContextualExportMenuProps> = ({ anchorEl, closeMenu }) => {\n  const { pathway } = useCurrentPathwayContext();\n  const { pathways } = usePathwaysContext();\n\n  const { criteria } = useCriteriaContext();\n\n  return (\n    <ExportMenu\n      pathway={pathway ? [pathway] : null}\n      allPathways={pathways}\n      criteria={criteria}\n      anchorEl={anchorEl}\n      closeMenu={closeMenu}\n    />\n  );\n};\n\nexport default memo(ExportMenu);\nexport { ContextualExportMenu };\n","import React, { FC, useCallback, useState, MouseEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faEllipsisH, faRedo, faUndo } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, Tooltip } from '@material-ui/core';\n\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport useStyles from 'components/Navigation/styles';\nimport { useCurrentPathwayContext } from 'components/StaticApp/CurrentPathwayProvider';\nimport { ContextualExportMenu } from 'components/StaticApp/elements/ExportMenu';\n\nconst Navigation: FC = () => {\n  const { resetCurrentCriteria } = useCurrentCriteriaContext();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const {\n    pathway,\n    canUndoPathway,\n    canRedoPathway,\n    undoPathway,\n    redoPathway\n  } = useCurrentPathwayContext();\n  const styles = useStyles();\n  const history = useHistory();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleGoBack = useCallback((): void => {\n    resetCurrentCriteria();\n    history.push('/demo');\n  }, [history, resetCurrentCriteria]);\n\n  return (\n    <nav className={styles.root}>\n      <div>\n        <IconButton className={styles.backButton} onClick={handleGoBack} aria-label=\"go back\">\n          <FontAwesomeIcon icon={faChevronLeft} className={styles.navigationIcons} />\n        </IconButton>\n\n        <span className={styles.pathwayName}>{pathway?.name}</span>\n      </div>\n      <div>\n        <Tooltip placement=\"top\" title=\"Undo\" arrow>\n          <span>\n            <IconButton onClick={undoPathway} disabled={!canUndoPathway} aria-label=\"undo\">\n              <FontAwesomeIcon icon={faUndo} className={styles.navigationIcons} />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip placement=\"top\" title=\"Redo\" arrow>\n          <span>\n            <IconButton onClick={redoPathway} disabled={!canRedoPathway} aria-label=\"redo\">\n              <FontAwesomeIcon icon={faRedo} className={styles.navigationIcons} />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <IconButton onClick={openMenu} aria-controls=\"pathway-options-menu\" aria-haspopup=\"true\">\n          <FontAwesomeIcon icon={faEllipsisH} className={styles.navigationIcons} />\n        </IconButton>\n        <ContextualExportMenu anchorEl={anchorEl} closeMenu={closeMenu} />\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { useState, memo, useCallback, FC } from 'react';\nimport { SidebarButton } from 'components/Sidebar';\nimport DropDown from 'components/elements/DropDown';\nimport useStyles from 'components/Sidebar/styles';\nimport { addTransition } from 'utils/builder';\nimport { getConnectableNodes } from 'utils/nodeUtils';\nimport { useCurrentPathwayContext } from 'components/StaticApp/CurrentPathwayProvider';\n\nimport { faLevelDownAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\nimport { PathwayNode } from 'pathways-model';\nimport useCurrentNodeStatic from 'hooks/useCurrentNodeStatic';\n\ninterface ConnectNodeButtonProps {\n  currentNode: PathwayNode | null;\n}\n\nconst ConnectNodeButton: FC<ConnectNodeButtonProps> = ({ currentNode }) => {\n  const { pathway, pathwayRef, setCurrentPathway } = useCurrentPathwayContext();\n  const currentNodeStatic = useCurrentNodeStatic(pathway);\n\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const options: Array<{ label: string; value: string }> =\n    currentNode && pathway ? getConnectableNodes(pathway, currentNode) : [];\n  const optionsAvailable = options.length > 0;\n\n  const connectToNode = useCallback(\n    (nodeKey: string): void => {\n      if (pathwayRef.current && currentNodeStatic)\n        setCurrentPathway(addTransition(pathwayRef.current, currentNodeStatic.key, nodeKey));\n      setOpen(false);\n    },\n    [setCurrentPathway, currentNodeStatic, pathwayRef]\n  );\n\n  const showDropdown = useCallback(() => {\n    setOpen(!open);\n  }, [open]);\n\n  return (\n    <div>\n      {!open && (\n        <SidebarButton\n          buttonName=\"Connect Node\"\n          buttonIcon={faLevelDownAlt}\n          buttonText=\"Create a transition to an existing node in the pathway.\"\n          onClick={showDropdown}\n          disabled={!optionsAvailable}\n          hasTooltip={!optionsAvailable}\n          tooltipTitle=\"There are no possible nodes to connect to.\"\n        />\n      )}\n      {open && optionsAvailable && (\n        <div className={styles.connectDropdown}>\n          <DropDown\n            id=\"transitions\"\n            label=\"Node To Connect To\"\n            options={options}\n            onChange={connectToNode}\n          />\n          <div className={styles.connectText}>\n            Select node from list to add transition.\n            <Button\n              className={styles.cancelButtonDropdown}\n              size=\"small\"\n              variant=\"text\"\n              onClick={showDropdown}\n            >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(ConnectNodeButton);\n","import React, { FC, memo, useCallback, useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { SidebarButton } from 'components/Sidebar';\nimport {\n  ActionNodeEditor,\n  BranchTransition,\n  SidebarHeader,\n  ReferenceNodeEditor,\n  TransitionEditor\n} from 'components/StaticApp/Sidebar';\nimport { setNodeType, addTransition, createNode, addNode } from 'utils/builder';\nimport useStyles from 'components/Sidebar/styles';\nimport { useCurrentPathwayContext } from 'components/StaticApp/CurrentPathwayProvider';\nimport { isBranchNode, redirect, getNodeType } from 'utils/nodeUtils';\nimport { nodeTypeOptions } from 'utils/nodeUtils';\nimport DropDown from 'components/elements/DropDown';\nimport DeleteSnackbar from 'components/Sidebar/DeleteSnackbar';\nimport ConnectNodeButton from 'components/StaticApp/Sidebar/ConnectNodeButton';\nimport { PathwayNode } from 'pathways-model';\nimport useCurrentNodeStatic from 'hooks/useCurrentNodeStatic';\n\ninterface SidebarProps {\n  currentNode: PathwayNode | null;\n}\n\nconst Sidebar: FC<SidebarProps> = ({ currentNode }) => {\n  const { pathway, pathwayRef, setCurrentPathway } = useCurrentPathwayContext();\n  const currentNodeStatic = useCurrentNodeStatic(pathway);\n  const [isExpanded, setIsExpanded] = useState<boolean>(true);\n  const styles = useStyles();\n  const history = useHistory();\n  const sidebarContainerElement = useRef<HTMLDivElement>(null);\n\n  const toggleSidebar = useCallback((): void => {\n    setIsExpanded(!isExpanded);\n  }, [isExpanded]);\n\n  const changeNodeType = useCallback(\n    (nodeType: string): void => {\n      if (currentNodeStatic && pathwayRef.current)\n        setCurrentPathway(setNodeType(pathwayRef.current, currentNodeStatic.key, nodeType));\n    },\n    [pathwayRef, setCurrentPathway, currentNodeStatic]\n  );\n\n  const addPathwayNode = useCallback((): void => {\n    if (!currentNodeStatic || !pathwayRef.current) return;\n\n    const newNode = createNode();\n    let newPathway = addNode(pathwayRef.current, newNode);\n    newPathway = addTransition(newPathway, currentNodeStatic.key, newNode.key);\n    setCurrentPathway(newPathway);\n    if (!isBranchNode(currentNodeStatic))\n      redirect(pathwayRef.current.id, newNode.key, history, true);\n  }, [pathwayRef, setCurrentPathway, currentNodeStatic, history]);\n\n  if (!pathway) return <div>Error: No pathway</div>;\n  if (!currentNode) return <div>Error: No current node</div>;\n\n  if (currentNode.type === 'start') {\n    return (\n      <>\n        {isExpanded && (\n          <div className={styles.root} ref={sidebarContainerElement}>\n            <SidebarHeader node={currentNode} isTransition={false} />\n            <h5 className={styles.dividerHeader}>\n              <></>{' '}\n            </h5>\n            <SidebarButton\n              buttonName=\"Add Node\"\n              buttonIcon={faPlus}\n              buttonText=\"Add a new transition to a new node in the pathway.\"\n              onClick={addPathwayNode}\n            />\n          </div>\n        )}\n\n        <div className={styles.toggleSidebar} onClick={toggleSidebar}>\n          <FontAwesomeIcon icon={isExpanded ? faChevronLeft : faChevronRight} />\n        </div>\n        <DeleteSnackbar />\n      </>\n    );\n  } else {\n    const nodeType = getNodeType(currentNode);\n    const displayTransitions = nodeType !== 'start' || currentNode.transitions.length === 0;\n\n    return (\n      <>\n        {isExpanded && (\n          <div className={styles.root} ref={sidebarContainerElement}>\n            <SidebarHeader node={currentNode} isTransition={false} />\n\n            <h5 className={styles.dividerHeader}>\n              <span>Details</span>\n            </h5>\n\n            {nodeType === 'null' && (\n              <DropDown\n                id=\"nodeType\"\n                label=\"Node Type\"\n                options={nodeTypeOptions}\n                onChange={changeNodeType}\n                value=\"\"\n              />\n            )}\n            {nodeType === 'reference' && (\n              <ReferenceNodeEditor changeNodeType={changeNodeType} currentNode={currentNode} />\n            )}\n            {nodeType === 'action' && (\n              <ActionNodeEditor changeNodeType={changeNodeType} currentNode={currentNode} />\n            )}\n\n            {nodeType === 'branch' && (\n              <DropDown\n                id=\"nodeType\"\n                label=\"Node Type\"\n                options={nodeTypeOptions}\n                onChange={changeNodeType}\n                value=\"Observation\"\n              />\n            )}\n\n            <h5 className={styles.dividerHeader}>\n              <span>Transitions</span>\n            </h5>\n\n            {currentNode?.transitions.map(transition => {\n              return (\n                <TransitionEditor key={transition.id} transition={transition}>\n                  {nodeType === 'branch' && (\n                    <BranchTransition\n                      key={transition.id}\n                      transition={transition}\n                      currentNode={currentNode}\n                    />\n                  )}\n                </TransitionEditor>\n              );\n            })}\n\n            {displayTransitions && (\n              <>\n                <SidebarButton\n                  buttonName=\"Add New Node\"\n                  buttonIcon={faPlus}\n                  buttonText=\"Add a new transition to a new node in the pathway.\"\n                  onClick={addPathwayNode}\n                />\n                <ConnectNodeButton currentNode={currentNode} />\n              </>\n            )}\n          </div>\n        )}\n        <div className={styles.toggleSidebar} onClick={toggleSidebar}>\n          <FontAwesomeIcon icon={isExpanded ? faChevronLeft : faChevronRight} />\n        </div>\n        <DeleteSnackbar />\n      </>\n    );\n  }\n};\n\nexport default memo(Sidebar);\n","import React, { FC, memo, useCallback, useRef, useState, KeyboardEvent, FocusEvent } from 'react';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEdit,\n  faChevronLeft,\n  faChevronRight,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, FormControl, Input, Tooltip } from '@material-ui/core';\n\nimport { PathwayNode } from 'pathways-model';\nimport { setNodeLabel, removeNode, removeTransition } from 'utils/builder';\nimport useStyles from 'components/Sidebar/styles';\nimport { useCurrentPathwayContext } from 'components/StaticApp/CurrentPathwayProvider';\nimport { useHistory } from 'react-router-dom';\nimport { canDeleteNode, redirect, findParents, willOrphanChild } from 'utils/nodeUtils';\nimport { DeleteModal } from 'components/Sidebar';\nimport { useSnackbarContext } from 'components/SnackbarProvider';\nimport useCurrentNodeStatic from 'hooks/useCurrentNodeStatic';\n\ninterface SidebarHeaderProps {\n  node: PathwayNode;\n  isTransition?: boolean;\n}\n\nconst SidebarHeader: FC<SidebarHeaderProps> = ({ node, isTransition = false }) => {\n  const [showInput, setShowInput] = useState<boolean>(false);\n  const [openTooltip, setOpenTooltip] = useState<boolean>(false);\n  const [openDelete, setOpenDelete] = useState<boolean>(false);\n  const { setSnackbarText, setOpenSnackbar } = useSnackbarContext();\n  const { pathway, pathwayRef, setCurrentPathway } = useCurrentPathwayContext();\n  const currentNodeStatic = useCurrentNodeStatic(pathway);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const nodeLabel = node?.label || '';\n  const styles = useStyles();\n  const history = useHistory();\n\n  const goToParentNode = useCallback(() => {\n    if (!pathwayRef.current) return;\n    const parents = findParents(pathwayRef.current.nodes, node.key);\n    redirect(pathwayRef.current.id, parents[0], history, true);\n  }, [history, pathwayRef, node.key]);\n\n  const redirectToNode = useCallback(() => {\n    if (!pathwayRef.current) return;\n    redirect(pathwayRef.current.id, node.key, history, true);\n  }, [history, pathwayRef, node.key]);\n\n  const changeNodeLabel = useCallback(() => {\n    const label = inputRef.current?.value ?? '';\n    if (pathwayRef.current) setCurrentPathway(setNodeLabel(pathwayRef.current, node.key, label));\n    setShowInput(false);\n  }, [pathwayRef, setCurrentPathway, node.key]);\n\n  const handleShowInput = useCallback(() => {\n    setShowInput(true);\n  }, []);\n\n  const deleteNode = useCallback(() => {\n    if (pathwayRef.current && canDeleteNode(pathwayRef.current, node.transitions)) {\n      const parents = findParents(pathwayRef.current.nodes, node.key);\n      setCurrentPathway(removeNode(pathwayRef.current, node.key));\n      redirect(pathwayRef.current.id, parents[0], history, true);\n      setOpenDelete(false);\n      setSnackbarText(`${node.label} node deleted successfully`);\n      setOpenSnackbar(true);\n    }\n  }, [\n    pathwayRef,\n    setCurrentPathway,\n    setSnackbarText,\n    setOpenSnackbar,\n    node.key,\n    node.label,\n    node.transitions,\n    history\n  ]);\n\n  const deleteTransition = useCallback(() => {\n    if (currentNodeStatic && pathwayRef.current && !willOrphanChild(pathwayRef.current, node.key)) {\n      setCurrentPathway(removeTransition(pathwayRef.current, currentNodeStatic.key, node.key));\n      setOpenDelete(false);\n      setSnackbarText(\n        `Transition from ${currentNodeStatic.label} to ${node.label} deleted successfully`\n      );\n      setOpenSnackbar(true);\n    }\n  }, [pathwayRef, currentNodeStatic, setCurrentPathway, setSnackbarText, setOpenSnackbar, node]);\n\n  const openDeleteModal = useCallback((): void => {\n    setOpenDelete(true);\n  }, []);\n\n  const closeDeleteModal = useCallback((): void => {\n    setOpenDelete(false);\n  }, []);\n\n  const handleOpenTooltip = useCallback((): void => {\n    setOpenTooltip(true);\n  }, []);\n\n  const handleCloseTooltip = useCallback((): void => {\n    setOpenTooltip(false);\n  }, []);\n\n  const handleKeyPress = useCallback(\n    (event: KeyboardEvent<HTMLDivElement>): void => {\n      if (event.key === 'Enter') changeNodeLabel();\n    },\n    [changeNodeLabel]\n  );\n\n  const deleteNodeDisabled = pathway ? !canDeleteNode(pathway, node.transitions) : true;\n  const deleteTransitionDisabled = pathway ? willOrphanChild(pathway, node.key) : true;\n  const deleteDisabled = isTransition ? deleteTransitionDisabled : deleteNodeDisabled;\n  const titleText = isTransition\n    ? 'Deleting this transition would result in an orphaned node. To delete, first add the child node as a transition to another node, or delete it directly.'\n    : 'Deleting this node would result in an orphaned descendent node. To delete, first add another transition to the would-be orphaned node from another node, or delete it directly.';\n\n  return (\n    <div className={styles.sidebarHeader}>\n      <div className={styles.sidebarHeaderGroup}>\n        {node.type !== 'start' && !isTransition && (\n          <IconButton\n            className={styles.sidebarHeaderButton}\n            onClick={goToParentNode}\n            aria-label=\"go to parent node\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft} />\n          </IconButton>\n        )}\n\n        <div className={styles.headerLabelGroup} onClick={handleShowInput}>\n          {showInput && node.type !== 'start' ? (\n            <FormControl className={styles.formControl} fullWidth>\n              <Input\n                className={styles.headerLabel}\n                type=\"text\"\n                inputRef={inputRef}\n                onBlur={changeNodeLabel}\n                onKeyPress={handleKeyPress}\n                defaultValue={nodeLabel}\n                autoFocus\n                onFocus={(event: FocusEvent<HTMLInputElement>): void => event.target.select()}\n              />\n            </FormControl>\n          ) : (\n            <div\n              className={clsx(\n                styles.headerLabel,\n                styles.headerLabelText,\n                node.type === 'start' && styles.headerLabelStart\n              )}\n            >\n              {nodeLabel}\n              {node.key !== 'Start' && (\n                <FontAwesomeIcon className={styles.editIcon} icon={faEdit} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className={styles.sidebarHeaderGroup}>\n        {node.type !== 'start' && (\n          <Tooltip\n            placement=\"top\"\n            open={deleteDisabled ? openTooltip : false}\n            onClose={handleCloseTooltip}\n            onOpen={handleOpenTooltip}\n            title={titleText}\n            arrow\n          >\n            <span>\n              <IconButton\n                className={styles.sidebarHeaderButton}\n                onClick={openDeleteModal}\n                aria-label={isTransition ? 'delete transition' : 'delete node'}\n                disabled={deleteDisabled}\n              >\n                <FontAwesomeIcon icon={faTrashAlt} />\n              </IconButton>\n            </span>\n          </Tooltip>\n        )}\n\n        {isTransition && (\n          <IconButton\n            className={styles.sidebarHeaderButton}\n            onClick={redirectToNode}\n            aria-label={'go to transition node'}\n          >\n            <FontAwesomeIcon icon={faChevronRight} />\n          </IconButton>\n        )}\n      </div>\n\n      <DeleteModal\n        nodeLabel={node.label}\n        isTransition={isTransition}\n        open={openDelete}\n        onDelete={isTransition ? deleteTransition : deleteNode}\n        onClose={closeDeleteModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(SidebarHeader);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { SidebarButton } from 'components/Sidebar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport {\n  setNodeAction,\n  createCQL,\n  setActionNodeElm,\n  setActionResourceDisplay,\n  setActionCode,\n  setActionDescription,\n  setActionTitle,\n  setActionCodeSystem\n} from 'utils/builder';\nimport DropDown from 'components/elements/DropDown';\nimport { ActionNode, Action, PathwayNode } from 'pathways-model';\nimport useStyles from 'components/Sidebar/styles';\nimport { TextField } from '@material-ui/core';\nimport { convertBasicCQL } from 'engine/cql-to-elm';\nimport { useCurrentPathwayContext } from 'components/StaticApp/CurrentPathwayProvider';\nimport produce from 'immer';\nimport { nodeTypeOptions } from 'utils/nodeUtils';\nimport useCurrentNodeStatic from 'hooks/useCurrentNodeStatic';\n\nconst codeSystemOptions = [\n  { label: 'ICD-9-CM', value: 'http://hl7.org/fhir/sid/icd-9-cm' },\n  { label: 'ICD-10-CM', value: 'http://hl7.org/fhir/sid/icd-10-cm' },\n  { label: 'LOINC', value: 'http://loinc.org' },\n  { label: 'NCI', value: 'http://ncimeta.nci.nih.gov' },\n  { label: 'RXNORM', value: 'http://www.nlm.nih.gov/research/umls/rxnorm' },\n  { label: 'SNOMED', value: 'http://snomed.info/sct' }\n];\n\ninterface ActionNodeEditorProps {\n  currentNode: PathwayNode | null;\n  changeNodeType: (event: string) => void;\n}\n\nconst ActionNodeEditor: FC<ActionNodeEditorProps> = ({ currentNode, changeNodeType }) => {\n  const { pathway, pathwayRef, setCurrentPathway } = useCurrentPathwayContext();\n  const currentNodeStatic = useCurrentNodeStatic(pathway);\n  const styles = useStyles();\n\n  const addActionCQL = useCallback(\n    (action: Action, currentNodeKey: string): void => {\n      if (!pathwayRef.current) return;\n\n      const cql = createCQL(action, currentNodeKey);\n      convertBasicCQL(cql).then(elm => {\n        // Disable lint for no-null assertion since it is already checked above\n        // eslint-disable-next-line\n        setCurrentPathway(setActionNodeElm(pathwayRef.current!, currentNodeKey, elm));\n      });\n    },\n    [pathwayRef, setCurrentPathway]\n  );\n\n  const changeCode = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      const currentNode = currentNodeStatic as ActionNode;\n      if (!currentNode.action || !pathwayRef.current) return;\n\n      const code = event?.target.value || '';\n      const action = setActionCode(currentNode.action, code);\n      setCurrentPathway(setNodeAction(pathwayRef.current, currentNode.key, resetDisplay(action)));\n    },\n    [currentNodeStatic, pathwayRef, setCurrentPathway]\n  );\n\n  const changeDescription = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      const currentNode = currentNodeStatic as ActionNode;\n      if (!currentNode.action || !pathwayRef.current) return;\n\n      const description = event?.target.value || '';\n      const action = setActionDescription(currentNode.action, description);\n      setCurrentPathway(setNodeAction(pathwayRef.current, currentNode.key, action));\n    },\n    [currentNodeStatic, pathwayRef, setCurrentPathway]\n  );\n\n  const changeTitle = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      const currentNode = currentNodeStatic as ActionNode;\n      if (!currentNode.action || !pathwayRef.current) return;\n\n      const title = event?.target.value || '';\n      const action = setActionTitle(currentNode.action, title);\n      setCurrentPathway(setNodeAction(pathwayRef.current, currentNode.key, resetDisplay(action)));\n\n      addActionCQL(action, currentNode.key);\n    },\n    [currentNodeStatic, pathwayRef, setCurrentPathway, addActionCQL]\n  );\n\n  const selectCodeSystem = useCallback(\n    (codeSystem: string): void => {\n      const currentNode = currentNodeStatic as ActionNode;\n      if (!currentNode.action || !pathwayRef.current) return;\n      const action = setActionCodeSystem(currentNode.action, codeSystem);\n      setCurrentPathway(setNodeAction(pathwayRef.current, currentNode.key, resetDisplay(action)));\n    },\n    [currentNodeStatic, pathwayRef, setCurrentPathway]\n  );\n\n  const validateFunction = useCallback((): void => {\n    const currentNode = currentNodeStatic as ActionNode;\n    if (!currentNode.action || !pathwayRef.current) {\n      console.error('No Actions -- Cannot Validate');\n      return;\n    }\n\n    const action = setActionResourceDisplay(currentNode.action, 'Example Text');\n    setCurrentPathway(setNodeAction(pathwayRef.current, currentNode.key, action));\n\n    // TODO: move addActionCQL to builder.ts\n    addActionCQL(action, currentNode.key);\n  }, [currentNodeStatic, pathwayRef, setCurrentPathway, addActionCQL]);\n\n  const resetDisplay = (action: Action): Action => {\n    return produce(action, (draftAction: Action) => {\n      if (draftAction.resource.medicationCodeableConcept) {\n        draftAction.resource.medicationCodeableConcept.coding[0].display = '';\n      } else if (draftAction.resource.resourceType === 'CarePlan') {\n        draftAction.resource.description = '';\n      } else {\n        draftAction.resource.code.coding[0].display = ''; // TODO: actually validate\n      }\n    });\n  };\n\n  const onEnter = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key === 'Enter') {\n      validateFunction();\n    }\n  };\n\n  // The node has a key and is not the start node\n  const action = (currentNode as ActionNode).action;\n  if (!action) return <></>;\n\n  const changeNodeTypeEnabled = currentNode?.key && currentNode.type !== 'start';\n  const resource = action.resource;\n  let system = '';\n  let code = '';\n  let display = '';\n  if (resource.resourceType === 'MedicationRequest' || resource.resourceType === 'ServiceRequest') {\n    system = resource.code\n      ? resource.code.coding[0].system\n      : resource.medicationCodeableConcept.coding[0].system;\n    code = resource.code\n      ? resource.code.coding[0].code\n      : resource.medicationCodeableConcept.coding[0].code;\n    display = resource.code\n      ? resource.code.coding[0].display\n      : resource.medicationCodeableConcept.coding[0].display;\n  } else {\n    display = resource.description;\n  }\n\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <>\n          <DropDown\n            id=\"nodeType\"\n            label=\"Node Type\"\n            options={nodeTypeOptions}\n            onChange={changeNodeType}\n            value={resource.resourceType}\n          />\n\n          {(resource.resourceType === 'MedicationRequest' ||\n            resource.resourceType === 'ServiceRequest') && (\n            <>\n              <DropDown\n                id=\"codeSystem\"\n                label=\"Code System\"\n                options={codeSystemOptions}\n                onChange={selectCodeSystem}\n                value={system}\n              />\n              {system && (\n                <TextField\n                  id=\"code-input\"\n                  label=\"Code\"\n                  value={code}\n                  onChange={changeCode}\n                  variant=\"outlined\"\n                  error={code === ''}\n                  inputProps={{ onKeyPress: onEnter }}\n                />\n              )}\n              {code && (\n                <>\n                  {display ? (\n                    <div className={styles.displayText}>\n                      <FontAwesomeIcon icon={faCheckCircle} /> {display}\n                    </div>\n                  ) : (\n                    <SidebarButton\n                      buttonName=\"Validate\"\n                      buttonIcon={faCheckCircle}\n                      buttonText={display || 'Check validation of the input system and code'}\n                      onClick={validateFunction}\n                    />\n                  )}\n\n                  <TextField\n                    id=\"description-input\"\n                    label=\"Description\"\n                    value={action.description || ''}\n                    onChange={changeDescription}\n                    variant=\"outlined\"\n                    error={action.description === ''}\n                  />\n                </>\n              )}\n            </>\n          )}\n\n          {resource.resourceType === 'CarePlan' && (\n            <>\n              <TextField\n                id=\"title-input\"\n                label=\"Title\"\n                value={resource.title || ''}\n                onChange={changeTitle}\n                variant=\"outlined\"\n                error={resource.title == null}\n                inputProps={{ onKeyPress: onEnter }}\n              />\n              {resource.title && (\n                <TextField\n                  id=\"description-input\"\n                  label=\"Description\"\n                  value={action.description || ''}\n                  onChange={changeDescription}\n                  variant=\"outlined\"\n                  error={action.description === ''}\n                />\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(ActionNodeEditor);\n","import React, { FC, memo, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport DropDown from 'components/elements/DropDown';\nimport useStyles from 'components/Sidebar/styles';\nimport { usePathwaysContext } from 'components/StaticApp/PathwaysProvider';\nimport { useCurrentPathwayContext } from 'components/StaticApp/CurrentPathwayProvider';\nimport { nodeTypeOptions, redirect } from 'utils/nodeUtils';\nimport { Pathway, PathwayNode, ReferenceNode } from 'pathways-model';\nimport { useHistory } from 'react-router-dom';\nimport { setNodeReference } from 'utils/builder';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport useCurrentNodeStatic from 'hooks/useCurrentNodeStatic';\n\ninterface ReferenceNodeEditorProps {\n  currentNode: PathwayNode | null;\n  changeNodeType: (event: string) => void;\n}\n\nconst ReferenceNodeEditor: FC<ReferenceNodeEditorProps> = ({ currentNode, changeNodeType }) => {\n  const { pathways, updatePathway } = usePathwaysContext();\n  const { pathway, pathwayRef, setCurrentPathway } = useCurrentPathwayContext();\n  const currentNodeStatic = useCurrentNodeStatic(pathway);\n  const history = useHistory();\n\n  const pathwayOptions = pathways.map((pathway: Pathway) => {\n    return {\n      label: pathway.name,\n      value: pathway.id\n    };\n  });\n  const styles = useStyles();\n\n  const showReference = useCallback((): void => {\n    const pathwayReferenceId = (currentNode as ReferenceNode).referenceId;\n    const referencedPathway = pathways.find(pathway => {\n      return pathway.id === pathwayReferenceId;\n    });\n    if (referencedPathway) {\n      setCurrentPathway(referencedPathway);\n    }\n  }, [currentNode, pathways, setCurrentPathway]);\n\n  const selectPathwayReference = useCallback(\n    (referenceId: string): void => {\n      const referenceLabel =\n        pathwayOptions.find(option => {\n          return option.value === referenceId;\n        })?.label || '';\n      if (currentNodeStatic && pathwayRef.current)\n        updatePathway(\n          setNodeReference(pathwayRef.current, currentNodeStatic.key, referenceId, referenceLabel)\n        );\n    },\n    [currentNodeStatic, pathwayOptions, pathwayRef, updatePathway]\n  );\n\n  const changeNodeTypeEnabled = currentNode?.key && currentNode.type !== 'start';\n\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <>\n          <div>\n            <DropDown\n              id=\"nodeType\"\n              label=\"Node Type\"\n              options={nodeTypeOptions}\n              onChange={changeNodeType}\n              value=\"Reference\"\n            />\n            <div className={styles.referenceDropdown}>\n              <DropDown\n                id=\"reference\"\n                label=\"Pathway Reference\"\n                options={pathwayOptions}\n                onChange={selectPathwayReference}\n                value={(currentNode as ReferenceNode).referenceId}\n              />\n              <div className={styles.referenceChevron}>\n                <FontAwesomeIcon\n                  icon={faChevronRight}\n                  onClick={(): void => {\n                    showReference();\n                    redirect((currentNode as ReferenceNode).referenceId, '', history, true);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(ReferenceNodeEditor);\n","import React, { FC, memo, useState, useCallback, ChangeEvent, useMemo, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave, faTools, faTrashAlt, faThList, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport DropDown from 'components/elements/DropDown';\nimport { Button, Checkbox, FormControlLabel, TextField, Box } from '@material-ui/core';\nimport {\n  removeTransitionCondition,\n  setTransitionCondition,\n  setTransitionConditionDescription\n} from 'utils/builder';\nimport { OutlinedDiv, SidebarButton } from 'components/Sidebar';\nimport { PathwayNode, Transition } from 'pathways-model';\nimport { useCriteriaContext } from 'components/StaticApp/CriteriaProvider';\nimport useStyles from 'components/Sidebar/styles';\nimport { useCurrentPathwayContext } from 'components/StaticApp/CurrentPathwayProvider';\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport { useCriteriaBuilderContext } from 'components/CriteriaBuilderProvider';\nimport { BuilderModel, Criteria } from 'criteria-model';\nimport useCurrentNodeStatic from 'hooks/useCurrentNodeStatic';\n\ninterface BranchTransitionProps {\n  transition: Transition;\n  currentNode: PathwayNode | null;\n}\n\nconst BranchTransition: FC<BranchTransitionProps> = ({ transition, currentNode }) => {\n  const { criteria, addBuilderCriteria } = useCriteriaContext();\n  const {\n    buildCriteriaSelected,\n    setBuildCriteriaSelected,\n    currentCriteriaNodeId,\n    setCurrentCriteriaNodeId,\n    currentCriteria,\n    setCurrentCriteria,\n    criteriaName,\n    setCriteriaName,\n    resetCurrentCriteria\n  } = useCurrentCriteriaContext();\n  const { resetCriteriaBuilder, setCriteriaBuilder } = useCriteriaBuilderContext();\n  const { pathwayRef, setCurrentPathway } = useCurrentPathwayContext();\n  const currentNodeStatic = useCurrentNodeStatic(pathwayRef.current);\n  const criteriaOptions = useMemo(() => criteria.map(c => ({ value: c.id, label: c.label })), [\n    criteria\n  ]);\n  const criteriaAvailable = criteriaOptions.length > 0;\n  const styles = useStyles();\n  const [useCriteriaSelected, setUseCriteriaSelected] = useState<boolean>(false);\n  const criteriaDescription = transition.condition?.description;\n  const criteriaIsValid = criteriaDescription != null;\n  const criteriaDisplayIsValid = criteriaDescription && criteriaDescription !== '';\n  const hasCriteria = transition.condition?.cql || transition.condition?.description;\n  const buttonText = hasCriteria ? 'DELETE' : 'CANCEL';\n  const icon = hasCriteria ? <FontAwesomeIcon icon={faTrashAlt} /> : null;\n  const displayCriteria =\n    criteriaAvailable &&\n    (useCriteriaSelected || transition.condition?.cql || transition.condition?.description);\n  const transitionRef = useRef(transition);\n  const transitionSelected = buildCriteriaSelected && currentCriteriaNodeId === transition.id;\n  // Check if criteria was built by criteria builder\n  let builderElements: BuilderModel | null = null;\n  let builderCriteria: Criteria | undefined;\n  if (transition.condition) {\n    builderCriteria = criteria.find(c => c.id === transition.condition?.criteriaSource);\n    if (builderCriteria?.builder) builderElements = builderCriteria.builder;\n  }\n  const dislayEditCriteria = !transitionSelected && builderElements;\n\n  const handleUseCriteria = useCallback((): void => {\n    if (hasCriteria && currentNodeStatic && pathwayRef.current) {\n      // delete the transition criteria\n      setCurrentPathway(\n        removeTransitionCondition(pathwayRef.current, currentNodeStatic.key, transition.id)\n      );\n      setUseCriteriaSelected(false);\n    } else {\n      setUseCriteriaSelected(!useCriteriaSelected);\n    }\n  }, [\n    useCriteriaSelected,\n    currentNodeStatic,\n    pathwayRef,\n    hasCriteria,\n    transition.id,\n    setCurrentPathway\n  ]);\n\n  const selectCriteriaSource = useCallback(\n    (criteriaId: string): void => {\n      if (!currentNodeStatic || !pathwayRef.current) return;\n\n      const selectedCriteria = criteria.find(c => c.id === criteriaId);\n      if (!selectedCriteria) return;\n      const newPathway = setTransitionCondition(\n        pathwayRef.current,\n        currentNodeStatic.key,\n        transitionRef.current.id,\n        transitionRef.current.condition?.description || selectedCriteria.display,\n        selectedCriteria\n      );\n\n      setCurrentPathway(newPathway);\n    },\n    [currentNodeStatic, setCurrentPathway, pathwayRef, transitionRef, criteria]\n  );\n\n  const setCriteriaDisplay = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeStatic || !pathwayRef.current) return;\n\n      const criteriaDisplay = event?.target.value || '';\n      setCurrentPathway(\n        setTransitionConditionDescription(\n          pathwayRef.current,\n          currentNodeStatic.key,\n          transition.id,\n          criteriaDisplay\n        )\n      );\n    },\n    [currentNodeStatic, transition.id, setCurrentPathway, pathwayRef]\n  );\n\n  const handleCriteriaName = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setCriteriaName(event?.target.value || '');\n    },\n    [setCriteriaName]\n  );\n\n  const handleBuildCriteria = useCallback((): void => {\n    setCurrentCriteriaNodeId(transition.id);\n    setCurrentCriteria(null);\n    setCriteriaName('');\n    if (!buildCriteriaSelected) setBuildCriteriaSelected(true);\n    resetCriteriaBuilder();\n  }, [\n    buildCriteriaSelected,\n    setCurrentCriteriaNodeId,\n    transition,\n    setBuildCriteriaSelected,\n    setCurrentCriteria,\n    resetCriteriaBuilder,\n    setCriteriaName\n  ]);\n\n  const handleEditCriteria = useCallback((): void => {\n    setCurrentCriteriaNodeId(transition.id);\n    setCurrentCriteria(builderElements as BuilderModel);\n    if (builderCriteria?.label) setCriteriaName(builderCriteria?.label);\n    if (!buildCriteriaSelected) setBuildCriteriaSelected(true);\n    if (builderElements) setCriteriaBuilder(builderElements);\n  }, [\n    buildCriteriaSelected,\n    builderCriteria,\n    builderElements,\n    transition,\n    setCurrentCriteriaNodeId,\n    setCurrentCriteria,\n    setCriteriaName,\n    setBuildCriteriaSelected,\n    setCriteriaBuilder\n  ]);\n\n  const handleBuildCriteriaCancel = useCallback((): void => {\n    resetCurrentCriteria();\n    resetCriteriaBuilder();\n  }, [resetCurrentCriteria, resetCriteriaBuilder]);\n\n  const handleBuildCriteriaSave = useCallback(() => {\n    if (!currentNodeStatic || !pathwayRef.current || !currentCriteria?.cql) return;\n\n    const criteria = addBuilderCriteria(\n      currentCriteria,\n      criteriaName,\n      transition.condition?.criteriaSource\n    );\n    const newPathway = setTransitionCondition(\n      pathwayRef.current,\n      currentNodeStatic.key,\n      transitionRef.current.id,\n      criteriaName,\n      criteria[0]\n    );\n\n    setCurrentPathway(newPathway);\n    handleBuildCriteriaCancel();\n  }, [\n    currentNodeStatic,\n    setCurrentPathway,\n    pathwayRef,\n    transitionRef,\n    currentCriteria,\n    criteriaName,\n    transition,\n    handleBuildCriteriaCancel,\n    addBuilderCriteria\n  ]);\n\n  return (\n    <>\n      {!displayCriteria && !transitionSelected && (\n        <SidebarButton\n          buttonName=\"Select Criteria\"\n          buttonIcon={faThList}\n          buttonColor=\"secondary\"\n          buttonText=\"Add previously built or imported criteria logic to branch node.\"\n          onClick={handleUseCriteria}\n          disabled={!criteriaAvailable}\n          hasTooltip={!criteriaAvailable}\n          tooltipTitle=\"No criteria to select. Add criteria to use.\"\n        />\n      )}\n\n      {displayCriteria && !transitionSelected && !dislayEditCriteria && (\n        <OutlinedDiv label=\"Criteria Selector\" error={!criteriaIsValid || !criteriaDisplayIsValid}>\n          <>\n            <DropDown\n              id=\"Criteria\"\n              label=\"Criteria\"\n              options={criteriaOptions}\n              onChange={selectCriteriaSource}\n              value={transition.condition?.criteriaSource || undefined}\n            />\n\n            <TextField\n              label=\"Criteria Display\"\n              className={styles.criteriaText}\n              value={transition.condition?.description || ''}\n              variant=\"outlined\"\n              onChange={setCriteriaDisplay}\n              error={!criteriaDisplayIsValid}\n              helperText='Use commas \",\" to separate into multiple lines (up to 3)'\n            />\n          </>\n\n          <Button\n            className={styles.cancelButton}\n            color=\"inherit\"\n            size=\"small\"\n            variant=\"outlined\"\n            startIcon={icon}\n            onClick={handleUseCriteria}\n          >\n            {buttonText}\n          </Button>\n        </OutlinedDiv>\n      )}\n\n      {dislayEditCriteria && (\n        <OutlinedDiv label=\"Criteria Builder\" error={false}>\n          <TextField\n            label=\"Criteria Name\"\n            variant=\"outlined\"\n            value={builderCriteria?.label}\n            fullWidth\n            disabled\n          />\n          <span className={styles.buildCriteriaText}>{builderElements?.text}</span>\n          <div className={styles.buildCriteriaContainer}>\n            <Button\n              className={styles.cancelButton}\n              color=\"inherit\"\n              size=\"small\"\n              variant=\"outlined\"\n              startIcon={icon}\n              onClick={handleUseCriteria}\n            >\n              DELETE CRITERIA\n            </Button>\n            <Button\n              className={styles.editButton}\n              color=\"inherit\"\n              size=\"small\"\n              variant=\"outlined\"\n              startIcon={<FontAwesomeIcon icon={faEdit} />}\n              onClick={handleEditCriteria}\n            >\n              EDIT CRITERIA\n            </Button>\n          </div>\n        </OutlinedDiv>\n      )}\n\n      {!displayCriteria && !transitionSelected && (\n        <SidebarButton\n          buttonName=\"Build Criteria\"\n          buttonColor=\"secondary\"\n          buttonIcon={faTools}\n          buttonText=\"Create new criteria logic to add to branch node.\"\n          extraMargin\n          onClick={handleBuildCriteria}\n        />\n      )}\n\n      {transitionSelected && (\n        <OutlinedDiv label=\"Criteria Builder\" error={!criteriaIsValid || !criteriaDisplayIsValid}>\n          <TextField\n            error={criteriaName === ''}\n            label=\"Criteria Name\"\n            variant=\"outlined\"\n            onChange={handleCriteriaName}\n            value={criteriaName}\n            fullWidth\n          />\n          {currentCriteria?.text && (\n            <span className={styles.buildCriteriaText}>{currentCriteria.text}</span>\n          )}\n          <div className={styles.buildCriteriaContainer}>\n            <FormControlLabel\n              label={<Box fontStyle=\"italic\">Add to reusable criteria</Box>}\n              control={<Checkbox color=\"default\" />}\n              checked\n            />\n            <Button\n              color=\"inherit\"\n              size=\"large\"\n              variant=\"outlined\"\n              onClick={handleBuildCriteriaCancel}\n            >\n              Cancel\n            </Button>\n            <Button\n              className={styles.saveButton}\n              color=\"inherit\"\n              size=\"large\"\n              variant=\"outlined\"\n              startIcon={<FontAwesomeIcon icon={faSave} />}\n              disabled={criteriaName === '' || currentCriteria === null}\n              onClick={handleBuildCriteriaSave}\n            >\n              Save\n            </Button>\n          </div>\n        </OutlinedDiv>\n      )}\n    </>\n  );\n};\n\nexport default memo(BranchTransition);\n","import React, { FC, ReactNode, memo } from 'react';\nimport SidebarHeader from './SidebarHeader';\nimport useStyles from 'components/Sidebar/styles';\nimport { Card } from '@material-ui/core';\nimport { Transition } from 'pathways-model';\nimport { useCurrentPathwayContext } from 'components/StaticApp/CurrentPathwayProvider';\n\ninterface TransitionEditorProps {\n  transition: Transition;\n  children?: ReactNode;\n}\n\nconst TransitionEditor: FC<TransitionEditorProps> = ({ transition, children }) => {\n  const styles = useStyles();\n  const { pathway } = useCurrentPathwayContext();\n  const transitionKey = transition?.transition || '';\n  const transitionNode = pathway?.nodes[transitionKey];\n\n  return (\n    <Card raised className={styles.transitionContainer}>\n      {transitionNode && <SidebarHeader node={transitionNode} isTransition />}\n\n      {children}\n    </Card>\n  );\n};\n\nexport default memo(TransitionEditor);\n","import { useCallback } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nexport type RedirectToNodeCallback = (nodeId: string) => void;\n\nconst useRedirectToNode = (): RedirectToNodeCallback => {\n  const { id: pathwayId } = useParams();\n  const history = useHistory();\n  const redirectToNode = useCallback(\n    nodeId => {\n      const url = `/demo/builder/${encodeURIComponent(pathwayId)}/node/${encodeURIComponent(\n        nodeId\n      )}`;\n      if (url !== history.location.pathname) {\n        history.push(url);\n      }\n    },\n    [history, pathwayId]\n  );\n\n  return redirectToNode;\n};\n\nexport default useRedirectToNode;\n","import React, { FC, memo, useCallback } from 'react';\nimport { useUpdateEffect } from 'react-use';\n\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport { useCurrentPathwayContext } from 'components/StaticApp/CurrentPathwayProvider';\nimport { useGraphCoordinates, useGraphProvider } from 'components/DagreGraph/GraphProvider';\nimport Node from 'components/DagreGraph/Node';\nimport useExpandedState from 'components/DagreGraph/useExpandedState';\nimport useRedirectToNode from './useRedirectToNode';\nimport { PathwayNode } from 'pathways-model';\n\ninterface GraphNodesProps {\n  interactive: boolean;\n  currentNode: PathwayNode | null;\n}\n\nconst GraphNodes: FC<GraphNodesProps> = ({ interactive, currentNode }) => {\n  const { pathway } = useCurrentPathwayContext();\n  const { expanded: expandedNodes, toggleExpanded, openNode } = useExpandedState();\n  const { reflow } = useGraphProvider();\n  const { nodes: nodeCoordinates } = useGraphCoordinates();\n  const redirectToNode = useRedirectToNode();\n  const { resetCurrentCriteria } = useCurrentCriteriaContext();\n  const onClick = useCallback(\n    (nodeName: string) => {\n      redirectToNode(nodeName);\n      toggleExpanded(nodeName);\n      resetCurrentCriteria();\n    },\n    [redirectToNode, toggleExpanded, resetCurrentCriteria]\n  );\n\n  const nodes = Object.entries(pathway?.nodes ?? {});\n\n  useUpdateEffect(() => {\n    reflow();\n  }, [nodes.length]);\n\n  return (\n    <>\n      {nodes.map(([nodeName, pathwayNode]) => {\n        const coordinates = nodeCoordinates[nodeName] ?? { x: -999, y: -999 };\n\n        return (\n          <Node\n            key={nodeName}\n            nodeKey={nodeName}\n            pathwayNode={pathwayNode}\n            isActionable={pathwayNode.key === currentNode?.key}\n            isExpanded={Boolean(expandedNodes[nodeName])}\n            onClick={interactive ? onClick : undefined}\n            xCoordinate={coordinates.x}\n            yCoordinate={coordinates.y}\n            openNode={openNode}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default memo(GraphNodes);\n","import React, { FC, memo } from 'react';\n\nimport GraphEdges from 'components/DagreGraph/GraphEdges';\nimport GraphProvider from 'components/DagreGraph/GraphProvider';\nimport GraphNodes from './GraphNodes';\nimport GraphRoot from 'components/DagreGraph/GraphRoot';\nimport { PathwayNode } from 'pathways-model';\n\ninterface DagreGraphProps {\n  interactive?: boolean;\n  currentNode: PathwayNode | null;\n}\n\nconst DagreGraph: FC<DagreGraphProps> = ({ interactive = true, currentNode }) => {\n  return (\n    <GraphProvider>\n      <GraphRoot>\n        <GraphNodes interactive={interactive} currentNode={currentNode} />\n        <GraphEdges currentNode={currentNode} />\n      </GraphRoot>\n    </GraphProvider>\n  );\n};\n\nexport default memo(DagreGraph);\n","import React, { FC, useEffect, memo, useState, useCallback } from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\n\nimport Header from 'components/StaticApp/Header';\nimport Navigation from 'components/StaticApp/Navigation';\nimport Sidebar from 'components/StaticApp/Sidebar';\nimport DagreGraph from 'components/StaticApp/DagreGraph';\nimport CriteriaBuilder from 'components/CriteriaBuilder';\nimport { useTheme } from 'components/ThemeProvider';\nimport useStyles from 'components/Builder/styles';\nimport { IconButton } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faProjectDiagram } from '@fortawesome/free-solid-svg-icons';\nimport { useCurrentPathwayContext } from 'components/StaticApp/CurrentPathwayProvider';\nimport { PathwayNode } from 'pathways-model';\nimport useNodeId from 'hooks/useNodeId';\n\nconst Builder: FC = () => {\n  const styles = useStyles();\n  const currentNodeId = useNodeId();\n  const { pathway } = useCurrentPathwayContext();\n  const { currentCriteriaNodeId } = useCurrentCriteriaContext();\n  const theme = useTheme('dark');\n  const [showCriteriaBuilder, setShowCriteriaBuilder] = useState<boolean>(true);\n\n  let currentNode: PathwayNode | null = null;\n  if (pathway?.nodes[currentNodeId]) {\n    currentNode = pathway.nodes[currentNodeId];\n  } else if (pathway) {\n    currentNode = pathway.nodes['Start'];\n  }\n\n  const toggleShowCriteria = useCallback((): void => {\n    setShowCriteriaBuilder(!showCriteriaBuilder);\n  }, [showCriteriaBuilder]);\n\n  // Reset criteriaBuilderToggle to true if not currently building criteria\n  useEffect(() => {\n    if (!showCriteriaBuilder && currentCriteriaNodeId === '') setShowCriteriaBuilder(true);\n  }, [currentCriteriaNodeId, showCriteriaBuilder]);\n\n  return (\n    <div className={styles.root}>\n      <div>\n        <Header />\n        <Navigation />\n      </div>\n\n      {pathway && (\n        <div className={styles.main}>\n          <MuiThemeProvider theme={theme}>\n            <Sidebar currentNode={currentNode} />\n          </MuiThemeProvider>\n\n          <div className={styles.graph}>\n            {currentCriteriaNodeId !== '' && (\n              <div className={styles.graphHeader}>\n                <div className={styles.graphHeaderText}>\n                  <span>Criteria Builder</span>\n                </div>\n                <IconButton\n                  className={`${styles.toggleButton}-${showCriteriaBuilder ? 'on' : 'off'}`}\n                  onClick={toggleShowCriteria}\n                >\n                  <FontAwesomeIcon className={styles.toggleIcon} icon={faProjectDiagram} />\n                </IconButton>\n              </div>\n            )}\n            {currentCriteriaNodeId !== '' && showCriteriaBuilder ? (\n              <CriteriaBuilder />\n            ) : (\n              <DagreGraph currentNode={currentNode} />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Builder);\n","import React, { FC, memo, useMemo, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport Builder from 'components/StaticApp/Builder';\nimport { usePathwaysContext } from 'components/StaticApp/PathwaysProvider';\nimport { useCurrentPathwayContext } from './CurrentPathwayProvider';\nimport usePathwayId from 'hooks/usePathwayId';\nimport useNodeId from 'hooks/useNodeId';\n\nconst BuilderRoute: FC = () => {\n  const pathwayId = usePathwayId();\n  const currentNodeId = useNodeId();\n  const { pathways } = usePathwaysContext();\n  const { pathwayRef, setCurrentPathway, resetCurrentPathway } = useCurrentPathwayContext();\n  const pathwayIndex = useMemo(() => pathways.findIndex(pathway => pathway.id === pathwayId), [\n    pathwayId,\n    pathways\n  ]);\n  const pathway = pathways[pathwayIndex];\n\n  useEffect(() => {\n    if (pathway && pathwayRef?.current?.id === pathway.id) setCurrentPathway(pathway);\n    else if (pathway) resetCurrentPathway(pathway);\n  }, [pathway, pathwayRef, setCurrentPathway, resetCurrentPathway]);\n\n  if (pathway == null) return null;\n  if (!currentNodeId) return <Redirect to={`/demo/builder/${pathwayId}/node/Start`} />;\n\n  return <Builder />;\n};\n\nexport default memo(BuilderRoute);\n","import React, { FC, useCallback, useRef, memo, FormEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  IconButton\n} from '@material-ui/core';\nimport shortid from 'shortid';\nimport produce from 'immer';\n\nimport { usePathwaysContext } from 'components/StaticApp/PathwaysProvider';\nimport useStyles from 'components/PathwaysList/styles';\nimport { createNewPathway } from 'utils/builder';\nimport { Pathway } from 'pathways-model';\n\ninterface PathwayModalProps {\n  open: boolean;\n  onClose: () => void;\n  editPathway?: Pathway;\n}\n\nconst PathwayModal: FC<PathwayModalProps> = ({ open, onClose, editPathway }) => {\n  const createNewPathwayMeta = !editPathway;\n  const styles = useStyles();\n  const history = useHistory();\n  const pathwayNameRef = useRef<HTMLInputElement>(null);\n  const pathwayDescRef = useRef<HTMLInputElement>(null);\n  const { addPathway, updatePathway } = usePathwaysContext();\n\n  const closeModal = useCallback(\n    (pathwayId: string): void => {\n      history.push(`/demo/builder/${encodeURIComponent(pathwayId)}/node/Start`);\n      onClose();\n    },\n    [history, onClose]\n  );\n\n  const handleCreateNewPathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      const pathwayId = shortid.generate();\n      const name: string = pathwayNameRef.current?.value ?? '';\n      const description: string = pathwayDescRef.current?.value ?? '';\n      addPathway(createNewPathway(name, description, pathwayId));\n      closeModal(pathwayId);\n    },\n    [addPathway, closeModal]\n  );\n\n  const handleUpdatePathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      if (\n        editPathway &&\n        (pathwayNameRef.current?.value !== editPathway.name ||\n          pathwayDescRef.current?.value !== editPathway.description)\n      ) {\n        const newEditPathway = produce(editPathway, (draftEditPathway: Pathway) => {\n          if (pathwayNameRef.current?.value) draftEditPathway.name = pathwayNameRef.current.value;\n          if (pathwayDescRef.current?.value)\n            draftEditPathway.description = pathwayDescRef.current.value;\n        });\n        updatePathway(newEditPathway);\n      }\n      onClose();\n    },\n    [updatePathway, editPathway, onClose]\n  );\n\n  let name, description;\n  if (editPathway) {\n    name = editPathway.name;\n    const metaDescription = editPathway.description;\n    if (metaDescription && metaDescription !== '') description = metaDescription;\n  }\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"create-pathway\" fullWidth maxWidth=\"md\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={createNewPathwayMeta ? handleCreateNewPathway : handleUpdatePathway}>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            autoFocus\n            label=\"Pathway Name\"\n            fullWidth\n            required={createNewPathwayMeta}\n            inputRef={pathwayNameRef}\n            defaultValue={createNewPathwayMeta ? undefined : name}\n          />\n\n          <TextField\n            variant=\"outlined\"\n            label=\"Pathway Description\"\n            fullWidth\n            inputRef={pathwayDescRef}\n            defaultValue={createNewPathwayMeta ? undefined : description}\n            multiline\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={createNewPathwayMeta && <FontAwesomeIcon icon={faPlus} />}\n            type=\"submit\"\n          >\n            {createNewPathwayMeta ? 'Create' : 'Save'}\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(PathwayModal);\n","import React, { FC, memo, useState, useCallback, MouseEvent, ChangeEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faFileDownload } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Link\n} from '@material-ui/core';\n\nimport { usePathwaysContext } from 'components/StaticApp/PathwaysProvider';\nimport PathwayModal from './PathwayModal';\n\nimport useStyles from 'components/PathwaysList/styles';\nimport { Pathway } from 'pathways-model';\nimport { Link as RouterLink } from 'react-router-dom';\nimport ConfirmedDeletionButton from 'components/ConfirmedDeletionButton';\nimport { ContextualExportMenu } from 'components/StaticApp/elements/ExportMenu';\nimport { useCurrentPathwayContext } from 'components/StaticApp/CurrentPathwayProvider';\n\ninterface PathwaysTableInterface {\n  itemSelected: (item: string) => boolean;\n  handleSelectClick: (item: string) => (event: ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst PathwaysTable: FC<PathwaysTableInterface> = ({ itemSelected, handleSelectClick }) => {\n  const styles = useStyles();\n  const { pathways, deletePathway } = usePathwaysContext();\n  const { setCurrentPathway } = useCurrentPathwayContext();\n  const [open, setOpen] = useState(false);\n  const [editablePathway, setEditablePathway] = useState<Pathway>();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const openEditPathwayModal = useCallback((pathway: Pathway): void => {\n    setOpen(true);\n    setEditablePathway(pathway);\n  }, []);\n\n  const closeEditPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  const openMenu = useCallback(\n    (event: MouseEvent<HTMLButtonElement>): void => {\n      setAnchorEl(event.currentTarget);\n      const pathway = pathways.filter(pathway => pathway.id === event.currentTarget.id);\n      if (pathway.length) setCurrentPathway(pathway[0]);\n    },\n    [pathways, setCurrentPathway]\n  );\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const deletion = useCallback(\n    (id: string): void => {\n      deletePathway(id);\n    },\n    [deletePathway]\n  );\n\n  return (\n    <div>\n      <TableContainer className={styles.pathwayList}>\n        <Table aria-label=\"pathway list\">\n          <TableHead>\n            <TableRow>\n              <TableCell padding=\"checkbox\"></TableCell>\n              <TableCell>Pathway Name</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Last Updated</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {pathways.map(pathway => (\n              <TableRow key={pathway.id}>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={itemSelected(pathway.id)}\n                    onChange={handleSelectClick(pathway.id)}\n                  />\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Link\n                    component={RouterLink}\n                    to={`/demo/builder/${encodeURIComponent(pathway.id)}`}\n                    color=\"primary\"\n                    underline=\"none\"\n                  >\n                    {pathway.name}\n                  </Link>\n                </TableCell>\n\n                <TableCell>draft</TableCell>\n                <TableCell>2 days ago</TableCell>\n\n                <TableCell align=\"right\">\n                  <Button\n                    className={styles.pathwaysListButton}\n                    color=\"primary\"\n                    size=\"small\"\n                    startIcon={<FontAwesomeIcon icon={faEdit} />}\n                    onClick={(): void => openEditPathwayModal(pathway)}\n                  >\n                    Edit Info\n                  </Button>\n                  <Button\n                    id={pathway.id}\n                    className={styles.pathwaysListButton}\n                    color=\"primary\"\n                    size=\"small\"\n                    startIcon={<FontAwesomeIcon icon={faFileDownload} />}\n                    onClick={openMenu}\n                  >\n                    Export\n                  </Button>\n                  <ConfirmedDeletionButton\n                    deleteType=\"pathway\"\n                    deleteName={pathway.name}\n                    deleteId={pathway.id}\n                    deleteMethod={deletion}\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <ContextualExportMenu anchorEl={anchorEl} closeMenu={closeMenu} />\n      <PathwayModal open={open} onClose={closeEditPathwayModal} editPathway={editablePathway} />\n    </div>\n  );\n};\n\nexport default memo(PathwaysTable);\n","import React, { FC, useCallback, useState, memo, useMemo, MouseEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faFileImport,\n  faPlus,\n  faFileDownload,\n  faFileExport,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport { Button, Checkbox, IconButton, Tooltip } from '@material-ui/core';\n\nimport { usePathwaysContext } from 'components/StaticApp/PathwaysProvider';\nimport Loading from 'components/elements/Loading';\nimport PathwaysTable from './PathwaysTable';\nimport PathwayModal from './PathwayModal';\n\nimport useStyles from 'components/PathwaysList/styles';\nimport FileImportModal from 'components/FileImportModal';\nimport useListCheckbox from 'hooks/useListCheckbox';\nimport { useCriteriaContext } from 'components/StaticApp/CriteriaProvider';\nimport ExportMenu from 'components/StaticApp/elements/ExportMenu';\nimport { Pathway } from 'pathways-model';\nimport ConfirmationPopover from 'components/elements/ConfirmationPopover';\n\nconst PathwaysList: FC = () => {\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n  const { status, pathways, deletePathway } = usePathwaysContext();\n  const [importPathwayOpen, _setImportPathwayOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const pathwayIds = useMemo(() => pathways.map(n => n.id), [pathways]);\n  const {\n    indeterminate,\n    checked,\n    handleSelectAllClick,\n    itemSelected,\n    handleSelectClick,\n    selected,\n    numSelected\n  } = useListCheckbox(pathwayIds);\n  const { criteria } = useCriteriaContext();\n\n  const { addPathwayFromFile } = usePathwaysContext();\n\n  const openNewPathwayModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeNewPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  const selectFile = useCallback(\n    (files: FileList | undefined | null) => {\n      if (files?.length) addPathwayFromFile((files[0] as unknown) as File);\n    },\n    [addPathwayFromFile]\n  );\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const openImportPathwayModal = useCallback((): void => _setImportPathwayOpen(true), []);\n\n  const closeImportPathwayModal = useCallback((): void => _setImportPathwayOpen(false), []);\n\n  const handleDelete = useCallback(() => {\n    selected.forEach(id => {\n      deletePathway(id);\n    });\n  }, [deletePathway, selected]);\n\n  const [pathwaysToExport, setPathwaysToExport] = useState<Pathway[]>([]);\n  const handleExportAll = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      setPathwaysToExport(pathways.filter(pathway => selected.has(pathway.id)));\n      setAnchorEl(event.currentTarget);\n    },\n    [pathways, selected]\n  );\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.tableTop}>\n        <div className={styles.selectionOptions}>\n          <Tooltip placement=\"top\" title=\"Select All\" arrow>\n            <Checkbox\n              indeterminate={indeterminate}\n              checked={checked}\n              onChange={handleSelectAllClick}\n            />\n          </Tooltip>\n          {numSelected > 0 && (\n            <>\n              <Tooltip placement=\"top\" title=\"Export\" arrow>\n                <IconButton size=\"small\" onClick={handleExportAll}>\n                  <FontAwesomeIcon icon={faFileDownload} className={styles.selectionIcon} />\n                </IconButton>\n              </Tooltip>\n              <Tooltip placement=\"top\" title=\"Move to\" arrow>\n                <IconButton size=\"small\">\n                  <FontAwesomeIcon icon={faFileExport} className={styles.selectionIcon} />\n                </IconButton>\n              </Tooltip>\n              <Tooltip placement=\"top\" title=\"Delete\" arrow>\n                <ConfirmationPopover\n                  onConfirm={handleDelete}\n                  displayText={`Are you sure that you would like to delete the selected pathway${\n                    numSelected > 1 ? 's' : ''\n                  }?`}\n                >\n                  <IconButton size=\"small\">\n                    <FontAwesomeIcon icon={faTrashAlt} className={styles.deleteIcon} />\n                  </IconButton>\n                </ConfirmationPopover>\n              </Tooltip>\n            </>\n          )}\n        </div>\n        <div className={styles.buttonRow}>\n          <Button\n            className={styles.createPathwayButton}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faFileImport} />}\n            onClick={openImportPathwayModal}\n          >\n            Import Pathway\n          </Button>\n\n          <Button\n            className={styles.createPathwayButton}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faPlus} />}\n            onClick={openNewPathwayModal}\n          >\n            Create Pathway\n          </Button>\n        </div>\n      </div>\n\n      <FileImportModal\n        open={importPathwayOpen}\n        onClose={closeImportPathwayModal}\n        onSelectFile={selectFile}\n        allowedFileType=\".json\"\n      />\n\n      <PathwayModal open={open} onClose={closeNewPathwayModal} />\n      <ExportMenu\n        pathway={pathwaysToExport}\n        allPathways={pathways}\n        criteria={criteria}\n        anchorEl={anchorEl}\n        closeMenu={closeMenu}\n      />\n\n      {status === 'loading' ? (\n        <Loading />\n      ) : (\n        <PathwaysTable handleSelectClick={handleSelectClick} itemSelected={itemSelected} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PathwaysList);\n","import React, { ChangeEvent, FC, memo, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport moment from 'moment';\n\nimport useStyles from 'components/CriteriaList/styles';\nimport { useCriteriaContext } from 'components/StaticApp/CriteriaProvider';\nimport ConfirmedDeletionButton from 'components/ConfirmedDeletionButton';\n\ninterface CriteriaTableProps {\n  itemSelected: (item: string) => boolean;\n  handleSelectClick: (item: string) => (event: ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst CriteriaTable: FC<CriteriaTableProps> = ({ itemSelected, handleSelectClick }) => {\n  const styles = useStyles();\n  const { criteria, deleteCriteria } = useCriteriaContext();\n\n  const renderDate = (datetime: number): string => {\n    return moment(datetime).fromNow();\n  };\n\n  const deletion = useCallback(\n    (id: string): void => {\n      deleteCriteria(id);\n    },\n    [deleteCriteria]\n  );\n\n  return (\n    <TableContainer className={styles.criteriaList}>\n      <Table aria-label=\"criteria list\">\n        <TableHead>\n          <TableRow>\n            <TableCell padding=\"checkbox\"></TableCell>\n            <TableCell>Criteria Name</TableCell>\n            <TableCell>Version</TableCell>\n            <TableCell>Added</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {criteria.map(c => (\n            <TableRow key={c.id}>\n              <TableCell padding=\"checkbox\">\n                <Checkbox checked={itemSelected(c.id)} onChange={handleSelectClick(c.id)} />\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {c.label}\n              </TableCell>\n              <TableCell>{c.version}</TableCell>\n              <TableCell>{renderDate(c.modified)}</TableCell>\n\n              <TableCell align=\"right\">\n                <Button\n                  className={styles.editButton}\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faEdit} />}\n                >\n                  Edit\n                </Button>\n                <ConfirmedDeletionButton\n                  deleteType=\"criterion\"\n                  deleteName={c.label}\n                  deleteId={c.id}\n                  deleteMethod={deletion}\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default memo(CriteriaTable);\n","import React, { FC, memo, useState, useCallback, useMemo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTools, faFileImport, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Button, Checkbox, IconButton, Tooltip } from '@material-ui/core';\n\nimport { usePathwaysContext } from 'components/StaticApp/PathwaysProvider';\nimport Loading from 'components/elements/Loading';\nimport CriteriaTable from './CriteriaTable';\n\nimport useStyles from 'components/CriteriaList/styles';\nimport FileImportModal from 'components/FileImportModal';\nimport { useCriteriaContext } from 'components/StaticApp/CriteriaProvider';\nimport useListCheckbox from 'hooks/useListCheckbox';\nimport ConfirmationPopover from 'components/elements/ConfirmationPopover';\n\nconst CriteriaList: FC = () => {\n  const styles = useStyles();\n  const { status } = usePathwaysContext();\n\n  const { criteria, addCriteria, deleteCriteria } = useCriteriaContext();\n\n  const [open, setOpen] = useState<boolean>(false);\n\n  const pathwayIds = useMemo(() => criteria.map(n => n.id), [criteria]);\n  const {\n    indeterminate,\n    checked,\n    handleSelectAllClick,\n    itemSelected,\n    handleSelectClick,\n    selected,\n    setSelected,\n    numSelected\n  } = useListCheckbox(pathwayIds);\n\n  const openImportModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeImportModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  const selectFile = useCallback(\n    (files: FileList | undefined | null) => {\n      if (files?.length) addCriteria(files[0]);\n      closeImportModal();\n    },\n    [addCriteria, closeImportModal]\n  );\n\n  const handleDelete = useCallback(() => {\n    selected.forEach(id => {\n      deleteCriteria(id);\n      setSelected(new Set());\n    });\n  }, [deleteCriteria, selected, setSelected]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.tableTop}>\n        <div className={styles.selectionOptions}>\n          <Tooltip placement=\"top\" title=\"Select All\" arrow>\n            <Checkbox\n              indeterminate={indeterminate}\n              checked={checked}\n              onChange={handleSelectAllClick}\n            />\n          </Tooltip>\n          {numSelected > 0 && (\n            <>\n              <Tooltip placement=\"top\" title=\"Delete\" arrow>\n                <ConfirmationPopover\n                  onConfirm={handleDelete}\n                  displayText={`Are you sure that you would like to delete the selected ${\n                    numSelected > 1 ? 'criteria' : 'criterion'\n                  }?`}\n                >\n                  <IconButton size=\"small\">\n                    <FontAwesomeIcon icon={faTrashAlt} className={styles.deleteIcon} />\n                  </IconButton>\n                </ConfirmationPopover>\n              </Tooltip>\n            </>\n          )}\n        </div>\n        <div className={styles.buttonRow}>\n          <Button\n            className={styles.buildCriteriaButton}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faFileImport} />}\n            onClick={openImportModal}\n          >\n            Import Library\n          </Button>\n          <Button\n            className={styles.buildCriteriaButton}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faTools} />}\n          >\n            Build Criteria\n          </Button>\n        </div>\n      </div>\n\n      <FileImportModal\n        open={open}\n        onClose={closeImportModal}\n        onSelectFile={selectFile}\n        allowedFileType=\".cql, .zip\"\n      />\n\n      {status === 'loading' ? (\n        <Loading />\n      ) : (\n        <CriteriaTable handleSelectClick={handleSelectClick} itemSelected={itemSelected} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(CriteriaList);\n","import React, { FC, memo } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from 'components/StaticApp/Header';\nimport BuilderRoute from './BuilderRoute';\nimport ThemeProvider from 'components/ThemeProvider';\nimport { PathwaysProvider } from './PathwaysProvider';\nimport { UserProvider } from 'components/UserProvider';\nimport { CriteriaProvider } from './CriteriaProvider';\nimport Tabs from 'components/Tabs';\nimport PathwaysList from './PathwaysList';\nimport CriteriaList from './CriteriaList';\nimport { CurrentPathwayProvider } from './CurrentPathwayProvider';\nimport { CurrentCriteriaProvider } from 'components/CurrentCriteriaProvider';\nimport { SnackbarProvider } from 'components/SnackbarProvider';\nimport { CriteriaBuilderProvider } from 'components/CriteriaBuilderProvider';\n\nconst StaticApp: FC = () => {\n  return (\n    <ThemeProvider theme=\"light\">\n      <UserProvider>\n        <CriteriaProvider>\n          <PathwaysProvider>\n            <CurrentPathwayProvider>\n              <SnackbarProvider>\n                <CurrentCriteriaProvider>\n                  <CriteriaBuilderProvider>\n                    <Router>\n                      <Switch>\n                        <Route path=\"/demo/builder/:id/node/:nodeId\">\n                          <BuilderRoute />\n                        </Route>\n                        <Route path=\"/demo/builder/:id\">\n                          <BuilderRoute />\n                        </Route>\n                        <Route path=\"/demo\">\n                          <Header />\n                          <Tabs\n                            tabs={[\n                              { label: 'Pathway', component: <PathwaysList /> },\n                              { label: 'Criteria', component: <CriteriaList /> }\n                            ]}\n                          />\n                        </Route>\n                      </Switch>\n                    </Router>\n                  </CriteriaBuilderProvider>\n                </CurrentCriteriaProvider>\n              </SnackbarProvider>\n            </CurrentPathwayProvider>\n          </PathwaysProvider>\n        </CriteriaProvider>\n      </UserProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default memo(StaticApp);\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport './immer';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport App from 'components/App';\nimport { Landing, AuthModalProvider } from 'components/Auth';\nimport ThemeProvider from 'components/ThemeProvider';\n\nimport './styles/index.scss';\nimport StaticApp from 'components/StaticApp';\n\n// Enable why did you render for development mode\n// Will automatically track all memoized components\nif (process.env.NODE_ENV === 'development') {\n  const whyDidYouRender = require('@welldone-software/why-did-you-render');\n  whyDidYouRender(React, {\n    trackAllPureComponents: true\n  });\n}\n\nReactDOM.render(\n  <ThemeProvider theme=\"light\">\n    <AuthModalProvider>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Landing} />\n          <Route path=\"/builder\" component={App} />\n          <Route path=\"/demo\" component={StaticApp} />\n        </Switch>\n      </Router>\n    </AuthModalProvider>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3T0lc\",\"homeLink\":\"Header_homeLink__2ew4r\"};","module.exports = __webpack_public_path__ + \"static/media/camino-logo-dark.c8fc712a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Loading_root__3b6qy\"};","export class ConfigManager {\n  constructor(config = {}) {\n    this.config = global.CONFIG ? { ...global.CONFIG, ...config } : { ...config };\n  }\n\n  get(name, defaultValue) {\n    const parts = name.split('.');\n    let context = this.config;\n    let value = null;\n    for (const i in parts) {\n      const part = parts[i];\n      value = context[part];\n      context = value;\n    }\n    return value || defaultValue;\n  }\n\n  add(conf) {\n    if (conf) {\n      this.config = {\n        ...this.config,\n        ...conf\n      };\n    }\n  }\n}\n\nconst config = new ConfigManager();\nexport default config;\n"],"sourceRoot":""}