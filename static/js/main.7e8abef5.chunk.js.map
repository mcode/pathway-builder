{"version":3,"sources":["camino-logo-dark.png","components/ActionButton/ActionButton.module.scss","immer.js","components/CurrentCriteriaProvider.tsx","styles/theme.tsx","components/ThemeProvider.tsx","components/Header/Header.tsx","components/Navigation/styles.tsx","utils/useRefState.ts","components/CurrentPathwayProvider.tsx","utils/nodeUtils.ts","utils/cpg.ts","utils/builder.ts","components/elements/ExportMenu/ExportMenu.tsx","components/Navigation/Navigation.tsx","components/Services/Services.tsx","components/PathwaysProvider.tsx","components/Sidebar/styles.tsx","components/CurrentNodeProvider.tsx","components/elements/DropDown/DropDown.tsx","components/SnackbarProvider.tsx","components/Sidebar/DeleteSnackbar.tsx","components/Sidebar/ConnectNodeButton.tsx","components/Sidebar/Sidebar.tsx","components/Sidebar/SidebarHeader.tsx","components/Sidebar/SidebarButton.tsx","engine/cql-to-elm.ts","components/Sidebar/ActionNodeEditor.tsx","components/CriteriaProvider.tsx","components/CriteriaBuilderProvider.tsx","components/Sidebar/BranchTransition.tsx","components/Sidebar/OutlinedDiv.tsx","components/Sidebar/DeleteModal.tsx","components/Sidebar/TransitionEditor.tsx","components/DagreGraph/useCoordinatesCalculator.ts","components/DagreGraph/GraphProvider.tsx","components/DagreGraph/GraphEdges.styles.ts","components/DagreGraph/GraphEdges.tsx","components/DagreGraph/NodeDetails.styles.ts","components/DagreGraph/NodeDetails.tsx","components/DagreGraph/NodeIcon.styles.ts","components/DagreGraph/NodeIcon.tsx","components/DagreGraph/Node.styles.ts","components/DagreGraph/Node.tsx","components/DagreGraph/useExpandedState.ts","components/DagreGraph/useRedirectToNode.ts","components/DagreGraph/GraphNodes.tsx","components/DagreGraph/GraphRoot.styles.ts","components/DagreGraph/GraphRoot.tsx","components/DagreGraph/DagreGraph.tsx","components/CriteriaBuilder/styles.tsx","components/CriteriaBuilder/CriteriaBuilder.tsx","components/Builder/styles.tsx","components/Builder/Builder.tsx","components/BuilderRoute.tsx","components/UserProvider.tsx","components/Tabs/styles.tsx","components/Tabs/Tabs.tsx","components/elements/Loading/Loading.tsx","components/PathwaysList/styles.tsx","components/PathwaysList/PathwayModal.tsx","components/ConfirmedDeletionButton/styles.tsx","components/ActionButton/ActionButton.tsx","components/ConfirmedDeletionButton/ConfirmedDeletionButton.tsx","components/PathwaysList/PathwaysTable.tsx","components/PathwaysList/PathwaysList.tsx","components/CriteriaList/styles.tsx","components/CriteriaList/CriteriaTable.tsx","components/CriteriaList/ImportCriteriaModal.tsx","components/CriteriaList/CriteriaList.tsx","components/App.tsx","index.js","utils/ConfigManager.js","components/Header/Header.module.scss","components/elements/Loading/Loading.module.scss"],"names":["module","exports","enableAllPlugins","CurrentCriteriaContext","createContext","CurrentCriteriaProvider","memo","children","useState","currentCriteriaNodeId","setCurrentCriteriaNodeId","currentCriteria","setCurrentCriteria","buildCriteriaSelected","setBuildCriteriaSelected","criteriaName","setCriteriaName","resetCurrentCriteria","useCallback","Provider","value","useCurrentCriteriaContext","useContext","variables","spacing","globalPadding","colors","white","black","red","blue","blueLighter","gray","grayMedium","grayBlue","grayLight","grayLighter","grayDark","grayVeryDark","green","typography","fontFamily","join","materialUiOverridesBase","MuiButton","root","borderRadius","height","backgroundColor","color","contained","label","fontWeight","iconSizeMedium","fontSize","iconSizeSmall","MuiTableHead","MuiTableCell","head","padding","borderBottom","MuiFormControl","margin","MuiFormLabel","fontStyle","MuiInputBase","input","transitionDelay","transitionProperty","MuiTooltip","tooltip","arrow","MuiOutlinedInput","MuiSelect","icon","MuiPaper","rounded","MuiDialogTitle","MuiDialogContent","MuiDialogActions","MuiCard","overflow","MuiIconButton","materialUiOverridesDark","borderColor","notchedOutline","MuiMenuItem","paletteBase","primary","main","secondary","error","common","background","default","text","grey","800","lightTheme","createMuiTheme","palette","overrides","darkTheme","deepmerge","projectorTheme","getTheme","theme","useProjector","ThemeContext","ThemeProvider","setUseProjector","muiTheme","toggleTheme","currentUseProjector","anchorEl","setAnchorEl","openMenu","event","currentTarget","closeMenu","handleToggleTheme","className","styles","header","to","homeLink","onClick","src","logo","alt","aria-controls","aria-haspopup","faCog","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","makeStyles","display","alignItems","justifyContent","backButton","width","navigationIcons","cursor","pathwayName","marginLeft","name","index","useRefState","initialValue","state","setState","stateRef","useRef","useEffect","current","CurrentPathwayContext","CurrentPathwayProvider","pathway","pathwayRef","_setPathway","setPathway","useCurrentPathwayContext","isBranchNode","node","action","nodeTypeIsUndefined","undefined","resourceNameConversion","MedicationRequest","ServiceRequest","CarePlan","nodeTypeOptions","findParents","childNodeKey","parents","Object","keys","nodes","forEach","parentNodeKey","transitions","transition","push","willOrphanChild","transitionCount","nodeKey","canDeleteNode","canDeleteAllTransitions","redirect","pathwayId","history","url","encodeURIComponent","location","pathname","LIBRARY_DRAFT","R4","LibraryStatusKind","_draft","PLANDEFINITION_DRAFT","PlanDefinitionStatusKind","ACTIVITYDEFINITION_DRAFT","ActivityDefinitionStatusKind","BUNDLE_TRANSACTION","BundleTypeKind","_transaction","BUNDLE_PUT","Bundle_RequestMethodKind","_put","CONDITION_APPLICABILITY","PlanDefinition_ConditionKindKind","_applicability","EXPRESSION_CQL","ExpressionLanguageKind","_textCql","createAction","description","definition","title","code","coding","system","definitionCanonical","createPlanDefinition","type","libraryId","planDefinition","resourceType","meta","profile","extension","valueCode","version","substring","status","experimental","publisher","library","createBundleEntry","resource","fullUrl","request","method","toCPG","bundle","entry","uuidv4","content","elm","contentType","data","btoa","JSON","stringify","navigational","preconditions","createLibrary","cpgStrategy","key","isActionNode","cpgRecommendation","cpgStrategyAction","map","parent","find","condition","kind","expression","language","cql","cpgActivityDefinition","activityId","date","Date","toISOString","productCodeableConcept","medicationCodeableConcept","createActivityDefinition","cpgRecommendationAction","downloadPathway","cpg","pathwayString","exportPathway","pathwayBlob","Blob","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","pathwayWithElm","produce","draftPathway","setNavigationalElm","identifier","schemaIdentifier","usings","def","localIdentifier","uri","localId","locator","statements","context","operand","dataType","includes","valueSets","codes","codeSystems","mergeElm","elmStatement","getElmStatement","draftElmStatement","generateNavigationalElm","pathwayToExport","additionalElm","using","include","path","valueSet","codesystem","defaultStatementNames","setNodeType","nodeType","setNodeAction","makeNodeAction","shortid","generate","makeNodeBranch","console","addTransition","startNodeKey","endNodeKey","setTransitionCondition","transitionId","criteria","foundTransition","statement","criteriaSource","getNodeType","getContentAnchorEl","anchorOrigin","vertical","horizontal","alert","Navigation","useStyles","useHistory","handleGoBack","IconButton","aria-label","faChevronLeft","faEllipsisH","useGetService","result","setResult","fetch","headers","Accept","getObject","then","response","json","listOfFiles","f","options","typedFetch","listOfPromises","Promise","all","list","payload","catch","PathwaysContext","PathwaysProvider","pathways","pathwaysRef","setPathways","service","config","get","servicePayload","addPathway","currentPathways","deletePathway","filter","updatePathway","newPathway","findIndex","slice","usePathwaysContext","flexDirection","minWidth","overflowY","formControl","divider","headerLabelStart","displayText","sidebarHeader","sidebarHeaderGroup","sidebarHeaderButton","headerLabelGroup","headerLabel","headerLabelText","marginBottom","editIcon","sidebarButtonGroup","sidebarButtonGroupExtraMargin","sidebarButton","marginRight","sidebarButtonText","outlinedDiv","outlinedDivError","toggleSidebar","float","cancelButton","alignSelf","marginTop","buildCriteriaContainer","buildCriteriaText","saveButton","transitionContainer","dividerHeader","textTransform","lineHeight","paddingLeft","dialogCloseButton","dialogContent","dialogContentText","alertIcon","connectDropdown","flexWrap","alignContent","connectText","cancelButtonDropdown","border","CurrentNodeContext","CurrentNodeProvider","currentNode","currentNodeRef","_setCurrentNode","setCurrentNode","useCurrentNodeContext","onChange","handleSetSelected","FormControl","variant","fullWidth","InputLabel","htmlFor","Select","MenuProps","transformOrigin","displayEmpty","option","SnackbarContext","SnackbarProvider","openSnackbar","setOpenSnackbar","snackbarText","setSnackbarText","handleCloseSnackbar","useSnackbarContext","Snackbar","autoHideDuration","message","Fragment","Button","size","faTimes","setOpen","rootNode","connectableNodes","ancestorNodes","getAncestorNodes","rootNodeKey","currNodeKey","ancestors","previousNodes","currNode","length","some","concat","rootNodeConnectsToNode","nodeIsAncestor","getConnectableNodes","optionsAvailable","connectToNode","target","showDropdown","buttonName","buttonIcon","faLevelDownAlt","buttonText","disabled","hasTooltip","tooltipTitle","isExpanded","setIsExpanded","sidebarContainerElement","changeNodeType","selectNodeType","addPathwayNode","newNode","addNode","ref","isTransition","faPlus","faChevronRight","displayTransitions","showInput","setShowInput","openTooltip","setOpenTooltip","openDelete","setOpenDelete","inputRef","nodeLabel","goToParentNode","redirectToNode","changeNodeLabel","setNodeLabel","handleShowInput","deleteNode","filterTransition","removeNode","deleteTransition","removeTransition","openDeleteModal","closeDeleteModal","handleOpenTooltip","handleCloseTooltip","handleKeyPress","deleteNodeDisabled","deleteTransitionDisabled","deleteDisabled","titleText","Input","onBlur","onKeyPress","defaultValue","autoFocus","onFocus","select","clsx","faEdit","Tooltip","placement","onOpen","faTrashAlt","onDelete","extraMargin","ConditionalTooltip","startIcon","codeSystemOptions","addActionCQL","currentNodeKey","body","convertBasicCQL","cqlId","replace","codesystemStatement","returnStatement","retrieveStatement","defineStatement","escape","createCQL","setActionNodeElm","changeCode","draftAction","setActionCode","resetDisplay","changeDescription","draftaction","setActionDescription","changeTitle","setActionTitle","selectCodeSystem","codeSystem","setActionCodeSystem","validateFunction","setActionResourceDisplay","onEnter","e","changeNodeTypeEnabled","TextField","inputProps","faCheckCircle","CriteriaContext","DEFAULT_ELM_STATEMENTS","elmLibraryToCriteria","custom","allElmStatements","elmStatements","labelTitle","modified","now","jsonToCriteria","rawElm","parse","CriteriaProvider","setCriteria","newCriteria","jsonCriterion","criterion","addCriteria","file","reader","FileReader","onload","readAsText","deleteCriteria","addElmCriteria","addBuilderCriteria","builder","builderModelToCriteria","useCriteriaContext","CriteriaBuilderContext","CriteriaBuilderProvider","selectedElement","setSelectedElement","selectedDemoElement","setSelectedDemoElement","gender","setGender","minimumAge","setMinimumAge","maximumAge","setMaximumAge","resetCriteriaBuilder","useCriteriaBuilderContext","criteriaOptions","useMemo","c","criteriaAvailable","useCriteriaSelected","setUseCriteriaSelected","criteriaDescription","criteriaIsValid","criteriaDisplayIsValid","hasCriteria","displayCriteria","transitionRef","handleUseCriteria","selectCriteriaSource","criteriaId","selectedCriteria","setCriteriaDisplay","criteriaDisplay","handleCriteriaName","handleBuildCriteria","handleBuildCriteriaCancel","handleBuildCriteriaSave","transitionSelected","faThList","faTools","FormControlLabel","Box","control","Checkbox","checked","faSave","InputComponent","OutlinedDiv","multiline","InputLabelProps","shrink","InputProps","inputComponent","classes","Dialog","aria-labelledby","maxWidth","DialogTitle","disableTypography","DialogContent","faExclamationCircle","DialogActions","transitionKey","transitionNode","Card","raised","useCoordinatesCalculator","edges","coordinates","setCoordinates","updateCoordinates","graph","graphWidth","xOffset","x","xOffsetCorrection","newCoordinates","y","Math","min","abs","edgeKey","edge","edgeName","v","w","points","point","isNaN","start","end","GraphContext","SetGraphWidthContext","GraphCoordinatesContext","createGraph","g","dagre","graphlib","Graph","setGraph","setDefaultEdgeLabel","GraphProvider","useRafState","setWidth","reflowRequired","setReflowRequired","reflow","graphValue","layout","useUpdateEffect","useGraphProvider","useGraphCoordinates","position","top","left","zIndex","fill","stroke","props","isActive","LabelTooltip","Edge","reduce","i","generatePathString","truncateTooltip","d","strokeWidth","markerEnd","edgeCoordinates","markerWidth","markerHeight","refX","refY","orient","entries","edgeId","table","verticalAlign","textAlign","overflowWrap","externalLink","Field","BranchNodeContents","ActionNodeFields","actionNode","rel","faExternalLinkAlt","pathwayNode","isStartNode","faPlay","faPrescriptionBottleAlt","faSyringe","faBookMedical","faMicroscope","minHeight","isActionable","nodeTitle","flex","nodeContent","clickable","createTransitionLabel","getBoundingClientRect","element","dimensions","ceil","xCoordinate","yCoordinate","openNode","onClickHandler","nodeRef","nodeStyle","useLifecycles","setNode","setEdge","transitionNodes","Set","outEdges","has","removeEdge","style","useExpandedState","lastSelectedNode","expanded","setExpanded","toggleExpanded","nodeName","prevState","closeNode","useRedirectToNode","useParams","nodeId","interactive","expandedNodes","nodeCoordinates","GraphRoot","graphRef","setGraphWidth","values","b","max","graphHeight","rootStyles","graphElement","parentElement","sensor","ResizeSensor","detach","elementContainer","elementSelect","addElementLabel","headerText","elementField","elementFieldLabel","onElementSelected","onDemoElementSelected","onGenderSelected","onMinimumAgeChange","parseInt","onMaximumAgeChange","handleClose","genderString","ageRangeString","toggleButtonCss","graphHeader","graphHeaderText","toggleButton","darken","toggleIcon","transform","useTheme","showCriteriaBuilder","setShowCriteriaBuilder","toggleShowCriteria","faProjectDiagram","decodeURIComponent","pathwayIndex","UserContext","UserProvider","user","setUser","tabs","tab","component","faSpinner","spin","createPathwayButton","pathwayList","pathwaysListButton","editPathway","createNewPathwayMeta","pathwayNameRef","pathwayDescRef","closeModal","handleCreateNewPathway","preventDefault","Start","createNewPathway","handleUpdatePathway","newEditPathway","draftEditPathway","metaDescription","onSubmit","required","container","paper","mozBackgroundClip","webkitBackgroundVlip","backgroundClip","whiteSpace","buttons","LargeActionButton","largeActionButton","largeDecline","toUpperCase","SmallActionButton","accept","decline","smallActionButton","data-testid","faCheck","MediumActionButton","mediumActionButton","deleteId","deleteMethod","deleteType","deleteName","onAcceptHandler","onDeclineHandler","ClickAwayListener","onClickAway","Popover","editablePathway","setEditablePathway","openEditPathwayModal","closeEditPathwayModal","deletion","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","Link","RouterLink","underline","align","faFileDownload","openNewPathwayModal","closeNewPathwayModal","buttonRow","buildCriteriaButton","criteriaList","editButton","chooseFileInput","inputButton","fileName","datetime","moment","fromNow","setFileName","importFileRef","selectFile","files","handleChooseFile","faFileImport","openImportModal","closeImportModal","ReactDOM","render","getElementById","this","global","CONFIG","parts","split","conf"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,8C,4DCC3CD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,OAAS,6BAA6B,QAAU,8BAA8B,kBAAoB,wCAAwC,kBAAoB,wCAAwC,aAAe,mCAAmC,mBAAqB,2C,4FCEjVC,c,mGCqBaC,EAAyBC,wBACpC,IAOWC,EAA4DC,gBAAK,YAAmB,IAAhBC,EAAe,EAAfA,SAAe,EACpCC,mBAAiB,IADmB,mBACvFC,EADuF,KAChEC,EADgE,OAEhDF,mBAA8B,MAFkB,mBAEvFG,EAFuF,KAEtEC,EAFsE,OAGpCJ,oBAAkB,GAHkB,mBAGvFK,EAHuF,KAGhEC,EAHgE,OAItDN,mBAAiB,IAJqC,mBAIvFO,EAJuF,KAIzEC,EAJyE,KAMxFC,EAAuBC,uBAAY,WACvCR,EAAyB,IACzBE,EAAmB,MACnBE,GAAyB,GACzBE,EAAgB,MACf,CAACN,EAA0BE,EAAoBE,EAA0BE,IAE5E,OACE,kBAACb,EAAuBgB,SAAxB,CACEC,MAAO,CACLP,wBACAC,2BACAL,wBACAC,2BACAC,gBAAiBA,EACjBC,mBAAoBA,EACpBG,eACAC,kBACAC,yBAGDV,MAKMc,EAA4B,kBACvCC,qBAAWnB,I,8CC7BPoB,EAAY,CAChBC,QAAS,CACPC,cAAe,QAIbC,EAAS,CACbC,MAAO,OACPC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,YAAa,UACbC,KAAM,UACNC,WAAY,UACZC,SAAU,UACVC,UAAW,UACXC,YAAa,UACbC,SAAU,OACVC,aAAc,UACdC,MAAO,WAGHC,EAAa,CACjBC,WAAY,CACV,YACA,gBACA,qBACA,WACA,SACA,SACA,SACA,YACA,YACA,aACA,iBACA,cACAC,KAAK,MAGHC,EAA0B,CAC9BC,UAAW,CACTC,KAAM,CACJC,aAAc,EACdC,OAAQ,OACR,aAAc,CACZC,gBAAiBtB,EAAOO,WACxBgB,MAAOvB,EAAOC,QAGlBuB,UAAW,CACT,aAAc,CACZF,gBAAiBtB,EAAOO,WACxBgB,MAAOvB,EAAOC,QAGlBwB,MAAO,CACLC,WAAY,KAEdC,eAAgB,CACd,oBAAqB,CACnBC,SAAU,KAGdC,cAAe,CACb,oBAAqB,CACnBD,SAAU,MAIhBE,aAAc,CACZX,KAAM,CACJG,gBAAiBtB,EAAOU,cAG5BqB,aAAc,CACZZ,KAAM,CACJS,SAAU,OAEZI,KAAM,CACJC,QAAS,WACTC,aAAc,SAGlBC,eAAgB,CACdhB,KAAM,CACJiB,OAAQ,WAGZC,aAAc,CACZlB,KAAM,CACJmB,UAAW,SACX,cAAe,CACbf,MAAOvB,EAAOC,SAIpBsC,aAAc,CACZpB,KAAM,CACJO,WAAY,KAEdc,MAAO,CACL,eAAgB,CACdjB,MAAOvB,EAAOC,MACdqB,gBAAiBtB,EAAOW,UAE1B,qBAAsB,CACpB8B,gBAAiB,QACjBC,mBAAoB,6BAI1BC,WAAY,CACVC,QAAS,CACPhB,SAAU,GACVN,gBAAiBtB,EAAOE,OAE1B2C,MAAO,CACLtB,MAAOvB,EAAOE,QAGlB4C,iBAAkB,CAChB3B,KAAM,CACJC,aAAc,MAGlB2B,UAAW,CACTC,KAAM,CACJpB,SAAU,QAGdqB,SAAU,CACRC,QAAS,CACP9B,aAAc,MAGlB+B,eAAgB,CACdhC,KAAM,CACJc,QAAS,QAGbmB,iBAAkB,CAChBjC,KAAM,CACJc,QAAS,UAGboB,iBAAkB,CAChBlC,KAAM,CACJc,QAAS,YAGbqB,QAAS,CACPnC,KAAM,CACJoC,SAAU,YAGdC,cAAe,CACbrC,KAAM,CACJ,aAAc,CACZI,MAAOvB,EAAOS,cAMhBgD,EAA0B,CAC9BtB,eAAgB,CACdhB,KAAM,CACJ,UAAW,CACTuC,YAAa1D,EAAOC,SAI1BoC,aAAc,CACZlB,KAAM,CACJI,MAAOvB,EAAOC,MACd,YAAa,CACXsB,MAAOvB,EAAOC,SAIpBsC,aAAc,CACZpB,KAAM,CACJI,MAAOvB,EAAOC,MACd,UAAW,CACTyD,YAAa1D,EAAOC,MACpBqB,gBAAiBtB,EAAOW,YAI9BgC,WAAY,CACVC,QAAS,CACPhB,SAAU,KAGdkB,iBAAkB,CAChB3B,KAAM,CACJ,UAAW,CACTuC,YAAa1D,EAAOC,OAEtB,0BAA2B,CACzByD,YAAa1D,EAAOC,OAEtB,4BAA6B,CAC3ByD,YAAa1D,EAAOC,QAGxB0D,eAAgB,CACdD,YAAa1D,EAAOC,QAGxB8C,UAAW,CACTC,KAAM,CACJzB,MAAOvB,EAAOC,QAGlB2D,YAAa,CACXzC,KAAM,CACJI,MAAOvB,EAAOW,YAKdkD,EAAc,CAClBC,QAAS,CACPC,KAAM/D,EAAOI,MAEf4D,UAAW,CACTD,KAAM/D,EAAOG,KAEf8D,MAAO,CACLF,KAAM/D,EAAOG,KAEf+D,OAAQlE,EACRmE,WAAY,CACVC,QAASpE,EAAOU,aAElB2D,KAAM,CACJP,QAAS9D,EAAOM,KAChB0D,UAAWhE,EAAOM,MAEpBgE,KAAM,CACJC,IAAKvE,EAAOM,OAIVkE,EAAaC,YAAe,CAChC3D,WAAW,eAAMA,GACjB4D,QAAQ,eAAMb,GACdc,UAAU,eAAM1D,GAChBpB,UAAU,eAAMA,KAGZ+E,EAAYH,YAAe,CAC/B3D,WAAW,eAAMA,GACjB4D,QAASG,IAAUhB,EAAa,CAC9BQ,KAAM,CACJP,QAAS9D,EAAOC,MAChB+D,UAAWhE,EAAOC,SAGtB0E,UAAWE,IAAU5D,EAAyBwC,GAC9C5D,UAAU,eAAMA,KAGZiF,EAAiBL,YAAe,CACpC3D,WAAW,eAAMA,GACjB4D,QAASG,IAAUhB,EAAa,CAC9BM,WAAY,CACVC,QAASpE,EAAOQ,UAElB6D,KAAM,CACJP,QAAS9D,EAAOE,MAChB8D,UAAWhE,EAAOE,SAGtByE,UAAU,eAAM1D,GAChBpB,UAAU,eAAMA,KClSZkF,EAAW,SAAC,GAA8E,IAA5EC,EAA2E,EAA3EA,MAClB,GAD6F,EAApEC,aAEvB,OAAQD,GACN,IAAK,OAEH,OAAOJ,EAET,QACE,OAAOE,EAIb,OAAQE,GACN,IAAK,OACH,OAAOJ,EAET,QACE,OAAOJ,IAIAU,EAAexG,wBAAc,IA2B3ByG,EAjB+BvG,gBAAK,YAAoC,IAAD,IAAhCoG,aAAgC,MAAxB,QAAwB,EAAfnG,EAAe,EAAfA,SAAe,EAC5CC,oBAAS,GADmC,mBAC7EmG,EAD6E,KAC/DG,EAD+D,KAE9EC,EAAWN,EAAS,CAAEC,QAAOC,iBAE7BK,EAAc9F,uBAAY,WAC9B4F,GAAgB,SAAAG,GAAmB,OAAKA,OACvC,IAEH,OACE,kBAAC,IAAD,CAAkBP,MAAOK,GACvB,kBAACH,EAAazF,SAAd,CAAuBC,MAAO,CAAEuF,eAAcK,gBAC3CzG,O,qCCVMD,kBAzCI,WAAO,IAChBW,EAAyBI,IAAzBJ,qBADe,EAEST,mBAA6B,MAFtC,mBAEhB0G,EAFgB,KAENC,EAFM,KAGjBH,ED6BkB1F,qBAAWsF,GAA3BI,YC3BFI,EAAWlG,uBAAY,SAACmG,GAC5BF,EAAYE,EAAMC,iBACjB,IAEGC,EAAYrG,uBAAY,WAC5BiG,EAAY,QACX,IAEGK,EAAoBtG,uBAAY,WACpC8F,IACAO,MACC,CAACP,EAAaO,IAEjB,OACE,4BAAQE,UAAWC,IAAOC,QACxB,kBAAC,IAAD,CAAMC,GAAG,IAAIH,UAAWC,IAAOG,SAAUC,QAAS,kBAAY7G,MAC5D,yBAAK8G,IAAKC,IAAMC,IAAI,OAAOR,UAAWC,IAAOM,QAG/C,4BAAQF,QAASV,EAAUc,gBAAc,eAAeC,gBAAc,QACpE,kBAAC,IAAD,CAAiBzD,KAAM0D,OAGzB,kBAACC,EAAA,EAAD,CACEC,GAAG,eACHpB,SAAUA,EACVqB,aAAW,EACXC,KAAMC,QAAQvB,GACdwB,QAASnB,GAET,kBAACoB,EAAA,EAAD,CAAUb,QAASN,GAAnB,qB,oBC9COoB,eACb,SAAClC,GAAD,MAA4B,CAC1B7D,KAAM,CACJgG,QAAS,OACTC,WAAY,SACZnF,QAAS,MACTX,gBAAiB0D,EAAMN,QAAQP,WAAWC,QAC1C7C,MAAOyD,EAAMN,QAAQL,KAAKP,QAC1BzC,OAAQ,MACRgG,eAAgB,iBAElBC,WAAY,CACVjG,OAAQ,OACRkG,MAAO,QAETC,gBAAiB,CACf5F,SAAU,OACVL,MAAOyD,EAAMN,QAAQR,OAAO5D,KAC5BmH,OAAQ,WAEVC,YAAa,CACX9F,SAAU,QACV+F,WAAY,YAGhB,CAAEC,KAAM,aAAcC,MAAO,IChBhBC,MATf,SAAwBC,GAAsD,IAAD,EACjDjJ,mBAAYiJ,GADqC,mBACpEC,EADoE,KAC7DC,EAD6D,KAErEC,EAAWC,iBAAOH,GAIxB,OAHAI,qBAAU,WACRF,EAASG,QAAUL,IAClB,CAACA,IACG,CAACA,EAAOE,EAAUD,ICUdK,EAAwB5J,wBACnC,IAOW6J,EAA0D3J,gBAAK,YAAmB,IAAhBC,EAAe,EAAfA,SAAe,EACjDiJ,EAA4B,MADqB,mBACrFU,EADqF,KAC5EC,EAD4E,KAChEC,EADgE,KAGtFC,EAAanJ,uBACjB,SAACE,GACCgJ,EAAYhJ,KAEd,CAACgJ,IAGH,OACE,kBAACJ,EAAsB7I,SAAvB,CAAgCC,MAAO,CAAE8I,UAASC,aAAYE,eAC3D9J,MAKM+J,EAA2B,kBACtChJ,qBAAW0I,I,oCCpCN,SAASO,EAAaC,GAA6B,IAAD,EACRA,EAAvCC,EAD+C,EAC/CA,OAAQtH,EADuC,EACvCA,MAAOuH,EADgC,EAChCA,oBACvB,YAAkBC,IAAXF,GAAkC,UAAVtH,IAAsBuH,EAMhD,IAAME,EAA6C,CACxDC,kBAAmB,aACnBC,eAAgB,YAChBC,SAAU,WAGCC,EAAkB,CAC7B,CAAE7H,MAAO,aAAc/B,MAAO,qBAC9B,CAAE+B,MAAO,YAAa/B,MAAO,kBAC7B,CAAE+B,MAAO,UAAW/B,MAAO,YAC3B,CAAE+B,MAAO,cAAe/B,MAAO,gBAG1B,SAAS6J,GAAYf,EAAkBgB,GAC5C,IAAMC,EAAoB,GAS1B,OARAC,OAAOC,KAAKnB,EAAQoB,OAAOC,SAAQ,SAAAC,GAAkB,IAAD,gBACzBtB,EAAQoB,MAAME,GAAeC,aADJ,IAClD,2BAAmE,CACjE,GADiE,QAClDC,aAAeR,EAAc,CAC1CC,EAAQQ,KAAKH,GACb,QAJ8C,kCAQ7CL,EAGF,SAASS,GAAgB1B,EAAkBgB,GAEhD,IAAIW,EAAkB,EAOtB,OANAT,OAAOC,KAAKnB,EAAQoB,OAAOC,SAAQ,SAAAO,GACjC5B,EAAQoB,MAAMQ,GAASL,YAAYF,SAAQ,SAAAG,GACrCA,EAAWA,aAAeR,IAAcW,GAAmB,WAI5DA,GAAmB,GAGrB,SAASE,GAAc7B,EAAkBuB,GAC9C,IAAIO,GAA0B,EAI9B,OAHAP,EAAYF,SAAQ,SAAAG,GACdE,GAAgB1B,EAASwB,EAAWA,cAAaM,GAA0B,MAE1EA,EAGF,SAASC,GACdC,EACAJ,EACAK,GAEA,IAAMC,EAAG,mBAAeC,mBAAmBH,GAAlC,iBAAqDG,mBAAmBP,IAC7EM,IAAQD,EAAQG,SAASC,UAC3BJ,EAAQR,KAAKS,GAIjB,I,UC5DMI,GAAgBC,MAAGC,kBAAkBC,OACrCC,GAAuBH,MAAGI,yBAAyBF,OACnDG,GAA2BL,MAAGM,6BAA6BJ,OAC3DK,GAAqBP,MAAGQ,eAAeC,aACvCC,GAAaV,MAAGW,yBAAyBC,KACzCC,GAA0Bb,MAAGc,iCAAiCC,eAC9DC,GAAiBhB,MAAGiB,uBAAuBC,SAsCjD,SAASC,GAAatF,EAAYuF,EAAqBC,GAkBrD,MAjBwC,CACtCxF,GAAIA,EACJyF,MAAM,WAAD,OAAazF,GAClBuF,YAAaA,EACbG,KAAM,CACJ,CACEC,OAAQ,CACN,CACEC,OAAQ,2DACRF,KAAM,uBACNnF,QAAS,2BAKjBsF,oBAAoB,sBAAD,OAAwBL,IAKxC,SAASM,GACd9F,EACAyF,EACAF,EACAQ,EACAC,GAEA,IAAMC,EAAiC,CACrCjG,GAAIA,EACJkG,aAAc,iBACdC,KAAM,CACJC,QAAS,CAAC,sDAAD,OAAuDL,EAAvD,gBAEXM,UAAW,CACT,CACEvC,IAAK,yEACLwC,UAAW,eAGfxC,IAAI,YAAD,OAAc9D,GACjBuG,QAAS,MACTvF,KAAK,KAAD,OAAOhB,EAAGwG,UAAU,EAAG,IAC3Bf,MAAOA,EACPM,KAAM,CACJJ,OAAQ,CACN,CACEC,OAAQ,6DACRF,KAAe,aAATK,EAAsB,sBAAwB,WACpDxF,QAAkB,aAATwF,EAAsB,sBAAwB,cAI7DU,OAAQnC,GACRoC,cAAc,EACdC,UAAW,iBACXpB,YAAaA,EACbpD,OAAQ,IAOV,MAJa,aAAT4D,GAAuBC,IACzBC,EAAeW,QAAU,CAACZ,IAGrBC,EAGT,SAASY,GAAkBC,GACzB,MAAO,CACLC,QAAQ,sBAAD,OAAwBD,EAAS9G,IACxC8G,SAAUA,EACVE,QAAS,CACPC,OAAQpC,GACRf,IAAI,IAAD,OAAMgD,EAASZ,aAAf,YAA+BY,EAAS9G,MA4D1C,SAASkH,GAAMtF,GACpB,IAAMuF,EAAiB,CACrBnH,GAAI4B,EAAQ5B,GACZkG,aAAc,SACdH,KAAMrB,GACN0C,MAAO,IAEHR,EA9DR,SAAuBhF,GACrB,IAAMoE,EAAYqB,cAEZT,EAAmB,CACvB5G,GAAIgG,EACJE,aAAc,UACdC,KAAM,CACJC,QAAS,CAAC,yEAEZC,UAAW,CACT,CACEvC,IAAK,yEACLwC,UAAW,eAGfxC,IAAI,YAAD,OAAckC,GACjBO,QAAS,MACTvF,KAAK,MAAD,OAAQgF,EAAUQ,UAAU,EAAG,IACnCf,MAAM,eAAD,OAAiB7D,EAAQZ,MAC9ByF,OAAQvC,GACRwC,cAAc,EACdX,KAAM,CACJJ,OAAQ,CACN,CACEC,OAAQ,qDACRF,KAAM,gBACNnF,QAAS,mBAIfoG,UAAW,iBACXpB,YAAY,4BAAD,OAA8B3D,EAAQZ,MACjDsG,QAAS,IAoBX,OAjBI1F,EAAQ2F,KACVX,EAAQU,QAAQjE,KACd,CACErD,GAAI,eACJwH,YAAa,uBACbC,KAAMC,KAAKC,KAAKC,UAAUhG,EAAQ2F,IAAIM,eACtCpC,MAAO,kCAET,CACEzF,GAAI,eACJwH,YAAa,uBACbC,KAAMC,KAAKC,KAAKC,UAAUhG,EAAQ2F,IAAIO,gBACtCrC,MAAO,kCAKNmB,EAUSmB,CAAcnG,GACxBoG,EAAclC,GAClBuB,cACAzF,EAAQZ,KACRY,EAAQ2D,YACR,WACAqB,EAAQ5G,IA+CV,OA5CA8C,OAAOC,KAAKnB,EAAQoB,OAAOC,SAAQ,SAAAgF,GACjC,IAAM/F,EAAON,EAAQoB,MAAMiF,GAC3B,GD7MG,SAAsB/F,GAE3B,YAAkBG,IADCH,EAAXC,OC4MF+F,CAAahG,IAASA,EAAK+F,KAAO/F,EAAKC,OAAQ,CACjD,IAAMoD,EAAW,mCAA+BrD,EAAKrH,OAC/CsN,EAAoBrC,GACxBuB,cACAnF,EAAKrH,MACL0K,EACA,kBAEI6C,EAAoB9C,GAAapD,EAAK+F,IAAK/F,EAAKrH,MAAOsN,EAAkBnI,IAC/D2C,GAAYf,EAASM,EAAK+F,KAAKI,KAAI,SAAAJ,GAAG,OAAIrG,EAAQoB,MAAMiF,MAChEhF,SAAQ,SAAAqF,GACd,IAAMlF,EAAakF,EAAOnF,YAAYoF,MACpC,SAAAnF,GAAU,OAAIA,EAAWA,aAAelB,EAAK+F,OAE/C,GAAIhG,EAAaqG,KAAb,OAAwBlF,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAYoF,WAAW,CAAC,IAAD,EAC3CA,EAAY,CAChBC,KAAMzD,GACN0D,WAAY,CACVC,SAAUxD,GACVuD,WAAYtF,EAAWoF,UAAUI,MAGrCR,EAAkBI,UAAYJ,EAAkBI,WAAa,GAC7D,UAAAJ,EAAkBI,iBAAlB,SAA6BnF,KAAKmF,OAGtC,IAAMrG,EAASD,EAAKC,OACd0G,EAtNL,SAAkC1G,GACvC,IAAM2G,EAAazB,cACboB,EAC6B,cAAjCtG,EAAO2E,SAASZ,aAA+B,iBAAmB/D,EAAO2E,SAASZ,aA8BpF,MA5B+C,CAC7ClG,GAAI8I,EACJ5C,aAAc,qBACdC,KAAM,CACJC,QAAS,CAAC,2EAEZC,UAAW,CACT,CACEvC,IAAK,yEACLwC,UAAW,gBAGfxC,IAAI,YAAD,OAAcgF,GACjBvC,QAAS,MACTvF,KAAK,KAAD,OAAO8H,EAAWtC,UAAU,EAAG,IACnCf,MAAM,uBAAD,OAAyBqD,GAC9BrC,OAAQjC,GACRkC,cAAc,EACdqC,MAAM,IAAIC,MAAOC,cACjBtC,UAAW,iBACXpB,YAAapD,EAAOoD,YACpBkD,KAAMA,EACNS,uBACmC,sBAAjC/G,EAAO2E,SAASZ,aACZ/D,EAAO2E,SAASqC,0BAChBhH,EAAO2E,SAASpB,MAwLU0D,CAAyBjH,GACjDkH,EAA0B/D,GAC9BnD,EAAOnC,GACPmC,EAAOoD,YACPsD,EAAsB7I,IAExBmI,EAAkBhG,OAAOkB,KAAKgG,GAC9BlC,EAAOC,MAAM/D,KAAKwD,GAAkBgC,IACpCb,EAAY7F,OAAOkB,KAAK+E,GACxBjB,EAAOC,MAAM/D,KAAKwD,GAAkBsB,QAGxChB,EAAOC,MAAM/D,KAAKwD,GAAkBD,IACpCO,EAAOC,MAAM/D,KAAKwD,GAAkBmB,IAE7Bb,EC1NF,SAASmC,GAAgB1H,GAAsC,IAApB2H,EAAmB,wDAC7DC,EAAgBC,GAAc7H,EAAS2H,GAEvCG,EAAc,IAAIC,KAAK,CAACH,GAAgB,CAC5CzD,KAAM,qBAIFjC,EAAM8F,OAAOC,IAAIC,gBAAgBJ,GACjCK,EAAIC,SAASC,cAAc,KACjCF,EAAEG,KAAOpG,EACTiG,EAAEI,SAAF,UAAgBvI,EAAQZ,KAAxB,SACA+I,EAAEK,QACFR,OAAOC,IAAIQ,gBAAgBvG,GAGtB,SAAS2F,GAAc7H,EAAkB2H,GAC9C,IACMe,EAyJD,SAA4B1I,EAAkB2F,GACnD,OAAOgD,YAAQ3I,GAAS,SAAC4I,GAClBA,EAAajD,MAAKiD,EAAajD,IAAM,IAC1CiD,EAAajD,IAAIM,aAAeN,KA5JXkD,CAAmB7I,EAK5C,SAAiCA,GAC/B,IAAM2F,EAAkB,CACtBX,QAAS,CACP8D,WAAY,CACV1K,GAAI4B,EAAQ5B,GACZuG,QAAS,SAEXoE,iBAAkB,CAChB3K,GAAI,kBACJuG,QAAS,MAEXqE,OAAQ,CACNC,IAAK,CACH,CACEC,gBAAiB,SACjBC,IAAK,4BAEP,CACEC,QAAS,IACTC,QAAS,WACTH,gBAAiB,OACjBC,IAAK,sBACLxE,QAAS,WAIf2E,WAAY,CACVL,IAAK,CACH,CACEI,QAAS,aACTjK,KAAM,UACNmK,QAAS,UACTzC,WAAY,CACV3C,KAAM,gBACNqF,QAAS,CACPH,QAAS,aACTI,SAAU,+BACVtF,KAAM,gBAMhBuF,SAAU,CAAET,IAAK,IACjBU,UAAW,CAAEV,IAAK,IAClBW,MAAO,CAAEX,IAAK,IACdY,YAAa,CAAEZ,IAAK,MA6BxB,OAzBA/H,OAAOC,KAAKnB,EAAQoB,OAAOC,SAAQ,SAACO,GAClC,IAAMtB,EAAON,EAAQoB,MAAMQ,GAC3B,GAAI,QAAStB,GAAQA,EAAKqF,IAAK,CAC7BmE,GAASnE,EAAKrF,EAAKqF,KACnB,IAAMoE,EAAepB,YAAQqB,GAAgB1J,EAAKqF,MAAM,SAACsE,GACvDA,EAAkB7K,KAAOkB,EAAK+F,OAEhCV,EAAIX,QAAQsE,WAAWL,IAAIxH,KAAKsI,GAGlCzJ,EAAKiB,YAAYF,SAAQ,SAACG,GAA4B,IAAD,EACnD,aAAIA,EAAWoF,iBAAf,aAAI,EAAsBjB,IAAK,CAE7BmE,GAASnE,EAAKnE,EAAWoF,UAAUjB,KACnC,IAAMoE,EAAepB,YACnBqB,GAAgBxI,EAAWoF,UAAUjB,MACrC,SAACsE,GAAqC,IAAD,IACnCA,EAAkB7K,KAAlB,oBAAyBoC,EAAWoF,iBAApC,aAAyB,EAAsBjD,mBAA/C,QAA8D,aAGlEgC,EAAIX,QAAQsE,WAAWL,IAAIxH,KAAKsI,UAK/BpE,EAjFKuE,CAAwBlK,IAE9BmK,EAAkBxC,EAAMrC,GAAMoD,GAAkBA,EACtD,OAAO3C,KAAKC,UAAUmE,OAAiB1J,EAAW,GAiFpD,SAASqJ,GAASnE,EAAiByE,GAAkC,IAAD,UAElE,UAAAA,EAAcpF,QAAQgE,cAAtB,SAA8BC,IAAI5H,SAAQ,SAAAgJ,GAAU,IAAD,KAE7C,UAAC1E,EAAIX,QAAQgE,cAAb,aAAC,EAAoBC,IAAItC,MAAK,SAAAsC,GAAG,OAAIA,EAAIE,MAAQkB,EAAMlB,SACzD,UAAAxD,EAAIX,QAAQgE,cAAZ,SAAoBC,IAAIxH,KAAK4I,MAIjC,UAAAD,EAAcpF,QAAQ0E,gBAAtB,SAAgCT,IAAI5H,SAAQ,SAAAiJ,GAAY,IAAD,KACjD,UAAC3E,EAAIX,QAAQ0E,gBAAb,aAAC,EAAsBT,IAAItC,MAAK,SAAAsC,GAAG,OAAIA,EAAIsB,OAASD,EAAQC,UAC9D,UAAA5E,EAAIX,QAAQ0E,gBAAZ,SAAsBT,IAAIxH,KAAK6I,MAInC,UAAAF,EAAcpF,QAAQ2E,iBAAtB,SAAiCV,IAAI5H,SAAQ,SAAAmJ,GAAa,IAAD,KACnD,UAAC7E,EAAIX,QAAQ2E,iBAAb,aAAC,EAAuBV,IAAItC,MAAK,SAAAsC,GAAG,OAAIA,EAAI7K,KAAOoM,EAASpM,QAC9D,UAAAuH,EAAIX,QAAQ2E,iBAAZ,SAAuBV,IAAIxH,KAAK+I,MAGpC,UAAAJ,EAAcpF,QAAQ4E,aAAtB,SAA6BX,IAAI5H,SAAQ,SAAAyC,GAAS,IAAD,KAC3C,UAAC6B,EAAIX,QAAQ4E,aAAb,aAAC,EAAmBX,IAAItC,MAAK,SAAAsC,GAAG,OAAIA,EAAI7J,OAAS0E,EAAK1E,UACxD,UAAAuG,EAAIX,QAAQ4E,aAAZ,SAAmBX,IAAIxH,KAAKqC,MAGhC,UAAAsG,EAAcpF,QAAQ6E,mBAAtB,SAAmCZ,IAAI5H,SAAQ,SAAAoJ,GAAe,IAAD,KACvD,UAAC9E,EAAIX,QAAQ6E,mBAAb,aAAC,EAAyBZ,IAAItC,MAAK,SAAAsC,GAAG,OAAIA,EAAI7J,OAASqL,EAAWrL,UACpE,UAAAuG,EAAIX,QAAQ6E,mBAAZ,SAAyBZ,IAAIxH,KAAKgJ,MAMxC,SAAST,GAAgBrE,GACvB,IAAM+E,EAAwB,CAC5B,UACA,yBACA,eACA,iBACA,YACA,UAQF,OANqB/E,EAAIX,QAAQsE,WAAWL,IAAItC,MAC9C,SAAAsC,GAAG,OAAKyB,EAAsBhB,SAAST,EAAI7J,SAiExC,SAASuL,GAAY3K,EAAkB4B,EAAiBgJ,GAG7D,OAAQA,GACN,IAAK,oBAmBH,OAAOC,GAlBMC,GAAe9K,EAAS4B,GAkBJA,EAjBxB,CACPuC,KAAM,SACNR,YAAa,GACbvF,GAAI2M,IAAQC,WACZ9F,SAAU,CACRZ,aAAcsG,EACdrD,0BAA2B,CACzBxD,OAAQ,CACN,CACEC,OAAQ,GACRF,KAAM,GACNnF,QAAS,SAOrB,IAAK,iBAmBH,OAAOkM,GAlBMC,GAAe9K,EAAS4B,GAkBJA,EAjBxB,CACPuC,KAAM,SACNR,YAAa,GACbvF,GAAI2M,IAAQC,WACZ9F,SAAU,CACRZ,aAAcsG,EACd9G,KAAM,CACJC,OAAQ,CACN,CACEC,OAAQ,GACRF,KAAM,GACNnF,QAAS,SAOrB,IAAK,WAWH,OAAOkM,GAVMC,GAAe9K,EAAS4B,GAUJA,EATxB,CACPuC,KAAM,SACNR,YAAa,GACbvF,GAAI2M,IAAQC,WACZ9F,SAAU,CACRZ,aAAcsG,EACd/G,MAAO,MAIb,IAAK,cACH,OA0NC,SAAwB7D,EAAkB4B,GAC/C,OAAO+G,YAAQ3I,GAAS,SAAC4I,GACvB,IAAMtI,EAAOsI,EAAaxH,MAAMQ,QAGjBnB,IAAbH,EAAK0G,UACQvG,IAAbH,EAAKqF,UACWlF,IAAhBH,EAAKC,aACwBE,IAA7BH,EAAKE,6BAEEF,EAAK0G,WACL1G,EAAKqF,WACLrF,EAAKC,cACLD,EAAKE,wBAvOLyK,CAAejL,EAAS4B,GACjC,QAEE,OADAsJ,QAAQzP,MAAM,qBAAuBmP,GAC9B5K,GAIN,SAAS6K,GAAc7K,EAAkBqG,EAAa9F,GAC3D,OAAOoI,YAAQ3I,GAAS,SAAC4I,GACtBA,EAAaxH,MAAMiF,GAAoB9F,OAASA,KAwB9C,SAAS4K,GAAcnL,EAAkBoL,EAAsBC,GACpE,OAAO1C,YAAQ3I,GAAS,SAAC4I,GACvB,IAAMpH,EAAyB,CAC7BpD,GAAI2M,IAAQC,WACZxJ,WAAY6J,GAGdzC,EAAaxH,MAAMgK,GAAc7J,YAAYE,KAAKD,MAI/C,SAAS8J,GACdtL,EACAoL,EACAG,EACA5H,EACA6H,GAEA,OAAO7C,YAAQ3I,GAAS,SAAC4I,GAA2B,IAAD,IAC3C6C,EAAe,UAAG7C,EAAaxH,MAAMgK,UAAtB,iBAAG,EAAkC7J,mBAArC,aAAG,EAA+CoF,MACrE,SAACnF,GAAD,OAA4BA,EAAWpD,KAAOmN,KAG5CE,IACFA,EAAgB7E,UAAY,CAC1BjD,YAAaA,EACbqD,IAAKwE,EAASE,UACd/F,IAAK6F,EAAS7F,IACdgG,eAAgBH,EAASpN,QAa1B,SAASwN,GAAYtL,GAC1B,OAAKA,GAAQA,EAAKE,oBACT,OACIF,EAAoBC,QAAuB,UAAbD,EAAK+F,IAGvC,SAFA,SA6HJ,SAASyE,GAAe9K,EAAkB4B,GAC/C,OAAO+G,YAAQ3I,GAAS,SAAC4I,GACvB,IAAMtI,EAAOsI,EAAaxH,MAAMQ,QAEfnB,IAAbH,EAAK0G,UAAqCvG,IAAhBH,EAAKC,SACjCD,EAAK0G,IAAM,GACX1G,EAAKE,yBAAsBC,GAG7BH,EAAKiB,YAAYF,SAAQ,SAAAG,UAChBA,EAAWoF,gBCrfxB,IAmCexQ,mBAnCkC,SAAC,GAA6B,IAA3B4G,EAA0B,EAA1BA,SAAUK,EAAgB,EAAhBA,UACpD2C,EAAYI,IAAZJ,QAER,OACE,kBAAC7B,EAAA,EAAD,CACEC,GAAG,uBACHpB,SAAUA,EACV6O,mBAAoB,KACpBC,aAAc,CAAEC,SAAU,SAAUC,WAAY,QAChD3N,aAAW,EACXC,KAAMC,QAAQvB,GACdwB,QAASnB,GAET,kBAACoB,EAAA,EAAD,CACEb,QAAS,WACHoC,EAAS0H,GAAgB1H,GACxBiM,MAAM,2BACX5O,MAJJ,kBASA,kBAACoB,EAAA,EAAD,CACEb,QAAS,WACHoC,EAAS0H,GAAgB1H,GAAS,GACjCiM,MAAM,2BACX5O,MAJJ,qBCgBS6O,GArCQ,WAAO,IACpBnV,EAAyBI,IAAzBJ,qBADmB,EAEKT,mBAA6B,MAFlC,mBAEpB0G,EAFoB,KAEVC,EAFU,KAGnB+C,EAAYI,IAAZJ,QACFxC,EAAS2O,IACTlK,EAAUmK,cAEVlP,EAAWlG,uBAAY,SAACmG,GAC5BF,EAAYE,EAAMC,iBACjB,IAEGC,EAAYrG,uBAAY,WAC5BiG,EAAY,QACX,IAEGoP,EAAerV,uBAAY,WAC/BD,IACAkL,EAAQR,KAAK,OACZ,CAACQ,EAASlL,IAEb,OACE,yBAAKwG,UAAWC,EAAO7E,MACrB,6BACE,kBAAC2T,EAAA,EAAD,CAAY/O,UAAWC,EAAOsB,WAAYlB,QAASyO,EAAcE,aAAW,WAC1E,kBAAC,IAAD,CAAiB/R,KAAMgS,IAAejP,UAAWC,EAAOwB,mBAG1D,0BAAMzB,UAAWC,EAAO0B,aAAxB,OAAsCc,QAAtC,IAAsCA,OAAtC,EAAsCA,EAASZ,OAEjD,kBAACkN,EAAA,EAAD,CAAY1O,QAASV,EAAUc,gBAAc,uBAAuBC,gBAAc,QAChF,kBAAC,IAAD,CAAiBzD,KAAMiS,IAAalP,UAAWC,EAAOwB,mBAExD,kBAAC,GAAD,CAAYhC,SAAUA,EAAUK,UAAWA,M,oBCXlCqP,OAjBf,SAA0BxK,GAAiC,IAAD,EAC5B5L,mBAA4B,CACtDuO,OAAQ,YAF8C,mBACjD8H,EADiD,KACzCC,EADyC,KAcxD,OATAhN,qBAAU,YAjBZ,SAAmBsC,GACjB,OAAO2K,MAAM3K,EAAK,CAChB4K,QAAS,CACPC,OAAQ,uBAeVC,CAAU9K,GACP+K,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAW,OAAIA,EAAY3G,KAAI,SAAA4G,GAAC,OAZ5C,SAAuBnL,EAAaoL,GAClC,OAAOT,MAAM3K,EAAKoL,GAASL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAWPI,CAAcrL,EAAM,IAAMmL,SACnEJ,MAAK,SAAAO,GAAc,OAAIC,QAAQC,IAAIF,MACnCP,MAAK,SAAAU,GAAI,OAAIf,EAAU,CAAE/H,OAAQ,SAAU+I,QAASD,OACpDE,OAAM,SAAApS,GAAK,OAAImR,EAAU,CAAE/H,OAAQ,QAASpJ,eAC9C,CAACyG,IAEGyK,GCNImB,GAAkB5X,wBAC7B,IAOW6X,GAA8C3X,gBAAK,YAE5D,IADFC,EACC,EADDA,SACC,EAC4CiJ,EAAuB,IADnE,mBACM0O,EADN,KACgBC,EADhB,KAC6BC,EAD7B,KAEKC,EAAUzB,GAAuB0B,KAAOC,IAAI,wBAC5CC,EAAkBH,EAAqCP,QAEvDW,EAAavX,uBACjB,SAACgJ,GACCkO,GAAY,SAACM,GAAD,6BAAoCA,GAApC,CAAqDxO,SAEnE,CAACkO,IAGGO,EAAgBzX,uBACpB,SAACoH,GACC8P,GAAY,SAACM,GAAD,OACVA,EAAgBE,QAAO,SAAA1O,GAAO,OAAIA,EAAQ5B,KAAOA,UAGrD,CAAC8P,IAGGS,EAAgB3X,uBACpB,SAAC4X,GACC,IAAMvP,EAAQ4O,EAAYpO,QAAQgP,WAAU,SAAA7O,GAAO,OAAIA,EAAQ5B,KAAOwQ,EAAWxQ,MACjF8P,GAAY,SAACM,GAAD,6BACPA,EAAgBM,MAAM,EAAGzP,IADlB,CAEVuP,GAFU,aAGPJ,EAAgBM,MAAMzP,EAAQ,UAGrC,CAAC4O,EAAaC,IAOhB,OAJAtO,qBAAU,WACJ0O,GAAgBJ,EAAYI,KAC/B,CAACA,EAAgBJ,IAEZC,EAAQtJ,QACd,IAAK,QACH,OAAO,uDAET,QACE,OACE,kBAACiJ,GAAgB7W,SAAjB,CACEC,MAAO,CACL8W,WACAO,aACAE,gBACAE,gBACA9J,OAAQsJ,EAAQtJ,SAGjBxO,OAME0Y,GAAqB,kBAAgC3X,qBAAW0W,KCzF9DpP,gBACb,SAAClC,GAAD,MAA4B,CAC1B7D,KAAM,CACJgG,QAAS,OACTqQ,cAAe,SACfvV,QAAS+C,EAAMnF,UAAUC,QAAQC,cACjCwB,MAAOyD,EAAMN,QAAQL,KAAKP,QAC1BxC,gBAAiB0D,EAAMN,QAAQR,OAAO5D,KACtCiH,MAAO,MACPkQ,SAAU,QACVC,UAAW,UAEbC,YAAa,CACXvV,OAAQ4C,EAAMlF,QAAQ,EAAG,GACzB2X,SAAU,KAEZG,QAAS,CACPrQ,MAAO,QAETsQ,iBAAkB,CAChBpQ,OAAQ,WAEVqQ,YAAa,CACX1V,OAAQ,YACRV,WAAY,IACZE,SAAU,OAEZmW,cAAe,CACb5Q,QAAS,OACTE,eAAgB,iBAElB2Q,mBAAoB,CAClB7Q,QAAS,OACTC,WAAY,UAEd6Q,oBAAqB,CACnB5W,OAAQ,OACRkG,MAAO,OACPhG,MAAOyD,EAAMN,QAAQL,KAAKP,SAE5BoU,iBAAkB,CAChB/Q,QAAS,OACTM,OAAQ,UACRpG,OAAQ,QAEV8W,YAAa,CACXhR,QAAS,OACTC,WAAY,SACZxF,SAAU,QACVF,WAAY,IACZU,OAAQ,SAEVgW,gBAAiB,CACfC,aAAc,OAEhBC,SAAU,CACR1W,SAAU,QACV+F,WAAY,QAEd4Q,mBAAoB,CAClBpR,QAAS,OACT/E,OAAQ,UAEVoW,8BAA+B,CAC7BrR,QAAS,OACT/E,OAAQ,iBAEVqW,cAAe,CACbhB,SAAU,IACViB,YAAa,QAEfC,kBAAmB,CACjBrW,UAAW,UAEbsW,YAAa,CACXzR,QAAS,OACTqQ,cAAe,SACfpQ,WAAY,aACZ,QAAS,CACPG,MAAO,SAGXsR,iBAAkB,CAChBnV,YAAY,GAAD,OAAKsB,EAAMN,QAAQT,MAAMF,KAAzB,eACX,UAAW,CACTL,YAAY,GAAD,OAAKsB,EAAMN,QAAQT,MAAMF,KAAzB,iBAGf+U,cAAe,CACb3R,QAAS,cACTC,WAAY,SACZC,eAAgB,SAChB0R,MAAO,OACPxR,MAAO,OACPkQ,SAAU,OACVpW,OAAQ,OACRO,SAAU,MACVN,gBAAiB0D,EAAMN,QAAQZ,QAAQC,KACvCxC,MAAOyD,EAAMN,QAAQL,KAAKP,QAC1B,UAAW,CACT2D,OAAQ,YAGZuR,aAAc,CACZC,UAAW,WACXC,UAAW,MACXjX,QAAS,WACTL,SAAU,OAEZuX,uBAAwB,CACtBhS,QAAS,OACTE,eAAgB,iBAElB+R,kBAAmB,CACjBF,UAAW,QACXb,aAAc,OAEhBgB,WAAY,CACV1R,WAAY,MACZrG,gBAAiB0D,EAAMN,QAAQT,MAAMF,KACrCL,YAAasB,EAAMN,QAAQT,MAAMF,KACjC,UAAW,CACTzC,gBAAiB0D,EAAMN,QAAQT,MAAMF,OAGzCuV,oBAAqB,CACnBhY,gBAAiB0D,EAAMN,QAAQR,OAAOtD,aACtCqB,QAAS,WACTG,OAAQ,UAEVmX,cAAe,CACbhS,MAAO,OACPiS,cAAe,YACftX,aAAc,aAAe8C,EAAMN,QAAQR,OAAO7D,YAClDkB,MAAOyD,EAAMN,QAAQR,OAAO7D,YAC5BoZ,WAAY,QACZrX,OAAQ,cACRV,WAAY,IACZgY,YAAa,OACb,SAAU,CACRvV,WAAYa,EAAMN,QAAQR,OAAO5D,KACjC2B,QAAS,WAGb0X,kBAAmB,CACjBZ,MAAO,QACPxR,MAAO,QAETqS,cAAe,CACbrY,MAAOyD,EAAMN,QAAQR,OAAOhE,MAC5B0B,SAAU,OACVuF,QAAS,OACT+R,UAAW,SAEbW,kBAAmB,CACjBH,YAAa,OACbD,WAAY,QAEdK,UAAW,CACTvY,MAAOyD,EAAMN,QAAQR,OAAO/D,IAC5ByB,SAAU,QAEZmY,gBAAiB,CACf3X,OAAQ,OACR+E,QAAS,OACTqQ,cAAe,SACfwC,SAAU,SACVC,aAAc,UAEhBC,YAAa,CACX/S,QAAS,OACTqQ,cAAe,MACfpQ,WAAY,SACZxF,SAAU,SACVU,UAAW,UAEb6X,qBAAsB,CACpBxS,WAAY,OACZyS,OAAQ,OACRnB,UAAW,SACX1X,MAAOyD,EAAMN,QAAQR,OAAO7D,YAC5BuB,SAAU,MACVU,UAAW,SACXkX,cAAe,WAGnB,CAAE5R,KAAM,UAAWC,MAAO,IC1KfwS,GAAqB3b,wBAChC,IAOW4b,GAAoD1b,gBAAK,YAAmB,IAAhBC,EAAe,EAAfA,SAAe,EAC/BiJ,EAAgC,MADD,mBAC/EyS,EAD+E,KAClEC,EADkE,KAClDC,EADkD,KAGhFC,EAAiBlb,uBACrB,SAACE,GACC+a,EAAgB/a,KAElB,CAAC+a,IAGH,OACE,kBAACJ,GAAmB5a,SAApB,CAA6BC,MAAO,CAAE6a,cAAaC,iBAAgBE,mBAChE7b,MAKM8b,GAAwB,kBACnC/a,qBAAWya,K,iCCeEzb,mBA3CqB,SAAC,GAA4D,IAA1DgI,EAAyD,EAAzDA,GAAInF,EAAqD,EAArDA,MAAOqU,EAA8C,EAA9CA,QAASpW,EAAqC,EAArCA,MAAOkb,EAA8B,EAA9BA,SAC1DC,EAAoBrb,uBACxB,SAACmG,GACKiV,GAAUA,EAASjV,KAEzB,CAACiV,IAGH,OACE,kBAACE,GAAA,EAAD,CAAaC,QAAQ,WAAWC,WAAS,GACvC,kBAACC,GAAA,EAAD,CAAYrU,GAAIA,EAAIsU,QAAO,UAAKtU,EAAL,YACxBnF,GAGH,kBAAC0Z,GAAA,EAAD,CACEvU,GAAE,UAAKA,EAAL,WACFlH,MAAOA,GAAS,GAChBkb,SAAUC,EACVpZ,MAAOA,EACPwC,MAAgB,MAATvE,GAA2B,KAAVA,EACxB0b,UAAW,CACT/G,mBAAoB,KACpBC,aAAc,CACZC,SAAU,SACVC,WAAY,UAEd6G,gBAAiB,CACf9G,SAAU,MACVC,WAAY,WAGhB8G,cAAY,GAEXxF,EAAQ7G,KAAI,SAAAsM,GAAM,OACjB,kBAACtU,EAAA,EAAD,CAAU4H,IAAK0M,EAAO7b,MAAOA,MAAO6b,EAAO7b,OACxC6b,EAAO9Z,e,sBCjCP+Z,GAAkB9c,wBAC7B,IAOW+c,GAA8C7c,gBAAK,YAAmB,IAAhBC,EAAe,EAAfA,SAAe,EACxCC,oBAAkB,GADsB,mBACzE4c,EADyE,KAC3DC,EAD2D,OAExC7c,mBAAiB,wBAFuB,mBAEzE8c,EAFyE,KAE3DC,EAF2D,KAI1EC,EAAsBtc,uBAAY,WACtCmc,GAAgB,KACf,CAACA,IAEJ,OACE,kBAACH,GAAgB/b,SAAjB,CACEC,MAAO,CAAEkc,eAAcF,eAAcI,sBAAqBD,kBAAiBF,oBAE1E9c,MAKMkd,GAAqB,kBAAgCnc,qBAAW4b,KCV9D5c,mBA3BY,WAAO,IAAD,EAC6Bmd,KAApDH,EADuB,EACvBA,aAAcF,EADS,EACTA,aAAcI,EADL,EACKA,oBAEpC,OACE,kBAACE,GAAA,EAAD,CACE1H,aAAc,CACZC,SAAU,SACVC,WAAY,SAEd1N,KAAM4U,EACNO,iBAAkB,IAClBjV,QAAS8U,EACTI,QAASN,EACT7S,OACE,kBAAC,IAAMoT,SAAP,KACE,kBAACC,GAAA,EAAD,CAAQ7a,MAAM,YAAY8a,KAAK,QAAQjW,QAAS0V,GAAhD,QAGA,kBAAChH,EAAA,EAAD,CAAYuH,KAAK,QAAQtH,aAAW,QAAQxT,MAAM,UAAU6E,QAAS0V,GACnE,kBAAC,IAAD,CAAiB9Y,KAAMsZ,aCoDpB1d,mBAhEe,WAAO,IAAD,EACFgK,IAAxBJ,EAD0B,EAC1BA,QAASC,EADiB,EACjBA,WADiB,EAEMkS,KAAhCJ,EAF0B,EAE1BA,YAAaC,EAFa,EAEbA,eACbrD,EAAkBI,KAAlBJ,cAEFnR,EAAS2O,KALmB,EAMV7V,oBAAS,GANC,mBAM3BgI,EAN2B,KAMrByV,EANqB,KAQ5BzG,EACJyE,GAAe/R,EZ0EgB,SACjCA,EACAgU,GAC6C,IAAD,EACtCC,EAA4D,GAC5DC,EA5BiB,SAAnBC,EACJnU,EACAoU,EACAC,GAEA,IAAIC,EAAgC,GAChCC,EAAoC,GAClCC,EAAWxU,EAAQoB,MAAMiT,GAa/B,OAXAG,EAASjT,YAAYF,SAAQ,SAAAG,GAErB,IAAD,EADDA,EAAWA,aAAe4S,EAAaE,EAAU7S,KAAK+S,IAGxD,UADAD,EAAgBJ,EAAiBnU,EAASoU,EAAa5S,EAAWA,mBAClE,aAAI,EAAeiT,UACZH,EAAUI,MAAK,SAAApU,GAAI,OAAIA,EAAK+F,MAAQmO,EAASnO,QAAMiO,EAAU7S,KAAK+S,GACvEF,EAAYA,EAAUK,OAAOJ,OAK5BD,EAQeH,CAAiBnU,EAAD,UAAUgU,EAAS3N,WAAnB,QAA0B,GAAI,SAapE,OAZA6N,EAAczS,KAAKuS,GAEnB9S,OAAOC,KAAKnB,EAAQoB,OAAOC,SAAQ,SAAAO,GACjC,IAAMtB,EAAON,EAAQoB,MAAMQ,GACrBgT,EAAyBZ,EAASzS,YAAYmT,MAClD,SAAAlT,GAAU,OAAIA,EAAWA,aAAeI,KAEpCiT,EAAiBX,EAAcQ,MAAK,SAAApU,GAAI,OAAIA,EAAK+F,MAAQzE,KAC1DgT,GAA2BC,IAAkBvU,EAAK+F,KACrD4N,EAAiBxS,KAAK,CAAExI,MAAOqH,EAAKrH,MAAO/B,MAAOoJ,EAAK+F,SAGpD4N,EY5FoBa,CAAoB9U,EAAS+R,GAAe,GACjEgD,EAAmBzH,EAAQmH,OAAS,EAEpCO,EAAgBhe,uBACpB,SAACmG,GACC,IAAMyE,EAAO,OAAGzE,QAAH,IAAGA,OAAH,EAAGA,EAAO8X,OAAO/d,MAC1B+I,EAAWJ,SAAWmS,EAAenS,SACvC8O,EAAcxD,GAAclL,EAAWJ,QAASmS,EAAenS,QAAQwG,IAAKzE,IAC9EmS,GAAQ,KAEV,CAACpF,EAAeqD,EAAgB/R,IAG5BiV,EAAele,uBAAY,WAC/B+c,GAASzV,KACR,CAACA,IAEJ,OACE,8BACIA,GACA,kBAAC,GAAD,CACE6W,WAAW,eACXC,WAAYC,IACZC,WAAW,0DACX1X,QAASsX,EACTK,UAAWR,EACXS,YAAaT,EACbU,aAAa,+CAGhBnX,GAAQyW,GACP,yBAAKxX,UAAWC,EAAO+T,iBACrB,kBAAC,GAAD,CACEnT,GAAG,cACHnF,MAAM,qBACNqU,QAASA,EACT8E,SAAU4C,IAEZ,yBAAKzX,UAAWC,EAAOkU,aAAvB,2CAEE,kBAACkC,GAAA,EAAD,CACErW,UAAWC,EAAOmU,qBAClBkC,KAAK,QACLtB,QAAQ,OACR3U,QAASsX,GAJX,gBCkGG9e,mBA1IK,WAAO,IACjBuY,EAAkBI,KAAlBJ,cADgB,EAEQvO,IAAxBJ,EAFgB,EAEhBA,QAASC,EAFO,EAEPA,WAFO,EAGgBkS,KAAhCJ,EAHgB,EAGhBA,YAAaC,EAHG,EAGHA,eAHG,EAIY1b,oBAAkB,GAJ9B,mBAIjBof,EAJiB,KAILC,EAJK,KAKlBnY,EAAS2O,KACTlK,EAAUmK,cACVwJ,EAA0BjW,iBAAuB,MAEjD2Q,EAAgBtZ,uBAAY,WAChC2e,GAAeD,KACd,CAACA,IAEEG,EAAiB7e,uBACrB,SAAC4T,GACKoH,EAAenS,SAAWI,EAAWJ,SACvC8O,EAAchE,GAAY1K,EAAWJ,QAASmS,EAAenS,QAAQwG,IAAKuE,MAE9E,CAAC3K,EAAY0O,EAAeqD,IAGxB8D,EAAiB9e,uBACrB,SAACmG,GACC0Y,GAAoB,OAAL1Y,QAAK,IAALA,OAAA,EAAAA,EAAO8X,OAAO/d,QAAS,MAExC,CAAC2e,IAGGE,EAAiB/e,uBAAY,WACjC,GAAKgb,EAAenS,SAAYI,EAAWJ,QAA3C,CAEA,IXoKuBwG,EWpKjB2P,GXqKH3P,IAAKA,EAAM0E,IAAQC,YACE,CACxB3E,MACApN,MAAO,WACPsI,YAAa,GACbf,qBAAqB,IWzKjBoO,EX+KD,SAAiB5O,EAAkBM,GACxC,OAAOqI,YAAQ3I,GAAS,SAAC4I,GACvBA,EAAaxH,MAAMd,EAAK+F,KAAO/F,KWjLd2V,CAAQhW,EAAWJ,QAASmW,GAC7CpH,EAAazD,GAAcyD,EAAYoD,EAAenS,QAAQwG,IAAK2P,EAAQ3P,KAC3EsI,EAAcC,GACTvO,EAAa2R,EAAenS,UAC/BkC,GAAS9B,EAAWJ,QAAQzB,GAAI4X,EAAQ3P,IAAKpE,MAC9C,CAAChC,EAAY0O,EAAeqD,EAAgB/P,IAE/C,IAAKjC,EAAS,OAAO,kDACrB,IAAK+R,EAAa,OAAO,uDAEzB,GAAwB,UAApBA,EAAY1L,IACd,OACE,oCACGqP,GACC,yBAAKnY,UAAWC,EAAO7E,KAAMud,IAAKN,GAChC,kBAAC,GAAD,CAAetV,KAAMyR,EAAaoE,cAAc,IAChD,wBAAI5Y,UAAWC,EAAOuT,eACpB,qCAAM,KAER,kBAAC,GAAD,CACEoE,WAAW,WACXC,WAAYgB,IACZd,WAAW,qDACX1X,QAASmY,KAKf,yBAAKxY,UAAWC,EAAO8S,cAAe1S,QAAS0S,GAC7C,kBAAC,IAAD,CAAiB9V,KAAMkb,EAAalJ,IAAgB6J,OAEtD,kBAAC,GAAD,OAIJ,IAAMzL,EAAWgB,GAAYmG,GACvBuE,EAAyC,UAApBvE,EAAY1L,KAAsD,IAAnC0L,EAAYxQ,YAAYkT,OAElF,OACE,oCACGiB,GACC,yBAAKnY,UAAWC,EAAO7E,KAAMud,IAAKN,GAChC,kBAAC,GAAD,CAAetV,KAAMyR,EAAaoE,cAAc,IAEhD,wBAAI5Y,UAAWC,EAAOuT,eACpB,0CAGY,SAAbnG,GACC,kBAAC,GAAD,CACExM,GAAG,WACHnF,MAAM,YACNqU,QAASxM,EACTsR,SAAU0D,EACV5e,MAAM,KAII,WAAb0T,GAAyB,kBAAC,GAAD,CAAkBiL,eAAgBA,IAE9C,WAAbjL,GACC,kBAAC,GAAD,CACExM,GAAG,WACHnF,MAAM,YACNqU,QAASxM,EACTsR,SAAU0D,EACV5e,MAAM,gBAIV,wBAAIqG,UAAWC,EAAOuT,eACpB,8CA9BJ,OAiCGgB,QAjCH,IAiCGA,OAjCH,EAiCGA,EAAaxQ,YAAYkF,KAAI,SAAAjF,GAC5B,OACE,kBAAC,GAAD,CAAkB6E,IAAK7E,EAAWpD,GAAIoD,WAAYA,GAClC,WAAboJ,GACC,kBAAC,GAAD,CAAkBvE,IAAK7E,EAAWpD,GAAIoD,WAAYA,QAMzD8U,GACC,oCACE,kBAAC,GAAD,CACEnB,WAAW,eACXC,WAAYgB,IACZd,WAAW,qDACX1X,QAASmY,IAEX,kBAAC,GAAD,QAKR,yBAAKxY,UAAWC,EAAO8S,cAAe1S,QAAS0S,GAC7C,kBAAC,IAAD,CAAiB9V,KAAMkb,EAAalJ,IAAgB6J,OAEtD,kBAAC,GAAD,U,+BC6DOjgB,mBA5L+B,SAAC,GAAoC,IAAlCkK,EAAiC,EAAjCA,KAAiC,IAA3B6V,oBAA2B,SACxExH,EAAkBI,KAAlBJ,cADwE,EAE9CrY,oBAAkB,GAF4B,mBAEzEigB,EAFyE,KAE9DC,EAF8D,OAG1ClgB,oBAAkB,GAHwB,mBAGzEmgB,EAHyE,KAG5DC,EAH4D,OAI5CpgB,oBAAkB,GAJ0B,mBAIzEqgB,EAJyE,KAI7DC,EAJ6D,KAKxE5E,EAAmBG,KAAnBH,eALwE,EAMnCuB,KAArCF,EANwE,EAMxEA,gBAAiBF,EANuD,EAMvDA,gBANuD,EAOhD/S,IAAxBJ,EAPwE,EAOxEA,QAASC,EAP+D,EAO/DA,WACX4W,EAAWlX,iBAAyB,MACpCmX,GAAgB,OAAJxW,QAAI,IAAJA,OAAA,EAAAA,EAAMrH,QAAS,GAC3BuE,EAAS2O,KACTlK,EAAUmK,cAEV2K,EAAiB/f,uBAAY,WACjC,GAAKiJ,EAAWJ,QAAhB,CACA,IAAMoB,EAAUF,GAAYd,EAAWJ,QAASS,EAAK+F,KACrDtE,GAAS9B,EAAWJ,QAAQzB,GAAI6C,EAAQ,GAAIgB,MAC3C,CAACA,EAAShC,EAAYK,EAAK+F,MAExB2Q,EAAiBhgB,uBAAY,WAC5BiJ,EAAWJ,SAChBkC,GAAS9B,EAAWJ,QAAQzB,GAAIkC,EAAK+F,IAAKpE,KACzC,CAACA,EAAShC,EAAYK,EAAK+F,MAExB4Q,EAAkBjgB,uBAAY,WAAO,IAAD,IAClCiC,EAAK,oBAAG4d,EAAShX,eAAZ,aAAG,EAAkB3I,aAArB,QAA8B,GACrC+I,EAAWJ,SAAS8O,EZsLrB,SAAsB3O,EAAkBqG,EAAapN,GAC1D,OAAO0P,YAAQ3I,GAAS,SAAC4I,GACvBA,EAAaxH,MAAMiF,GAAKpN,MAAQA,KYxLMie,CAAajX,EAAWJ,QAASS,EAAK+F,IAAKpN,IACjFud,GAAa,KACZ,CAACvW,EAAY0O,EAAerO,EAAK+F,MAE9B8Q,EAAkBngB,uBAAY,WAClCwf,GAAa,KACZ,IAEGY,EAAapgB,uBAAY,WAC7B,GAAIiJ,EAAWJ,SAAWgC,GAAc5B,EAAWJ,QAASS,EAAKiB,aAAc,CAC7E,IAAMN,EAAUF,GAAYd,EAAWJ,QAASS,EAAK+F,KACrDsI,EZmiBC,SAAoB3O,EAAkBqG,GAC3C,OAAOsC,YAAQ3I,GAAS,SAAC4I,UAChBA,EAAaxH,MAAMiF,GAE1BnF,OAAOC,KAAKyH,EAAaxH,OAAOC,SAAQ,SAACO,GAC1BgH,EAAaxH,MAAMQ,GAC3BL,YAAYF,SAAQ,SAACG,GACpBA,EAAWA,aAAe6E,IAC5BuC,EAAaxH,MAAMQ,GAASL,YAAcqH,EAAaxH,MAAMQ,GAASL,YAAYmN,QAChF,SAAC2I,GAAD,OAAkC7V,EAAWpD,KAAOiZ,EAAiBjZ,gBY5iB7DkZ,CAAWrX,EAAWJ,QAASS,EAAK+F,MAClDtE,GAAS9B,EAAWJ,QAAQzB,GAAI6C,EAAQ,GAAIgB,GAC5C2U,GAAc,GACdvD,EAAgB,GAAD,OAAI/S,EAAKrH,MAAT,+BACfka,GAAgB,MAEjB,CACDlT,EACA0O,EACA0E,EACAF,EACA7S,EAAK+F,IACL/F,EAAKrH,MACLqH,EAAKiB,YACLU,IAGIsV,EAAmBvgB,uBAAY,WAEjCgb,EAAenS,SACfI,EAAWJ,UACV6B,GAAgBzB,EAAWJ,QAASS,EAAK+F,OAE1CsI,EZyiBC,SACL3O,EACAsB,EACAN,GAEA,OAAO2H,YAAQ3I,GAAS,SAAC4I,GACvB,IAAMrH,EAAcqH,EAAaxH,MAAME,GAAeC,YAAYmN,QAChE,SAAClN,GAAD,OAA4BA,EAAWA,aAAeR,KAExD4H,EAAaxH,MAAME,GAAeC,YAAcA,KYljBhCiW,CAAiBvX,EAAWJ,QAASmS,EAAenS,QAAQwG,IAAK/F,EAAK+F,MACpFuQ,GAAc,GACdvD,EAAgB,mBAAD,OACMrB,EAAenS,QAAQ5G,MAD7B,eACyCqH,EAAKrH,MAD9C,0BAGfka,GAAgB,MAEjB,CAAClT,EAAY+R,EAAgBrD,EAAe0E,EAAiBF,EAAiB7S,IAE3EmX,EAAkBzgB,uBAAY,WAClC4f,GAAc,KACb,IAEGc,EAAmB1gB,uBAAY,WACnC4f,GAAc,KACb,IAEGe,EAAoB3gB,uBAAY,WACpC0f,GAAe,KACd,IAEGkB,EAAqB5gB,uBAAY,WACrC0f,GAAe,KACd,IAEGmB,EAAiB7gB,uBACrB,SAACmG,GACmB,UAAdA,EAAMkJ,KAAiB4Q,MAE7B,CAACA,IAGGa,GAAqB9X,IAAW6B,GAAc7B,EAASM,EAAKiB,aAC5DwW,GAA2B/X,GAAU0B,GAAgB1B,EAASM,EAAK+F,KACnE2R,EAAiB7B,EAAe4B,EAA2BD,EAC3DG,EAAY9B,EACd,yJACA,kLAEJ,OACE,yBAAK5Y,UAAWC,EAAO+R,eACrB,yBAAKhS,UAAWC,EAAOgS,oBACP,UAAblP,EAAK+F,MAAoB8P,GACxB,kBAAC7J,EAAA,EAAD,CACE/O,UAAWC,EAAOiS,oBAClB7R,QAASmZ,EACTxK,aAAW,qBAEX,kBAAC,IAAD,CAAiB/R,KAAMgS,OAI3B,yBAAKjP,UAAWC,EAAOkS,iBAAkB9R,QAASuZ,GAC/CZ,GAA0B,UAAbjW,EAAK+F,IACjB,kBAACiM,GAAA,EAAD,CAAa/U,UAAWC,EAAO2R,YAAaqD,WAAS,GACnD,kBAAC0F,GAAA,EAAD,CACE3a,UAAWC,EAAOmS,YAClBxL,KAAK,OACL0S,SAAUA,EACVsB,OAAQlB,EACRmB,WAAYP,EACZQ,aAAcvB,EACdwB,WAAS,EACTC,QAAS,SAACpb,GAAD,OAA+CA,EAAM8X,OAAOuD,aAIzE,yBACEjb,UAAWkb,aACTjb,EAAOmS,YACPnS,EAAOoS,gBACM,UAAbtP,EAAK+F,KAAmB7I,EAAO6R,mBAGhCyH,EACa,UAAbxW,EAAK+F,KACJ,kBAAC,IAAD,CAAiB9I,UAAWC,EAAOsS,SAAUtV,KAAMke,SAO7D,yBAAKnb,UAAWC,EAAOgS,oBACP,UAAblP,EAAK+F,KACJ,kBAACsS,GAAA,EAAD,CACEC,UAAU,MACVta,OAAM0Z,GAAiBvB,EACvBjY,QAASoZ,EACTiB,OAAQlB,EACR9T,MAAOoU,EACP5d,OAAK,GAEL,8BACE,kBAACiS,EAAA,EAAD,CACE/O,UAAWC,EAAOiS,oBAClB7R,QAAS6Z,EACTlL,aAAY4J,EAAe,oBAAsB,cACjDZ,SAAUyC,GAEV,kBAAC,IAAD,CAAiBxd,KAAMse,SAM9B3C,GACC,kBAAC7J,EAAA,EAAD,CACE/O,UAAWC,EAAOiS,oBAClB7R,QAASoZ,EACTzK,aAAY,yBAEZ,kBAAC,IAAD,CAAiB/R,KAAM6b,QAK7B,kBAAC,GAAD,CACES,UAAWxW,EAAKrH,MAChBkd,aAAcA,EACd7X,KAAMqY,EACNoC,SAAU5C,EAAeoB,EAAmBH,EAC5C5Y,QAASkZ,QCvJFthB,mBAxC+B,SAAC,GASxC,IARL+e,EAQI,EARJA,WACAC,EAOI,EAPJA,WACAE,EAMI,EANJA,WAMI,IALJ0D,mBAKI,SAJJpb,EAII,EAJJA,QAII,IAHJ4X,kBAGI,aAFJC,oBAEI,MAFW,GAEX,MADJF,gBACI,SACE/X,EAAS2O,KAET8M,EAAyB,SAAC,GAAD,IAAG5iB,EAAH,EAAGA,SAAH,OAC7Bmf,EACE,kBAACmD,GAAA,EAAD,CAAS9U,MAAO4R,EAAcmD,UAAU,OACtC,8BAAOviB,IAGT,oCAAGA,IAGP,OACE,yBAAKkH,UAAWyb,EAAcxb,EAAOwS,8BAAgCxS,EAAOuS,oBAC1E,kBAACkJ,EAAD,KACE,kBAACrF,GAAA,EAAD,CACErW,UAAWC,EAAOyS,cAClBsC,QAAQ,YACRxZ,MAAM,UACNmgB,UAAW,kBAAC,IAAD,CAAiB1e,KAAM4a,IAClCxX,QAASA,EACT2X,SAAUA,GAETJ,IAGL,yBAAK5X,UAAWC,EAAO2S,mBAAoBmF,O,WC3C3CpT,GAAMkM,KAAOC,IAAI,yBCevB,IAAM8K,GAAoB,CACxB,CAAElgB,MAAO,WAAY/B,MAAO,oCAC5B,CAAE+B,MAAO,YAAa/B,MAAO,qCAC7B,CAAE+B,MAAO,QAAS/B,MAAO,oBACzB,CAAE+B,MAAO,MAAO/B,MAAO,8BACvB,CAAE+B,MAAO,SAAU/B,MAAO,+CAC1B,CAAE+B,MAAO,SAAU/B,MAAO,2BAqObd,mBA9NqC,SAAC,GAAwB,IAAtByf,EAAqB,EAArBA,eAC7ClH,EAAkBI,KAAlBJ,cACA1O,EAAeG,IAAfH,WAFkE,EAGlCkS,KAAhCJ,EAHkE,EAGlEA,YAAaC,EAHqD,EAGrDA,eACfxU,EAAS2O,KAET2J,EAAiB9e,uBACrB,SAACmG,GACC0Y,GAAoB,OAAL1Y,QAAK,IAALA,OAAA,EAAAA,EAAO8X,OAAO/d,QAAS,MAExC,CAAC2e,IAGGuD,EAAepiB,uBACnB,SAACuJ,EAAgB8Y,GACVpZ,EAAWJ,SDUf,SAAyBmH,GAG9B,OAAO6F,MAAM3K,GAAK,CAChBmD,OAAQ,OACRyH,QAAS,CACP,eAAgB,kBAChBC,OAAQ,wBAEVuM,KAAMtS,IACLiG,MAAK,SAAAtH,GAAG,OAAIA,EAAIwH,UCjBfoM,Cf8dC,SAAmBhZ,EAAgBqB,GACxC,IAAMsD,EAAW3E,EAAO2E,SAElBsU,EAAK,aAASzO,IAAQC,WAAWyO,QAAQ,KAAM,MACjDzS,EAAG,kBAAcwS,EAAd,8CAEDE,EAAsB,SAAC1V,GAAD,4BAA2CA,EAA3C,gBAAwDA,EAAxD,QAEtB2V,EAAkB,SAACrV,GAAD,6CACUA,EADV,+CAGlBsV,EAAoB,SAACtV,GAAD,iBAAsCA,EAAtC,cAAwDkV,EAAxD,YAEpBK,EAAkB,mCAAyBjY,EAAzB,OAExB,GAA8B,sBAA1BsD,EAASZ,aAAsC,CACjD,IAAMP,EAASmB,EAASqC,0BAA0BxD,OAAO,GAEzDiD,GAAO0S,EAAoB3V,EAAOC,QAGlCgD,GAAG,gBAAawS,EAAb,qBAA8BM,OAAO/V,EAAOD,MAA5C,oBAA4DC,EAAOC,OAAnE,uBACDD,EAAOpF,QADN,OAGHqI,GAAG,UAAO6S,IAAP,mBACCD,EAAkB,qBADnB,cAC6CD,EAAgB,2BAC3D,GAA8B,mBAA1BzU,EAASZ,aAAmC,CACrD,IAAMP,EAASmB,EAASpB,KAAKC,OAAO,GAEpCiD,GAAO0S,EAAoB3V,EAAOC,QAGlCgD,GAAG,gBAAawS,EAAb,qBAA8BM,OAAO/V,EAAOD,MAA5C,oBAA4DC,EAAOC,OAAnE,uBACDD,EAAOpF,QADN,OAGHqI,GAAG,UAAO6S,IAAP,6BACWD,EAAkB,aAD7B,yBAEMA,EAAkB,aAFxB,cAE0CD,EAAgB,aAF1D,yBAGMC,EAAkB,kBAHxB,cAG+CD,EAAgB,uBAC/B,aAA1BzU,EAASZ,aAClB0C,GAAG,UAAO6S,IAAP,uDACqCC,OAAO5U,EAASrB,OADrD,aACgE8V,EACjE,aAGFzO,QAAQzP,MACN,+DAAiEyJ,EAASZ,cAI9E,OAAO0C,EejhBS+S,CAAUxZ,EAAQ8Y,IACTpM,MAAK,SAAAtH,GAGxBgJ,EfkTD,SAA0B3O,EAAkB4B,EAAiB+D,GAClE,OAAOgD,YAAQ3I,GAAS,SAAC4I,GACtBA,EAAaxH,MAAMQ,GAAwB+D,IAAMA,EACjDiD,EAAaxH,MAAMQ,GAAwBoF,IAAMgD,GAAgBrE,GAAKvG,QerTrD4a,CAAiB/Z,EAAWJ,QAAUwZ,EAAgB1T,SAGxE,CAAC1F,EAAY0O,IAGTsL,EAAajjB,uBACjB,SAACmG,GACC,IAAM4U,EAAcC,EAAenS,QACnC,GAAKkS,EAAYxR,QAAWN,EAAWJ,QAAvC,CAEA,IAAMiE,GAAY,OAAL3G,QAAK,IAALA,OAAA,EAAAA,EAAO8X,OAAO/d,QAAS,GAC9BqJ,EfkYL,SAAuBA,EAAgBuD,GAC5C,OAAO6E,YAAQpI,GAAQ,SAAC2Z,GAClBA,EAAYhV,SAASqC,0BACvB2S,EAAYhV,SAASqC,0BAA0BxD,OAAO,GAAGD,KAAOA,EAEhEoW,EAAYhV,SAASpB,KAAKC,OAAO,GAAGD,KAAOA,KevY5BqW,CAAcpI,EAAYxR,OAAQuD,GACjD6K,EAAc9D,GAAc5K,EAAWJ,QAASkS,EAAY1L,IAAK+T,EAAa7Z,QAEhF,CAACyR,EAAgB/R,EAAY0O,IAGzB0L,EAAoBrjB,uBACxB,SAACmG,GACC,IAAM4U,EAAcC,EAAenS,QACnC,GAAKkS,EAAYxR,QAAWN,EAAWJ,QAAvC,CAEA,IAAM8D,GAAmB,OAALxG,QAAK,IAALA,OAAA,EAAAA,EAAO8X,OAAO/d,QAAS,GACrCqJ,Ef0YL,SAA8BA,EAAgBoD,GACnD,OAAOgF,YAAQpI,GAAQ,SAAC+Z,GACtBA,EAAY3W,YAAcA,Ke5YT4W,CAAqBxI,EAAYxR,OAAQoD,GACxDgL,EAAc9D,GAAc5K,EAAWJ,QAASkS,EAAY1L,IAAK9F,OAEnE,CAACyR,EAAgB/R,EAAY0O,IAGzB6L,EAAcxjB,uBAClB,SAACmG,GACC,IAAM4U,EAAcC,EAAenS,QACnC,GAAKkS,EAAYxR,QAAWN,EAAWJ,QAAvC,CAEA,IAAMgE,GAAa,OAAL1G,QAAK,IAALA,OAAA,EAAAA,EAAO8X,OAAO/d,QAAS,GAC/BqJ,EfoYL,SAAwBA,EAAgBsD,GAC7C,OAAO8E,YAAQpI,GAAQ,SAAC+Z,GACtBA,EAAYpV,SAASrB,MAAQA,KetYZ4W,CAAe1I,EAAYxR,OAAQsD,GAClD8K,EAAc9D,GAAc5K,EAAWJ,QAASkS,EAAY1L,IAAK+T,EAAa7Z,KAE9E6Y,EAAa7Y,EAAQwR,EAAY1L,QAEnC,CAAC2L,EAAgB/R,EAAY0O,EAAeyK,IAGxCsB,EAAmB1jB,uBACvB,SAACmG,GACC,IAAM4U,EAAcC,EAAenS,QACnC,GAAKkS,EAAYxR,QAAWN,EAAWJ,QAAvC,CAEA,IAAM8a,GAAkB,OAALxd,QAAK,IAALA,OAAA,EAAAA,EAAO8X,OAAO/d,QAAS,GACpCqJ,EfsWL,SAA6BA,EAAgBoa,GAClD,OAAOhS,YAAQpI,GAAQ,SAAC2Z,GAClBA,EAAYhV,SAASqC,0BACvB2S,EAAYhV,SAASqC,0BAA0BxD,OAAO,GAAGC,OAAS2W,EAElET,EAAYhV,SAASpB,KAAKC,OAAO,GAAGC,OAAS2W,Ke3W9BC,CAAoB7I,EAAYxR,OAAQoa,GACvDhM,EAAc9D,GAAc5K,EAAWJ,QAASkS,EAAY1L,IAAK+T,EAAa7Z,QAEhF,CAACyR,EAAgB/R,EAAY0O,IAGzBkM,EAAmB7jB,uBAAY,WACnC,IAAM+a,EAAcC,EAAenS,QACnC,GAAKkS,EAAYxR,QAAWN,EAAWJ,QAAvC,CAKA,IAAMU,Ef+WH,SAAkCA,EAAgB5B,GACvD,OAAOgK,YAAQpI,GAAQ,SAAC2Z,GAClBA,EAAYhV,SAASqC,0BACvB2S,EAAYhV,SAASqC,0BAA0BxD,OAAO,GAAGpF,QAAUA,EAC1Dub,EAAYhV,SAASrB,MAC9BqW,EAAYhV,SAASvB,YAAchF,EAEnCub,EAAYhV,SAASpB,KAAKC,OAAO,GAAGpF,QAAUA,KetXjCmc,CAAyB/I,EAAYxR,OAAQ,gBAC5DoO,EAAc9D,GAAc5K,EAAWJ,QAASkS,EAAY1L,IAAK9F,IAGjE6Y,EAAa7Y,EAAQwR,EAAY1L,UAR/B6E,QAAQzP,MAAM,mCASf,CAACuW,EAAgB/R,EAAY0O,EAAeyK,IAEzCgB,EAAe,SAAC7Z,GACpB,OAAOoI,YAAQpI,GAAQ,SAAC2Z,GAClBA,EAAYhV,SAASqC,0BACvB2S,EAAYhV,SAASqC,0BAA0BxD,OAAO,GAAGpF,QAAU,GACpB,aAAtCub,EAAYhV,SAASZ,aAC9B4V,EAAYhV,SAASvB,YAAc,GAEnCuW,EAAYhV,SAASpB,KAAKC,OAAO,GAAGpF,QAAU,OAK9Coc,EAAU,SAACC,GACD,UAAVA,EAAE3U,KACJwU,KAKEta,EAAUwR,EAA2BxR,OAC3C,IAAKA,EAAQ,OAAO,qCAEpB,IAAM0a,EAA6C,WAAV,OAAXlJ,QAAW,IAAXA,OAAA,EAAAA,EAAa1L,KACrCnB,EAAW3E,EAAO2E,SACpBlB,EAAS,GACTF,EAAO,GACPnF,EAAU,GAed,MAd8B,sBAA1BuG,EAASZ,cAAkE,mBAA1BY,EAASZ,cAC5DN,EAASkB,EAASpB,KACdoB,EAASpB,KAAKC,OAAO,GAAGC,OACxBkB,EAASqC,0BAA0BxD,OAAO,GAAGC,OACjDF,EAAOoB,EAASpB,KACZoB,EAASpB,KAAKC,OAAO,GAAGD,KACxBoB,EAASqC,0BAA0BxD,OAAO,GAAGD,KACjDnF,EAAUuG,EAASpB,KACfoB,EAASpB,KAAKC,OAAO,GAAGpF,QACxBuG,EAASqC,0BAA0BxD,OAAO,GAAGpF,SAEjDA,EAAUuG,EAASvB,YAInB,oCACGsX,GACC,oCACE,kBAAC,GAAD,CACE7c,GAAG,WACHnF,MAAM,YACNqU,QAASxM,EACTsR,SAAU0D,EACV5e,MAAOgO,EAASZ,gBAGU,sBAA1BY,EAASZ,cACiB,mBAA1BY,EAASZ,eACT,oCACE,kBAAC,GAAD,CACElG,GAAG,aACHnF,MAAM,cACNqU,QAAS6L,GACT/G,SAAUsI,EACVxjB,MAAO8M,IAERA,GACC,kBAACkX,GAAA,EAAD,CACE9c,GAAG,aACHnF,MAAM,OACN/B,MAAO4M,EACPsO,SAAU6H,EACV1H,QAAQ,WACR9W,MAAgB,KAATqI,EACPqX,WAAY,CAAE/C,WAAY2C,KAG7BjX,GACC,oCACGnF,EACC,yBAAKpB,UAAWC,EAAO8R,aACrB,kBAAC,IAAD,CAAiB9U,KAAM4gB,MADzB,IAC4Czc,GAG5C,kBAAC,GAAD,CACEwW,WAAW,WACXC,WAAYgG,IACZ9F,WAAY3W,GAAW,gDACvBf,QAASid,IAIb,kBAACK,GAAA,EAAD,CACE9c,GAAG,oBACHnF,MAAM,cACN/B,MAAOqJ,EAAOoD,aAAe,GAC7ByO,SAAUiI,EACV9H,QAAQ,WACR9W,MAA8B,KAAvB8E,EAAOoD,gBAOG,aAA1BuB,EAASZ,cACR,oCACE,kBAAC4W,GAAA,EAAD,CACE9c,GAAG,cACHnF,MAAM,QACN/B,MAAOgO,EAASrB,OAAS,GACzBuO,SAAUoI,EACVjI,QAAQ,WACR9W,MAAyB,MAAlByJ,EAASrB,MAChBsX,WAAY,CAAE/C,WAAY2C,KAE3B7V,EAASrB,OACR,kBAACqX,GAAA,EAAD,CACE9c,GAAG,oBACHnF,MAAM,cACN/B,MAAOqJ,EAAOoD,aAAe,GAC7ByO,SAAUiI,EACV9H,QAAQ,WACR9W,MAA8B,KAAvB8E,EAAOoD,oB,iCChOnB0X,GAAkBnlB,wBAC7B,IAOIolB,GAAyB,CAC7B,UACA,yBACA,eACA,iBACA,YACA,UAYF,SAASC,GAAqB5V,GAA8C,IAA7B6V,EAA4B,wDACnEC,EAAmC9V,EAAIX,QAAQsE,WAAWL,IAC1DyS,EAAgBD,EAAiB/M,QAAO,SAAAzF,GAAG,OAAKqS,GAAuB5R,SAAST,EAAI7J,SAC1F,IAAKsc,EAEH,OADAzP,MAAM,uCACC,GAET,IAAM0P,EAAaH,EAAM,4BACA7V,EAAIX,QAAQ8D,WAAW1K,GAAGwG,UAAU,EAAG,GADvC,KAErBe,EAAIX,QAAQ8D,WAAW1K,GAC3B,OAAOsd,EAAcjV,KAAI,SAAAiF,GACvB,MAAO,CACLtN,GAAI2M,IAAQC,WACZ/R,MAAM,GAAD,OAAK0iB,EAAL,aAAoBjQ,EAAUtM,MACnCuF,QAASgB,EAAIX,QAAQ8D,WAAWnE,QAChCiX,SAAUxU,KAAKyU,MACflW,IAAKA,EACL+F,UAAWA,EAAUtM,SAK3B,SAAS0c,GAAeC,GAAyC,IAAD,EACxDpW,EAAMI,KAAKiW,MAAMD,GACvB,GAAI,UAACpW,EAAIX,eAAL,aAAC,EAAa8D,WAIlB,OAAOyS,GAAqB5V,GAH1BsG,MAAM,0BAMH,IAAMgQ,GAA8C7lB,gBAAK,YAAmB,IAAhBC,EAAe,EAAfA,SAAe,EAChDC,mBAAqB,IAD2B,mBACzEkV,EADyE,KAC/D0Q,EAD+D,KAG1EtO,EADUlB,GAAwB0B,KAAOC,IAAI,iBACIT,QAEvDhO,qBAAU,WACR,GAAIgO,EAAS,CACX,IAAMuO,EAA0B,GAChCvO,EAAQvM,SAAQ,SAAA+a,GACd,IAAMC,EAAYP,GAAe/V,KAAKC,UAAUoW,IAC5CC,GAAWF,EAAY1a,KAAZ,MAAA0a,EAAW,aAASE,OAErCH,EAAYC,MAEb,CAACvO,IAEJ,IAAM0O,EAActlB,uBAAY,SAACulB,GAE/B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACvf,GAA4C,IAAD,EAC1D,aAAIA,EAAM8X,cAAV,aAAI,EAActI,OAAQ,CACxB,IACMwP,EAAcL,GADL3e,EAAM8X,OAAOtI,QAExBwP,GAAaD,GAAY,SAAAzlB,GAAe,6BAAQA,GAAR,aAA4B0lB,YACnElQ,MAAM,6BAEfuQ,EAAOG,WAAWJ,KACjB,IAEGK,EAAiB5lB,uBAAY,SAACoH,GAClC8d,GAAY,SAAAzlB,GAAe,OAAIA,EAAgBiY,QAAO,SAAAlD,GAAQ,OAAIA,EAASpN,KAAOA,UACjF,IAEGye,EAAiB7lB,uBAAY,SAAC2O,GAClC,IAAMwW,EAAcZ,GAAqB5V,GAAK,GAG9C,OAFAuW,GAAY,SAAAzlB,GAAe,6BAAQA,GAAR,aAA4B0lB,OAEhDA,IACN,IAEGW,EAAqB9lB,uBAAY,SAACwU,GACtC,IAAM2Q,EAjFV,SAAgC3Q,GAC9B,MAAO,CACLpN,GAAI2M,IAAQC,WACZ/R,MAAM,GAAD,OAAKuS,EAASrH,MAAd,OAAqBiD,KAAKyU,OAC/BD,SAAUxU,KAAKyU,MACfkB,QAASvR,EACTE,UAAWF,EAASxE,KA2EAgW,CAAuBxR,GAG3C,OAFA0Q,GAAY,SAAAzlB,GAAe,6BAAQA,GAAR,CAAyB0lB,OAE7C,CAACA,KACP,IAEH,OACE,kBAACd,GAAgBpkB,SAAjB,CACEC,MAAO,CACLsU,WACA8Q,cACAM,iBACAC,iBACAC,uBAGDzmB,MAKM4mB,GAAqB,kBAAgC7lB,qBAAWikB,KCxHhE6B,GAAyBhnB,wBACpC,IAOWinB,GAA4D/mB,gBAAK,YAAmB,IAAhBC,EAAe,EAAfA,SAAe,EAChDC,mBAAiB,IAD+B,mBACvF8mB,EADuF,KACtEC,EADsE,OAExC/mB,mBAAiB,IAFuB,mBAEvFgnB,EAFuF,KAElEC,EAFkE,OAGlEjnB,mBAAiB,IAHiD,mBAGvFknB,EAHuF,KAG/EC,EAH+E,OAI1DnnB,mBAAiB,GAJyC,mBAIvFonB,EAJuF,KAI3EC,EAJ2E,OAK1DrnB,mBAAiB,GALyC,mBAKvFsnB,EALuF,KAK3EC,EAL2E,KAOxFC,EAAuB9mB,uBAAY,WACvCqmB,EAAmB,IACnBE,EAAuB,IACvBE,EAAU,IACVE,EAAc,GACdE,EAAc,KACb,CAACR,EAAoBE,EAAwBE,EAAWE,EAAeE,IAE1E,OACE,kBAACX,GAAuBjmB,SAAxB,CACEC,MAAO,CACLkmB,kBACAE,sBACAE,SACAE,aACAE,aACAP,qBACAE,yBACAE,YACAE,gBACAE,gBACAC,yBAGDznB,MAKM0nB,GAA4B,kBACvC3mB,qBAAW8lB,KCkME9mB,mBA/OqC,SAAC,GAAoB,IAAD,cAAjBoL,EAAiB,EAAjBA,WAC7CmN,EAAkBI,KAAlBJ,cAD8D,EAE7BsO,KAAjCzR,EAF8D,EAE9DA,SAAUsR,EAFoD,EAEpDA,mBAFoD,EAalE3lB,IATFR,EAJoE,EAIpEA,sBACAC,EALoE,EAKpEA,yBACAL,EANoE,EAMpEA,sBACAC,EAPoE,EAOpEA,yBACAC,EARoE,EAQpEA,gBACAC,EAToE,EASpEA,mBACAG,EAVoE,EAUpEA,aACAC,EAXoE,EAWpEA,gBACAC,EAZoE,EAYpEA,qBAEM+mB,EAAyBC,KAAzBD,qBACA7d,EAAeG,IAAfH,WACA+R,EAAmBG,KAAnBH,eACFgM,EAAkBC,mBAAQ,kBAAMzS,EAAS/E,KAAI,SAAAyX,GAAC,MAAK,CAAEhnB,MAAOgnB,EAAE9f,GAAInF,MAAOilB,EAAEjlB,YAAW,CAC1FuS,IAEI2S,EAAoBH,EAAgBvJ,OAAS,EAC7CjX,EAAS2O,KArBuD,EAsBhB7V,oBAAkB,GAtBF,mBAsB/D8nB,EAtB+D,KAsB1CC,EAtB0C,KAuBhEC,EAAmB,UAAG9c,EAAWoF,iBAAd,aAAG,EAAsBjD,YAC5C4a,EAAyC,MAAvBD,EAClBE,EAAyBF,GAA+C,KAAxBA,EAChDG,GAAc,UAAAjd,EAAWoF,iBAAX,eAAsBI,OAAtB,UAA6BxF,EAAWoF,iBAAxC,aAA6B,EAAsBjD,aACjE2R,EAAamJ,EAAc,SAAW,SACtCjkB,EAAOikB,EAAc,kBAAC,IAAD,CAAiBjkB,KAAMse,MAAiB,KAC7D4F,EACJP,IACCC,IAAmB,UAAI5c,EAAWoF,iBAAf,aAAI,EAAsBI,OAA7C,UAAoDxF,EAAWoF,iBAA/D,aAAoD,EAAsBjD,cACvEgb,EAAgBhf,iBAAO6B,GAEvBod,EAAoB5nB,uBAAY,WlByjBjC,IACLgJ,EACA4B,EACA2J,EkB3jBMkT,GAAezM,EAAenS,SAAWI,EAAWJ,SAEtD8O,GlBujBJ3O,EkBtjBgCC,EAAWJ,QlBujB3C+B,EkBvjBoDoQ,EAAenS,QAAQwG,IlBwjB3EkF,EkBxjBgF/J,EAAWpD,GlB0jBpFuK,YAAQ3I,GAAS,SAAC4I,GACvB,IAAMpH,EAAaoH,EAAaxH,MAAMQ,GAASL,YAAYoF,MACzD,SAACnF,GAAD,OAA4BA,EAAWpD,KAAOmN,KAE5C/J,UAAmBA,EAAWoF,ekB5jBhCyX,GAAuB,IAEvBA,GAAwBD,KAEzB,CAACA,EAAqBpM,EAAgB/R,EAAYwe,EAAajd,EAAWpD,GAAIuQ,IAE3EkQ,EAAuB7nB,uBAC3B,SAACmG,GAAiD,IAAD,EAC/C,GAAK6U,EAAenS,SAAYI,EAAWJ,QAA3C,CAEA,IAAMif,GAAkB,OAAL3hB,QAAK,IAALA,OAAA,EAAAA,EAAO8X,OAAO/d,QAAS,GACpC6nB,EAAmBvT,EAAS7E,MAAK,SAAAuX,GAAC,OAAIA,EAAE9f,KAAO0gB,KACrD,GAAKC,EAAL,CACA,IAAMnQ,EAAatD,GACjBrL,EAAWJ,QACXmS,EAAenS,QAAQwG,IACvBsY,EAAc9e,QAAQzB,IACtB,UAAAugB,EAAc9e,QAAQ+G,iBAAtB,eAAiCjD,cAAe,GAChDob,GAGFpQ,EAAcC,OAEhB,CAACoD,EAAgBrD,EAAe1O,EAAY0e,EAAenT,IAGvDwT,EAAqBhoB,uBACzB,SAACmG,GACC,GAAK6U,EAAenS,SAAYI,EAAWJ,QAA3C,CAEA,IlBoUJG,EACAoL,EACAG,EACA5H,EkBvUUsb,GAAuB,OAAL9hB,QAAK,IAALA,OAAA,EAAAA,EAAO8X,OAAO/d,QAAS,GAC/CyX,GlBmUJ3O,EkBjUQC,EAAWJ,QlBkUnBuL,EkBjUQ4G,EAAenS,QAAQwG,IlBkU/BkF,EkBjUQ/J,EAAWpD,GlBkUnBuF,EkBjUQsb,ElBmUDtW,YAAQ3I,GAAS,SAAC4I,GAA2B,IAAD,IAC3C6C,EAAe,UAAG7C,EAAaxH,MAAMgK,UAAtB,iBAAG,EAAkC7J,mBAArC,aAAG,EAA+CoF,MACrE,SAACnF,GAAD,OAA4BA,EAAWpD,KAAOmN,MAGhD,OAAIE,QAAJ,IAAIA,OAAJ,EAAIA,EAAiB7E,WACnB6E,EAAgB7E,UAAUjD,YAAcA,EAC/B8H,IACTA,EAAgB7E,UAAY,CAC1BjD,YAAaA,EACbqD,IAAK,akBzUT,CAACgL,EAAgBxQ,EAAWpD,GAAIuQ,EAAe1O,IAG3Cif,EAAqBloB,uBACzB,SAACmG,GACCrG,GAAqB,OAALqG,QAAK,IAALA,OAAA,EAAAA,EAAO8X,OAAO/d,QAAS,MAEzC,CAACJ,IAGGqoB,EAAsBnoB,uBAAY,WACtCR,EAAyBgL,EAAWpD,IACpC1H,EAAmB,MACnBI,EAAgB,IACXH,GAAuBC,GAAyB,GACrDknB,MACC,CACDnnB,EACAH,EACAgL,EACA5K,EACAF,EACAonB,EACAhnB,IAGIsoB,GAA4BpoB,uBAAY,WAC5CD,IACA+mB,MACC,CAAC/mB,EAAsB+mB,IAEpBuB,GAA0BroB,uBAAY,WAC1C,GAAKgb,EAAenS,SAAYI,EAAWJ,UAAW,OAACpJ,QAAD,IAACA,OAAD,EAACA,EAAiBuQ,KAAxE,CAEA,IAAMwE,EAAWsR,EAAmBrmB,GAC9BmY,EAAatD,GACjBrL,EAAWJ,QACXmS,EAAenS,QAAQwG,IACvBsY,EAAc9e,QAAQzB,GACtBvH,EACA2U,EAAS,IAGXmD,EAAcC,GACdwQ,QACC,CACDpN,EACArD,EACA1O,EACA0e,EACAloB,EACAI,EACAuoB,GACAtC,IAGIwC,GAAqB3oB,GAAyBJ,IAA0BiL,EAAWpD,GACzF,OACE,qCACIsgB,IAAoBY,IACpB,kBAAC,GAAD,CACEnK,WAAW,kBACXC,WAAYmK,IACZjK,WAAW,kEACX1X,QAASghB,EACTrJ,UAAW4I,EACX3I,YAAa2I,EACb1I,aAAa,gDAIhBiJ,IAAoBY,IACnB,kBAAC,GAAD,CAAarmB,MAAM,oBAAoBwC,OAAQ8iB,IAAoBC,GACjE,oCACE,kBAAC,GAAD,CACEpgB,GAAG,WACHnF,MAAM,WACNqU,QAAS0Q,EACT5L,SAAUyM,EACV3nB,OAAO,UAAAsK,EAAWoF,iBAAX,eAAsB+E,sBAAkBlL,IAGjD,kBAACya,GAAA,EAAD,CACEjiB,MAAM,mBACN/B,OAAO,UAAAsK,EAAWoF,iBAAX,eAAsBjD,cAAe,GAC5C4O,QAAQ,WACRH,SAAU4M,EACVvjB,OAAQ+iB,KAIZ,kBAAC5K,GAAA,EAAD,CACErW,UAAWC,EAAOgT,aAClBzX,MAAM,UACN8a,KAAK,QACLtB,QAAQ,WACR2G,UAAW1e,EACXoD,QAASghB,GAERtJ,KAKLoJ,IAAoBY,IACpB,kBAAC,GAAD,CACEnK,WAAW,iBACXC,WAAYoK,IACZlK,WAAW,mDACX0D,aAAW,EACXpb,QAASuhB,IAIZG,IACC,kBAAC,GAAD,CAAarmB,MAAM,mBAAmBwC,OAAQ8iB,IAAoBC,GAChE,kBAACtD,GAAA,EAAD,CACEzf,MAAwB,KAAjB5E,EACPoC,MAAM,gBACNsZ,QAAQ,WACRH,SAAU8M,EACVhoB,MAAOL,EACP2b,WAAS,KAEK,OAAf/b,QAAe,IAAfA,OAAA,EAAAA,EAAiBoF,OAChB,0BAAM0B,UAAWC,EAAOoT,mBAAoBna,EAAgBoF,MAE9D,yBAAK0B,UAAWC,EAAOmT,wBACrB,kBAAC8O,GAAA,EAAD,CACExmB,MAAO,kBAACymB,GAAA,EAAD,CAAK5lB,UAAU,UAAf,4BACP6lB,QAAS,kBAACC,GAAA,EAAD,CAAU7mB,MAAM,YACzB8mB,SAAO,IAET,kBAACjM,GAAA,EAAD,CACE7a,MAAM,UACN8a,KAAK,QACLtB,QAAQ,WACR3U,QAASwhB,IAJX,UAQA,kBAACxL,GAAA,EAAD,CACErW,UAAWC,EAAOqT,WAClB9X,MAAM,UACN8a,KAAK,QACLtB,QAAQ,WACR2G,UAAW,kBAAC,IAAD,CAAiB1e,KAAMslB,MAClCvK,SAA2B,KAAjB1e,GAA2C,OAApBJ,EACjCmH,QAASyhB,IAPX,cC3ONU,GAA0C,SAAC,GAAkB,IAAhB1pB,EAAe,EAAfA,SACjD,OAAO,oCAAGA,IAgCG2pB,GAvB2B,SAAC,GAAgC,IAA9B3pB,EAA6B,EAA7BA,SAAU4C,EAAmB,EAAnBA,MAAOwC,EAAY,EAAZA,MACtD+B,EAAS2O,KAEf,OACE,kBAAC+O,GAAA,EAAD,CACE3I,QAAQ,WACRtZ,MAAOA,EACPgnB,WAAS,EACTC,gBAAiB,CAAEC,QAAQ,GAC3BC,WAAY,CACVC,eAAgBN,GAChBO,QAAS,CACP3nB,KAAM8f,aAAKjb,EAAO4S,YAAa3U,GAAS+B,EAAO6S,kBAC/ClV,eAAgBsd,aAAKhd,GAAS+B,EAAO6S,oBAGzC8K,WAAY,CAAE9kB,YACdmc,WAAS,K,4CC0CApc,mBAxD2B,SAAC,GAMpC,IALLkI,EAKI,EALJA,KACAwY,EAII,EAJJA,UACAX,EAGI,EAHJA,aACA3X,EAEI,EAFJA,QACAua,EACI,EADJA,SAEMvb,EAAS2O,KACP4F,EAAgBI,KAAhBJ,YAEFlW,EAAOsa,EACX,4DAC6B,uCAASpE,QAAT,IAASA,OAAT,EAASA,EAAa9Y,OADnD,MACsE,IACpE,gCAAS6d,GAFX,yEAMA,iDACkB,gCAASA,GAD3B,yDAMF,OACE,oCACE,kBAACyJ,GAAA,EAAD,CACEjiB,KAAMA,EACNE,QAASA,EACTgiB,kBAAgB,iBAChBhO,WAAS,EACTiO,SAAS,MAET,kBAACC,GAAA,EAAD,CAAaC,mBAAiB,GAC5B,kBAACrU,EAAA,EAAD,CAAYC,aAAW,QAAQ3O,QAASY,EAASjB,UAAWC,EAAO2T,mBACjE,kBAAC,IAAD,CAAiB3W,KAAMsZ,QAI3B,kBAAC8M,GAAA,EAAD,CAAerjB,UAAWC,EAAO4T,eAC/B,kBAAC,IAAD,CAAiB5W,KAAMqmB,IAAqBtjB,UAAWC,EAAO8T,YAC9D,uBAAG/T,UAAWC,EAAO6T,mBAAoBxV,IAG3C,kBAACilB,GAAA,EAAD,KACE,kBAAClN,GAAA,EAAD,CAAQrB,QAAQ,OAAOxZ,MAAM,UAAU6E,QAASY,GAAhD,UAGA,kBAACoV,GAAA,EAAD,CAAQrB,QAAQ,YAAYxZ,MAAM,YAAY6E,QAASmb,GAAvD,gB,WC3CK3iB,mBAfqC,SAAC,GAA8B,IAA5BoL,EAA2B,EAA3BA,WAAYnL,EAAe,EAAfA,SAC3DmH,EAAS2O,KACPnM,EAAYI,IAAZJ,QACF+gB,GAA0B,OAAVvf,QAAU,IAAVA,OAAA,EAAAA,EAAYA,aAAc,GAC1Cwf,EAAc,OAAGhhB,QAAH,IAAGA,OAAH,EAAGA,EAASoB,MAAM2f,GAEtC,OACE,kBAACE,GAAA,EAAD,CAAMC,QAAM,EAAC3jB,UAAWC,EAAOsT,qBAC5BkQ,GAAkB,kBAAC,GAAD,CAAe1gB,KAAM0gB,EAAgB7K,cAAY,IAEnE9f,M,2CCyEQ8qB,GArEkB,WAA8B,IAAD,EACtB7qB,mBAA2B,CAC/D8K,MAAO,GACPggB,MAAO,KAHmD,mBACrDC,EADqD,KACxCC,EADwC,KAkE5D,MAAO,CAAED,cAAaE,kBA5DIvqB,uBACxB,YAA8D,IAAD,EAA1DwqB,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,WAGFC,EAAU,EAFOF,EAAMlhB,KAAK,SAASqhB,EAENF,EAAa,EAC9CG,EAAoB,EAGlBC,EAAmC,CAAEzgB,MAAO,GAAIggB,MAAO,IAPF,cASrCI,EAAMpgB,SAT+B,IAS3D,2BAAqC,CAAC,IAA3BQ,EAA0B,QAC7BtB,EAAOkhB,EAAMlhB,KAAKsB,GAKxBigB,EAAezgB,MAAMQ,GAArB,eACKtB,EADL,CAEEqhB,EAAGrhB,EAAKqhB,EAAIrhB,EAAKvB,MAAQ,EAAI2iB,EAC7BI,EAAGxhB,EAAKwhB,EAAIxhB,EAAKzH,OAAS,EA3BjB,KA8BX+oB,EAAoBG,KAAKC,IAAI,EAAGJ,EAAmBC,EAAezgB,MAAMQ,GAAS+f,IArBxB,8BAyB3D,IAFAC,EAAoBG,KAAKE,IAAIL,IAEL,EAAG,CAAC,IAAD,gBACHJ,EAAMpgB,SADH,IACzB,2BAAqC,CAAC,IAA3BQ,EAA0B,QACnCigB,EAAezgB,MAAMQ,GAAS+f,GAAKC,GAFZ,+BAzBgC,oBA+BrCJ,EAAMJ,SA/B+B,IA+B3D,2BAAqC,CAAC,IAA3Bc,EAA0B,QAC7BC,EAAOX,EAAMW,KAAKD,GAClBE,EAAQ,UAAMF,EAAQG,EAAd,aAAoBH,EAAQI,GACpCrpB,EAAQkpB,EAAKlpB,MACf,CAAE4C,KAAMsmB,EAAKlpB,MAAO0oB,EAAGQ,EAAKR,EAAID,EAASI,EAAGK,EAAKL,EA5C1C,IA6CP,KAEES,EAASJ,EAAKI,OAAO9b,KAAI,SAAA+b,GAAK,MAAK,CACvCb,GAAIc,MAAMD,EAAMb,GAAK,EAAIa,EAAMb,GAAKD,EAAUE,EAC9CE,GAAIW,MAAMD,EAAMV,GAAK,EAAIU,EAAMV,GAjDtB,OAqDPS,EAAO9N,OAAS,IAAG8N,EAAOA,EAAO9N,OAAS,GAAGqN,GAAK,MAEtDD,EAAeT,MAAMgB,GAAY,CAC/BnpB,QACAypB,MAAOR,EAAQG,EACfM,IAAKT,EAAQI,EACbC,WAlDuD,8BAsD3DjB,EAAeO,KAEjB,MCnESe,GAAe1sB,wBAAqC,IACpD2sB,GAAuB3sB,yBAAsC,eAC7D4sB,GAA0B5sB,wBAAgC,CACrEkL,MAAO,GACPggB,MAAO,KAOH2B,GAAc,WAClB,IAAMC,EAAI,IAAIC,KAAMC,SAASC,MAK7B,OAJAH,EAAEI,SAAS,IAGXJ,EAAEK,qBAAoB,iBAAO,MACtBL,GAmCMM,GAhC+B,SAAC,GAAkB,IAAhBjtB,EAAe,EAAfA,SACzCmrB,EAAQvD,kBAAQ8E,GAAa,IAD2B,EAEnB5B,KAAnCE,EAFsD,EAEtDA,YAAaE,EAFyC,EAEzCA,kBAFyC,EAGpCgC,aAAoB,GAHgB,mBAGvDxkB,EAHuD,KAGhDykB,EAHgD,OAIlBltB,oBAAS,GAJS,mBAIvDmtB,EAJuD,KAIvCC,EAJuC,KAKxDC,EAAS3sB,uBAAY,kBAAM0sB,GAAkB,KAAO,IACpDE,EAAa3F,mBAAQ,iBAAO,CAAEuD,QAAOmC,YAAW,CAACnC,EAAOmC,IAe9D,OAbA/jB,qBAAU,WACH6jB,IAELR,KAAMY,OAAOrC,GACbD,EAAkB,CAAEC,QAAOC,WAAY1iB,IAEvC2kB,GAAkB,MACjB,CAAClC,EAAOiC,EAAgBC,EAAmB3kB,EAAOwiB,IAErDuC,cAAgB,WACdJ,GAAkB,KACjB,CAAC3kB,IAGF,kBAAC6jB,GAAa3rB,SAAd,CAAuBC,MAAO0sB,GAC5B,kBAACf,GAAqB5rB,SAAtB,CAA+BC,MAAOssB,GACpC,kBAACV,GAAwB7rB,SAAzB,CAAkCC,MAAOmqB,GACtChrB,MAQE0tB,GAAmB,kBAA6B3sB,qBAAWwrB,KAE3DoB,GAAsB,kBAAwB5sB,qBAAW0rB,KCvEvDpkB,gBACb,SAAClC,GAAD,MAA4B,CAC1B4kB,MAAO,CACLziB,QAAS,QACTslB,SAAU,WACVC,IAAK,IACLC,KAAM,IACNppB,SAAU,UACVgE,MAAO,OACPlG,OAAQ,OACRurB,OAAQ,EACR,SAAU,CACRhrB,SAAU,QAEZ,gCAAiC,CAC/BirB,KAAM7nB,EAAMN,QAAQR,OAAO9D,MAE7B,8BAA+B,CAC7BysB,KAAM7nB,EAAMN,QAAQR,OAAO/D,MAG/BwqB,KAAM,CACJmC,OAAQ,SAACC,GAAD,OAAgC/nB,EAAMN,QAAQR,QAAY,OAAL6oB,QAAK,IAALA,OAAA,EAAAA,EAAOC,UAAW,MAAQ,aAG3F,CAAEplB,KAAM,0BCMJqlB,GAAsC,SAAC,GAAyB,IAAvBxrB,EAAsB,EAAtBA,MAAO5C,EAAe,EAAfA,SACpD,OAAI4C,EAAM4C,KAAK4Y,OAAS,GACf,kBAACkE,GAAA,EAAD,CAAS9U,MAAO5K,EAAM4C,KAAMxF,SAAUA,IAEtC,oCAAGA,IAIRquB,GAAsB,SAAC,GAAiC,IAAD,EAA9BzrB,EAA8B,EAA9BA,MAAOspB,EAAuB,EAAvBA,OAAQiC,EAAe,EAAfA,SACtChnB,EAAS2O,GAAU,CAAEqY,aACrBja,EAAO0T,mBAAQ,kBArBI,SAACsE,GAAD,OACzBA,EAAOoC,QACL,SAACpa,EAAMiY,EAAOoC,GAAd,OACEA,EAAI,IAAMrC,EAAO9N,OAAS,EAA1B,UACOlK,EADP,cACiBiY,EAAMb,EADvB,YAC4Ba,EAAMV,EADlC,YACuCS,EAAOqC,EAAI,GAAGjD,EADrD,YAC0DY,EAAOqC,EAAI,GAAG9C,EADxE,YAEMS,EAAOqC,EAAI,GAAGjD,EAFpB,YAGQY,EAAOqC,EAAI,GAAG9C,GAClBvX,IANR,YAOOgY,EAAO,GAAGZ,EAPjB,YAOsBY,EAAO,GAAGT,EAPhC,MAoB2B+C,CAAmBtC,KAAS,CAACA,IAClDuC,EAAkB7rB,IAAS,UAAAA,EAAM4C,YAAN,eAAY4Y,QAAS,GAEtD,OACE,oCACE,0BACEsQ,EAAGxa,EACH8Z,KAAK,cACL9mB,UAAWC,EAAO2kB,KAClB6C,YAAY,IACZC,UAAS,yBAAoBT,EAAW,SAAW,WAA1C,OAEVvrB,GACC,kBAAC,GAAD,CAAcA,MAAOA,GACnB,0BAAM0oB,EAAG1oB,EAAM0oB,EAAGG,EAAG7oB,EAAM6oB,GACxBgD,EAAe,UAAM7rB,EAAM4C,KAAK+I,UAAU,EAAG,IAA9B,OAAyC3L,EAAM4C,SAmD5DzF,mBA3CQ,WACrB,IAAMoH,EAAS2O,KACA+Y,EAAoBlB,KAA3B5C,MACArP,EAAgBI,KAAhBJ,YAER,OACE,yBAAKxU,UAAWC,EAAO4jB,OACrB,8BACE,4BACEhjB,GAAG,qBACH+mB,YAAY,KACZC,aAAa,IACbC,KAAK,IACLC,KAAK,MACLC,OAAO,QAEP,6BAAShD,OAAO,sBAGlB,4BACEnkB,GAAG,mBACH+mB,YAAY,KACZC,aAAa,IACbC,KAAK,IACLC,KAAK,MACLC,OAAO,QAEP,6BAAShD,OAAO,uBAInBrhB,OAAOskB,QAAQN,GAAiBze,KAAI,mCAAEgf,EAAF,KAAUtD,EAAV,YACnC,kBAAC,GAAD,CACE9b,IAAKof,EACLxsB,MAAOkpB,EAAKlpB,MACZspB,OAAQJ,EAAKI,OACbiC,SAAUrC,EAAKO,SAAL,OAAe3Q,QAAf,IAAeA,OAAf,EAAeA,EAAa1L,c,WCxGjC3H,gBACb,SAAClC,GAAD,MAA4B,CAC1BkpB,MAAO,CACL,OAAQ,CACNC,cAAe,QAGnB9hB,MAAO,CACL3K,WAAY,OACZ0sB,UAAW,QACX3W,SAAU,QAEZtL,YAAa,CACXuN,YAAa1U,EAAMlF,QAAQ,GAC3BwC,UAAW,SACX+rB,aAAc,cAEhBC,aAAc,CACZ/sB,MAAOyD,EAAMN,QAAQR,OAAO9D,KAC5BuH,WAAY3C,EAAMlF,QAAQ,GAE1B,mBAAoB,CAClByB,MAAOyD,EAAMN,QAAQR,OAAOvD,cAIlC,CAAEiH,KAAM,gBCAJ2mB,GAAwB,SAAC,GAA4B,IAA1BliB,EAAyB,EAAzBA,MAAOF,EAAkB,EAAlBA,YAChCnG,EAAS2O,KAEf,OAAKxI,EAGH,4BACE,wBAAIpG,UAAWC,EAAOqG,OAAQA,GAC9B,wBAAItG,UAAWC,EAAOmG,aAAcA,IALf,MAUrBqiB,GAAyB,kBAAM,kBAAC,GAAD,CAAOniB,MAAM,OAAOF,YAAY,iBAE/DsiB,GAA8C,SAAC,GAAoB,IAAD,UAAjBC,EAAiB,EAAjBA,WAC/C1oB,EAAS2O,KAEf,GAA0B,OAAtB+Z,EAAW3lB,OAAiB,OAAO,KAEvC,IAAM2E,EAAWghB,EAAW3lB,OAAO2E,SAC7BnB,OAvBuDtD,IAuB1ByE,EAvBJqC,0BAuBhB,OACXrC,QADW,IACXA,GADW,UACXA,EAAUqC,iCADC,aACX,EAAqCxD,OAD1B,OAEXmB,QAFW,IAEXA,GAFW,UAEXA,EAAUpB,YAFC,aAEX,EAAgBC,OACdO,EAAe5D,EAAuBwE,EAASZ,cACjD5D,EAAuBwE,EAASZ,cAChCY,EAASZ,aAEb,OACE,oCACE,kBAAC,GAAD,CAAOT,MAAM,cAAcF,YAAauiB,EAAW3lB,OAAOoD,cAC1D,kBAAC,GAAD,CAAO0C,IAAI,OAAOxC,MAAM,OAAOF,YAAaW,IAC5C,kBAAC,GAAD,CACE+B,IAAI,SACJxC,MAAM,SACNF,aACQ,OAANI,QAAM,IAANA,GAAA,UAAAA,EAAS,UAAT,eAAaC,SACX,oCACGD,EAAO,GAAGC,OACX,uBAAGsE,KAAMvE,EAAO,GAAGC,OAAQiR,OAAO,SAASkR,IAAI,uBAC7C,kBAAC,IAAD,CAAiB3rB,KAAM4rB,IAAmB7oB,UAAWC,EAAOsoB,mBAMtE,kBAAC,GAAD,CAAOzf,IAAI,OAAOxC,MAAM,OAAOF,YAAW,OAAEI,QAAF,IAAEA,GAAF,UAAEA,EAAS,UAAX,aAAE,EAAaD,OACzD,kBAAC,GAAD,CAAOuC,IAAI,UAAUxC,MAAM,UAAUF,YAAW,OAAEI,QAAF,IAAEA,GAAF,UAAEA,EAAS,UAAX,aAAE,EAAapF,UAC/D,kBAAC,GAAD,CAAO0H,IAAI,QAAQxC,MAAM,QAAQF,YAAauB,EAASrB,UAqB9CzN,mBAhB2B,SAAC,GAAqB,IAAnBiwB,EAAkB,EAAlBA,YACrC7oB,EAAS2O,KACTvB,EAAWgB,GAAYya,GAE7B,OAAgB,MAAZzb,EAAyB,KAG3B,2BAAOrN,UAAWC,EAAOkoB,OACvB,+BACgB,WAAb9a,GAAyB,kBAAC,GAAD,MACZ,WAAbA,GAAyB,kBAAC,GAAD,CAAkBsb,WAAYG,SCzFjD3nB,gBACb,SAAClC,GAAD,MAA4B,CAC1BhC,KAAM,CACJ0V,YAAa1T,EAAMlF,QAAQ,GAC3B8B,SAAU,aAGd,CAAEgG,KAAM,wBC2BKhJ,mBAjBqB,SAAC,GAA6C,IAG5EoE,EAHiC8rB,EAA0C,EAA1CA,YAAa1b,EAA6B,EAA7BA,SAAUtG,EAAmB,EAAnBA,aACtD9G,EAAS2O,KAaf,OAVIma,EACF9rB,EAAO+rB,IACe,WAAb3b,GAAyBtG,EACb,sBAAjBA,EAAsC9J,EAAOgsB,IACvB,mBAAjBliB,EAAmC9J,EAAOisB,IACzB,aAAjBniB,IAA6B9J,EAAOksB,KACvB,WAAb9b,IACTpQ,EAAOmsB,KAGFnsB,EAAO,kBAAC,IAAD,CAAiBA,KAAMA,EAAM+C,UAAWC,EAAOhD,OAAW,QC1B3DkE,gBACb,SAAClC,GAAD,MAA4B,CAC1B8D,KAAM,CACJ2jB,SAAU,WACVllB,MAAO,OACPkQ,SAAU,qBAAGyG,WAAmD,QAAU,SAC1E+K,SAAU,QACVmG,UAAW,OACXjoB,QAAS,OACTC,WAAY,UACZoQ,cAAe,SACf4C,OAAQ,gBAAGiV,EAAH,EAAGA,aAAH,0BACOrqB,EAAMN,QAAQR,OAAOmrB,EAAe,MAAQ,UAC3D/tB,gBAAiB0D,EAAMN,QAAQR,OAAOjE,MACtC2sB,OAAQ,EACRrpB,SAAU,UAEZ+rB,UAAW,CACTrtB,QAAS+C,EAAMlF,QAAQ,GACvByvB,KAAM,IACNpoB,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChB9F,MAAOyD,EAAMN,QAAQR,OAAOjE,MAC5BqB,gBAAiB,gBAAG+tB,EAAH,EAAGA,aAAH,OACfrqB,EAAMN,QAAQR,OAAOmrB,EAAe,MAAQ,UAEhDG,YAAa,CACXvtB,QAAS+C,EAAMlF,QAAQ,IAEzB2vB,UAAW,CACThoB,OAAQ,cAGZ,CAAEG,KAAM,oBCdJ8nB,GAAwB,SAAC,GAAD,IAAGtgB,EAAH,EAAGA,UAAH,OAC5BA,EACI,CACE3N,MAAO2N,EAAUjD,YACjB5E,MAAO,GACPlG,OAAQ,IAEV,IAEAsuB,GAAwB,SAACC,GAAgE,IAAD,EACtFC,EAAU,iBAAGD,QAAH,IAAGA,OAAH,EAAGA,EAASD,+BAAZ,QAAuC,CAAEpoB,MAAO,EAAGlG,OAAQ,GAC3E,MAAO,CAAEkG,MAAOgjB,KAAKuF,KAAKD,EAAWtoB,OAAQlG,OAAQkpB,KAAKuF,KAAKD,EAAWxuB,UAoG7DzC,mBAjGa,SAAC,GAStB,IAAD,EARJwL,EAQI,EARJA,QACAykB,EAOI,EAPJA,YACAQ,EAMI,EANJA,aACAnR,EAKI,EALJA,WACA9X,EAII,EAJJA,QACA2pB,EAGI,EAHJA,YACAC,EAEI,EAFJA,YACAC,EACI,EADJA,SAEMjqB,EAAS2O,GAAU,CAAEuJ,aAAYmR,iBACjCa,EAAiB1wB,uBAAY,WAC7B4G,GAASA,EAAQgE,KACpB,CAAChE,EAASgE,IACP+lB,EAAUhoB,iBAAuB,MALnC,EAMsBokB,KAAlBvC,EANJ,EAMIA,MAAOmC,EANX,EAMWA,OACTiE,EAAY3J,mBAAQ,iBAAO,CAAEiG,IAAI,GAAD,OAAKsD,EAAL,MAAsBrD,KAAK,GAAD,OAAKoD,EAAL,SAAyB,CACvFA,EACAC,IAEI5c,EAAWgB,GAAYya,GACvB9lB,EAAU8lB,EAA2B9lB,OAEnCtH,EAAuBotB,EAAvBptB,MAAOsI,EAAgB8kB,EAAhB9kB,YAsDf,OApDAsmB,cACE,WAAa,IAAD,EACgBV,GAAsBQ,EAAQ9nB,SAAhDd,EADE,EACFA,MAAOlG,EADL,EACKA,OACf2oB,EAAMsG,QAAQlmB,EAAS,CACrB7C,QACAlG,WAEF0I,EAAYF,SAAQ,SAAAG,GAClBggB,EAAMuG,QAAQnmB,EAASJ,EAAWA,WAAY0lB,GAAsB1lB,UAGxE,WACEggB,EAAMlK,WAAW1V,MAIrBkiB,cAAgB,WACd,GAAK6D,EAAQ9nB,QAAb,CADoB,MAGMsnB,GAAsBQ,EAAQ9nB,SAAhDd,EAHY,EAGZA,MAAOlG,EAHK,EAGLA,OACTyH,EAAOkhB,EAAMlhB,KAAKsB,GAEpBtB,EAAKvB,QAAUA,GAASuB,EAAKzH,SAAWA,IAC1C2oB,EAAMsG,QAAQlmB,EAAd,eACKtB,EADL,CAEEvB,QACAlG,YAEF8qB,SAIJG,cAAgB,WAAO,IAAD,EAEdkE,EAAkB,IAAIC,IAAI1mB,EAAYkF,KAAI,qBAAGjF,eACnD,UAAAggB,EAAM0G,SAAStmB,UAAf,SAAyBP,SAAQ,YAAY,IAATihB,EAAQ,EAARA,EAC7B0F,EAAgBG,IAAI7F,IACvBd,EAAM4G,WAAWxmB,EAAS0gB,MAI9B/gB,EAAYF,SAAQ,SAAAG,GAClBggB,EAAMuG,QAAQnmB,EAASJ,EAAWA,WAAY0lB,GAAsB1lB,OAEtEmiB,MACC,CAAC/hB,EAASL,IAEbuiB,cAAgB,WACTvjB,GACLknB,EAAS7lB,KACR,CAACrB,EAAQqB,IAGV,yBAAKrE,UAAWC,EAAO8C,KAAM+nB,MAAOT,EAAW1R,IAAKyR,GAClD,yBAAKpqB,UAAWkb,aAAKjb,EAAOspB,UAAWlpB,GAAWJ,EAAOypB,WAAYrpB,QAAS8pB,GAC5E,kBAAC,GAAD,CACEpjB,aAAc/D,EAAM,UAAGA,EAAO2E,gBAAV,aAAG,EAAiBZ,kBAAe7D,EACvDmK,SAAUA,EACV0b,YAAmC,UAAtBD,EAAYptB,QAE1BA,GAGFyc,GACC,yBAAKnY,UAAWC,EAAOwpB,aACrB,kBAAC,GAAD,CAAaX,YAAaA,S,UCrErBiC,GAjDU,WAA4B,IAAD,EAClBhyB,mBAAwB,CACtDiyB,iBAAkB,OAF8B,mBAC3CC,EAD2C,KACjCC,EADiC,KA8ClD,MAAO,CAAED,WAAUE,eAzCI1xB,uBAAY,SAAC2xB,GAEhCF,EADe,UAAbE,EACU,SAAAC,GAAS,sBAChBA,EADgB,CAEnBL,iBAAkBI,KAGR,SAAAC,GAAS,4BAChBA,GADgB,oBAElBD,EACEC,EAAUD,IAAaC,EAAUL,mBAAqBI,EAEnDC,EAAUD,IADTC,EAAUD,IAJE,kCAMDA,GANC,QAStB,IAyBgClB,SAvBlBzwB,uBAAY,SAAC2xB,GAC5BF,GAAY,SAAAG,GAAc,IAAD,EACvB,OAAIA,EAAUD,IAAaC,EAAUL,mBAAqBI,EAAiBC,EAEpE,eACFA,GADL,oBAEGD,GAAW,GAFd,kCAGoBA,GAHpB,SAMD,IAa0CE,UAX3B7xB,uBAAY,SAAC2xB,GAC7BF,GAAY,SAAAG,GACV,OAAKA,EAAUD,GAER,eACFC,EADL,gBAEGD,GAAW,IAJmBC,OAOlC,MCpCUE,GAhBW,WAA+B,IAC3C9mB,EAAc+mB,cAAlB3qB,GACF6D,EAAUmK,cAWhB,OAVuBpV,uBACrB,SAAAgyB,GACE,IAAM9mB,EAAG,mBAAeC,mBAAmBH,GAAlC,iBAAqDG,mBAAmB6mB,IAC7E9mB,IAAQD,EAAQG,SAASC,UAC3BJ,EAAQR,KAAKS,KAGjB,CAACD,EAASD,KC8CC5L,mBA9CyB,SAAC,GAAqB,IAAD,EAAlB6yB,EAAkB,EAAlBA,YACjCjpB,EAAYI,IAAZJ,QADmD,EAEGsoB,KAA5CY,EAFyC,EAEnDV,SAAyBE,EAF0B,EAE1BA,eAAgBjB,EAFU,EAEVA,SACzC9D,EAAWI,KAAXJ,OACOwF,EAAoBnF,KAA3B5iB,MACA2Q,EAAgBI,KAAhBJ,YACFiF,EAAiB8R,KACf/xB,EAAyBI,IAAzBJ,qBACF6G,EAAU5G,uBACd,SAAC2xB,GACC3R,EAAe2R,GACfD,EAAeC,GACf5xB,MAEF,CAACigB,EAAgB0R,EAAgB3xB,IAG7BqK,EAAQF,OAAOskB,QAAP,iBAAexlB,QAAf,IAAeA,OAAf,EAAeA,EAASoB,aAAxB,QAAiC,IAM/C,OAJA0iB,cAAgB,WACdH,MACC,CAACviB,EAAMqT,SAGR,oCACGrT,EAAMqF,KAAI,YAA8B,IAAD,qBAA3BkiB,EAA2B,KAAjBtC,EAAiB,KAChChF,EAAW,UAAG8H,EAAgBR,UAAnB,QAAgC,CAAEhH,GAAI,IAAKG,GAAI,KAEhE,OACE,kBAAC,GAAD,CACEzb,IAAKsiB,EACL/mB,QAAS+mB,EACTtC,YAAaA,EACbQ,aAAcR,EAAYhgB,OAAZ,OAAoB0L,QAApB,IAAoBA,OAApB,EAAoBA,EAAa1L,KAC/CqP,WAAYnX,QAAQ2qB,EAAcP,IAClC/qB,QAASqrB,EAAcrrB,OAAU6C,EACjC8mB,YAAalG,EAAYM,EACzB6F,YAAanG,EAAYS,EACzB2F,SAAUA,W,sBCnDP/oB,eACb,CACE/F,KAAM,CACJsrB,SAAU,WACVhV,SAAU,OACV2X,UAAW,SAGf,CAAExnB,KAAM,yBCuDKgqB,GApDuB,SAAC,GAAkB,IAAhB/yB,EAAe,EAAfA,SACjCmH,EAAS2O,KACTkd,EAAW1pB,iBAAuB,MAClC2pB,Eb4DsDlyB,qBAAWyrB,Ia3DxDsG,EAAoBnF,KAA3B5iB,MACFqgB,EAAaxD,mBAAQ,WACzB,OAAO8D,KAAKuF,KARM,UAUO7mB,IAApB0oB,EACGjoB,OAAOqoB,OAAOJ,GACX1iB,KAAI,qBAAGkb,EAAH,EAAM5iB,SACV4lB,QAAO,SAACxc,EAAGqhB,GAAJ,OAAUzH,KAAK0H,IAAIthB,EAAGqhB,KAAI,GACpC,MAEP,CAACL,IACEO,EAAczL,mBAAQ,WAC1B,OAAO8D,KAAKuF,KAlBM,UAoBO7mB,IAApB0oB,EACGjoB,OAAOqoB,OAAOJ,GACX1iB,KAAI,qBAAGqb,EAAH,EAAMjpB,UACV8rB,QAAO,SAACxc,EAAGqhB,GAAJ,OAAUzH,KAAK0H,IAAIthB,EAAGqhB,KAAI,GACpC,MAEP,CAACL,IACEQ,EAAa1L,mBAAQ,iBAAO,CAAElf,MAAM,GAAD,OAAK0iB,EAAL,MAAqB5oB,OAAO,GAAD,OAAK6wB,EAAL,SAAyB,CAC3FjI,EACAiI,IAkBF,OAfA9pB,qBAAU,WACR,IAAMgqB,EAAeP,EAASxpB,QAC9B,UAAI+pB,QAAJ,IAAIA,OAAJ,EAAIA,EAAcC,cAAe,CAAC,IACxB9qB,EAAU6qB,EAAaC,cAAc1C,wBAArCpoB,MACRuqB,EAAcvH,KAAKuF,KAAKvoB,IACxB,IAAM+qB,EAAS,IAAIC,KAAaH,EAAaC,eAAe,WAAO,IAAD,IACxD9qB,GADwD,iBAC9C6qB,QAD8C,IAC9CA,GAD8C,UAC9CA,EAAcC,qBADgC,aAC9C,EAA6B1C,+BADiB,QACU,CAAEpoB,MAAO,IAA3EA,MACRuqB,EAAcvH,KAAKuF,KAAKvoB,OAE1B,OAAO,WACL+qB,EAAOE,aAGV,CAACX,EAAUC,IAGZ,yBAAKpT,IAAKmT,EAAU9rB,UAAWC,EAAO7E,KAAM0vB,MAAOsB,GAChDtzB,ICtCQD,mBAXyB,SAAC,GAA4B,IAAD,IAAzB6yB,mBAAyB,SAClE,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYA,YAAaA,IACzB,kBAAC,GAAD,WCdOvqB,gBACb,SAAClC,GAAD,MAA4B,CAC1B7D,KAAM,CACJgG,QAAS,OACTqQ,cAAe,SACfvV,QAAS+C,EAAMnF,UAAUC,QAAQC,eAEnC0yB,iBAAkB,CAChBxwB,QAAS,MACTyW,YAAa,OACb0B,OAAQ,cACRhZ,aAAc,QACdM,WAAY,IACZ6F,MAAO,OACPjG,gBAAiB0D,EAAMN,QAAQR,OAAOxD,aAExCgyB,cAAe,CACbvrB,QAAS,OACTC,WAAY,UAEdurB,gBAAiB,CACfhrB,WAAY,MACZ8P,SAAU,SAEZmb,WAAY,CACVla,YAAa,OACbpW,UAAW,SACXV,SAAU,SAEZixB,aAAc,CACZ1rB,QAAS,OACTC,WAAY,UAEd0rB,kBAAmB,CACjBpxB,WAAY,OACZgX,YAAa,UAGjB,CAAE9Q,KAAM,oBCwJKhJ,mBAtLa,WAAO,IAAD,EAa5B2nB,KAXFX,EAF8B,EAE9BA,gBACAE,EAH8B,EAG9BA,oBACAE,EAJ8B,EAI9BA,OACAE,EAL8B,EAK9BA,WACAE,EAN8B,EAM9BA,WACAP,EAP8B,EAO9BA,mBACAE,EAR8B,EAQ9BA,uBACAE,EAT8B,EAS9BA,UACAE,EAV8B,EAU9BA,cACAE,EAX8B,EAW9BA,cACAC,EAZ8B,EAY9BA,qBAEItgB,EAAS2O,KACPzV,EAAuBS,IAAvBT,mBAyBF6zB,EAAoBvzB,uBACxB,SAACmG,GACCkgB,GAAwB,OAALlgB,QAAK,IAALA,OAAA,EAAAA,EAAO8X,OAAO/d,QAAS,MAE5C,CAACmmB,IAGGmN,EAAwBxzB,uBAC5B,SAACmG,GACCogB,GAA4B,OAALpgB,QAAK,IAALA,OAAA,EAAAA,EAAO8X,OAAO/d,QAAS,MAEhD,CAACqmB,IAGGkN,EAAmBzzB,uBACvB,SAACmG,GACCsgB,GAAe,OAALtgB,QAAK,IAALA,OAAA,EAAAA,EAAO8X,OAAO/d,QAAS,MAEnC,CAACumB,IAGGiN,EAAqB1zB,uBACzB,SAACmG,GACCwgB,EAAcgN,SAAQ,OAACxtB,QAAD,IAACA,OAAD,EAACA,EAAO8X,OAAO/d,QAAU,KAEjD,CAACymB,IAGGiN,EAAqB5zB,uBACzB,SAACmG,GACC0gB,EAAc8M,SAAQ,OAACxtB,QAAD,IAACA,OAAD,EAACA,EAAO8X,OAAO/d,QAAU,KAEjD,CAAC2mB,IAGGgN,EAAc7zB,uBAAY,WAC9B8mB,IACApnB,EAAmB,QAClB,CAAConB,EAAsBpnB,IAEpBo0B,EAAY,kCAA8BtN,GAC1CuN,EAAc,uCAAmCrN,EAAnC,sBAA2DE,EAA3D,UA8BpB,OA5BAhe,qBAAU,WACR,IAAMoH,EAAG,0BAAsB0W,EAAtB,+BAAuDE,GACpC,cAAxBN,GAEA5mB,EADEgnB,GAAc,GAAKE,EAAa,GAAKF,EAAaE,EACjC,CACjB5W,MACAnL,KAAMkvB,EACN5mB,KAAM,MACN6d,IAAKtE,EACL+L,IAAK7L,GAGY,QAGtB,CAACN,EAAqBI,EAAYE,EAAYmN,EAAgBr0B,IAEjEkJ,qBAAU,WACR,IAAMoH,EAAG,kCAA8BwW,EAA9B,KACmB,WAAxBF,GAEA5mB,EADa,KAAX8mB,EACiB,CAAExW,MAAKnL,KAAMivB,EAAc3mB,KAAM,SAAUqZ,UAE3C,QAGtB,CAACF,EAAqBE,EAAQsN,EAAcp0B,IAG7C,oCACE,yBAAK6G,UAAWC,EAAO4sB,YAAvB,mOAKA,yBAAK7sB,UAAWC,EAAOysB,mBACC,KAApB7M,GAAkD,KAAxBE,IAC1B,yBAAK/f,UAAWC,EAAO0sB,eACrB,yBAAK3sB,UAAWC,EAAO2sB,iBACrB,kBAAC,IAAD,CAAiB3vB,KAAM4b,MADzB,gBAGA,kBAAC,GAAD,CACEhY,GAAG,sBACHnF,MAAM,sBACNqU,QA/GW,CAAC,CAAEpW,MAAO,eAAgB+B,MAAO,iBAgH5CmZ,SAAUmY,EACVrzB,MAAOkmB,IAERA,GACC,kBAAC,GAAD,CACEhf,GAAE,iBAAYgf,EAAZ,YACFnkB,MAAK,iBAAYmkB,EAAZ,YACL9P,QAtHa,CACzB,CAAEpW,MAAO,YAAa+B,MAAO,aAC7B,CAAE/B,MAAO,SAAU+B,MAAO,WAqHdmZ,SAAUoY,EACVtzB,MAAOomB,OAMQ,KAApBF,GAAkD,KAAxBE,IAC3B,oCACE,8BAAOA,GACP,kBAAChR,EAAA,EAAD,CAAY1O,QAASitB,GACnB,kBAAC,IAAD,CAAiBrwB,KAAMsZ,OAEzB,6BACyB,WAAxBwJ,GACC,oCACE,8BAAOwN,GACP,kBAAC,GAAD,CACE1sB,GAAG,gBACHnF,MAAM,SACNqU,QAvIM,CACpB,CACErU,MAAO,OACP/B,MAAO,QAET,CACE+B,MAAO,SACP/B,MAAO,UAET,CACE+B,MAAO,QACP/B,MAAO,SAET,CACE+B,MAAO,UACP/B,MAAO,YAyHKkb,SAAUqY,EACVvzB,MAAOsmB,KAIY,cAAxBF,GACC,oCACE,8BAAOyN,GACP,yBAAKxtB,UAAWC,EAAO6sB,cACrB,0BAAM9sB,UAAWC,EAAO8sB,mBAAxB,gBACA,kBAACpP,GAAA,EAAD,CAAW/W,KAAK,SAASjN,MAAOwmB,EAAYtL,SAAUsY,KAExD,yBAAKntB,UAAWC,EAAO6sB,cACrB,0BAAM9sB,UAAWC,EAAO8sB,mBAAxB,gBACA,kBAACpP,GAAA,EAAD,CAAW/W,KAAK,SAASjN,MAAO0mB,EAAYxL,SAAUwY,Y,SCnLlEI,GAAkB,CACtBpyB,aAAc,KACduG,WAAY,MACZJ,MAAO,OACPlG,OAAQ,QAGK6F,gBACb,SAAClC,GAAD,MAA4B,CAC1B7D,KAAM,CACJgG,QAAS,OACTqQ,cAAe,SACfnW,OAAQ,SAEV0C,KAAM,CACJwrB,KAAM,IACNpoB,QAAS,OACTC,WAAY,UACZsQ,UAAW,QAEbsS,MAAO,CACL,aAAc,OACduF,KAAM,KAERkE,YAAa,CACXtsB,QAAS,OACT9F,OAAQ,OACRC,gBAAiB0D,EAAMN,QAAQR,OAAOjE,MACtC0H,WAAY,OAEd+rB,gBAAiB,CACfryB,OAAQ,OACR8F,QAAS,OACTI,MAAO,OACPjG,gBAAiB0D,EAAMN,QAAQZ,QAAQC,KACvCqD,WAAY,SACZ7F,MAAOyD,EAAMN,QAAQR,OAAOjE,MAC5B2B,SAAU,QACV8X,YAAa,SAEfia,aAAc,CACZ,OAAO,eACFH,GADL,CAEElyB,gBAAiB0D,EAAMN,QAAQZ,QAAQC,KACvC,UAAW,CACTzC,gBAAiBsyB,aAAO5uB,EAAMN,QAAQZ,QAAQC,KAAM,OAGxD,QAAQ,eACHyvB,GADL,CAEElyB,gBAAiB0D,EAAMN,QAAQL,KAAKP,QACpC,UAAW,CACTxC,gBAAiBsyB,aAAO5uB,EAAMN,QAAQL,KAAKP,QAAS,QAI1D+vB,WAAY,CACVC,UAAW,2BACXvyB,MAAOyD,EAAMN,QAAQR,OAAOjE,UAGhC,CAAE2H,KAAM,UAAWC,MAAO,ICQbjJ,mBAvDK,WAClB,IAAMoH,EAAS2O,KACPnM,EAAYI,IAAZJ,QACAzJ,EAA0BY,IAA1BZ,sBACFiG,EhD4BgB,SAACA,GAA0B,IACzCC,EAAiBrF,qBAAWsF,GAA5BD,aACR,OAAOF,EAAS,CAAEC,QAAOC,iBgD9BX8uB,CAAS,QAJC,EAK8Bj1B,oBAAkB,GALhD,mBAKjBk1B,EALiB,KAKIC,EALJ,KAOlBC,EAAqB10B,uBAAY,WACrCy0B,GAAwBD,KACvB,CAACA,IAOJ,OAJA5rB,qBAAU,WACH4rB,GAAiD,KAA1Bj1B,GAA8Bk1B,GAAuB,KAChF,CAACl1B,EAAuBi1B,IAGzB,yBAAKjuB,UAAWC,EAAO7E,MACrB,6BACE,kBAAC,EAAD,MACA,kBAAC,GAAD,OAGDqH,GACC,yBAAKzC,UAAWC,EAAOjC,MACrB,kBAAC,IAAD,CAAkBiB,MAAOA,GACvB,kBAAC,GAAD,OAGF,yBAAKe,UAAWC,EAAOgkB,OACM,KAA1BjrB,GACC,yBAAKgH,UAAWC,EAAOytB,aACrB,yBAAK1tB,UAAWC,EAAO0tB,iBACrB,mDAEF,kBAAC5e,EAAA,EAAD,CACE/O,UAAS,UAAKC,EAAO2tB,aAAZ,YAA4BK,EAAsB,KAAO,OAClE5tB,QAAS8tB,GAET,kBAAC,IAAD,CAAiBnuB,UAAWC,EAAO6tB,WAAY7wB,KAAMmxB,QAIhC,KAA1Bp1B,GAAgCi1B,EAC/B,kBAAC,GAAD,MAEA,kBAAC,GAAD,YC3BCp1B,mBA3BU,WAAO,IAAD,IACN2yB,cAAf3qB,EADqB,EACrBA,GAAI4qB,EADiB,EACjBA,OACJhb,EAAae,KAAbf,SACA7N,EAAeC,IAAfD,WACA+R,EAAmBC,KAAnBD,eACFlQ,EAAY4pB,mBAAmBxtB,GAC/BytB,EAAe5N,mBAAQ,kBAAMjQ,EAASa,WAAU,SAAA7O,GAAO,OAAIA,EAAQ5B,KAAO4D,OAAY,CAC1FA,EACAgM,IAEIhO,EAAUgO,EAAS6d,GACnB9Z,EAAW,OAAG/R,QAAH,IAAGA,GAAH,UAAGA,EAASoB,aAAZ,aAAG,EAAiBwqB,mBAAmB5C,IAUxD,OARAppB,qBAAU,WACRO,EAAWH,KACV,CAACA,EAASG,IAEbP,qBAAU,WACRsS,EAAeH,KACd,CAACA,EAAaG,IAEF,MAAXlS,EAAwB,KACT,MAAf+R,EAA4B,kBAAC,IAAD,CAAUrU,GAAE,mBAAcU,EAAd,iBAErC,kBAAC,GAAD,SCzBI0tB,GAAc51B,wBAAoC,IAMlD61B,GAAsC,SAAC,GAAkB,IAAhB11B,EAAe,EAAfA,SAAe,EAC3CC,mBAAwB,MADmB,mBAC5D01B,EAD4D,KACtDC,EADsD,KAEnE,OAAO,kBAACH,GAAY70B,SAAb,CAAsBC,MAAO,CAAE80B,OAAMC,YAAY51B,I,UCb3CqI,gBACb,SAAClC,GAAD,MAA4B,CAC1B7D,KAAM,CACJgG,QAAS,OACTqQ,cAAe,UAEjB/V,MAAO,CACLQ,QAAQ,YACRuX,cAAe,OACf5X,SAAU,QACVF,WAAY,QAGhB,CAAEkG,KAAM,OAAQC,MAAO,ICwBVjJ,mBAtBY,SAAC,GAAc,IAAZ81B,EAAW,EAAXA,KACtB1uB,EAAS2O,KAEf,OACE,yBAAK5O,UAAWC,EAAO7E,MACrB,kBAAC,KAAD,KACE,kBAAC,KAAD,KACGuzB,EAAKzlB,KAAI,SAAA0lB,GAAG,OACX,kBAAC,KAAD,CAAU9lB,IAAK0E,IAAQC,YACrB,kBAAC4I,GAAA,EAAD,CAAQ0M,QAAS,CAAErnB,MAAOuE,EAAOvE,QAAUkzB,EAAIlzB,YAKpDizB,EAAKzlB,KAAI,SAAA0lB,GAAG,OACX,kBAAC,KAAD,CAAU9lB,IAAK0E,IAAQC,YAAamhB,EAAIC,mB,qBClBnCh2B,mBARK,WAClB,OACE,yBAAKmH,UAAWC,KAAO7E,MACrB,kBAAC,IAAD,CAAiB6B,KAAM6xB,IAAW9uB,UAAWC,KAAO7E,KAAMkb,KAAK,KAAKyY,MAAI,Q,6ECP/D5tB,gBACb,SAAClC,GAAD,MAA4B,CAC1B7D,KAAM,CACJgG,QAAS,OACTqQ,cAAe,SACfvV,QAAS+C,EAAMnF,UAAUC,QAAQC,eAEnCg1B,oBAAqB,CACnB9b,UAAW,YAEb+b,YAAa,CACX9b,UAAW,OAEb+b,mBAAoB,CAClBvc,YAAa,OAEfiB,kBAAmB,CACjBZ,MAAO,QACPxR,MAAO,WAGX,CAAEK,KAAM,eAAgBC,MAAO,ICwGlBjJ,mBApG6B,SAAC,GAAoC,IAgD3EgJ,EAAMuE,EAhDmCrF,EAAiC,EAAjCA,KAAME,EAA2B,EAA3BA,QAASkuB,EAAkB,EAAlBA,YACtDC,GAAwBD,EACxBlvB,EAAS2O,KACTlK,EAAUmK,cACVwgB,EAAiBjtB,iBAAyB,MAC1CktB,EAAiBltB,iBAAyB,MAL8B,EAMxCoP,KAA9BR,EANsE,EAMtEA,WAAYI,EAN0D,EAM1DA,cAEdme,EAAa91B,uBACjB,SAACgL,GACCC,EAAQR,KAAR,mBAAyBU,mBAAmBH,GAA5C,gBACAxD,MAEF,CAACyD,EAASzD,IAGNuuB,EAAyB/1B,uBAC7B,SAACmG,GAA6C,IAAD,QAC3CA,EAAM6vB,iBACN,IAAMhrB,EAAY+I,IAAQC,WACpB5L,EAAY,oBAAGwtB,EAAe/sB,eAAlB,aAAG,EAAwB3I,aAA3B,QAAoC,GAChDyM,EAAmB,oBAAGkpB,EAAehtB,eAAlB,aAAG,EAAwB3I,aAA3B,QAAoC,GAC7DqX,EhDlCC,SAA0BnP,EAAcuE,EAAqB3B,GAClE,MAAO,CACL5D,GAAE,OAAE4D,QAAF,IAAEA,IAAa+I,IAAQC,WACzB5L,KAAMA,EACNuE,YAAaA,EACbqB,QAAS,GACTkB,cAAe,GACf9E,MAAO,CACL6rB,MAAO,CACL5mB,IAAK,QACLpN,MAAO,QACPsI,YAAa,MgDuBJ2rB,CAAiB9tB,EAAMuE,EAAa3B,IAC/C8qB,EAAW9qB,KAEb,CAACuM,EAAYue,IAGTK,EAAsBn2B,uBAC1B,SAACmG,GAA6C,IAAD,IAE3C,GADAA,EAAM6vB,iBAEJN,KACC,UAAAE,EAAe/sB,eAAf,eAAwB3I,SAAUw1B,EAAYttB,OAC7C,UAAAytB,EAAehtB,eAAf,eAAwB3I,SAAUw1B,EAAY/oB,aAChD,CACA,IAAMypB,EAAiBzkB,YAAQ+jB,GAAa,SAACW,GAA+B,IAAD,KACzE,UAAIT,EAAe/sB,eAAnB,aAAI,EAAwB3I,SAAOm2B,EAAiBjuB,KAAOwtB,EAAe/sB,QAAQ3I,QAClF,UAAI21B,EAAehtB,eAAnB,aAAI,EAAwB3I,SAC1Bm2B,EAAiB1pB,YAAckpB,EAAehtB,QAAQ3I,UAE1DyX,EAAcye,GAEhB5uB,MAEF,CAACmQ,EAAe+d,EAAaluB,IAI/B,GAAIkuB,EAAa,CACfttB,EAAOstB,EAAYttB,KACnB,IAAMkuB,EAAkBZ,EAAY/oB,YAChC2pB,GAAuC,KAApBA,IAAwB3pB,EAAc2pB,GAG/D,OACE,kBAAC/M,GAAA,EAAD,CAAQjiB,KAAMA,EAAME,QAASA,EAASgiB,kBAAgB,iBAAiBhO,WAAS,EAACiO,SAAS,MACxF,kBAACC,GAAA,EAAD,CAAaC,mBAAiB,GAC5B,kBAACrU,EAAA,EAAD,CAAYC,aAAW,QAAQ3O,QAASY,EAASjB,UAAWC,EAAO2T,mBACjE,kBAAC,IAAD,CAAiB3W,KAAMsZ,QAI3B,0BAAMyZ,SAAUZ,EAAuBI,EAAyBI,GAC9D,kBAACvM,GAAA,EAAD,KACE,kBAAC1F,GAAA,EAAD,CACE3I,QAAQ,WACR+F,WAAS,EACTrf,MAAM,eACNuZ,WAAS,EACTgb,SAAUb,EACV9V,SAAU+V,EACVvU,aAAcsU,OAAuBlsB,EAAYrB,IAGnD,kBAAC8b,GAAA,EAAD,CACE3I,QAAQ,WACRtZ,MAAM,sBACNuZ,WAAS,EACTqE,SAAUgW,EACVxU,aAAcsU,OAAuBlsB,EAAYkD,EACjDsc,WAAS,KAIb,kBAACa,GAAA,EAAD,KACE,kBAAClN,GAAA,EAAD,CACErB,QAAQ,YACRxZ,MAAM,UACNmgB,UAAWyT,GAAwB,kBAAC,IAAD,CAAiBnyB,KAAM4b,MAC1DjS,KAAK,UAEJwoB,EAAuB,SAAW,c,sBCrHhCjuB,gBACb,SAAClC,GAAD,MAA4B,CAC1BixB,UAAW,CACT9uB,QAAS,gBAEX+uB,MAAO,CACL/uB,QAAS,OACTqQ,cAAe,MACfpQ,WAAY,SACZhG,aAAc,OACdgZ,OAAQ,kCACR9Y,gBAAiB0D,EAAMN,QAAQR,OAAO5D,KACtCiB,MAAOyD,EAAMN,QAAQR,OAAOjE,MAC5BgC,QAAS,QACTk0B,kBAAmB,UACnBC,qBAAsB,UACtBC,eAAgB,eAElBve,YAAa,CACXY,YAAa,MACb4d,WAAY,UAEdC,QAAS,CACPpvB,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBoQ,SAAU,QACV2X,UAAW,MACX3nB,OAAQ,UACRrG,aAAc,MACdsX,YAAa,YAGjB,CAAE9Q,KAAM,4B,qBCrBJ4uB,GAAqC,SAAC,GAAuB,IAArB7pB,EAAoB,EAApBA,KAAMvG,EAAc,EAAdA,QAClD,OACE,4BACEL,UAAS,UAAKC,KAAOywB,kBAAZ,mBAAiD,YAAT9pB,GAAsB3G,KAAO0wB,cAC9E/pB,KAAK,SACLvG,QAASA,GAERuG,EAAK,GAAGgqB,cAAgBhqB,EAAK2K,MAAM,KAKpCsf,GAAqC,SAAC,GAAuB,IAArBjqB,EAAoB,EAApBA,KAAMvG,EAAc,EAAdA,QAClD,OACE,yBACEL,UAAS,UAAc,WAAT4G,EAAoB3G,KAAO6wB,OAAS7wB,KAAO8wB,QAAhD,YACP9wB,KAAO+wB,mBAET3wB,QAASA,EACT4wB,cAAarqB,GAEb,kBAAC,IAAD,CAAiB3J,KAAe,WAAT2J,EAAoBsqB,IAAU3a,QAKrD4a,GAAsC,SAAC,GAAuB,IAArBvqB,EAAoB,EAApBA,KAAMvG,EAAc,EAAdA,QAKnD,OACE,yBACEL,UAAS,UAAc,WAAT4G,EAAoB3G,KAAO6wB,OAAS7wB,KAAO8wB,QAAhD,YACP9wB,KAAOmxB,oBAET/wB,QAASA,EACT4wB,cAAarqB,GAEb,kBAAC,IAAD,CAAiB3J,KAAe,WAAT2J,EAAoBsqB,IAAU3a,MAZtC,CACjBua,OAAQ,SACRC,QAAS,UAWKnqB,KAgBH/N,mBAX6B,SAAC,GAA6B,IAA3B+N,EAA0B,EAA1BA,KAAM0P,EAAoB,EAApBA,KAAMjW,EAAc,EAAdA,QACzD,OAAQiW,GACN,IAAK,QACH,OAAO,kBAAC,GAAD,CAAmB1P,KAAMA,EAAMvG,QAASA,IACjD,IAAK,QACH,OAAO,kBAAC,GAAD,CAAmBuG,KAAMA,EAAMvG,QAASA,IACjD,IAAK,SACH,OAAO,kBAAC,GAAD,CAAoBuG,KAAMA,EAAMvG,QAASA,QCavCxH,mBA7DmD,SAAC,GAK5D,IAJLw4B,EAII,EAJJA,SACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WAEMvxB,EAAS2O,KADX,EAEoB7V,oBAAS,GAF7B,mBAEGgI,EAFH,KAESyV,EAFT,OAG4Bzd,mBAA6B,MAHzD,mBAGG0G,EAHH,KAGaC,EAHb,KAKEqS,EACJ,gBACCwf,GAAcD,EACX,sCAAwCE,EAAa,IAAMD,EAAa,KACxE,KAEApH,EAAiB1wB,uBAAY,SAACmG,GAClCF,EAAYE,EAAMC,eAClB2W,GAAQ,KACP,IAEGib,EAAkBh4B,uBAAY,WAClC63B,EAAaD,GACb7a,GAAQ,GACR9W,EAAY,QACX,CAAC2xB,EAAUC,IAERI,EAAmBj4B,uBAAY,WACnC+c,GAAQ,GACR9W,EAAY,QACX,IAEH,OACE,yBAAKM,UAAWC,EAAOiwB,WACrB,kBAACyB,GAAA,EAAD,CAAmBC,YAAaF,GAC9B,kBAACrb,GAAA,EAAD,CACE7a,MAAM,YACN8a,KAAK,QACLqF,UAAW,kBAAC,IAAD,CAAiB1e,KAAMse,MAClClb,QAAS8pB,GAJX,WASF,kBAAC0H,GAAA,EAAD,CACE9O,QAAS,CAAEoN,MAAOlwB,EAAOkwB,OACzBpvB,KAAMA,EACNtB,SAAUA,EACV8O,aAAc,CAAEC,SAAU,SAAUC,WAAY,UAChD6G,gBAAiB,CAAE9G,SAAU,MAAOC,WAAY,WAEhD,yBAAKzO,UAAWC,EAAO8R,aAAvB,IAAsCA,EAAtC,KACA,yBAAK/R,UAAWC,EAAOuwB,SACrB,kBAAC,GAAD,CAAcla,KAAK,QAAQ1P,KAAK,SAASvG,QAASoxB,IAClD,kBAAC,GAAD,CAAcnb,KAAK,QAAQ1P,KAAK,UAAUvG,QAASqxB,UCyD9C74B,mBAzGW,WACxB,IAAMoH,EAAS2O,KADe,EAEM4C,KAA5Bf,EAFsB,EAEtBA,SAAUS,EAFY,EAEZA,cACVtO,EAAeC,IAAfD,WAHsB,EAIN7J,oBAAS,GAJH,mBAIvBgI,EAJuB,KAIjByV,EAJiB,OAKgBzd,qBALhB,mBAKvB+4B,EALuB,KAKNC,EALM,OAMEh5B,mBAA6B,MAN/B,mBAMvB0G,EANuB,KAMbC,EANa,KAQxBsyB,EAAuBv4B,uBAAY,SAACgJ,GACxC+T,GAAQ,GACRub,EAAmBtvB,KAClB,IAEGwvB,EAAwBx4B,uBAAY,WACxC+c,GAAQ,KACP,IAEG7W,EAAWlG,uBACf,SAACmG,GACCF,EAAYE,EAAMC,eAClB,IAAM4C,EAAUgO,EAASU,QAAO,SAAA1O,GAAO,OAAIA,EAAQ5B,KAAOjB,EAAMC,cAAcgB,MAC1E4B,EAAQyU,QAAQtU,EAAWH,EAAQ,MAEzC,CAACgO,EAAU7N,IAGP9C,EAAYrG,uBAAY,WAC5BiG,EAAY,QACX,IAEGwyB,EAAWz4B,uBACf,SAACoH,GACCqQ,EAAcrQ,KAEhB,CAACqQ,IAGH,OACE,6BACE,kBAACihB,GAAA,EAAD,CAAgBnyB,UAAWC,EAAOgvB,aAChC,kBAACmD,GAAA,EAAD,CAAOpjB,aAAW,gBAChB,kBAACqjB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,QAIJ,kBAACC,GAAA,EAAD,KACG/hB,EAASvH,KAAI,SAAAzG,GAAO,OACnB,kBAAC6vB,GAAA,EAAD,CAAUxpB,IAAKrG,EAAQ5B,IACrB,kBAAC0xB,GAAA,EAAD,CAAW1D,UAAU,KAAK4D,MAAM,OAC9B,kBAACC,GAAA,EAAD,CACE7D,UAAW8D,IACXxyB,GAAE,mBAAcyE,mBAAmBnC,EAAQ5B,KAC3CrF,MAAM,UACNo3B,UAAU,QAETnwB,EAAQZ,OAIb,kBAAC0wB,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,mBAEA,kBAACA,GAAA,EAAD,CAAWM,MAAM,SACf,kBAACxc,GAAA,EAAD,CACErW,UAAWC,EAAOivB,mBAClB1zB,MAAM,UACN8a,KAAK,QACLqF,UAAW,kBAAC,IAAD,CAAiB1e,KAAMke,MAClC9a,QAAS,kBAAY2xB,EAAqBvvB,KAL5C,aASA,kBAAC4T,GAAA,EAAD,CACExV,GAAI4B,EAAQ5B,GACZb,UAAWC,EAAOivB,mBAClB1zB,MAAM,UACN8a,KAAK,QACLqF,UAAW,kBAAC,IAAD,CAAiB1e,KAAM61B,MAClCzyB,QAASV,GANX,UAUA,kBAAC,GAAD,CACE4xB,WAAW,UACXC,WAAY/uB,EAAQZ,KACpBwvB,SAAU5uB,EAAQ5B,GAClBywB,aAAcY,YAQ5B,kBAAC,GAAD,CAAYzyB,SAAUA,EAAUK,UAAWA,IAC3C,kBAAC,GAAD,CAAciB,KAAMA,EAAME,QAASgxB,EAAuB9C,YAAa2C,QCjF9Dj5B,mBA/BU,WACvB,IAAMoH,EAAS2O,KADc,EAEL7V,oBAAS,GAFJ,mBAEtBgI,EAFsB,KAEhByV,EAFgB,KAGrBlP,EAAWkK,KAAXlK,OAEFyrB,EAAsBt5B,uBAAY,WACtC+c,GAAQ,KACP,IAEGwc,EAAuBv5B,uBAAY,WACvC+c,GAAQ,KACP,IAEH,OACE,yBAAKxW,UAAWC,EAAO7E,MACrB,kBAACib,GAAA,EAAD,CACErW,UAAWC,EAAO+uB,oBAClBha,QAAQ,YACRxZ,MAAM,UACNmgB,UAAW,kBAAC,IAAD,CAAiB1e,KAAM4b,MAClCxY,QAAS0yB,GALX,kBAUA,kBAAC,GAAD,CAAchyB,KAAMA,EAAME,QAAS+xB,IACvB,YAAX1rB,EAAuB,kBAAC,GAAD,MAAc,kBAAC,GAAD,U,sBCpC7BnG,gBACb,SAAClC,GAAD,MAA4B,CAC1B7D,KAAM,CACJgG,QAAS,OACTqQ,cAAe,SACfvV,QAAS+C,EAAMnF,UAAUC,QAAQC,eAEnCi5B,UAAW,CACT7xB,QAAS,OACTE,eAAgB,YAElB4xB,oBAAqB,CACnBhgB,UAAW,WACXtR,WAAY,QAEduxB,aAAc,CACZhgB,UAAW,OAEbigB,WAAY,CACVzgB,YAAa,OAEfiB,kBAAmB,CACjBZ,MAAO,QACPxR,MAAO,QAET/E,MAAO,CACL2E,QAAS,QAEXiyB,gBAAiB,CACfjyB,QAAS,OACTC,WAAY,UAEdiyB,YAAa,CACX/C,WAAY,SACZ5d,YAAa,OAEf4gB,SAAU,CACRh3B,UAAW,aAGf,CAAEsF,KAAM,eAAgBC,MAAO,ICoClBjJ,mBA5DW,WACxB,IAAMoH,EAAS2O,KADe,EAEO8Q,KAA7BzR,EAFsB,EAEtBA,SAAUoR,EAFY,EAEZA,eAMZ6S,EAAWz4B,uBACf,SAACoH,GACCwe,EAAexe,KAEjB,CAACwe,IAGH,OACE,kBAAC8S,GAAA,EAAD,CAAgBnyB,UAAWC,EAAOkzB,cAChC,kBAACf,GAAA,EAAD,CAAOpjB,aAAW,iBAChB,kBAACqjB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,sBACA,kBAACA,GAAA,EAAD,gBACA,kBAACA,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,QAIJ,kBAACC,GAAA,EAAD,KACGvkB,EAAS/E,KAAI,SAAAyX,GAAC,OACb,kBAAC2R,GAAA,EAAD,CAAUxpB,IAAK6X,EAAE9f,IACf,kBAAC0xB,GAAA,EAAD,CAAW1D,UAAU,KAAK4D,MAAM,OAC7B9R,EAAEjlB,OAEL,kBAAC62B,GAAA,EAAD,KAAY5R,EAAEvZ,SACd,kBAACmrB,GAAA,EAAD,MA9BQiB,EA8Be7S,EAAEtC,SA7B5BoV,KAAOD,GAAUE,YA+Bd,kBAACnB,GAAA,EAAD,CAAWM,MAAM,SACf,kBAACxc,GAAA,EAAD,CACErW,UAAWC,EAAOmzB,WAClB53B,MAAM,UACN8a,KAAK,QACLqF,UAAW,kBAAC,IAAD,CAAiB1e,KAAMke,OAJpC,QAQA,kBAAC,GAAD,CACEoW,WAAW,YACXC,WAAY7Q,EAAEjlB,MACd21B,SAAU1Q,EAAE9f,GACZywB,aAAcY,MA7CX,IAACsB,WCyEP36B,mBA1E2C,SAAC,GAAuB,IAArBkI,EAAoB,EAApBA,KAAME,EAAc,EAAdA,QAC3DhB,EAAS2O,KADgE,EAE/C7V,mBAAiB,IAF8B,mBAExEw6B,EAFwE,KAE9DI,EAF8D,KAGzEC,EAAgBxxB,iBAAyB,MAEvC2c,EAAgBW,KAAhBX,YAEF8U,EAAap6B,uBACjB,SAACmG,GAAuC,IAAD,EACrCA,EAAM6vB,iBACN,IAAMqE,EAAK,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAetxB,eAAlB,aAAG,EAAwBwxB,OACtC,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAO5c,SAAQ6H,EAAY+U,EAAM,IACrC7yB,IACA0yB,EAAY,MAEd,CAAC5U,EAAa9d,IAGV8yB,EAAmBt6B,uBAAY,WAAO,IAAD,KACzC,OAAIm6B,QAAJ,IAAIA,GAAJ,UAAIA,EAAetxB,eAAnB,iBAAI,EAAwBwxB,aAA5B,aAAI,EAAgC,KAAIH,EAAYC,EAActxB,QAAQwxB,MAAM,GAAGjyB,QAClF,CAAC+xB,IAEJ,OACE,kBAAC5Q,GAAA,EAAD,CAAQjiB,KAAMA,EAAME,QAASA,EAASgiB,kBAAgB,kBAAkBhO,WAAS,EAACiO,SAAS,MACzF,kBAACC,GAAA,EAAD,CAAaC,mBAAiB,GAC5B,kBAACrU,EAAA,EAAD,CAAYC,aAAW,QAAQ3O,QAASY,EAASjB,UAAWC,EAAO2T,mBACjE,kBAAC,IAAD,CAAiB3W,KAAMsZ,QAI3B,0BAAMyZ,SAAU6D,GACd,kBAACxQ,GAAA,EAAD,KACE,yBAAKrjB,UAAWC,EAAOozB,iBACrB,kBAAC1Y,GAAA,EAAD,CACE9Z,GAAG,oBACHb,UAAWC,EAAOxD,MAClB6c,SAAUsa,EACVhtB,KAAK,OACLgX,WAAY,CAAEkT,OAAQ,SACtBjc,SAAUkf,IAGZ,2BAAO5e,QAAQ,qBACb,kBAACkB,GAAA,EAAD,CACErW,UAAWC,EAAOqzB,YAClBte,QAAQ,YACRxZ,MAAM,UACNqzB,UAAU,QAJZ,gBAUF,yBAAK7uB,UAAWC,EAAOszB,UACpBA,EAAW,8BAAOA,GAAmB,+DAK5C,kBAAChQ,GAAA,EAAD,KACE,kBAAClN,GAAA,EAAD,CACErB,QAAQ,YACRxZ,MAAM,UACNmgB,UAAW,kBAAC,IAAD,CAAiB1e,KAAM+2B,MAClCptB,KAAK,UAJP,gBC3BK/N,mBA1CU,WACvB,IAAMoH,EAAS2O,KACPtH,EAAWkK,KAAXlK,OAFqB,EAILvO,oBAAkB,GAJb,mBAItBgI,EAJsB,KAIhByV,EAJgB,KAKvByd,EAAkBx6B,uBAAY,WAClC+c,GAAQ,KACP,IAEG0d,EAAmBz6B,uBAAY,WACnC+c,GAAQ,KACP,IAEH,OACE,yBAAKxW,UAAWC,EAAO7E,MACrB,yBAAK4E,UAAWC,EAAOgzB,WACrB,kBAAC5c,GAAA,EAAD,CACErW,UAAWC,EAAOizB,oBAClBle,QAAQ,YACRxZ,MAAM,UACNmgB,UAAW,kBAAC,IAAD,CAAiB1e,KAAM+2B,MAClC3zB,QAAS4zB,GALX,kBASA,kBAAC5d,GAAA,EAAD,CACErW,UAAWC,EAAOizB,oBAClBle,QAAQ,YACRxZ,MAAM,UACNmgB,UAAW,kBAAC,IAAD,CAAiB1e,KAAMglB,OAJpC,mBAUF,kBAAC,GAAD,CAAqBlhB,KAAMA,EAAME,QAASizB,IAE9B,YAAX5sB,EAAuB,kBAAC,GAAD,MAAc,kBAAC,GAAD,UCY7BzO,mBA1CC,WACd,OACE,kBAAC,EAAD,CAAeoG,MAAM,SACnB,kBAAC,GAAD,KACE,kBAACuD,EAAD,KACE,kBAAC,GAAD,KACE,kBAAC+R,GAAD,KACE,kBAACmK,GAAD,KACE,kBAAChJ,GAAD,KACE,kBAAC9c,EAAD,KACE,kBAACgnB,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO5S,KAAK,6BACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,gBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,MACA,kBAAC,GAAD,CACE2hB,KAAM,CACJ,CAAEjzB,MAAO,UAAWmzB,UAAW,kBAAC,GAAD,OAC/B,CAAEnzB,MAAO,WAAYmzB,UAAW,kBAAC,GAAD,yB,QCxBhEsF,IAASC,OAAO,kBAAC,GAAD,MAASvpB,SAASwpB,eAAe,U,8ECQ3CxjB,EAAS,IA3Bf,WACE,aAA0B,IAAdA,EAAa,uDAAJ,GAAI,oBACvByjB,KAAKzjB,OAAS0jB,EAAOC,OAAP,eAAqBD,EAAOC,OAA5B,GAAuC3jB,GAAvC,eAAuDA,GAFzE,gDAKMhP,EAAMiZ,GACR,IAAM2Z,EAAQ5yB,EAAK6yB,MAAM,KACrB1oB,EAAUsoB,KAAKzjB,OACflX,EAAQ,KACZ,IAAK,IAAM0tB,KAAKoN,EAAO,CAGrBzoB,EADArS,EAAQqS,EADKyoB,EAAMpN,IAIrB,OAAO1tB,GAASmhB,IAdpB,0BAiBM6Z,GACEA,IACFL,KAAKzjB,OAAL,eACKyjB,KAAKzjB,OADV,GAEK8jB,QArBX,MA4Be9jB,Q,uCC3BftY,EAAOC,QAAU,CAAC,KAAO,qBAAqB,SAAW,2B,oBCAzDD,EAAOC,QAAU,CAAC,KAAO,yB","file":"static/js/main.7e8abef5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/camino-logo-dark.c8fc712a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectButton\":\"ActionButton_selectButton___qB5R\",\"accept\":\"ActionButton_accept__28b2D\",\"decline\":\"ActionButton_decline__zz-vG\",\"smallActionButton\":\"ActionButton_smallActionButton__1bPWu\",\"largeActionButton\":\"ActionButton_largeActionButton__blRdA\",\"largeDecline\":\"ActionButton_largeDecline__wz9Zw\",\"mediumActionButton\":\"ActionButton_mediumActionButton__3EpOp\"};","import { enableAllPlugins } from 'immer';\n\n// enables immer to run in IE11\nenableAllPlugins();\n","import React, {\n  createContext,\n  FC,\n  ReactNode,\n  memo,\n  useState,\n  useContext,\n  useCallback\n} from 'react';\n\nimport { BuilderModel } from 'criteria-model';\n\ninterface CurrentCriteriaContextInterface {\n  buildCriteriaSelected: boolean;\n  currentCriteriaNodeId: string;\n  currentCriteria: BuilderModel | null;\n  criteriaName: string;\n  setBuildCriteriaSelected: (buildCriteriaSelect: boolean) => void;\n  setCurrentCriteriaNodeId: (id: string) => void;\n  setCurrentCriteria: (currentCriteria: BuilderModel | null) => void;\n  setCriteriaName: (criteriaName: string) => void;\n  resetCurrentCriteria: () => void;\n}\n\nexport const CurrentCriteriaContext = createContext<CurrentCriteriaContextInterface>(\n  {} as CurrentCriteriaContextInterface\n);\n\ninterface CurrentCriteriaProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrentCriteriaProvider: FC<CurrentCriteriaProviderProps> = memo(({ children }) => {\n  const [currentCriteriaNodeId, setCurrentCriteriaNodeId] = useState<string>('');\n  const [currentCriteria, setCurrentCriteria] = useState<BuilderModel | null>(null);\n  const [buildCriteriaSelected, setBuildCriteriaSelected] = useState<boolean>(false);\n  const [criteriaName, setCriteriaName] = useState<string>('');\n\n  const resetCurrentCriteria = useCallback(() => {\n    setCurrentCriteriaNodeId('');\n    setCurrentCriteria(null);\n    setBuildCriteriaSelected(false);\n    setCriteriaName('');\n  }, [setCurrentCriteriaNodeId, setCurrentCriteria, setBuildCriteriaSelected, setCriteriaName]);\n\n  return (\n    <CurrentCriteriaContext.Provider\n      value={{\n        buildCriteriaSelected,\n        setBuildCriteriaSelected,\n        currentCriteriaNodeId,\n        setCurrentCriteriaNodeId,\n        currentCriteria: currentCriteria,\n        setCurrentCriteria: setCurrentCriteria,\n        criteriaName,\n        setCriteriaName,\n        resetCurrentCriteria\n      }}\n    >\n      {children}\n    </CurrentCriteriaContext.Provider>\n  );\n});\n\nexport const useCurrentCriteriaContext = (): CurrentCriteriaContextInterface =>\n  useContext(CurrentCriteriaContext);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport deepmerge from 'deepmerge';\n\ndeclare module '@material-ui/core/styles/createMuiTheme' {\n  interface Theme {\n    variables: {\n      spacing: {\n        globalPadding: string;\n      };\n    };\n  }\n  // allow configuration using `createMuiTheme`\n  interface ThemeOptions {\n    variables?: {\n      spacing?: {\n        globalPadding?: string;\n      };\n    };\n  }\n}\n\ndeclare module '@material-ui/core/styles/createPalette' {\n  interface CommonColors {\n    blue: string;\n    blueLighter: string;\n    red: string;\n    gray: string;\n    grayMedium: string;\n    grayBlue: string;\n    grayLighter: string;\n    grayDark: string;\n    grayVeryDark: string;\n    green: string;\n  }\n}\n\nconst variables = {\n  spacing: {\n    globalPadding: '2em'\n  }\n};\n\nconst colors = {\n  white: '#fff',\n  black: '#222',\n  red: '#d95d77',\n  blue: '#5d89a1',\n  blueLighter: '#9ad2f0',\n  gray: '#4a4a4a',\n  grayMedium: '#bbbdc0',\n  grayBlue: '#cbd5df',\n  grayLight: '#6c6c6c',\n  grayLighter: '#eaeef2',\n  grayDark: '#444',\n  grayVeryDark: '#3a3a3a',\n  green: '#2fa874'\n};\n\nconst typography = {\n  fontFamily: [\n    'Open Sans',\n    '-apple-system',\n    'BlinkMacSystemFont',\n    'Segoe UI',\n    'Roboto',\n    'Oxygen',\n    'Ubuntu',\n    'Cantarell',\n    'Fira Sans',\n    'Droid Sans',\n    'Helvetica Neue',\n    'sans-serif'\n  ].join(',')\n};\n\nconst materialUiOverridesBase = {\n  MuiButton: {\n    root: {\n      borderRadius: 0,\n      height: '38px',\n      '&$disabled': {\n        backgroundColor: colors.grayMedium,\n        color: colors.white\n      }\n    },\n    contained: {\n      '&$disabled': {\n        backgroundColor: colors.grayMedium,\n        color: colors.white\n      }\n    },\n    label: {\n      fontWeight: 600\n    },\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    },\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    }\n  },\n  MuiTableHead: {\n    root: {\n      backgroundColor: colors.grayLighter\n    }\n  },\n  MuiTableCell: {\n    root: {\n      fontSize: '1em'\n    },\n    head: {\n      padding: '5px 16px',\n      borderBottom: 'none'\n    }\n  },\n  MuiFormControl: {\n    root: {\n      margin: '10px 0'\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      fontStyle: 'italic',\n      '&.Mui-error': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      fontWeight: 600\n    },\n    input: {\n      '&::selection': {\n        color: colors.white,\n        backgroundColor: colors.grayDark\n      },\n      '&:-webkit-autofill': {\n        transitionDelay: '9999s',\n        transitionProperty: 'background-color, color'\n      }\n    }\n  },\n  MuiTooltip: {\n    tooltip: {\n      fontSize: 14,\n      backgroundColor: colors.black\n    },\n    arrow: {\n      color: colors.black\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      borderRadius: '0'\n    }\n  },\n  MuiSelect: {\n    icon: {\n      fontSize: '2em'\n    }\n  },\n  MuiPaper: {\n    rounded: {\n      borderRadius: '0'\n    }\n  },\n  MuiDialogTitle: {\n    root: {\n      padding: '1em'\n    }\n  },\n  MuiDialogContent: {\n    root: {\n      padding: '0 4em'\n    }\n  },\n  MuiDialogActions: {\n    root: {\n      padding: '2em 4em'\n    }\n  },\n  MuiCard: {\n    root: {\n      overflow: 'visible'\n    }\n  },\n  MuiIconButton: {\n    root: {\n      '&:disabled': {\n        color: colors.grayLight\n      }\n    }\n  }\n};\n\nconst materialUiOverridesDark = {\n  MuiFormControl: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      }\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      color: colors.white,\n      '&$focused': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      color: colors.white,\n      '&:hover': {\n        borderColor: colors.white,\n        backgroundColor: colors.grayDark\n      }\n    }\n  },\n  MuiTooltip: {\n    tooltip: {\n      fontSize: 14\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      },\n      '&:hover $notchedOutline': {\n        borderColor: colors.white\n      },\n      '&$focused $notchedOutline': {\n        borderColor: colors.white\n      }\n    },\n    notchedOutline: {\n      borderColor: colors.white\n    }\n  },\n  MuiSelect: {\n    icon: {\n      color: colors.white\n    }\n  },\n  MuiMenuItem: {\n    root: {\n      color: colors.grayDark\n    }\n  }\n};\n\nconst paletteBase = {\n  primary: {\n    main: colors.blue\n  },\n  secondary: {\n    main: colors.red\n  },\n  error: {\n    main: colors.red\n  },\n  common: colors,\n  background: {\n    default: colors.grayLighter\n  },\n  text: {\n    primary: colors.gray,\n    secondary: colors.gray\n  },\n  grey: {\n    800: colors.gray\n  }\n};\n\nconst lightTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: { ...paletteBase },\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nconst darkTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    text: {\n      primary: colors.white,\n      secondary: colors.white\n    }\n  }),\n  overrides: deepmerge(materialUiOverridesBase, materialUiOverridesDark),\n  variables: { ...variables }\n});\n\nconst projectorTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    background: {\n      default: colors.grayBlue\n    },\n    text: {\n      primary: colors.black,\n      secondary: colors.black\n    }\n  }),\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nexport default lightTheme;\nexport { lightTheme, darkTheme, projectorTheme };\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useState,\n  useCallback,\n  useContext,\n  ReactNode\n} from 'react';\nimport { ThemeProvider as MuiThemeProvider, Theme } from '@material-ui/core/styles';\nimport { lightTheme, darkTheme, projectorTheme } from '../styles/theme';\n\ninterface ThemeProviderProps {\n  theme: string;\n  children: ReactNode;\n}\n\ninterface ThemeContextInterface {\n  toggleTheme: () => void;\n  useProjector: boolean;\n}\n\nconst getTheme = ({ theme, useProjector }: { theme: string; useProjector: boolean }): Theme => {\n  if (useProjector) {\n    switch (theme) {\n      case 'dark':\n        // TODO: replace with dark projector theme\n        return darkTheme;\n\n      default:\n        return projectorTheme;\n    }\n  }\n\n  switch (theme) {\n    case 'dark':\n      return darkTheme;\n\n    default:\n      return lightTheme;\n  }\n};\n\nexport const ThemeContext = createContext({} as ThemeContextInterface);\nexport const useThemeToggle = (): (() => void) => {\n  const { toggleTheme } = useContext(ThemeContext);\n  return toggleTheme;\n};\nexport const useTheme = (theme: string): Theme => {\n  const { useProjector } = useContext(ThemeContext);\n  return getTheme({ theme, useProjector });\n};\n\nconst ThemeProvider: FC<ThemeProviderProps> = memo(({ theme = 'light', children }) => {\n  const [useProjector, setUseProjector] = useState(false);\n  const muiTheme = getTheme({ theme, useProjector });\n\n  const toggleTheme = useCallback(() => {\n    setUseProjector(currentUseProjector => !currentUseProjector);\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <ThemeContext.Provider value={{ useProjector, toggleTheme }}>\n        {children}\n      </ThemeContext.Provider>\n    </MuiThemeProvider>\n  );\n});\n\nexport default ThemeProvider;\n","import React, { FC, memo, useCallback, useState, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport { useThemeToggle } from '../ThemeProvider';\n\nimport logo from 'camino-logo-dark.png';\nimport styles from './Header.module.scss';\n\nconst Header: FC = () => {\n  const { resetCurrentCriteria } = useCurrentCriteriaContext();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const toggleTheme = useThemeToggle();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleToggleTheme = useCallback((): void => {\n    toggleTheme();\n    closeMenu();\n  }, [toggleTheme, closeMenu]);\n\n  return (\n    <header className={styles.header}>\n      <Link to=\"/\" className={styles.homeLink} onClick={(): void => resetCurrentCriteria()}>\n        <img src={logo} alt=\"logo\" className={styles.logo} />\n      </Link>\n\n      <button onClick={openMenu} aria-controls=\"options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faCog} />\n      </button>\n\n      <Menu\n        id=\"options-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n      >\n        <MenuItem onClick={handleToggleTheme}>Toggle Theme</MenuItem>\n      </Menu>\n    </header>\n  );\n};\n\nexport default memo(Header);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: '2em',\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary,\n      height: '6em',\n      justifyContent: 'space-between'\n    },\n    backButton: {\n      height: '45px',\n      width: '45px'\n    },\n    navigationIcons: {\n      fontSize: '20px',\n      color: theme.palette.common.gray,\n      cursor: 'pointer'\n    },\n    pathwayName: {\n      fontSize: '1.4em',\n      marginLeft: '1.5em'\n    }\n  }),\n  { name: 'Navigation', index: 1 }\n);\n","import { useEffect, useRef, useState, MutableRefObject } from 'react';\n\nfunction useRefState<T>(initialValue: T): [T, MutableRefObject<T>, Function] {\n  const [state, setState] = useState<T>(initialValue);\n  const stateRef = useRef(state);\n  useEffect(() => {\n    stateRef.current = state;\n  }, [state]);\n  return [state, stateRef, setState];\n}\n\nexport default useRefState;\n","import React, {\n  ReactNode,\n  createContext,\n  useContext,\n  FC,\n  memo,\n  useCallback,\n  MutableRefObject\n} from 'react';\nimport { Pathway } from 'pathways-model';\nimport useRefState from 'utils/useRefState';\n\ninterface CurrentPathwayContextInterface {\n  pathway: Pathway | null;\n  pathwayRef: MutableRefObject<Pathway | null>;\n  setPathway: (value: Pathway) => void;\n}\n\nexport const CurrentPathwayContext = createContext<CurrentPathwayContextInterface>(\n  {} as CurrentPathwayContextInterface\n);\n\ninterface CurrentPathwayProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrentPathwayProvider: FC<CurrentPathwayProviderProps> = memo(({ children }) => {\n  const [pathway, pathwayRef, _setPathway] = useRefState<Pathway | null>(null);\n\n  const setPathway = useCallback(\n    (value: Pathway) => {\n      _setPathway(value);\n    },\n    [_setPathway]\n  );\n\n  return (\n    <CurrentPathwayContext.Provider value={{ pathway, pathwayRef, setPathway }}>\n      {children}\n    </CurrentPathwayContext.Provider>\n  );\n});\n\nexport const useCurrentPathwayContext = (): CurrentPathwayContextInterface =>\n  useContext(CurrentPathwayContext);\n","import { PathwayNode, ActionNode, Pathway, Transition } from 'pathways-model';\nimport { History } from 'history';\n\nexport function isActionNode(node: PathwayNode): node is ActionNode {\n  const { action } = node as ActionNode;\n  return action !== undefined;\n}\n\nexport function isBranchNode(node: PathwayNode): boolean {\n  const { action, label, nodeTypeIsUndefined } = node as ActionNode;\n  return action === undefined && label !== 'Start' && !nodeTypeIsUndefined;\n}\n\ntype ConversionResource = {\n  [key: string]: string;\n};\nexport const resourceNameConversion: ConversionResource = {\n  MedicationRequest: 'Medication',\n  ServiceRequest: 'Procedure',\n  CarePlan: 'Regimen'\n};\n\nexport const nodeTypeOptions = [\n  { label: 'Medication', value: 'MedicationRequest' },\n  { label: 'Procedure', value: 'ServiceRequest' },\n  { label: 'Regimen', value: 'CarePlan' },\n  { label: 'Observation', value: 'Observation' }\n];\n\nexport function findParents(pathway: Pathway, childNodeKey: string): string[] {\n  const parents: string[] = [];\n  Object.keys(pathway.nodes).forEach(parentNodeKey => {\n    for (const transition of pathway.nodes[parentNodeKey].transitions) {\n      if (transition.transition === childNodeKey) {\n        parents.push(parentNodeKey);\n        break;\n      }\n    }\n  });\n  return parents;\n}\n\nexport function willOrphanChild(pathway: Pathway, childNodeKey: string): boolean {\n  // Count the number of transitions into the node\n  let transitionCount = 0;\n  Object.keys(pathway.nodes).forEach(nodeKey => {\n    pathway.nodes[nodeKey].transitions.forEach(transition => {\n      if (transition.transition === childNodeKey) transitionCount += 1;\n    });\n  });\n\n  return transitionCount >= 2 ? false : true;\n}\n\nexport function canDeleteNode(pathway: Pathway, transitions: Transition[]): boolean {\n  let canDeleteAllTransitions = true;\n  transitions.forEach(transition => {\n    if (willOrphanChild(pathway, transition.transition)) canDeleteAllTransitions = false;\n  });\n  return canDeleteAllTransitions;\n}\n\nexport function redirect(\n  pathwayId: string,\n  nodeKey: string,\n  history: History<History.PoorMansUnknown>\n): void {\n  const url = `/builder/${encodeURIComponent(pathwayId)}/node/${encodeURIComponent(nodeKey)}`;\n  if (url !== history.location.pathname) {\n    history.push(url);\n  }\n}\n\nconst getAncestorNodes = (\n  pathway: Pathway,\n  rootNodeKey: string,\n  currNodeKey: string\n): Array<PathwayNode> => {\n  let ancestors: Array<PathwayNode> = [];\n  let previousNodes: Array<PathwayNode> = [];\n  const currNode = pathway.nodes[currNodeKey];\n\n  currNode.transitions.forEach(transition => {\n    if (transition.transition === rootNodeKey) ancestors.push(currNode);\n    else {\n      previousNodes = getAncestorNodes(pathway, rootNodeKey, transition.transition);\n      if (previousNodes?.length) {\n        if (!ancestors.some(node => node.key === currNode.key)) ancestors.push(currNode);\n        ancestors = ancestors.concat(previousNodes);\n      }\n    }\n  });\n\n  return ancestors;\n};\n\nexport const getConnectableNodes = (\n  pathway: Pathway,\n  rootNode: PathwayNode\n): Array<{ label: string; value: string }> => {\n  const connectableNodes: Array<{ label: string; value: string }> = [];\n  const ancestorNodes = getAncestorNodes(pathway, rootNode.key ?? '', 'Start');\n  ancestorNodes.push(rootNode);\n\n  Object.keys(pathway.nodes).forEach(nodeKey => {\n    const node = pathway.nodes[nodeKey];\n    const rootNodeConnectsToNode = rootNode.transitions.some(\n      transition => transition.transition === nodeKey\n    );\n    const nodeIsAncestor = ancestorNodes.some(node => node.key === nodeKey);\n    if (!rootNodeConnectsToNode && !nodeIsAncestor && node.key)\n      connectableNodes.push({ label: node.label, value: node.key });\n  });\n\n  return connectableNodes;\n};\n","import { Action, Pathway } from 'pathways-model';\nimport {\n  ActivityDefinition,\n  PlanDefinition,\n  PlanDefinitionAction,\n  Bundle,\n  BundleEntry,\n  Library\n} from 'fhir-objects';\nimport { v4 as uuidv4 } from 'uuid';\nimport { isActionNode, findParents, isBranchNode } from './nodeUtils';\nimport { R4 } from '@ahryman40k/ts-fhir-types';\n\nconst LIBRARY_DRAFT = R4.LibraryStatusKind._draft;\nconst PLANDEFINITION_DRAFT = R4.PlanDefinitionStatusKind._draft;\nconst ACTIVITYDEFINITION_DRAFT = R4.ActivityDefinitionStatusKind._draft;\nconst BUNDLE_TRANSACTION = R4.BundleTypeKind._transaction;\nconst BUNDLE_PUT = R4.Bundle_RequestMethodKind._put;\nconst CONDITION_APPLICABILITY = R4.PlanDefinition_ConditionKindKind._applicability; // eslint-disable-line\nconst EXPRESSION_CQL = R4.ExpressionLanguageKind._textCql;\n\nexport function createActivityDefinition(action: Action): ActivityDefinition {\n  const activityId = uuidv4();\n  const kind =\n    action.resource.resourceType === 'Procedure' ? 'ServiceRequest' : action.resource.resourceType;\n\n  const activityDefinition: ActivityDefinition = {\n    id: activityId,\n    resourceType: 'ActivityDefinition',\n    meta: {\n      profile: ['http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-publishableactivity']\n    },\n    extension: [\n      {\n        url: 'http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability',\n        valueCode: 'publishable'\n      }\n    ],\n    url: `urn:uuid:${activityId}`,\n    version: '1.0',\n    name: `AD${activityId.substring(0, 7)}`,\n    title: `ActivityDefinition: ${activityId}`,\n    status: ACTIVITYDEFINITION_DRAFT,\n    experimental: true,\n    date: new Date().toISOString(),\n    publisher: 'Logged in user',\n    description: action.description,\n    kind: kind,\n    productCodeableConcept:\n      action.resource.resourceType === 'MedicationRequest'\n        ? action.resource.medicationCodeableConcept\n        : action.resource.code\n  };\n\n  return activityDefinition;\n}\n\nfunction createAction(id: string, description: string, definition: string): PlanDefinitionAction {\n  const cpgAction: PlanDefinitionAction = {\n    id: id,\n    title: `Action: ${id}`,\n    description: description,\n    code: [\n      {\n        coding: [\n          {\n            system: 'http://hl7.org/fhir/uv/cpg/CodeSystem/cpg-common-process',\n            code: 'guideline-based-care',\n            display: 'Guideline-based Care'\n          }\n        ]\n      }\n    ],\n    definitionCanonical: `http://pathway.com/${definition}`\n  };\n  return cpgAction;\n}\n\nexport function createPlanDefinition(\n  id: string,\n  title: string,\n  description: string,\n  type: 'strategy' | 'recommendation',\n  libraryId?: string\n): PlanDefinition {\n  const planDefinition: PlanDefinition = {\n    id: id,\n    resourceType: 'PlanDefinition',\n    meta: {\n      profile: [`http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-${type}definition`]\n    },\n    extension: [\n      {\n        url: 'http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability',\n        valueCode: 'executable'\n      }\n    ],\n    url: `urn:uuid:${id}`,\n    version: '1.0',\n    name: `PD${id.substring(0, 7)}`,\n    title: title,\n    type: {\n      coding: [\n        {\n          system: 'http://terminology.hl7.org/CodeSystem/plan-definition-type',\n          code: type === 'strategy' ? 'workflow-definition' : 'eca-rule',\n          display: type === 'strategy' ? 'Workflow Definition' : 'ECA Rule'\n        }\n      ]\n    },\n    status: PLANDEFINITION_DRAFT,\n    experimental: true,\n    publisher: 'Logged in user',\n    description: description,\n    action: []\n  };\n\n  if (type === 'strategy' && libraryId) {\n    planDefinition.library = [libraryId];\n  }\n\n  return planDefinition;\n}\n\nfunction createBundleEntry(resource: PlanDefinition | ActivityDefinition | Library): BundleEntry {\n  return {\n    fullUrl: `http://pathway.com/${resource.id}`,\n    resource: resource,\n    request: {\n      method: BUNDLE_PUT,\n      url: `/${resource.resourceType}/${resource.id}`\n    }\n  };\n}\n\nfunction createLibrary(pathway: Pathway): Library {\n  const libraryId = uuidv4();\n\n  const library: Library = {\n    id: libraryId,\n    resourceType: 'Library',\n    meta: {\n      profile: ['http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-executablelibrary']\n    },\n    extension: [\n      {\n        url: 'http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability',\n        valueCode: 'executable'\n      }\n    ],\n    url: `urn:uuid:${libraryId}`,\n    version: '1.0',\n    name: `LIB${libraryId.substring(0, 7)}`,\n    title: `Library for ${pathway.name}`,\n    status: LIBRARY_DRAFT,\n    experimental: true,\n    type: {\n      coding: [\n        {\n          system: 'http://terminology.hl7.org/CodeSystem/library-type',\n          code: 'logic-library',\n          display: 'Logic Library'\n        }\n      ]\n    },\n    publisher: 'Logged in user',\n    description: `ELM library for pathway: ${pathway.name}`,\n    content: []\n  };\n\n  if (pathway.elm) {\n    library.content.push(\n      {\n        id: 'navigational',\n        contentType: 'application/elm+json',\n        data: btoa(JSON.stringify(pathway.elm.navigational)),\n        title: 'ELM for navigating the pathway'\n      },\n      {\n        id: 'precondition',\n        contentType: 'application/elm+json',\n        data: btoa(JSON.stringify(pathway.elm.preconditions)),\n        title: 'ELM for pathway preconditions'\n      }\n    );\n  }\n\n  return library;\n}\n\nexport function toCPG(pathway: Pathway): Bundle {\n  const bundle: Bundle = {\n    id: pathway.id,\n    resourceType: 'Bundle',\n    type: BUNDLE_TRANSACTION,\n    entry: []\n  };\n  const library = createLibrary(pathway);\n  const cpgStrategy = createPlanDefinition(\n    uuidv4(),\n    pathway.name,\n    pathway.description,\n    'strategy',\n    library.id\n  );\n\n  Object.keys(pathway.nodes).forEach(key => {\n    const node = pathway.nodes[key];\n    if (isActionNode(node) && node.key && node.action) {\n      const description = `Represents an action for ${node.label}`;\n      const cpgRecommendation = createPlanDefinition(\n        uuidv4(),\n        node.label,\n        description,\n        'recommendation'\n      );\n      const cpgStrategyAction = createAction(node.key, node.label, cpgRecommendation.id);\n      const parents = findParents(pathway, node.key).map(key => pathway.nodes[key]);\n      parents.forEach(parent => {\n        const transition = parent.transitions.find(\n          transition => transition.transition === node.key\n        );\n        if (isBranchNode(parent) && transition?.condition) {\n          const condition = {\n            kind: CONDITION_APPLICABILITY,\n            expression: {\n              language: EXPRESSION_CQL,\n              expression: transition.condition.cql\n            }\n          };\n          cpgStrategyAction.condition = cpgStrategyAction.condition || [];\n          cpgStrategyAction.condition?.push(condition);\n        }\n      });\n      const action = node.action;\n      const cpgActivityDefinition = createActivityDefinition(action);\n      const cpgRecommendationAction = createAction(\n        action.id,\n        action.description,\n        cpgActivityDefinition.id\n      );\n      cpgRecommendation.action.push(cpgRecommendationAction);\n      bundle.entry.push(createBundleEntry(cpgActivityDefinition));\n      cpgStrategy.action.push(cpgStrategyAction);\n      bundle.entry.push(createBundleEntry(cpgRecommendation));\n    }\n  });\n  bundle.entry.push(createBundleEntry(library));\n  bundle.entry.push(createBundleEntry(cpgStrategy));\n\n  return bundle;\n}\n","import {\n  Pathway,\n  Precondition,\n  PathwayNode,\n  Transition,\n  Action,\n  ActionNode,\n  BranchNode\n} from 'pathways-model';\nimport { ElmLibrary, ElmStatement } from 'elm-model';\nimport shortid from 'shortid';\nimport produce from 'immer';\nimport { toCPG } from './cpg';\nimport { Criteria } from 'criteria-model';\n\nexport function createNewPathway(name: string, description: string, pathwayId?: string): Pathway {\n  return {\n    id: pathwayId ?? shortid.generate(),\n    name: name,\n    description: description,\n    library: '',\n    preconditions: [],\n    nodes: {\n      Start: {\n        key: 'Start',\n        label: 'Start',\n        transitions: []\n      }\n    }\n  };\n}\n\nexport function downloadPathway(pathway: Pathway, cpg = false): void {\n  const pathwayString = exportPathway(pathway, cpg);\n  // Create blob from pathwayString to save to file system\n  const pathwayBlob = new Blob([pathwayString], {\n    type: 'application/json'\n  });\n  // Temporarily create hidden <a> tag to download pathwayBlob\n  // File name is set to <pathway-name>.json\n  const url = window.URL.createObjectURL(pathwayBlob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = `${pathway.name}.json`;\n  a.click();\n  window.URL.revokeObjectURL(url);\n}\n\nexport function exportPathway(pathway: Pathway, cpg: boolean): string {\n  const elm = generateNavigationalElm(pathway);\n  const pathwayWithElm = setNavigationalElm(pathway, elm);\n  const pathwayToExport = cpg ? toCPG(pathwayWithElm) : pathwayWithElm;\n  return JSON.stringify(pathwayToExport, undefined, 2);\n}\n\nfunction generateNavigationalElm(pathway: Pathway): ElmLibrary {\n  const elm: ElmLibrary = {\n    library: {\n      identifier: {\n        id: pathway.id,\n        version: '1.0.0'\n      },\n      schemaIdentifier: {\n        id: 'urn:hl7-org:elm',\n        version: 'r1'\n      },\n      usings: {\n        def: [\n          {\n            localIdentifier: 'System',\n            uri: 'urn:hl7-org:elm-types:r1'\n          },\n          {\n            localId: '1',\n            locator: '3:1-3:26',\n            localIdentifier: 'FHIR',\n            uri: 'http://hl7.org/fhir',\n            version: '4.0.0'\n          }\n        ]\n      },\n      statements: {\n        def: [\n          {\n            locator: '13:1-13:15',\n            name: 'Patient',\n            context: 'Patient',\n            expression: {\n              type: 'SingletonFrom',\n              operand: {\n                locator: '13:1-13:15',\n                dataType: '{http://hl7.org/fhir}Patient',\n                type: 'Retrieve'\n              }\n            }\n          }\n        ]\n      },\n      includes: { def: [] },\n      valueSets: { def: [] },\n      codes: { def: [] },\n      codeSystems: { def: [] }\n    }\n  };\n\n  Object.keys(pathway.nodes).forEach((nodeKey: string) => {\n    const node = pathway.nodes[nodeKey];\n    if ('elm' in node && node.elm) {\n      mergeElm(elm, node.elm);\n      const elmStatement = produce(getElmStatement(node.elm), (draftElmStatement: ElmStatement) => {\n        draftElmStatement.name = node.key;\n      });\n      elm.library.statements.def.push(elmStatement);\n    }\n\n    node.transitions.forEach((transition: Transition) => {\n      if (transition.condition?.elm) {\n        // Add tranistion.condition.elm to elm\n        mergeElm(elm, transition.condition.elm);\n        const elmStatement = produce(\n          getElmStatement(transition.condition.elm),\n          (draftElmStatement: ElmStatement) => {\n            draftElmStatement.name = transition.condition?.description ?? 'Unknown';\n          }\n        );\n        elm.library.statements.def.push(elmStatement);\n      }\n    });\n  });\n\n  return elm;\n}\n\nfunction mergeElm(elm: ElmLibrary, additionalElm: ElmLibrary): void {\n  // Merge usings\n  additionalElm.library.usings?.def.forEach(using => {\n    // Check if it is in ELM\n    if (!elm.library.usings?.def.find(def => def.uri === using.uri))\n      elm.library.usings?.def.push(using);\n  });\n\n  // Merge includes\n  additionalElm.library.includes?.def.forEach(include => {\n    if (!elm.library.includes?.def.find(def => def.path === include.path))\n      elm.library.includes?.def.push(include);\n  });\n\n  // Merge valueSets\n  additionalElm.library.valueSets?.def.forEach(valueSet => {\n    if (!elm.library.valueSets?.def.find(def => def.id === valueSet.id))\n      elm.library.valueSets?.def.push(valueSet);\n  });\n  // Merge codes\n  additionalElm.library.codes?.def.forEach(code => {\n    if (!elm.library.codes?.def.find(def => def.name === code.name))\n      elm.library.codes?.def.push(code);\n  });\n  // Merge codesystems\n  additionalElm.library.codeSystems?.def.forEach(codesystem => {\n    if (!elm.library.codeSystems?.def.find(def => def.name === codesystem.name))\n      elm.library.codeSystems?.def.push(codesystem);\n  });\n\n  // TODO: merge concepts\n}\n\nfunction getElmStatement(elm: ElmLibrary): ElmStatement {\n  const defaultStatementNames = [\n    'Patient',\n    'MeetsInclusionCriteria',\n    'InPopulation',\n    'Recommendation',\n    'Rationale',\n    'Errors'\n  ];\n  const elmStatement = elm.library.statements.def.find(\n    def => !defaultStatementNames.includes(def.name)\n  );\n\n  // elmStatement type is ElmStatement | undefined but criteria\n  // provider validates such a statement exists in the elm\n  return elmStatement as ElmStatement;\n}\n\n// TODO: possibly add more precondition methods\nexport function addPrecondition(\n  pathway: Pathway,\n  id: string,\n  elementName: string,\n  expected: string,\n  cql: string\n): Pathway {\n  const precondition: Precondition = {\n    id: id,\n    elementName: elementName,\n    expected: expected,\n    cql: cql\n  };\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.preconditions.push(precondition);\n  });\n}\n\nexport function setNavigationalElm(pathway: Pathway, elm: object): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if (!draftPathway.elm) draftPathway.elm = {};\n    draftPathway.elm.navigational = elm;\n  });\n}\n\nexport function setPreconditionElm(pathway: Pathway, elm: object): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if (!draftPathway.elm) draftPathway.elm = {};\n    draftPathway.elm.preconditions = elm;\n  });\n}\n\nexport function createNode(key?: string): PathwayNode {\n  if (!key) key = shortid.generate();\n  const node: PathwayNode = {\n    key,\n    label: 'New Node',\n    transitions: [],\n    nodeTypeIsUndefined: true\n  };\n\n  return node;\n}\n\nexport function addNode(pathway: Pathway, node: PathwayNode): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.nodes[node.key] = node;\n  });\n}\n\nexport function setNodeLabel(pathway: Pathway, key: string, label: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.nodes[key].label = label;\n  });\n}\n\nexport function setNodeType(pathway: Pathway, nodeKey: string, nodeType: string): Pathway {\n  let action: Action;\n  let newPathway: Pathway;\n  switch (nodeType) {\n    case 'MedicationRequest':\n      newPathway = makeNodeAction(pathway, nodeKey);\n      action = {\n        type: 'create',\n        description: '',\n        id: shortid.generate(),\n        resource: {\n          resourceType: nodeType,\n          medicationCodeableConcept: {\n            coding: [\n              {\n                system: '',\n                code: '',\n                display: ''\n              }\n            ]\n          }\n        }\n      };\n      return setNodeAction(newPathway, nodeKey, action);\n    case 'ServiceRequest':\n      newPathway = makeNodeAction(pathway, nodeKey);\n      action = {\n        type: 'create',\n        description: '',\n        id: shortid.generate(),\n        resource: {\n          resourceType: nodeType,\n          code: {\n            coding: [\n              {\n                system: '',\n                code: '',\n                display: ''\n              }\n            ]\n          }\n        }\n      };\n      return setNodeAction(newPathway, nodeKey, action);\n    case 'CarePlan':\n      newPathway = makeNodeAction(pathway, nodeKey);\n      action = {\n        type: 'create',\n        description: '',\n        id: shortid.generate(),\n        resource: {\n          resourceType: nodeType,\n          title: ''\n        }\n      };\n      return setNodeAction(newPathway, nodeKey, action);\n    case 'Observation':\n      return makeNodeBranch(pathway, nodeKey);\n    default:\n      console.error('Unknown nodeType: ' + nodeType);\n      return pathway;\n  }\n}\n\nexport function setNodeAction(pathway: Pathway, key: string, action: Action): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as ActionNode).action = action;\n  });\n}\n\nexport function setNodeMcodeCriteria(\n  pathway: Pathway,\n  key: string,\n  mcodeCriteria: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as BranchNode).mcodeCriteria = mcodeCriteria;\n  });\n}\n\nexport function setNodeOtherCriteria(\n  pathway: Pathway,\n  key: string,\n  otherCriteria: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as BranchNode).otherCriteria = otherCriteria;\n  });\n}\n\nexport function addTransition(pathway: Pathway, startNodeKey: string, endNodeKey: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transition: Transition = {\n      id: shortid.generate(),\n      transition: endNodeKey\n    };\n\n    draftPathway.nodes[startNodeKey].transitions.push(transition);\n  });\n}\n\nexport function setTransitionCondition(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string,\n  criteria: Criteria\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const foundTransition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n\n    if (foundTransition) {\n      foundTransition.condition = {\n        description: description,\n        cql: criteria.statement,\n        elm: criteria.elm,\n        criteriaSource: criteria.id\n      };\n    }\n  });\n}\n\nexport function setActionNodeElm(pathway: Pathway, nodeKey: string, elm: ElmLibrary): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[nodeKey] as ActionNode).elm = elm;\n    (draftPathway.nodes[nodeKey] as ActionNode).cql = getElmStatement(elm).name;\n  });\n}\n\nexport function getNodeType(node?: ActionNode | BranchNode | PathwayNode | null): string {\n  if (!node || node.nodeTypeIsUndefined) {\n    return 'null';\n  } else if (!(node as ActionNode).action && node.key !== 'Start') {\n    return 'branch';\n  } else {\n    return 'action';\n  }\n}\n\n/*\nSet Element Functions\n*/\nexport function setPathwayName(pathway: Pathway, name: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.name = name;\n  });\n}\n\nexport function setPathwayDescription(pathway: Pathway, description: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.description = description;\n  });\n}\n\nexport function setLibrary(pathway: Pathway, library: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.library = library;\n  });\n}\n\nexport function setTransition(\n  pathway: Pathway,\n  startNodeKey: string,\n  endNodeKey: string,\n  transitionId: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n    if (transition) transition.transition = endNodeKey;\n  });\n}\n\nexport function setTransitionConditionDescription(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const foundTransition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n\n    if (foundTransition?.condition) {\n      foundTransition.condition.description = description;\n    } else if (foundTransition) {\n      foundTransition.condition = {\n        description: description,\n        cql: ''\n      };\n    }\n  });\n}\n\nexport function setTransitionConditionElm(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  criteria: Criteria\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const foundTransition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n\n    if (foundTransition?.condition) {\n      foundTransition.condition.elm = criteria.elm;\n      foundTransition.condition.cql = criteria.statement;\n    }\n  });\n}\n\nexport function setActionCode(action: Action, code: string): Action {\n  return produce(action, (draftAction: Action) => {\n    if (draftAction.resource.medicationCodeableConcept) {\n      draftAction.resource.medicationCodeableConcept.coding[0].code = code;\n    } else {\n      draftAction.resource.code.coding[0].code = code;\n    }\n  });\n}\n\nexport function setActionCodeSystem(action: Action, codeSystem: string): Action {\n  return produce(action, (draftAction: Action) => {\n    if (draftAction.resource.medicationCodeableConcept) {\n      draftAction.resource.medicationCodeableConcept.coding[0].system = codeSystem;\n    } else {\n      draftAction.resource.code.coding[0].system = codeSystem;\n    }\n  });\n}\n\nexport function setActionDescription(action: Action, description: string): Action {\n  return produce(action, (draftaction: Action) => {\n    draftaction.description = description;\n  });\n}\n\nexport function setActionTitle(action: Action, title: string): Action {\n  return produce(action, (draftaction: Action) => {\n    draftaction.resource.title = title;\n  });\n}\n\nexport function setActionResourceDisplay(action: Action, display: string): Action {\n  return produce(action, (draftAction: Action) => {\n    if (draftAction.resource.medicationCodeableConcept) {\n      draftAction.resource.medicationCodeableConcept.coding[0].display = display;\n    } else if (draftAction.resource.title) {\n      draftAction.resource.description = display;\n    } else {\n      draftAction.resource.code.coding[0].display = display;\n    }\n  });\n}\n\nexport function makeNodeAction(pathway: Pathway, nodeKey: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const node = draftPathway.nodes[nodeKey] as ActionNode;\n\n    if (node.cql === undefined && node.action === undefined) {\n      node.cql = '';\n      node.nodeTypeIsUndefined = undefined;\n    }\n\n    node.transitions.forEach(transition => {\n      delete transition.condition;\n    });\n  });\n}\n\nexport function makeNodeBranch(pathway: Pathway, nodeKey: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const node = draftPathway.nodes[nodeKey] as ActionNode;\n\n    if (\n      node.cql !== undefined ||\n      node.elm !== undefined ||\n      node.action !== undefined ||\n      node.nodeTypeIsUndefined !== undefined\n    ) {\n      delete node.cql;\n      delete node.elm;\n      delete node.action;\n      delete node.nodeTypeIsUndefined;\n    }\n  });\n}\n\nexport function createCQL(action: Action, nodeKey: string): string {\n  const resource = action.resource;\n  // CQl identifier cannot start with a number or contain '-'\n  const cqlId = `cql${shortid.generate().replace(/-/g, 'a')}`;\n  let cql = `library ${cqlId} version '1'\\nusing FHIR version '4.0.0'\\n`;\n\n  const codesystemStatement = (system: string): string => `codesystem \"${system}\": '${system}'\\n`;\n\n  const returnStatement = (resourceType: string): string =>\n    `return Tuple{ resourceType: '${resourceType}', id: R.id.value, status: R.status.value}`;\n\n  const retrieveStatement = (resourceType: string): string => `[${resourceType}: \"${cqlId} code\"]`;\n\n  const defineStatement = (): string => `define \"${nodeKey}\":`;\n\n  if (resource.resourceType === 'MedicationRequest') {\n    const coding = resource.medicationCodeableConcept.coding[0];\n\n    cql += codesystemStatement(coding.system);\n\n    // eslint-disable-next-line\n    cql += `code \"${cqlId} code\": '${escape(coding.code)}' from \"${coding.system}\" display '${\n      coding.display\n    }'\\n`;\n    cql += `${defineStatement()}\n      ${retrieveStatement('MedicationRequest')} R ${returnStatement('MedicationRequest')}`;\n  } else if (resource.resourceType === 'ServiceRequest') {\n    const coding = resource.code.coding[0];\n\n    cql += codesystemStatement(coding.system);\n\n    // eslint-disable-next-line\n    cql += `code \"${cqlId} code\": '${escape(coding.code)}' from \"${coding.system}\" display '${\n      coding.display\n    }'\\n`;\n    cql += `${defineStatement()}\n      if exists ${retrieveStatement('Procedure')} \n      then ${retrieveStatement('Procedure')} R ${returnStatement('Procedure')} \n      else ${retrieveStatement('ServiceRequest')} R ${returnStatement('ServiceRequest')}`;\n  } else if (resource.resourceType === 'CarePlan') {\n    cql += `${defineStatement()}\n      [CarePlan] R where R.title.value = '${escape(resource.title)}' ${returnStatement(\n      'CarePlan'\n    )}`;\n  } else {\n    console.error(\n      'Auto generating CQL for action - unsupported resource type: ' + resource.resourceType\n    );\n  }\n\n  return cql;\n}\n\n/*\nRemove Element Function\n*/\nexport function removePrecondition(pathway: Pathway, id: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const preconditions = draftPathway.preconditions.filter(\n      (precondition: Precondition) => precondition.id !== id\n    );\n    draftPathway.preconditions = preconditions;\n  });\n}\n\nexport function removeNavigationalElm(pathway: Pathway): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.elm?.navigational;\n  });\n}\n\nexport function removePreconditionElm(pathway: Pathway): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.elm?.preconditions;\n  });\n}\n\nexport function removeNode(pathway: Pathway, key: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.nodes[key];\n\n    Object.keys(draftPathway.nodes).forEach((nodeKey: string) => {\n      const node = draftPathway.nodes[nodeKey];\n      node.transitions.forEach((transition: Transition) => {\n        if (transition.transition === key)\n          draftPathway.nodes[nodeKey].transitions = draftPathway.nodes[nodeKey].transitions.filter(\n            (filterTransition: Transition) => transition.id !== filterTransition.id\n          );\n      });\n    });\n  });\n}\n\nexport function removeTransitionCondition(\n  pathway: Pathway,\n  nodeKey: string,\n  transitionId: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transition = draftPathway.nodes[nodeKey].transitions.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n    if (transition) delete transition.condition;\n  });\n}\n\nexport function removeTransition(\n  pathway: Pathway,\n  parentNodeKey: string,\n  childNodeKey: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transitions = draftPathway.nodes[parentNodeKey].transitions.filter(\n      (transition: Transition) => transition.transition !== childNodeKey\n    );\n    draftPathway.nodes[parentNodeKey].transitions = transitions;\n  });\n}\n","import React, { FC, memo } from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { downloadPathway } from 'utils/builder';\n\ninterface ExportMenuPropsInterface {\n  anchorEl: HTMLElement | null;\n  closeMenu: () => void;\n}\n\nconst ExportMenu: FC<ExportMenuPropsInterface> = ({ anchorEl, closeMenu }) => {\n  const { pathway } = useCurrentPathwayContext();\n\n  return (\n    <Menu\n      id=\"pathway-options-menu\"\n      anchorEl={anchorEl}\n      getContentAnchorEl={null}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n      keepMounted\n      open={Boolean(anchorEl)}\n      onClose={closeMenu}\n    >\n      <MenuItem\n        onClick={(): void => {\n          if (pathway) downloadPathway(pathway);\n          else alert('No pathway to download!');\n          closeMenu();\n        }}\n      >\n        Export Pathway\n      </MenuItem>\n      <MenuItem\n        onClick={(): void => {\n          if (pathway) downloadPathway(pathway, true);\n          else alert('No pathway to download!');\n          closeMenu();\n        }}\n      >\n        Export to CPG\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(ExportMenu);\n","import React, { FC, useCallback, useState, MouseEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faEllipsisH } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton } from '@material-ui/core';\n\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport ExportMenu from 'components/elements/ExportMenu';\n\nconst Navigation: FC = () => {\n  const { resetCurrentCriteria } = useCurrentCriteriaContext();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const { pathway } = useCurrentPathwayContext();\n  const styles = useStyles();\n  const history = useHistory();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleGoBack = useCallback((): void => {\n    resetCurrentCriteria();\n    history.push('/');\n  }, [history, resetCurrentCriteria]);\n\n  return (\n    <nav className={styles.root}>\n      <div>\n        <IconButton className={styles.backButton} onClick={handleGoBack} aria-label=\"go back\">\n          <FontAwesomeIcon icon={faChevronLeft} className={styles.navigationIcons} />\n        </IconButton>\n\n        <span className={styles.pathwayName}>{pathway?.name}</span>\n      </div>\n      <IconButton onClick={openMenu} aria-controls=\"pathway-options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faEllipsisH} className={styles.navigationIcons} />\n      </IconButton>\n      <ExportMenu anchorEl={anchorEl} closeMenu={closeMenu} />\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { useState, useEffect } from 'react';\nimport { Service } from 'pathways-objects';\n\nfunction getObject(url: string): Promise<Response> {\n  return fetch(url, {\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n}\n\nfunction typedFetch<T>(url: string, options?: object): Promise<T> {\n  return fetch(url, options).then(response => response.json() as Promise<T>);\n}\n\nfunction useGetService<T>(url: string): Service<Array<T>> {\n  const [result, setResult] = useState<Service<Array<T>>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    getObject(url)\n      .then(response => response.json() as Promise<string[]>)\n      .then(listOfFiles => listOfFiles.map(f => typedFetch<T>(url + '/' + f)))\n      .then(listOfPromises => Promise.all(listOfPromises))\n      .then(list => setResult({ status: 'loaded', payload: list }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, [url]);\n\n  return result;\n}\n\nexport default useGetService;\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  ReactNode\n} from 'react';\nimport { Pathway } from 'pathways-model';\nimport { ServiceLoaded } from 'pathways-objects';\nimport config from 'utils/ConfigManager';\nimport useGetService from './Services';\nimport useRefState from 'utils/useRefState';\n\ninterface PathwaysContextInterface {\n  pathways: Pathway[];\n  status: string;\n  addPathway: (pathway: Pathway) => void;\n  deletePathway: (id: string) => void;\n  updatePathway: (pathway: Pathway) => void;\n}\n\nexport const PathwaysContext = createContext<PathwaysContextInterface>(\n  {} as PathwaysContextInterface\n);\n\ninterface PathwaysProviderProps {\n  children: ReactNode;\n}\n\nexport const PathwaysProvider: FC<PathwaysProviderProps> = memo(function PathwaysProvider({\n  children\n}) {\n  const [pathways, pathwaysRef, setPathways] = useRefState<Pathway[]>([]);\n  const service = useGetService<Pathway>(config.get('demoPathwaysService'));\n  const servicePayload = (service as ServiceLoaded<Pathway[]>).payload;\n\n  const addPathway = useCallback(\n    (pathway: Pathway) => {\n      setPathways((currentPathways: Pathway[]) => [...currentPathways, pathway]);\n    },\n    [setPathways]\n  );\n\n  const deletePathway = useCallback(\n    (id: string) => {\n      setPathways((currentPathways: Pathway[]) =>\n        currentPathways.filter(pathway => pathway.id !== id)\n      );\n    },\n    [setPathways]\n  );\n\n  const updatePathway = useCallback(\n    (newPathway: Pathway) => {\n      const index = pathwaysRef.current.findIndex(pathway => pathway.id === newPathway.id);\n      setPathways((currentPathways: Pathway[]) => [\n        ...currentPathways.slice(0, index),\n        newPathway,\n        ...currentPathways.slice(index + 1)\n      ]);\n    },\n    [pathwaysRef, setPathways]\n  );\n\n  useEffect(() => {\n    if (servicePayload) setPathways(servicePayload);\n  }, [servicePayload, setPathways]);\n\n  switch (service.status) {\n    case 'error':\n      return <div>Error loading pathways</div>;\n\n    default:\n      return (\n        <PathwaysContext.Provider\n          value={{\n            pathways,\n            addPathway,\n            deletePathway,\n            updatePathway,\n            status: service.status\n          }}\n        >\n          {children}\n        </PathwaysContext.Provider>\n      );\n  }\n});\n\nexport const usePathwaysContext = (): PathwaysContextInterface => useContext(PathwaysContext);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding,\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.common.gray,\n      width: '33%',\n      minWidth: '550px',\n      overflowY: 'scroll'\n    },\n    formControl: {\n      margin: theme.spacing(1, 0),\n      minWidth: 375\n    },\n    divider: {\n      width: '100%'\n    },\n    headerLabelStart: {\n      cursor: 'default'\n    },\n    displayText: {\n      margin: '0 0 5px 0',\n      fontWeight: 900,\n      fontSize: '1em'\n    },\n    sidebarHeader: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    sidebarHeaderGroup: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    sidebarHeaderButton: {\n      height: '45px',\n      width: '45px',\n      color: theme.palette.text.primary\n    },\n    headerLabelGroup: {\n      display: 'flex',\n      cursor: 'pointer',\n      height: '60px'\n    },\n    headerLabel: {\n      display: 'flex',\n      alignItems: 'center',\n      fontSize: '1.6em',\n      fontWeight: 700,\n      margin: '0 5px'\n    },\n    headerLabelText: {\n      marginBottom: '5px'\n    },\n    editIcon: {\n      fontSize: '0.6em',\n      marginLeft: '10px'\n    },\n    sidebarButtonGroup: {\n      display: 'flex',\n      margin: '10px 0'\n    },\n    sidebarButtonGroupExtraMargin: {\n      display: 'flex',\n      margin: '20px 0 10px 0'\n    },\n    sidebarButton: {\n      minWidth: 180,\n      marginRight: '20px'\n    },\n    sidebarButtonText: {\n      fontStyle: 'italic'\n    },\n    outlinedDiv: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      '& div': {\n        width: '100%'\n      }\n    },\n    outlinedDivError: {\n      borderColor: `${theme.palette.error.main} !important`,\n      '&:hover': {\n        borderColor: `${theme.palette.error.main} !important`\n      }\n    },\n    toggleSidebar: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      float: 'left',\n      width: '50px',\n      minWidth: '50px',\n      height: '50px',\n      fontSize: '2em',\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.text.primary,\n      '&:hover': {\n        cursor: 'pointer'\n      }\n    },\n    cancelButton: {\n      alignSelf: 'flex-end',\n      marginTop: '5px',\n      padding: '5px 15px',\n      fontSize: '1em'\n    },\n    buildCriteriaContainer: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    buildCriteriaText: {\n      marginTop: '0.5em',\n      marginBottom: '1em'\n    },\n    saveButton: {\n      marginLeft: '1em',\n      backgroundColor: theme.palette.error.main,\n      borderColor: theme.palette.error.main,\n      '&:hover': {\n        backgroundColor: theme.palette.error.main\n      }\n    },\n    transitionContainer: {\n      backgroundColor: theme.palette.common.grayVeryDark,\n      padding: '5px 15px',\n      margin: '15px 0'\n    },\n    dividerHeader: {\n      width: '100%',\n      textTransform: 'uppercase',\n      borderBottom: '1px solid ' + theme.palette.common.blueLighter,\n      color: theme.palette.common.blueLighter,\n      lineHeight: '0.1em',\n      margin: '10px 0 20px',\n      fontWeight: 800,\n      paddingLeft: '15px',\n      '& span': {\n        background: theme.palette.common.gray,\n        padding: '0 10px'\n      }\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    },\n    dialogContent: {\n      color: theme.palette.common.black,\n      fontSize: '16px',\n      display: 'flex',\n      marginTop: '-25px'\n    },\n    dialogContentText: {\n      paddingLeft: '10px',\n      lineHeight: '40px'\n    },\n    alertIcon: {\n      color: theme.palette.common.red,\n      fontSize: '40px'\n    },\n    connectDropdown: {\n      margin: 'auto',\n      display: 'flex',\n      flexDirection: 'column',\n      flexWrap: 'nowrap',\n      alignContent: 'center'\n    },\n    connectText: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      fontSize: '0.95em',\n      fontStyle: 'italic'\n    },\n    cancelButtonDropdown: {\n      marginLeft: 'auto',\n      border: 'none',\n      alignSelf: 'center',\n      color: theme.palette.common.blueLighter,\n      fontSize: '1em',\n      fontStyle: 'italic',\n      textTransform: 'none'\n    }\n  }),\n  { name: 'Sidebar', index: 1 }\n);\n","import React, {\n  MutableRefObject,\n  createContext,\n  useCallback,\n  memo,\n  ReactNode,\n  FC,\n  useContext\n} from 'react';\nimport { PathwayNode } from 'pathways-model';\nimport useRefState from 'utils/useRefState';\n\ninterface CurrentNodeContextInterface {\n  currentNode: PathwayNode | null;\n  currentNodeRef: MutableRefObject<PathwayNode | null>;\n  setCurrentNode: (value: PathwayNode) => void;\n}\n\nexport const CurrentNodeContext = createContext<CurrentNodeContextInterface>(\n  {} as CurrentNodeContextInterface\n);\n\ninterface CurrentNodeProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrentNodeProvider: FC<CurrentNodeProviderProps> = memo(({ children }) => {\n  const [currentNode, currentNodeRef, _setCurrentNode] = useRefState<PathwayNode | null>(null);\n\n  const setCurrentNode = useCallback(\n    (value: PathwayNode) => {\n      _setCurrentNode(value);\n    },\n    [_setCurrentNode]\n  );\n\n  return (\n    <CurrentNodeContext.Provider value={{ currentNode, currentNodeRef, setCurrentNode }}>\n      {children}\n    </CurrentNodeContext.Provider>\n  );\n});\n\nexport const useCurrentNodeContext = (): CurrentNodeContextInterface =>\n  useContext(CurrentNodeContext);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { InputLabel, FormControl, Select, MenuItem } from '@material-ui/core';\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface DropDownProps {\n  id: string;\n  label: string;\n  options: Array<Option>;\n  value?: string;\n  onChange: Function | null;\n}\n\nconst DropDown: FC<DropDownProps> = ({ id, label, options, value, onChange }: DropDownProps) => {\n  const handleSetSelected = useCallback(\n    (event: ChangeEvent<{ value: unknown }>): void => {\n      if (onChange) onChange(event);\n    },\n    [onChange]\n  );\n\n  return (\n    <FormControl variant=\"outlined\" fullWidth>\n      <InputLabel id={id} htmlFor={`${id}-select`}>\n        {label}\n      </InputLabel>\n\n      <Select\n        id={`${id}-select`}\n        value={value || ''}\n        onChange={handleSetSelected}\n        label={label}\n        error={value == null || value === ''}\n        MenuProps={{\n          getContentAnchorEl: null,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'center'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          }\n        }}\n        displayEmpty\n      >\n        {options.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(DropDown);\n","import React, {\n  FC,\n  createContext,\n  useState,\n  memo,\n  ReactNode,\n  useContext,\n  useCallback\n} from 'react';\n\ninterface SnackbarContextInterface {\n  snackbarText: string;\n  openSnackbar: boolean;\n  handleCloseSnackbar: () => void;\n  setSnackbarText: (value: string) => void;\n  setOpenSnackbar: (value: boolean) => void;\n}\n\nexport const SnackbarContext = createContext<SnackbarContextInterface>(\n  {} as SnackbarContextInterface\n);\n\ninterface SnackbarProviderProps {\n  children: ReactNode;\n}\n\nexport const SnackbarProvider: FC<SnackbarProviderProps> = memo(({ children }) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n  const [snackbarText, setSnackbarText] = useState<string>('Deleted Successfully');\n\n  const handleCloseSnackbar = useCallback(() => {\n    setOpenSnackbar(false);\n  }, [setOpenSnackbar]);\n\n  return (\n    <SnackbarContext.Provider\n      value={{ snackbarText, openSnackbar, handleCloseSnackbar, setSnackbarText, setOpenSnackbar }}\n    >\n      {children}\n    </SnackbarContext.Provider>\n  );\n});\n\nexport const useSnackbarContext = (): SnackbarContextInterface => useContext(SnackbarContext);\n","import React, { FC, memo } from 'react';\nimport { Snackbar, Button, IconButton } from '@material-ui/core';\nimport { useSnackbarContext } from 'components/SnackbarProvider';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst DeleteSnackbar: FC = () => {\n  const { snackbarText, openSnackbar, handleCloseSnackbar } = useSnackbarContext();\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right'\n      }}\n      open={openSnackbar}\n      autoHideDuration={10000}\n      onClose={handleCloseSnackbar}\n      message={snackbarText}\n      action={\n        <React.Fragment>\n          <Button color=\"secondary\" size=\"small\" onClick={handleCloseSnackbar}>\n            UNDO\n          </Button>\n          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\n            <FontAwesomeIcon icon={faTimes} />\n          </IconButton>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default memo(DeleteSnackbar);\n","import React, { useState, memo, useCallback, ChangeEvent, FC } from 'react';\nimport { SidebarButton } from 'components/Sidebar';\nimport DropDown from 'components/elements/DropDown';\nimport useStyles from './styles';\nimport { addTransition } from 'utils/builder';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport { getConnectableNodes } from 'utils/nodeUtils';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\n\nimport { faLevelDownAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nconst ConnectNodeButton: FC = () => {\n  const { pathway, pathwayRef } = useCurrentPathwayContext();\n  const { currentNode, currentNodeRef } = useCurrentNodeContext();\n  const { updatePathway } = usePathwaysContext();\n\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const options: Array<{ label: string; value: string }> =\n    currentNode && pathway ? getConnectableNodes(pathway, currentNode) : [];\n  const optionsAvailable = options.length > 0;\n\n  const connectToNode = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      const nodeKey = event?.target.value;\n      if (pathwayRef.current && currentNodeRef.current)\n        updatePathway(addTransition(pathwayRef.current, currentNodeRef.current.key, nodeKey));\n      setOpen(false);\n    },\n    [updatePathway, currentNodeRef, pathwayRef]\n  );\n\n  const showDropdown = useCallback(() => {\n    setOpen(!open);\n  }, [open]);\n\n  return (\n    <div>\n      {!open && (\n        <SidebarButton\n          buttonName=\"Connect Node\"\n          buttonIcon={faLevelDownAlt}\n          buttonText=\"Create a transition to an existing node in the pathway.\"\n          onClick={showDropdown}\n          disabled={!optionsAvailable}\n          hasTooltip={!optionsAvailable}\n          tooltipTitle=\"There are no possible nodes to connect to.\"\n        />\n      )}\n      {open && optionsAvailable && (\n        <div className={styles.connectDropdown}>\n          <DropDown\n            id=\"transitions\"\n            label=\"Node To Connect To\"\n            options={options}\n            onChange={connectToNode}\n          />\n          <div className={styles.connectText}>\n            Select node from list to add transition.\n            <Button\n              className={styles.cancelButtonDropdown}\n              size=\"small\"\n              variant=\"text\"\n              onClick={showDropdown}\n            >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(ConnectNodeButton);\n","import React, { FC, memo, useCallback, useState, useRef, ChangeEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport {\n  SidebarHeader,\n  ActionNodeEditor,\n  SidebarButton,\n  TransitionEditor,\n  BranchTransition\n} from 'components/Sidebar';\nimport { setNodeType, addTransition, createNode, addNode, getNodeType } from 'utils/builder';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { isBranchNode, redirect } from 'utils/nodeUtils';\nimport { nodeTypeOptions } from 'utils/nodeUtils';\nimport DropDown from 'components/elements/DropDown';\nimport DeleteSnackbar from './DeleteSnackbar';\nimport ConnectNodeButton from 'components/Sidebar/ConnectNodeButton';\n\nconst Sidebar: FC = () => {\n  const { updatePathway } = usePathwaysContext();\n  const { pathway, pathwayRef } = useCurrentPathwayContext();\n  const { currentNode, currentNodeRef } = useCurrentNodeContext();\n  const [isExpanded, setIsExpanded] = useState<boolean>(true);\n  const styles = useStyles();\n  const history = useHistory();\n  const sidebarContainerElement = useRef<HTMLDivElement>(null);\n\n  const toggleSidebar = useCallback((): void => {\n    setIsExpanded(!isExpanded);\n  }, [isExpanded]);\n\n  const changeNodeType = useCallback(\n    (nodeType: string): void => {\n      if (currentNodeRef.current && pathwayRef.current)\n        updatePathway(setNodeType(pathwayRef.current, currentNodeRef.current.key, nodeType));\n    },\n    [pathwayRef, updatePathway, currentNodeRef]\n  );\n\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  const addPathwayNode = useCallback((): void => {\n    if (!currentNodeRef.current || !pathwayRef.current) return;\n\n    const newNode = createNode();\n    let newPathway = addNode(pathwayRef.current, newNode);\n    newPathway = addTransition(newPathway, currentNodeRef.current.key, newNode.key);\n    updatePathway(newPathway);\n    if (!isBranchNode(currentNodeRef.current))\n      redirect(pathwayRef.current.id, newNode.key, history);\n  }, [pathwayRef, updatePathway, currentNodeRef, history]);\n\n  if (!pathway) return <div>Error: No pathway</div>;\n  if (!currentNode) return <div>Error: No current node</div>;\n\n  if (currentNode.key === 'Start') {\n    return (\n      <>\n        {isExpanded && (\n          <div className={styles.root} ref={sidebarContainerElement}>\n            <SidebarHeader node={currentNode} isTransition={false} />\n            <h5 className={styles.dividerHeader}>\n              <></>{' '}\n            </h5>\n            <SidebarButton\n              buttonName=\"Add Node\"\n              buttonIcon={faPlus}\n              buttonText=\"Add a new transition to a new node in the pathway.\"\n              onClick={addPathwayNode}\n            />\n          </div>\n        )}\n\n        <div className={styles.toggleSidebar} onClick={toggleSidebar}>\n          <FontAwesomeIcon icon={isExpanded ? faChevronLeft : faChevronRight} />\n        </div>\n        <DeleteSnackbar />\n      </>\n    );\n  } else {\n    const nodeType = getNodeType(currentNode);\n    const displayTransitions = currentNode.key !== 'Start' || currentNode.transitions.length === 0;\n\n    return (\n      <>\n        {isExpanded && (\n          <div className={styles.root} ref={sidebarContainerElement}>\n            <SidebarHeader node={currentNode} isTransition={false} />\n\n            <h5 className={styles.dividerHeader}>\n              <span>Details</span>\n            </h5>\n\n            {nodeType === 'null' && (\n              <DropDown\n                id=\"nodeType\"\n                label=\"Node Type\"\n                options={nodeTypeOptions}\n                onChange={selectNodeType}\n                value=\"\"\n              />\n            )}\n\n            {nodeType === 'action' && <ActionNodeEditor changeNodeType={changeNodeType} />}\n\n            {nodeType === 'branch' && (\n              <DropDown\n                id=\"nodeType\"\n                label=\"Node Type\"\n                options={nodeTypeOptions}\n                onChange={selectNodeType}\n                value=\"Observation\"\n              />\n            )}\n\n            <h5 className={styles.dividerHeader}>\n              <span>Transitions</span>\n            </h5>\n\n            {currentNode?.transitions.map(transition => {\n              return (\n                <TransitionEditor key={transition.id} transition={transition}>\n                  {nodeType === 'branch' && (\n                    <BranchTransition key={transition.id} transition={transition} />\n                  )}\n                </TransitionEditor>\n              );\n            })}\n\n            {displayTransitions && (\n              <>\n                <SidebarButton\n                  buttonName=\"Add New Node\"\n                  buttonIcon={faPlus}\n                  buttonText=\"Add a new transition to a new node in the pathway.\"\n                  onClick={addPathwayNode}\n                />\n                <ConnectNodeButton />\n              </>\n            )}\n          </div>\n        )}\n        <div className={styles.toggleSidebar} onClick={toggleSidebar}>\n          <FontAwesomeIcon icon={isExpanded ? faChevronLeft : faChevronRight} />\n        </div>\n        <DeleteSnackbar />\n      </>\n    );\n  }\n};\n\nexport default memo(Sidebar);\n","import React, { FC, memo, useCallback, useRef, useState, KeyboardEvent, FocusEvent } from 'react';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEdit,\n  faChevronLeft,\n  faChevronRight,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, FormControl, Input, Tooltip } from '@material-ui/core';\n\nimport { PathwayNode } from 'pathways-model';\nimport { setNodeLabel, removeNode, removeTransition } from 'utils/builder';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useHistory } from 'react-router-dom';\nimport { canDeleteNode, redirect, findParents, willOrphanChild } from 'utils/nodeUtils';\nimport { DeleteModal } from '.';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { useSnackbarContext } from 'components/SnackbarProvider';\n\ninterface SidebarHeaderProps {\n  node: PathwayNode;\n  isTransition?: boolean;\n}\n\nconst SidebarHeader: FC<SidebarHeaderProps> = ({ node, isTransition = false }) => {\n  const { updatePathway } = usePathwaysContext();\n  const [showInput, setShowInput] = useState<boolean>(false);\n  const [openTooltip, setOpenTooltip] = useState<boolean>(false);\n  const [openDelete, setOpenDelete] = useState<boolean>(false);\n  const { currentNodeRef } = useCurrentNodeContext();\n  const { setSnackbarText, setOpenSnackbar } = useSnackbarContext();\n  const { pathway, pathwayRef } = useCurrentPathwayContext();\n  const inputRef = useRef<HTMLInputElement>(null);\n  const nodeLabel = node?.label || '';\n  const styles = useStyles();\n  const history = useHistory();\n\n  const goToParentNode = useCallback(() => {\n    if (!pathwayRef.current) return;\n    const parents = findParents(pathwayRef.current, node.key);\n    redirect(pathwayRef.current.id, parents[0], history);\n  }, [history, pathwayRef, node.key]);\n\n  const redirectToNode = useCallback(() => {\n    if (!pathwayRef.current) return;\n    redirect(pathwayRef.current.id, node.key, history);\n  }, [history, pathwayRef, node.key]);\n\n  const changeNodeLabel = useCallback(() => {\n    const label = inputRef.current?.value ?? '';\n    if (pathwayRef.current) updatePathway(setNodeLabel(pathwayRef.current, node.key, label));\n    setShowInput(false);\n  }, [pathwayRef, updatePathway, node.key]);\n\n  const handleShowInput = useCallback(() => {\n    setShowInput(true);\n  }, []);\n\n  const deleteNode = useCallback(() => {\n    if (pathwayRef.current && canDeleteNode(pathwayRef.current, node.transitions)) {\n      const parents = findParents(pathwayRef.current, node.key);\n      updatePathway(removeNode(pathwayRef.current, node.key));\n      redirect(pathwayRef.current.id, parents[0], history);\n      setOpenDelete(false);\n      setSnackbarText(`${node.label} node deleted successfully`);\n      setOpenSnackbar(true);\n    }\n  }, [\n    pathwayRef,\n    updatePathway,\n    setSnackbarText,\n    setOpenSnackbar,\n    node.key,\n    node.label,\n    node.transitions,\n    history\n  ]);\n\n  const deleteTransition = useCallback(() => {\n    if (\n      currentNodeRef.current &&\n      pathwayRef.current &&\n      !willOrphanChild(pathwayRef.current, node.key)\n    ) {\n      updatePathway(removeTransition(pathwayRef.current, currentNodeRef.current.key, node.key));\n      setOpenDelete(false);\n      setSnackbarText(\n        `Transition from ${currentNodeRef.current.label} to ${node.label} deleted successfully`\n      );\n      setOpenSnackbar(true);\n    }\n  }, [pathwayRef, currentNodeRef, updatePathway, setSnackbarText, setOpenSnackbar, node]);\n\n  const openDeleteModal = useCallback((): void => {\n    setOpenDelete(true);\n  }, []);\n\n  const closeDeleteModal = useCallback((): void => {\n    setOpenDelete(false);\n  }, []);\n\n  const handleOpenTooltip = useCallback((): void => {\n    setOpenTooltip(true);\n  }, []);\n\n  const handleCloseTooltip = useCallback((): void => {\n    setOpenTooltip(false);\n  }, []);\n\n  const handleKeyPress = useCallback(\n    (event: KeyboardEvent<HTMLDivElement>): void => {\n      if (event.key === 'Enter') changeNodeLabel();\n    },\n    [changeNodeLabel]\n  );\n\n  const deleteNodeDisabled = pathway ? !canDeleteNode(pathway, node.transitions) : true;\n  const deleteTransitionDisabled = pathway ? willOrphanChild(pathway, node.key) : true;\n  const deleteDisabled = isTransition ? deleteTransitionDisabled : deleteNodeDisabled;\n  const titleText = isTransition\n    ? 'Deleting this transition would result in an orphaned node. To delete, first add the child node as a transition to another node, or delete it directly.'\n    : 'Deleting this node would result in an orphaned descendent node. To delete, first add another transition to the would-be orphaned node from another node, or delete it directly.';\n\n  return (\n    <div className={styles.sidebarHeader}>\n      <div className={styles.sidebarHeaderGroup}>\n        {node.key !== 'Start' && !isTransition && (\n          <IconButton\n            className={styles.sidebarHeaderButton}\n            onClick={goToParentNode}\n            aria-label=\"go to parent node\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft} />\n          </IconButton>\n        )}\n\n        <div className={styles.headerLabelGroup} onClick={handleShowInput}>\n          {showInput && node.key !== 'Start' ? (\n            <FormControl className={styles.formControl} fullWidth>\n              <Input\n                className={styles.headerLabel}\n                type=\"text\"\n                inputRef={inputRef}\n                onBlur={changeNodeLabel}\n                onKeyPress={handleKeyPress}\n                defaultValue={nodeLabel}\n                autoFocus\n                onFocus={(event: FocusEvent<HTMLInputElement>): void => event.target.select()}\n              />\n            </FormControl>\n          ) : (\n            <div\n              className={clsx(\n                styles.headerLabel,\n                styles.headerLabelText,\n                node.key === 'Start' && styles.headerLabelStart\n              )}\n            >\n              {nodeLabel}\n              {node.key !== 'Start' && (\n                <FontAwesomeIcon className={styles.editIcon} icon={faEdit} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className={styles.sidebarHeaderGroup}>\n        {node.key !== 'Start' && (\n          <Tooltip\n            placement=\"top\"\n            open={deleteDisabled ? openTooltip : false}\n            onClose={handleCloseTooltip}\n            onOpen={handleOpenTooltip}\n            title={titleText}\n            arrow\n          >\n            <span>\n              <IconButton\n                className={styles.sidebarHeaderButton}\n                onClick={openDeleteModal}\n                aria-label={isTransition ? 'delete transition' : 'delete node'}\n                disabled={deleteDisabled}\n              >\n                <FontAwesomeIcon icon={faTrashAlt} />\n              </IconButton>\n            </span>\n          </Tooltip>\n        )}\n\n        {isTransition && (\n          <IconButton\n            className={styles.sidebarHeaderButton}\n            onClick={redirectToNode}\n            aria-label={'go to transition node'}\n          >\n            <FontAwesomeIcon icon={faChevronRight} />\n          </IconButton>\n        )}\n      </div>\n\n      <DeleteModal\n        nodeLabel={node.label}\n        isTransition={isTransition}\n        open={openDelete}\n        onDelete={isTransition ? deleteTransition : deleteNode}\n        onClose={closeDeleteModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(SidebarHeader);\n","import React, { FC, memo } from 'react';\nimport { Button, Tooltip } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\n\nimport useStyles from './styles';\n\ninterface SidebarButtonProps {\n  buttonName: string;\n  buttonIcon: IconDefinition;\n  buttonText: string;\n  extraMargin?: boolean;\n  onClick?: () => void;\n  hasTooltip?: boolean;\n  tooltipTitle?: string;\n  disabled?: boolean;\n}\n\nconst SidebarButton: FC<SidebarButtonProps> = ({\n  buttonName,\n  buttonIcon,\n  buttonText,\n  extraMargin = false,\n  onClick,\n  hasTooltip = false,\n  tooltipTitle = '',\n  disabled = false\n}) => {\n  const styles = useStyles();\n\n  const ConditionalTooltip: FC = ({ children }) =>\n    hasTooltip ? (\n      <Tooltip title={tooltipTitle} placement=\"top\">\n        <span>{children}</span>\n      </Tooltip>\n    ) : (\n      <>{children}</>\n    );\n\n  return (\n    <div className={extraMargin ? styles.sidebarButtonGroupExtraMargin : styles.sidebarButtonGroup}>\n      <ConditionalTooltip>\n        <Button\n          className={styles.sidebarButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={buttonIcon} />}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {buttonName}\n        </Button>\n      </ConditionalTooltip>\n      <div className={styles.sidebarButtonText}>{buttonText}</div>\n    </div>\n  );\n};\n\nexport default memo(SidebarButton);\n","// External CQL -> ELM service\nimport { CqlObject } from './cql-extractor';\nimport config from 'utils/ConfigManager';\nimport {\n  extractJSONContent,\n  extractMultipartBoundary,\n  extractMultipartFileName\n} from 'utils/regexes';\nimport { ElmLibrary } from 'elm-model';\n\nconst url = config.get('cqlToElmWebserviceUrl');\n\nexport interface ElmObject {\n  main: object;\n  libraries: {\n    [key: string]: object;\n  };\n}\n\n/**\n * Function that requests web_service to convert the cql into elm.\n * @param cql - cql file that is the input to the function.\n * @return The resulting elm translation of the cql file.\n */\nexport default function convertCQL(cql: CqlObject): Promise<ElmObject> {\n  // Connect to web service\n  const formdata = new FormData();\n  Object.keys(cql.libraries).forEach((key, i) => {\n    formdata.append(`${key}`, cql.libraries[key]);\n  });\n\n  formdata.append('main', cql.main);\n  return fetch(url, {\n    method: 'POST',\n    body: formdata\n  }).then(elm => {\n    const header = elm.headers.get('content-type');\n    let boundary = '';\n    if (header) {\n      // sample header= \"multipart/form-data;boundary=Boundary_1\"\n      const result = extractMultipartBoundary.exec(header);\n      boundary = result ? `--${result[1]}` : '';\n    }\n    const obj: ElmObject = { main: {}, libraries: {} };\n    return elm.text().then(text => {\n      const elms = text.split(boundary).reduce((oldArray, line, i) => {\n        const body = extractJSONContent.exec(line);\n        if (body) {\n          const elmName = extractMultipartFileName.exec(line);\n          if (elmName && elmName[1] === 'main') {\n            oldArray[elmName[1]] = JSON.parse(body[1]);\n          } else if (elmName) {\n            oldArray.libraries[elmName[1]] = JSON.parse(body[1]);\n          }\n        }\n        return oldArray;\n      }, obj);\n\n      return elms;\n    });\n  });\n}\n\nexport function convertBasicCQL(cql: string): Promise<ElmLibrary> {\n  // Connect to web service\n\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/cql',\n      Accept: 'application/elm+json'\n    },\n    body: cql\n  }).then(elm => elm.json());\n}\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { SidebarButton } from '.';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport {\n  setNodeAction,\n  createCQL,\n  setActionNodeElm,\n  setActionResourceDisplay,\n  setActionCode,\n  setActionDescription,\n  setActionTitle,\n  setActionCodeSystem\n} from 'utils/builder';\nimport DropDown from 'components/elements/DropDown';\nimport { ActionNode, Action } from 'pathways-model';\nimport useStyles from './styles';\nimport { TextField } from '@material-ui/core';\nimport { convertBasicCQL } from 'engine/cql-to-elm';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport produce from 'immer';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { nodeTypeOptions } from 'utils/nodeUtils';\n\nconst codeSystemOptions = [\n  { label: 'ICD-9-CM', value: 'http://hl7.org/fhir/sid/icd-9-cm' },\n  { label: 'ICD-10-CM', value: 'http://hl7.org/fhir/sid/icd-10-cm' },\n  { label: 'LOINC', value: 'http://loinc.org' },\n  { label: 'NCI', value: 'http://ncimeta.nci.nih.gov' },\n  { label: 'RXNORM', value: 'http://www.nlm.nih.gov/research/umls/rxnorm' },\n  { label: 'SNOMED', value: 'http://snomed.info/sct' }\n];\n\ninterface ActionNodeEditorProps {\n  changeNodeType: (event: string) => void;\n}\n\nconst ActionNodeEditor: FC<ActionNodeEditorProps> = ({ changeNodeType }) => {\n  const { updatePathway } = usePathwaysContext();\n  const { pathwayRef } = useCurrentPathwayContext();\n  const { currentNode, currentNodeRef } = useCurrentNodeContext();\n  const styles = useStyles();\n\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  const addActionCQL = useCallback(\n    (action: Action, currentNodeKey: string): void => {\n      if (!pathwayRef.current) return;\n\n      const cql = createCQL(action, currentNodeKey);\n      convertBasicCQL(cql).then(elm => {\n        // Disable lint for no-null assertion since it is already checked above\n        // eslint-disable-next-line\n        updatePathway(setActionNodeElm(pathwayRef.current!, currentNodeKey, elm));\n      });\n    },\n    [pathwayRef, updatePathway]\n  );\n\n  const changeCode = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      const currentNode = currentNodeRef.current as ActionNode;\n      if (!currentNode.action || !pathwayRef.current) return;\n\n      const code = event?.target.value || '';\n      const action = setActionCode(currentNode.action, code);\n      updatePathway(setNodeAction(pathwayRef.current, currentNode.key, resetDisplay(action)));\n    },\n    [currentNodeRef, pathwayRef, updatePathway]\n  );\n\n  const changeDescription = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      const currentNode = currentNodeRef.current as ActionNode;\n      if (!currentNode.action || !pathwayRef.current) return;\n\n      const description = event?.target.value || '';\n      const action = setActionDescription(currentNode.action, description);\n      updatePathway(setNodeAction(pathwayRef.current, currentNode.key, action));\n    },\n    [currentNodeRef, pathwayRef, updatePathway]\n  );\n\n  const changeTitle = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      const currentNode = currentNodeRef.current as ActionNode;\n      if (!currentNode.action || !pathwayRef.current) return;\n\n      const title = event?.target.value || '';\n      const action = setActionTitle(currentNode.action, title);\n      updatePathway(setNodeAction(pathwayRef.current, currentNode.key, resetDisplay(action)));\n\n      addActionCQL(action, currentNode.key);\n    },\n    [currentNodeRef, pathwayRef, updatePathway, addActionCQL]\n  );\n\n  const selectCodeSystem = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      const currentNode = currentNodeRef.current as ActionNode;\n      if (!currentNode.action || !pathwayRef.current) return;\n\n      const codeSystem = event?.target.value || '';\n      const action = setActionCodeSystem(currentNode.action, codeSystem);\n      updatePathway(setNodeAction(pathwayRef.current, currentNode.key, resetDisplay(action)));\n    },\n    [currentNodeRef, pathwayRef, updatePathway]\n  );\n\n  const validateFunction = useCallback((): void => {\n    const currentNode = currentNodeRef.current as ActionNode;\n    if (!currentNode.action || !pathwayRef.current) {\n      console.error('No Actions -- Cannot Validate');\n      return;\n    }\n\n    const action = setActionResourceDisplay(currentNode.action, 'Example Text');\n    updatePathway(setNodeAction(pathwayRef.current, currentNode.key, action));\n\n    // TODO: move addActionCQL to builder.ts\n    addActionCQL(action, currentNode.key);\n  }, [currentNodeRef, pathwayRef, updatePathway, addActionCQL]);\n\n  const resetDisplay = (action: Action): Action => {\n    return produce(action, (draftAction: Action) => {\n      if (draftAction.resource.medicationCodeableConcept) {\n        draftAction.resource.medicationCodeableConcept.coding[0].display = '';\n      } else if (draftAction.resource.resourceType === 'CarePlan') {\n        draftAction.resource.description = '';\n      } else {\n        draftAction.resource.code.coding[0].display = ''; // TODO: actually validate\n      }\n    });\n  };\n\n  const onEnter = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key === 'Enter') {\n      validateFunction();\n    }\n  };\n\n  // The node has a key and is not the start node\n  const action = (currentNode as ActionNode).action;\n  if (!action) return <></>;\n\n  const changeNodeTypeEnabled = currentNode?.key !== 'Start';\n  const resource = action.resource;\n  let system = '';\n  let code = '';\n  let display = '';\n  if (resource.resourceType === 'MedicationRequest' || resource.resourceType === 'ServiceRequest') {\n    system = resource.code\n      ? resource.code.coding[0].system\n      : resource.medicationCodeableConcept.coding[0].system;\n    code = resource.code\n      ? resource.code.coding[0].code\n      : resource.medicationCodeableConcept.coding[0].code;\n    display = resource.code\n      ? resource.code.coding[0].display\n      : resource.medicationCodeableConcept.coding[0].display;\n  } else {\n    display = resource.description;\n  }\n\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <>\n          <DropDown\n            id=\"nodeType\"\n            label=\"Node Type\"\n            options={nodeTypeOptions}\n            onChange={selectNodeType}\n            value={resource.resourceType}\n          />\n\n          {(resource.resourceType === 'MedicationRequest' ||\n            resource.resourceType === 'ServiceRequest') && (\n            <>\n              <DropDown\n                id=\"codeSystem\"\n                label=\"Code System\"\n                options={codeSystemOptions}\n                onChange={selectCodeSystem}\n                value={system}\n              />\n              {system && (\n                <TextField\n                  id=\"code-input\"\n                  label=\"Code\"\n                  value={code}\n                  onChange={changeCode}\n                  variant=\"outlined\"\n                  error={code === ''}\n                  inputProps={{ onKeyPress: onEnter }}\n                />\n              )}\n              {code && (\n                <>\n                  {display ? (\n                    <div className={styles.displayText}>\n                      <FontAwesomeIcon icon={faCheckCircle} /> {display}\n                    </div>\n                  ) : (\n                    <SidebarButton\n                      buttonName=\"Validate\"\n                      buttonIcon={faCheckCircle}\n                      buttonText={display || 'Check validation of the input system and code'}\n                      onClick={validateFunction}\n                    />\n                  )}\n\n                  <TextField\n                    id=\"description-input\"\n                    label=\"Description\"\n                    value={action.description || ''}\n                    onChange={changeDescription}\n                    variant=\"outlined\"\n                    error={action.description === ''}\n                  />\n                </>\n              )}\n            </>\n          )}\n\n          {resource.resourceType === 'CarePlan' && (\n            <>\n              <TextField\n                id=\"title-input\"\n                label=\"Title\"\n                value={resource.title || ''}\n                onChange={changeTitle}\n                variant=\"outlined\"\n                error={resource.title == null}\n                inputProps={{ onKeyPress: onEnter }}\n              />\n              {resource.title && (\n                <TextField\n                  id=\"description-input\"\n                  label=\"Description\"\n                  value={action.description || ''}\n                  onChange={changeDescription}\n                  variant=\"outlined\"\n                  error={action.description === ''}\n                />\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(ActionNodeEditor);\n","import React, {\n  createContext,\n  ReactNode,\n  FC,\n  useState,\n  memo,\n  useContext,\n  useCallback,\n  useEffect\n} from 'react';\nimport shortid from 'shortid';\nimport { ElmStatement, ElmLibrary } from 'elm-model';\nimport config from 'utils/ConfigManager';\nimport useGetService from './Services';\nimport { ServiceLoaded } from 'pathways-objects';\nimport { Criteria, BuilderModel } from 'criteria-model';\n\ninterface CriteriaContextInterface {\n  criteria: Criteria[];\n  addCriteria: (file: File) => void;\n  deleteCriteria: (id: string) => void;\n  addElmCriteria: (elm: ElmLibrary) => Criteria[];\n  addBuilderCriteria: (criteria: BuilderModel) => Criteria[];\n}\n\nexport const CriteriaContext = createContext<CriteriaContextInterface>(\n  {} as CriteriaContextInterface\n);\n\ninterface CriteriaProviderProps {\n  children: ReactNode;\n}\n\nconst DEFAULT_ELM_STATEMENTS = [\n  'Patient',\n  'MeetsInclusionCriteria',\n  'InPopulation',\n  'Recommendation',\n  'Rationale',\n  'Errors'\n];\n\nfunction builderModelToCriteria(criteria: BuilderModel): Criteria {\n  return {\n    id: shortid.generate(),\n    label: `${criteria.type}${Date.now()}`,\n    modified: Date.now(),\n    builder: criteria,\n    statement: criteria.cql\n  };\n}\nfunction elmLibraryToCriteria(elm: ElmLibrary, custom = false): Criteria[] {\n  const allElmStatements: ElmStatement[] = elm.library.statements.def;\n  const elmStatements = allElmStatements.filter(def => !DEFAULT_ELM_STATEMENTS.includes(def.name));\n  if (!elmStatements) {\n    alert('No elm statement found in that file');\n    return [];\n  }\n  const labelTitle = custom\n    ? `Criteria Builder (${elm.library.identifier.id.substring(0, 5)})`\n    : elm.library.identifier.id;\n  return elmStatements.map(statement => {\n    return {\n      id: shortid.generate(),\n      label: `${labelTitle}: ${statement.name}`,\n      version: elm.library.identifier.version,\n      modified: Date.now(),\n      elm: elm,\n      statement: statement.name\n    };\n  });\n}\n\nfunction jsonToCriteria(rawElm: string): Criteria[] | undefined {\n  const elm = JSON.parse(rawElm);\n  if (!elm.library?.identifier) {\n    alert('Please upload ELM file');\n    return;\n  }\n  return elmLibraryToCriteria(elm);\n}\n\nexport const CriteriaProvider: FC<CriteriaProviderProps> = memo(({ children }) => {\n  const [criteria, setCriteria] = useState<Criteria[]>([]);\n  const service = useGetService<Criteria>(config.get('demoCriteria'));\n  const payload = (service as ServiceLoaded<Criteria[]>).payload;\n\n  useEffect(() => {\n    if (payload) {\n      const newCriteria: Criteria[] = [];\n      payload.forEach(jsonCriterion => {\n        const criterion = jsonToCriteria(JSON.stringify(jsonCriterion));\n        if (criterion) newCriteria.push(...criterion);\n      });\n      setCriteria(newCriteria);\n    }\n  }, [payload]);\n\n  const addCriteria = useCallback((file: File) => {\n    // figure out incoming file type\n    const reader = new FileReader();\n    reader.onload = (event: ProgressEvent<FileReader>): void => {\n      if (event.target?.result) {\n        const rawElm = event.target.result as string;\n        const newCriteria = jsonToCriteria(rawElm);\n        if (newCriteria) setCriteria(currentCriteria => [...currentCriteria, ...newCriteria]);\n      } else alert('Unable to read that file');\n    };\n    reader.readAsText(file);\n  }, []);\n\n  const deleteCriteria = useCallback((id: string) => {\n    setCriteria(currentCriteria => currentCriteria.filter(criteria => criteria.id !== id));\n  }, []);\n\n  const addElmCriteria = useCallback((elm: ElmLibrary): Criteria[] => {\n    const newCriteria = elmLibraryToCriteria(elm, true);\n    setCriteria(currentCriteria => [...currentCriteria, ...newCriteria]);\n\n    return newCriteria;\n  }, []);\n\n  const addBuilderCriteria = useCallback((criteria: BuilderModel): Criteria[] => {\n    const newCriteria = builderModelToCriteria(criteria);\n    setCriteria(currentCriteria => [...currentCriteria, newCriteria]);\n\n    return [newCriteria];\n  }, []);\n\n  return (\n    <CriteriaContext.Provider\n      value={{\n        criteria,\n        addCriteria,\n        deleteCriteria,\n        addElmCriteria,\n        addBuilderCriteria\n      }}\n    >\n      {children}\n    </CriteriaContext.Provider>\n  );\n});\n\nexport const useCriteriaContext = (): CriteriaContextInterface => useContext(CriteriaContext);\n","import React, {\n  createContext,\n  useCallback,\n  useState,\n  memo,\n  ReactNode,\n  FC,\n  useContext\n} from 'react';\n\ninterface CriteriaBuilderContextInterface {\n  selectedElement: string;\n  selectedDemoElement: string;\n  gender: string;\n  minimumAge: number;\n  maximumAge: number;\n  setSelectedElement: (selectedElement: string) => void;\n  setSelectedDemoElement: (selectedDemoElement: string) => void;\n  setGender: (gender: string) => void;\n  setMinimumAge: (age: number) => void;\n  setMaximumAge: (age: number) => void;\n  resetCriteriaBuilder: () => void;\n}\n\nexport const CriteriaBuilderContext = createContext<CriteriaBuilderContextInterface>(\n  {} as CriteriaBuilderContextInterface\n);\n\ninterface CriteriaBuilderProviderProps {\n  children: ReactNode;\n}\n\nexport const CriteriaBuilderProvider: FC<CriteriaBuilderProviderProps> = memo(({ children }) => {\n  const [selectedElement, setSelectedElement] = useState<string>('');\n  const [selectedDemoElement, setSelectedDemoElement] = useState<string>('');\n  const [gender, setGender] = useState<string>('');\n  const [minimumAge, setMinimumAge] = useState<number>(0);\n  const [maximumAge, setMaximumAge] = useState<number>(0);\n\n  const resetCriteriaBuilder = useCallback(() => {\n    setSelectedElement('');\n    setSelectedDemoElement('');\n    setGender('');\n    setMinimumAge(0);\n    setMaximumAge(0);\n  }, [setSelectedElement, setSelectedDemoElement, setGender, setMinimumAge, setMaximumAge]);\n\n  return (\n    <CriteriaBuilderContext.Provider\n      value={{\n        selectedElement,\n        selectedDemoElement,\n        gender,\n        minimumAge,\n        maximumAge,\n        setSelectedElement,\n        setSelectedDemoElement,\n        setGender,\n        setMinimumAge,\n        setMaximumAge,\n        resetCriteriaBuilder\n      }}\n    >\n      {children}\n    </CriteriaBuilderContext.Provider>\n  );\n});\n\nexport const useCriteriaBuilderContext = (): CriteriaBuilderContextInterface =>\n  useContext(CriteriaBuilderContext);\n","import React, { FC, memo, useState, useCallback, ChangeEvent, useMemo, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave, faTools, faTrashAlt, faThList } from '@fortawesome/free-solid-svg-icons';\nimport DropDown from 'components/elements/DropDown';\nimport { Button, Checkbox, FormControlLabel, TextField, Box } from '@material-ui/core';\nimport {\n  removeTransitionCondition,\n  setTransitionCondition,\n  setTransitionConditionDescription\n} from 'utils/builder';\nimport { OutlinedDiv, SidebarButton } from '.';\nimport { Transition } from 'pathways-model';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport { useCriteriaBuilderContext } from 'components/CriteriaBuilderProvider';\n\ninterface BranchTransitionProps {\n  transition: Transition;\n}\n\nconst BranchTransition: FC<BranchTransitionProps> = ({ transition }) => {\n  const { updatePathway } = usePathwaysContext();\n  const { criteria, addBuilderCriteria } = useCriteriaContext();\n  const {\n    buildCriteriaSelected,\n    setBuildCriteriaSelected,\n    currentCriteriaNodeId,\n    setCurrentCriteriaNodeId,\n    currentCriteria,\n    setCurrentCriteria,\n    criteriaName,\n    setCriteriaName,\n    resetCurrentCriteria\n  } = useCurrentCriteriaContext();\n  const { resetCriteriaBuilder } = useCriteriaBuilderContext();\n  const { pathwayRef } = useCurrentPathwayContext();\n  const { currentNodeRef } = useCurrentNodeContext();\n  const criteriaOptions = useMemo(() => criteria.map(c => ({ value: c.id, label: c.label })), [\n    criteria\n  ]);\n  const criteriaAvailable = criteriaOptions.length > 0;\n  const styles = useStyles();\n  const [useCriteriaSelected, setUseCriteriaSelected] = useState<boolean>(false);\n  const criteriaDescription = transition.condition?.description;\n  const criteriaIsValid = criteriaDescription != null;\n  const criteriaDisplayIsValid = criteriaDescription && criteriaDescription !== '';\n  const hasCriteria = transition.condition?.cql || transition.condition?.description;\n  const buttonText = hasCriteria ? 'DELETE' : 'CANCEL';\n  const icon = hasCriteria ? <FontAwesomeIcon icon={faTrashAlt} /> : null;\n  const displayCriteria =\n    criteriaAvailable &&\n    (useCriteriaSelected || transition.condition?.cql || transition.condition?.description);\n  const transitionRef = useRef(transition);\n\n  const handleUseCriteria = useCallback((): void => {\n    if (hasCriteria && currentNodeRef.current && pathwayRef.current) {\n      // delete the transition criteria\n      updatePathway(\n        removeTransitionCondition(pathwayRef.current, currentNodeRef.current.key, transition.id)\n      );\n      setUseCriteriaSelected(false);\n    } else {\n      setUseCriteriaSelected(!useCriteriaSelected);\n    }\n  }, [useCriteriaSelected, currentNodeRef, pathwayRef, hasCriteria, transition.id, updatePathway]);\n\n  const selectCriteriaSource = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current || !pathwayRef.current) return;\n\n      const criteriaId = event?.target.value || '';\n      const selectedCriteria = criteria.find(c => c.id === criteriaId);\n      if (!selectedCriteria) return;\n      const newPathway = setTransitionCondition(\n        pathwayRef.current,\n        currentNodeRef.current.key,\n        transitionRef.current.id,\n        transitionRef.current.condition?.description || '',\n        selectedCriteria\n      );\n\n      updatePathway(newPathway);\n    },\n    [currentNodeRef, updatePathway, pathwayRef, transitionRef, criteria]\n  );\n\n  const setCriteriaDisplay = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current || !pathwayRef.current) return;\n\n      const criteriaDisplay = event?.target.value || '';\n      updatePathway(\n        setTransitionConditionDescription(\n          pathwayRef.current,\n          currentNodeRef.current.key,\n          transition.id,\n          criteriaDisplay\n        )\n      );\n    },\n    [currentNodeRef, transition.id, updatePathway, pathwayRef]\n  );\n\n  const handleCriteriaName = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setCriteriaName(event?.target.value || '');\n    },\n    [setCriteriaName]\n  );\n\n  const handleBuildCriteria = useCallback((): void => {\n    setCurrentCriteriaNodeId(transition.id);\n    setCurrentCriteria(null);\n    setCriteriaName('');\n    if (!buildCriteriaSelected) setBuildCriteriaSelected(true);\n    resetCriteriaBuilder();\n  }, [\n    buildCriteriaSelected,\n    setCurrentCriteriaNodeId,\n    transition,\n    setBuildCriteriaSelected,\n    setCurrentCriteria,\n    resetCriteriaBuilder,\n    setCriteriaName\n  ]);\n\n  const handleBuildCriteriaCancel = useCallback((): void => {\n    resetCurrentCriteria();\n    resetCriteriaBuilder();\n  }, [resetCurrentCriteria, resetCriteriaBuilder]);\n\n  const handleBuildCriteriaSave = useCallback(() => {\n    if (!currentNodeRef.current || !pathwayRef.current || !currentCriteria?.cql) return;\n\n    const criteria = addBuilderCriteria(currentCriteria);\n    const newPathway = setTransitionCondition(\n      pathwayRef.current,\n      currentNodeRef.current.key,\n      transitionRef.current.id,\n      criteriaName,\n      criteria[0]\n    );\n\n    updatePathway(newPathway);\n    handleBuildCriteriaCancel();\n  }, [\n    currentNodeRef,\n    updatePathway,\n    pathwayRef,\n    transitionRef,\n    currentCriteria,\n    criteriaName,\n    handleBuildCriteriaCancel,\n    addBuilderCriteria\n  ]);\n\n  const transitionSelected = buildCriteriaSelected && currentCriteriaNodeId === transition.id;\n  return (\n    <>\n      {!displayCriteria && !transitionSelected && (\n        <SidebarButton\n          buttonName=\"Select Criteria\"\n          buttonIcon={faThList}\n          buttonText=\"Add previously built or imported criteria logic to branch node.\"\n          onClick={handleUseCriteria}\n          disabled={!criteriaAvailable}\n          hasTooltip={!criteriaAvailable}\n          tooltipTitle=\"No criteria to select. Add criteria to use.\"\n        />\n      )}\n\n      {displayCriteria && !transitionSelected && (\n        <OutlinedDiv label=\"Criteria Selector\" error={!criteriaIsValid || !criteriaDisplayIsValid}>\n          <>\n            <DropDown\n              id=\"Criteria\"\n              label=\"Criteria\"\n              options={criteriaOptions}\n              onChange={selectCriteriaSource}\n              value={transition.condition?.criteriaSource || undefined}\n            />\n\n            <TextField\n              label=\"Criteria Display\"\n              value={transition.condition?.description || ''}\n              variant=\"outlined\"\n              onChange={setCriteriaDisplay}\n              error={!criteriaDisplayIsValid}\n            />\n          </>\n\n          <Button\n            className={styles.cancelButton}\n            color=\"inherit\"\n            size=\"small\"\n            variant=\"outlined\"\n            startIcon={icon}\n            onClick={handleUseCriteria}\n          >\n            {buttonText}\n          </Button>\n        </OutlinedDiv>\n      )}\n\n      {!displayCriteria && !transitionSelected && (\n        <SidebarButton\n          buttonName=\"Build Criteria\"\n          buttonIcon={faTools}\n          buttonText=\"Create new criteria logic to add to branch node.\"\n          extraMargin\n          onClick={handleBuildCriteria}\n        />\n      )}\n\n      {transitionSelected && (\n        <OutlinedDiv label=\"Criteria Builder\" error={!criteriaIsValid || !criteriaDisplayIsValid}>\n          <TextField\n            error={criteriaName === ''}\n            label=\"Criteria Name\"\n            variant=\"outlined\"\n            onChange={handleCriteriaName}\n            value={criteriaName}\n            fullWidth\n          />\n          {currentCriteria?.text && (\n            <span className={styles.buildCriteriaText}>{currentCriteria.text}</span>\n          )}\n          <div className={styles.buildCriteriaContainer}>\n            <FormControlLabel\n              label={<Box fontStyle=\"italic\">Add to reusable criteria</Box>}\n              control={<Checkbox color=\"default\" />}\n              checked\n            />\n            <Button\n              color=\"inherit\"\n              size=\"large\"\n              variant=\"outlined\"\n              onClick={handleBuildCriteriaCancel}\n            >\n              Cancel\n            </Button>\n            <Button\n              className={styles.saveButton}\n              color=\"inherit\"\n              size=\"large\"\n              variant=\"outlined\"\n              startIcon={<FontAwesomeIcon icon={faSave} />}\n              disabled={criteriaName === '' || currentCriteria === null}\n              onClick={handleBuildCriteriaSave}\n            >\n              Save\n            </Button>\n          </div>\n        </OutlinedDiv>\n      )}\n    </>\n  );\n};\n\nexport default memo(BranchTransition);\n","import React, { FC, ReactNode } from 'react';\nimport clsx from 'clsx';\n\nimport TextField from '@material-ui/core/TextField';\nimport useStyles from './styles';\n\ninterface InputComponentProps {\n  children?: ReactNode;\n}\n\nconst InputComponent: FC<InputComponentProps> = ({ children }) => {\n  return <>{children}</>;\n};\n\ninterface OutlinedDivProps {\n  children: ReactNode;\n  label: string;\n  error: boolean;\n}\n\nconst OutlinedDiv: FC<OutlinedDivProps> = ({ children, label, error }) => {\n  const styles = useStyles();\n\n  return (\n    <TextField\n      variant=\"outlined\"\n      label={label}\n      multiline\n      InputLabelProps={{ shrink: true }}\n      InputProps={{\n        inputComponent: InputComponent,\n        classes: {\n          root: clsx(styles.outlinedDiv, error && styles.outlinedDivError),\n          notchedOutline: clsx(error && styles.outlinedDivError)\n        }\n      }}\n      inputProps={{ children }}\n      fullWidth\n    />\n  );\n};\n\n// This is not memoized since one of its props is children\nexport default OutlinedDiv;\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton\n} from '@material-ui/core';\n\nimport useStyles from './styles';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\n\ninterface DeleteModalProps {\n  open: boolean;\n  nodeLabel: string;\n  isTransition: boolean;\n  onClose: () => void;\n  onDelete: () => void;\n}\n\nconst DeleteModal: FC<DeleteModalProps> = ({\n  open,\n  nodeLabel,\n  isTransition,\n  onClose,\n  onDelete\n}) => {\n  const styles = useStyles();\n  const { currentNode } = useCurrentNodeContext();\n\n  const text = isTransition ? (\n    <span>\n      Delete the transition from <strong>{currentNode?.label}</strong> to{' '}\n      <strong>{nodeLabel}</strong>? This will not delete either node, just the transition between\n      them.\n    </span>\n  ) : (\n    <span>\n      Delete the node <strong>{nodeLabel}</strong>? This will also remove any transitions to this\n      node.\n    </span>\n  );\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"create-pathway\"\n        fullWidth\n        maxWidth=\"md\"\n      >\n        <DialogTitle disableTypography>\n          <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n            <FontAwesomeIcon icon={faTimes} />\n          </IconButton>\n        </DialogTitle>\n\n        <DialogContent className={styles.dialogContent}>\n          <FontAwesomeIcon icon={faExclamationCircle} className={styles.alertIcon} />\n          <p className={styles.dialogContentText}>{text}</p>\n        </DialogContent>\n\n        <DialogActions>\n          <Button variant=\"text\" color=\"primary\" onClick={onClose}>\n            Cancel\n          </Button>\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDelete}>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default memo(DeleteModal);\n","import React, { FC, ReactNode, memo } from 'react';\nimport SidebarHeader from './SidebarHeader';\nimport useStyles from './styles';\nimport { Card } from '@material-ui/core';\nimport { Transition } from 'pathways-model';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\n\ninterface TransitionEditorProps {\n  transition: Transition;\n  children?: ReactNode;\n}\n\nconst TransitionEditor: FC<TransitionEditorProps> = ({ transition, children }) => {\n  const styles = useStyles();\n  const { pathway } = useCurrentPathwayContext();\n  const transitionKey = transition?.transition || '';\n  const transitionNode = pathway?.nodes[transitionKey];\n\n  return (\n    <Card raised className={styles.transitionContainer}>\n      {transitionNode && <SidebarHeader node={transitionNode} isTransition />}\n\n      {children}\n    </Card>\n  );\n};\n\nexport default memo(TransitionEditor);\n","import { useCallback, useState } from 'react';\nimport { graphlib, Node } from 'dagre';\nimport { Edges } from 'graph-model';\n\nexport interface GraphCoordinates {\n  nodes: NodeCoordinates;\n  edges: Edges;\n}\n\nexport interface NodeCoordinates {\n  [nodeName: string]: Node;\n}\n\nexport interface UpdateCoordinatesInterface {\n  graph: graphlib.Graph;\n  graphWidth: number;\n}\n\nexport interface CoordinatesCalculator {\n  coordinates: GraphCoordinates;\n  updateCoordinates: (graph: UpdateCoordinatesInterface) => void;\n}\n\n// number of pixels to add as a buffer to the top of the graph\nconst OFFSET_TOP = 16;\n\nconst useCoordinatesCalculator = (): CoordinatesCalculator => {\n  const [coordinates, setCoordinates] = useState<GraphCoordinates>({\n    nodes: {},\n    edges: {}\n  } as GraphCoordinates);\n\n  const updateCoordinates = useCallback(\n    ({ graph, graphWidth }: UpdateCoordinatesInterface): void => {\n      const startNodeShift = graph.node('Start').x;\n\n      const xOffset = 0 - startNodeShift + graphWidth / 2;\n      let xOffsetCorrection = 0;\n      const yOffset = OFFSET_TOP;\n\n      const newCoordinates: GraphCoordinates = { nodes: {}, edges: {} };\n\n      for (const nodeKey of graph.nodes()) {\n        const node = graph.node(nodeKey);\n\n        // dagre returns coordinates for the center of the node,\n        // our renderer expects coordinates for the corner of the node.\n        // further, our renderer expects the Start node to be centered at x: 0\n        newCoordinates.nodes[nodeKey] = {\n          ...node,\n          x: node.x - node.width / 2 + xOffset,\n          y: node.y - node.height / 2 + yOffset\n        };\n\n        xOffsetCorrection = Math.min(0, xOffsetCorrection, newCoordinates.nodes[nodeKey].x);\n      }\n      xOffsetCorrection = Math.abs(xOffsetCorrection);\n\n      if (xOffsetCorrection > 0) {\n        for (const nodeKey of graph.nodes()) {\n          newCoordinates.nodes[nodeKey].x += xOffsetCorrection;\n        }\n      }\n\n      for (const edgeKey of graph.edges()) {\n        const edge = graph.edge(edgeKey);\n        const edgeName = `${edgeKey.v}, ${edgeKey.w}`;\n        const label = edge.label\n          ? { text: edge.label, x: edge.x + xOffset, y: edge.y + yOffset }\n          : null;\n\n        const points = edge.points.map(point => ({\n          x: (isNaN(point.x) ? 0 : point.x) + xOffset + xOffsetCorrection,\n          y: (isNaN(point.y) ? 0 : point.y) + yOffset\n        }));\n\n        // move the last point up to make room for the arrowhead\n        if (points.length > 0) points[points.length - 1].y -= 17.5;\n\n        newCoordinates.edges[edgeName] = {\n          label,\n          start: edgeKey.v,\n          end: edgeKey.w,\n          points\n        };\n      }\n\n      setCoordinates(newCoordinates);\n    },\n    []\n  );\n\n  return { coordinates, updateCoordinates };\n};\n\nexport default useCoordinatesCalculator;\n","import React, {\n  createContext,\n  FC,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState\n} from 'react';\nimport { useRafState, useUpdateEffect } from 'react-use';\nimport dagre, { graphlib } from 'dagre';\n\nimport useCoordinatesCalculator, { GraphCoordinates } from './useCoordinatesCalculator';\n\ninterface GraphContextInterface {\n  graph: graphlib.Graph;\n  reflow: () => void;\n}\n\ntype SetGraphWidthInterface = (width: number) => void;\n\nexport const GraphContext = createContext<GraphContextInterface>({} as GraphContextInterface);\nexport const SetGraphWidthContext = createContext<SetGraphWidthInterface>(() => undefined);\nexport const GraphCoordinatesContext = createContext<GraphCoordinates>({\n  nodes: {},\n  edges: {}\n} as GraphCoordinates);\n\ninterface GraphProviderProps {\n  children: ReactNode;\n}\n\nconst createGraph = (): graphlib.Graph => {\n  const g = new dagre.graphlib.Graph();\n  g.setGraph({});\n\n  // dagre requires a default edge label, we want it to just be empty\n  g.setDefaultEdgeLabel(() => ({}));\n  return g;\n};\n\nconst GraphProvider: FC<GraphProviderProps> = ({ children }) => {\n  const graph = useMemo(createGraph, []);\n  const { coordinates, updateCoordinates } = useCoordinatesCalculator();\n  const [width, setWidth] = useRafState<number>(0);\n  const [reflowRequired, setReflowRequired] = useState(true);\n  const reflow = useCallback(() => setReflowRequired(true), []);\n  const graphValue = useMemo(() => ({ graph, reflow }), [graph, reflow]);\n\n  useEffect(() => {\n    if (!reflowRequired) return;\n\n    dagre.layout(graph);\n    updateCoordinates({ graph, graphWidth: width });\n\n    setReflowRequired(false);\n  }, [graph, reflowRequired, setReflowRequired, width, updateCoordinates]);\n\n  useUpdateEffect(() => {\n    setReflowRequired(true);\n  }, [width]);\n\n  return (\n    <GraphContext.Provider value={graphValue}>\n      <SetGraphWidthContext.Provider value={setWidth}>\n        <GraphCoordinatesContext.Provider value={coordinates}>\n          {children}\n        </GraphCoordinatesContext.Provider>\n      </SetGraphWidthContext.Provider>\n    </GraphContext.Provider>\n  );\n};\n\nexport default GraphProvider;\nexport const useGraphProvider = (): GraphContextInterface => useContext(GraphContext);\nexport const useSetGraphWidth = (): SetGraphWidthInterface => useContext(SetGraphWidthContext);\nexport const useGraphCoordinates = (): GraphCoordinates => useContext(GraphCoordinatesContext);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\ninterface StyleProps {\n  isActive?: boolean;\n}\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    edges: {\n      display: 'block',\n      position: 'absolute',\n      top: '0',\n      left: '0',\n      overflow: 'visible',\n      width: '100%',\n      height: '100%',\n      zIndex: 1,\n      '& text': {\n        fontSize: '18px'\n      },\n      '& #arrowhead-inactive polygon': {\n        fill: theme.palette.common.blue\n      },\n      '& #arrowhead-active polygon': {\n        fill: theme.palette.common.red\n      }\n    },\n    edge: {\n      stroke: (props?: StyleProps): string => theme.palette.common[props?.isActive ? 'red' : 'blue']\n    }\n  }),\n  { name: 'DagreGraph-GraphEdges' }\n);\n","import React, { FC, ReactElement, memo, useMemo } from 'react';\nimport { Tooltip } from '@material-ui/core';\n\nimport { Label, Coordinate } from 'graph-model';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { useGraphCoordinates } from './GraphProvider';\nimport useStyles from './GraphEdges.styles';\n\ninterface EdgeProps {\n  label: Label | null;\n  points: Coordinate[];\n  isActive: boolean;\n}\n\ninterface LabelTooltipProps {\n  label: Label;\n  children: ReactElement;\n}\n\n/**\n * The points to use in the Cubic command is determined by the length of points array\n * If i % 3 is 0, use all points including the 1st point\n * If i % 3 is 1, use all points except the 1st point\n * If i % 3 is 2, use all points including the 1st point and reuse every 3rd point\n * We need points to be a multiple of 3 because the Cubic command expects 3 points\n */\nconst generatePathString = (points: Coordinate[]): string =>\n  points.reduce(\n    (path, point, i) =>\n      i % 3 === points.length % 3\n        ? `${path} C ${point.x} ${point.y} ${points[i + 1].x} ${points[i + 1].y} ${\n            points[i + 2].x\n          } ${points[i + 2].y}`\n        : path,\n    `M ${points[0].x} ${points[0].y} `\n  );\n\nconst LabelTooltip: FC<LabelTooltipProps> = ({ label, children }) => {\n  if (label.text.length > 12) {\n    return <Tooltip title={label.text} children={children} />;\n  } else {\n    return <>{children}</>;\n  }\n};\n\nconst Edge: FC<EdgeProps> = ({ label, points, isActive }) => {\n  const styles = useStyles({ isActive });\n  const path = useMemo(() => generatePathString(points), [points]);\n  const truncateTooltip = label && label.text?.length > 12;\n\n  return (\n    <>\n      <path\n        d={path}\n        fill=\"transparent\"\n        className={styles.edge}\n        strokeWidth=\"2\"\n        markerEnd={`url(#arrowhead-${isActive ? 'active' : 'inactive'})`}\n      />\n      {label && (\n        <LabelTooltip label={label}>\n          <text x={label.x} y={label.y}>\n            {truncateTooltip ? `${label.text.substring(0, 11)}...` : label.text}\n          </text>\n        </LabelTooltip>\n      )}\n    </>\n  );\n};\n\nconst GraphEdges: FC = () => {\n  const styles = useStyles();\n  const { edges: edgeCoordinates } = useGraphCoordinates();\n  const { currentNode } = useCurrentNodeContext();\n\n  return (\n    <svg className={styles.edges}>\n      <defs>\n        <marker\n          id=\"arrowhead-inactive\"\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n\n        <marker\n          id=\"arrowhead-active\"\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n\n      {Object.entries(edgeCoordinates).map(([edgeId, edge]) => (\n        <Edge\n          key={edgeId}\n          label={edge.label}\n          points={edge.points}\n          isActive={edge.start === currentNode?.key}\n        />\n      ))}\n    </svg>\n  );\n};\n\nexport default memo(GraphEdges);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    table: {\n      '& tr': {\n        verticalAlign: 'top'\n      }\n    },\n    title: {\n      fontWeight: 'bold',\n      textAlign: 'right',\n      minWidth: '80px'\n    },\n    description: {\n      paddingLeft: theme.spacing(2),\n      fontStyle: 'italic',\n      overflowWrap: 'break-word'\n    },\n    externalLink: {\n      color: theme.palette.common.blue,\n      marginLeft: theme.spacing(1),\n\n      '&:hover, &:focus': {\n        color: theme.palette.common.grayDark\n      }\n    }\n  }),\n  { name: 'NodeDetails' }\n);\n","import React, { FC, ReactNode, memo } from 'react';\nimport { ActionNode, BranchNode, PathwayNode } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\nimport { getNodeType } from 'utils/builder';\nimport { resourceNameConversion } from 'utils/nodeUtils';\nimport useStyles from './NodeDetails.styles';\n\ninterface NodeDetailsProps {\n  pathwayNode: ActionNode | BranchNode | PathwayNode;\n}\n\ninterface FieldProps {\n  title: string;\n  description: string | ReactNode;\n}\n\ninterface ActionNodeFieldsProps {\n  actionNode: ActionNode;\n}\n\nconst isMedicationRequest = (\n  request: MedicationRequest | ServiceRequest\n): request is MedicationRequest =>\n  (request as MedicationRequest).medicationCodeableConcept !== undefined;\n\nconst Field: FC<FieldProps> = ({ title, description }) => {\n  const styles = useStyles();\n\n  if (!description) return null;\n\n  return (\n    <tr>\n      <td className={styles.title}>{title}</td>\n      <td className={styles.description}>{description}</td>\n    </tr>\n  );\n};\n\nconst BranchNodeContents: FC = () => <Field title=\"Type\" description=\"Observation\" />;\n\nconst ActionNodeFields: FC<ActionNodeFieldsProps> = ({ actionNode }) => {\n  const styles = useStyles();\n\n  if (actionNode.action === null) return null;\n\n  const resource = actionNode.action.resource;\n  const coding = isMedicationRequest(resource)\n    ? resource?.medicationCodeableConcept?.coding\n    : resource?.code?.coding;\n  const resourceType = resourceNameConversion[resource.resourceType]\n    ? resourceNameConversion[resource.resourceType]\n    : resource.resourceType;\n\n  return (\n    <>\n      <Field title=\"Description\" description={actionNode.action.description} />\n      <Field key=\"Type\" title=\"Type\" description={resourceType} />\n      <Field\n        key=\"System\"\n        title=\"System\"\n        description={\n          coding?.[0]?.system && (\n            <>\n              {coding[0].system}\n              <a href={coding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n              </a>\n            </>\n          )\n        }\n      />\n      <Field key=\"Code\" title=\"Code\" description={coding?.[0]?.code} />\n      <Field key=\"Display\" title=\"Display\" description={coding?.[0]?.display} />\n      <Field key=\"Title\" title=\"Title\" description={resource.title} />\n    </>\n  );\n};\n\nconst NodeDetails: FC<NodeDetailsProps> = ({ pathwayNode }) => {\n  const styles = useStyles();\n  const nodeType = getNodeType(pathwayNode);\n\n  if (nodeType == null) return null;\n\n  return (\n    <table className={styles.table}>\n      <tbody>\n        {nodeType === 'branch' && <BranchNodeContents />}\n        {nodeType === 'action' && <ActionNodeFields actionNode={pathwayNode as ActionNode} />}\n      </tbody>\n    </table>\n  );\n};\n\nexport default memo(NodeDetails);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    icon: {\n      marginRight: theme.spacing(1),\n      fontSize: '0.9rem'\n    }\n  }),\n  { name: 'DagreGraph-NodeIcon' }\n);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faMicroscope,\n  faPlay,\n  faPrescriptionBottleAlt,\n  faSyringe,\n  faBookMedical\n} from '@fortawesome/free-solid-svg-icons';\n\nimport useStyles from './NodeIcon.styles';\n\ninterface NodeIconProps {\n  isStartNode: boolean;\n  nodeType: string;\n  resourceType?: string;\n}\n\nconst NodeIcon: FC<NodeIconProps> = ({ isStartNode, nodeType, resourceType }) => {\n  const styles = useStyles();\n\n  let icon: IconDefinition | undefined;\n  if (isStartNode) {\n    icon = faPlay;\n  } else if (nodeType === 'action' && resourceType) {\n    if (resourceType === 'MedicationRequest') icon = faPrescriptionBottleAlt;\n    else if (resourceType === 'ServiceRequest') icon = faSyringe;\n    else if (resourceType === 'CarePlan') icon = faBookMedical;\n  } else if (nodeType === 'branch') {\n    icon = faMicroscope;\n  }\n\n  return icon ? <FontAwesomeIcon icon={icon} className={styles.icon} /> : null;\n};\n\nexport default memo(NodeIcon);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\ninterface StyleProps {\n  isActionable: boolean;\n  isExpanded: boolean;\n}\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    node: {\n      position: 'absolute',\n      width: 'auto',\n      minWidth: ({ isExpanded }: StyleProps): string => (isExpanded ? '400px' : '100px'),\n      maxWidth: '600px',\n      minHeight: '50px',\n      display: 'flex',\n      alignItems: 'stretch',\n      flexDirection: 'column',\n      border: ({ isActionable }: StyleProps): string =>\n        `1px solid ${theme.palette.common[isActionable ? 'red' : 'blue']}`,\n      backgroundColor: theme.palette.common.white,\n      zIndex: 2,\n      overflow: 'hidden'\n    },\n    nodeTitle: {\n      padding: theme.spacing(2),\n      flex: '1',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: theme.palette.common.white,\n      backgroundColor: ({ isActionable }: StyleProps): string =>\n        theme.palette.common[isActionable ? 'red' : 'blue']\n    },\n    nodeContent: {\n      padding: theme.spacing(2)\n    },\n    clickable: {\n      cursor: 'pointer'\n    }\n  }),\n  { name: 'DagreGraph-Node' }\n);\n","import React, { FC, memo, useCallback, useMemo, useRef } from 'react';\nimport clsx from 'clsx';\nimport { useLifecycles, useUpdateEffect } from 'react-use';\n\nimport { ActionNode, BranchNode, PathwayNode, Transition } from 'pathways-model';\nimport { getNodeType } from 'utils/builder';\nimport NodeDetails from './NodeDetails';\nimport { useGraphProvider } from './GraphProvider';\nimport NodeIcon from './NodeIcon';\nimport useStyles from './Node.styles';\n\ninterface NodeProps {\n  nodeKey: string;\n  pathwayNode: ActionNode | BranchNode | PathwayNode;\n  isActionable: boolean;\n  isExpanded: boolean;\n  onClick?: (nodeName: string) => void;\n  xCoordinate: number;\n  yCoordinate: number;\n  openNode: (nodeName: string) => void;\n}\n\ninterface BoundingClientRectResponse {\n  width: number;\n  height: number;\n}\n\nconst createTransitionLabel = ({ condition }: Transition): { [key: string]: string | number } =>\n  condition\n    ? {\n        label: condition.description,\n        width: 25,\n        height: 20\n      }\n    : {};\n\nconst getBoundingClientRect = (element: HTMLDivElement | null): BoundingClientRectResponse => {\n  const dimensions = element?.getBoundingClientRect() ?? { width: 0, height: 0 };\n  return { width: Math.ceil(dimensions.width), height: Math.ceil(dimensions.height) };\n};\n\nconst Node: FC<NodeProps> = ({\n  nodeKey,\n  pathwayNode,\n  isActionable,\n  isExpanded,\n  onClick,\n  xCoordinate,\n  yCoordinate,\n  openNode\n}) => {\n  const styles = useStyles({ isExpanded, isActionable });\n  const onClickHandler = useCallback(() => {\n    if (onClick) onClick(nodeKey);\n  }, [onClick, nodeKey]);\n  const nodeRef = useRef<HTMLDivElement>(null);\n  const { graph, reflow } = useGraphProvider();\n  const nodeStyle = useMemo(() => ({ top: `${yCoordinate}px`, left: `${xCoordinate}px` }), [\n    xCoordinate,\n    yCoordinate\n  ]);\n  const nodeType = getNodeType(pathwayNode);\n  const action = (pathwayNode as ActionNode).action;\n\n  const { label, transitions } = pathwayNode;\n\n  useLifecycles(\n    (): void => {\n      const { width, height } = getBoundingClientRect(nodeRef.current);\n      graph.setNode(nodeKey, {\n        width,\n        height\n      });\n      transitions.forEach(transition => {\n        graph.setEdge(nodeKey, transition.transition, createTransitionLabel(transition));\n      });\n    },\n    (): void => {\n      graph.removeNode(nodeKey);\n    }\n  );\n\n  useUpdateEffect(() => {\n    if (!nodeRef.current) return undefined;\n\n    const { width, height } = getBoundingClientRect(nodeRef.current);\n    const node = graph.node(nodeKey);\n\n    if (node.width !== width || node.height !== height) {\n      graph.setNode(nodeKey, {\n        ...node,\n        width,\n        height\n      });\n      reflow();\n    }\n  });\n\n  useUpdateEffect(() => {\n    // remove transitions that no longer exist\n    const transitionNodes = new Set(transitions.map(({ transition }) => transition));\n    graph.outEdges(nodeKey)?.forEach(({ w }) => {\n      if (!transitionNodes.has(w)) {\n        graph.removeEdge(nodeKey, w);\n      }\n    });\n\n    transitions.forEach(transition => {\n      graph.setEdge(nodeKey, transition.transition, createTransitionLabel(transition));\n    });\n    reflow();\n  }, [nodeKey, transitions]);\n\n  useUpdateEffect(() => {\n    if (!action) return;\n    openNode(nodeKey);\n  }, [action, nodeKey]);\n\n  return (\n    <div className={styles.node} style={nodeStyle} ref={nodeRef}>\n      <div className={clsx(styles.nodeTitle, onClick && styles.clickable)} onClick={onClickHandler}>\n        <NodeIcon\n          resourceType={action ? action.resource?.resourceType : undefined}\n          nodeType={nodeType}\n          isStartNode={pathwayNode.label === 'Start'}\n        />\n        {label}\n      </div>\n\n      {isExpanded && (\n        <div className={styles.nodeContent}>\n          <NodeDetails pathwayNode={pathwayNode} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Node);\n","import { useState, useCallback } from 'react';\n\nexport interface ExpandedState {\n  [key: string]: boolean | string | null;\n}\n\ninterface ExpandedStateToggle {\n  expanded: ExpandedState;\n  toggleExpanded: (nodeName: string) => void;\n  openNode: (nodeName: string) => void;\n  closeNode: (nodeName: string) => void;\n}\n\nconst useExpandedState = (): ExpandedStateToggle => {\n  const [expanded, setExpanded] = useState<ExpandedState>({\n    lastSelectedNode: null\n  } as ExpandedState);\n\n  const toggleExpanded = useCallback((nodeName: string) => {\n    if (nodeName === 'Start') {\n      setExpanded(prevState => ({\n        ...prevState,\n        lastSelectedNode: nodeName\n      }));\n    } else {\n      setExpanded(prevState => ({\n        ...prevState,\n        [nodeName]:\n          !prevState[nodeName] || prevState.lastSelectedNode === nodeName\n            ? !prevState[nodeName]\n            : prevState[nodeName],\n        lastSelectedNode: nodeName\n      }));\n    }\n  }, []);\n\n  const openNode = useCallback((nodeName: string) => {\n    setExpanded(prevState => {\n      if (prevState[nodeName] && prevState.lastSelectedNode === nodeName) return prevState;\n\n      return {\n        ...prevState,\n        [nodeName]: true,\n        lastSelectedNode: nodeName\n      };\n    });\n  }, []);\n\n  const closeNode = useCallback((nodeName: string) => {\n    setExpanded(prevState => {\n      if (!prevState[nodeName]) return prevState;\n\n      return {\n        ...prevState,\n        [nodeName]: false\n      };\n    });\n  }, []);\n\n  return { expanded, toggleExpanded, openNode, closeNode };\n};\n\nexport default useExpandedState;\n","import { useCallback } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nexport type RedirectToNodeCallback = (nodeId: string) => void;\n\nconst useRedirectToNode = (): RedirectToNodeCallback => {\n  const { id: pathwayId } = useParams();\n  const history = useHistory();\n  const redirectToNode = useCallback(\n    nodeId => {\n      const url = `/builder/${encodeURIComponent(pathwayId)}/node/${encodeURIComponent(nodeId)}`;\n      if (url !== history.location.pathname) {\n        history.push(url);\n      }\n    },\n    [history, pathwayId]\n  );\n\n  return redirectToNode;\n};\n\nexport default useRedirectToNode;\n","import React, { FC, memo, useCallback } from 'react';\nimport { useUpdateEffect } from 'react-use';\n\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { useGraphCoordinates, useGraphProvider } from './GraphProvider';\nimport Node from './Node';\nimport useExpandedState from './useExpandedState';\nimport useRedirectToNode from './useRedirectToNode';\n\ninterface GraphNodesProps {\n  interactive: boolean;\n}\n\nconst GraphNodes: FC<GraphNodesProps> = ({ interactive }) => {\n  const { pathway } = useCurrentPathwayContext();\n  const { expanded: expandedNodes, toggleExpanded, openNode } = useExpandedState();\n  const { reflow } = useGraphProvider();\n  const { nodes: nodeCoordinates } = useGraphCoordinates();\n  const { currentNode } = useCurrentNodeContext();\n  const redirectToNode = useRedirectToNode();\n  const { resetCurrentCriteria } = useCurrentCriteriaContext();\n  const onClick = useCallback(\n    (nodeName: string) => {\n      redirectToNode(nodeName);\n      toggleExpanded(nodeName);\n      resetCurrentCriteria();\n    },\n    [redirectToNode, toggleExpanded, resetCurrentCriteria]\n  );\n\n  const nodes = Object.entries(pathway?.nodes ?? {});\n\n  useUpdateEffect(() => {\n    reflow();\n  }, [nodes.length]);\n\n  return (\n    <>\n      {nodes.map(([nodeName, pathwayNode]) => {\n        const coordinates = nodeCoordinates[nodeName] ?? { x: -999, y: -999 };\n\n        return (\n          <Node\n            key={nodeName}\n            nodeKey={nodeName}\n            pathwayNode={pathwayNode}\n            isActionable={pathwayNode.key === currentNode?.key}\n            isExpanded={Boolean(expandedNodes[nodeName])}\n            onClick={interactive ? onClick : undefined}\n            xCoordinate={coordinates.x}\n            yCoordinate={coordinates.y}\n            openNode={openNode}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default memo(GraphNodes);\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  {\n    root: {\n      position: 'relative',\n      minWidth: '100%',\n      minHeight: '100%'\n    }\n  },\n  { name: 'DagreGraph-GraphRoot' }\n);\n","import React, { FC, ReactNode, useEffect, useMemo, useRef } from 'react';\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor';\n\nimport { useSetGraphWidth, useGraphCoordinates } from './GraphProvider';\nimport useStyles from './GraphRoot.styles';\n\ninterface GraphRootProps {\n  children: ReactNode | ReactNode[];\n}\n\n// padding, in pixels, to add to the width and height of the graph\nconst GRAPH_PADDING = 150;\n\nconst GraphRoot: FC<GraphRootProps> = ({ children }) => {\n  const styles = useStyles();\n  const graphRef = useRef<HTMLDivElement>(null);\n  const setGraphWidth = useSetGraphWidth();\n  const { nodes: nodeCoordinates } = useGraphCoordinates();\n  const graphWidth = useMemo(() => {\n    return Math.ceil(\n      GRAPH_PADDING +\n        (nodeCoordinates !== undefined\n          ? Object.values(nodeCoordinates)\n              .map(({ x, width }) => x + width)\n              .reduce((a, b) => Math.max(a, b), 0)\n          : 0)\n    );\n  }, [nodeCoordinates]);\n  const graphHeight = useMemo(() => {\n    return Math.ceil(\n      GRAPH_PADDING +\n        (nodeCoordinates !== undefined\n          ? Object.values(nodeCoordinates)\n              .map(({ y, height }) => y + height)\n              .reduce((a, b) => Math.max(a, b), 0)\n          : 0)\n    );\n  }, [nodeCoordinates]);\n  const rootStyles = useMemo(() => ({ width: `${graphWidth}px`, height: `${graphHeight}px` }), [\n    graphWidth,\n    graphHeight\n  ]);\n\n  useEffect(() => {\n    const graphElement = graphRef.current;\n    if (graphElement?.parentElement) {\n      const { width } = graphElement.parentElement.getBoundingClientRect();\n      setGraphWidth(Math.ceil(width));\n      const sensor = new ResizeSensor(graphElement.parentElement, () => {\n        const { width } = graphElement?.parentElement?.getBoundingClientRect() ?? { width: 0 };\n        setGraphWidth(Math.ceil(width));\n      });\n      return (): void => {\n        sensor.detach();\n      };\n    }\n  }, [graphRef, setGraphWidth]);\n\n  return (\n    <div ref={graphRef} className={styles.root} style={rootStyles}>\n      {children}\n    </div>\n  );\n};\n\nexport default GraphRoot;\n","import React, { FC, memo } from 'react';\n\nimport GraphEdges from './GraphEdges';\nimport GraphProvider from './GraphProvider';\nimport GraphNodes from './GraphNodes';\nimport GraphRoot from './GraphRoot';\n\ninterface DagreGraphProps {\n  interactive?: boolean;\n}\n\nconst DagreGraph: FC<DagreGraphProps> = ({ interactive = true }) => {\n  return (\n    <GraphProvider>\n      <GraphRoot>\n        <GraphNodes interactive={interactive} />\n        <GraphEdges />\n      </GraphRoot>\n    </GraphProvider>\n  );\n};\n\nexport default memo(DagreGraph);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    elementContainer: {\n      padding: '1em',\n      marginRight: '10px',\n      border: '0.1em solid',\n      borderRadius: '0.2em',\n      fontWeight: 500,\n      width: 'auto',\n      backgroundColor: theme.palette.common.grayLighter\n    },\n    elementSelect: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    addElementLabel: {\n      marginLeft: '1em',\n      minWidth: '120px'\n    },\n    headerText: {\n      marginRight: '10px',\n      fontStyle: 'italic',\n      fontSize: '0.8em'\n    },\n    elementField: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    elementFieldLabel: {\n      fontWeight: 'bold',\n      marginRight: '1em'\n    }\n  }),\n  { name: 'CriteriaBuilder' }\n);\n","import React, { FC, memo, useCallback, useEffect, ChangeEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, TextField } from '@material-ui/core';\n\nimport DropDown from 'components/elements/DropDown';\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport useStyles from './styles';\nimport { useCriteriaBuilderContext } from 'components/CriteriaBuilderProvider';\n\nconst CriteriaBuilder: FC = () => {\n  const {\n    selectedElement,\n    selectedDemoElement,\n    gender,\n    minimumAge,\n    maximumAge,\n    setSelectedElement,\n    setSelectedDemoElement,\n    setGender,\n    setMinimumAge,\n    setMaximumAge,\n    resetCriteriaBuilder\n  } = useCriteriaBuilderContext();\n  const styles = useStyles();\n  const { setCurrentCriteria } = useCurrentCriteriaContext();\n  const elementOptions = [{ value: 'Demographics', label: 'Demographics' }];\n  const demoElementOptions = [\n    { value: 'Age Range', label: 'Age Range' },\n    { value: 'Gender', label: 'Gender' }\n  ];\n  const genderOptions = [\n    {\n      label: 'Male',\n      value: 'Male'\n    },\n    {\n      label: 'Female',\n      value: 'Female'\n    },\n    {\n      label: 'Other',\n      value: 'Other'\n    },\n    {\n      label: 'Unknown',\n      value: 'Unknown'\n    }\n  ];\n\n  const onElementSelected = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setSelectedElement(event?.target.value || '');\n    },\n    [setSelectedElement]\n  );\n\n  const onDemoElementSelected = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setSelectedDemoElement(event?.target.value || '');\n    },\n    [setSelectedDemoElement]\n  );\n\n  const onGenderSelected = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setGender(event?.target.value || '');\n    },\n    [setGender]\n  );\n\n  const onMinimumAgeChange = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setMinimumAge(parseInt(event?.target.value) || 0);\n    },\n    [setMinimumAge]\n  );\n\n  const onMaximumAgeChange = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setMaximumAge(parseInt(event?.target.value) || 0);\n    },\n    [setMaximumAge]\n  );\n\n  const handleClose = useCallback((): void => {\n    resetCriteriaBuilder();\n    setCurrentCriteria(null);\n  }, [resetCriteriaBuilder, setCurrentCriteria]);\n\n  const genderString = `The patient's gender is ${gender}`;\n  const ageRangeString = `The patient's age is between ${minimumAge} years and ${maximumAge} years`;\n\n  useEffect(() => {\n    const cql = `AgeInYears() >= ${minimumAge} and AgeInYears() < ${maximumAge}`;\n    if (selectedDemoElement === 'Age Range') {\n      if (minimumAge >= 0 && maximumAge > 0 && minimumAge < maximumAge) {\n        setCurrentCriteria({\n          cql,\n          text: ageRangeString,\n          type: 'age',\n          min: minimumAge,\n          max: maximumAge\n        });\n      } else {\n        setCurrentCriteria(null);\n      }\n    }\n  }, [selectedDemoElement, minimumAge, maximumAge, ageRangeString, setCurrentCriteria]);\n\n  useEffect(() => {\n    const cql = `Patient.gender.value = '${gender}'`;\n    if (selectedDemoElement === 'Gender') {\n      if (gender !== '') {\n        setCurrentCriteria({ cql, text: genderString, type: 'gender', gender });\n      } else {\n        setCurrentCriteria(null);\n      }\n    }\n  }, [selectedDemoElement, gender, genderString, setCurrentCriteria]);\n\n  return (\n    <>\n      <div className={styles.headerText}>\n        Specify criteria to identify a target population that should receive a recommendation from\n        this artifact. Examples might include an age range, gender, presence of a certain condition,\n        or lab results within a specific range.\n      </div>\n      <div className={styles.elementContainer}>\n        {(selectedElement === '' || selectedDemoElement === '') && (\n          <div className={styles.elementSelect}>\n            <div className={styles.addElementLabel}>\n              <FontAwesomeIcon icon={faPlus} /> Add element\n            </div>\n            <DropDown\n              id=\"Choose Element Type\"\n              label=\"Choose Element Type\"\n              options={elementOptions}\n              onChange={onElementSelected}\n              value={selectedElement}\n            />\n            {selectedElement && (\n              <DropDown\n                id={`Select ${selectedElement} element`}\n                label={`Select ${selectedElement} element`}\n                options={demoElementOptions}\n                onChange={onDemoElementSelected}\n                value={selectedDemoElement}\n              />\n            )}\n          </div>\n        )}\n\n        {!(selectedElement === '' || selectedDemoElement === '') && (\n          <>\n            <span>{selectedDemoElement}</span>\n            <IconButton onClick={handleClose}>\n              <FontAwesomeIcon icon={faTimes} />\n            </IconButton>\n            <hr />\n            {selectedDemoElement === 'Gender' && (\n              <>\n                <span>{genderString}</span>\n                <DropDown\n                  id=\"Select Gender\"\n                  label=\"Gender\"\n                  options={genderOptions}\n                  onChange={onGenderSelected}\n                  value={gender}\n                />\n              </>\n            )}\n            {selectedDemoElement === 'Age Range' && (\n              <>\n                <span>{ageRangeString}</span>\n                <div className={styles.elementField}>\n                  <span className={styles.elementFieldLabel}>Minimum Age:</span>\n                  <TextField type=\"number\" value={minimumAge} onChange={onMinimumAgeChange} />\n                </div>\n                <div className={styles.elementField}>\n                  <span className={styles.elementFieldLabel}>Maximum Age:</span>\n                  <TextField type=\"number\" value={maximumAge} onChange={onMaximumAgeChange} />\n                </div>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(CriteriaBuilder);\n","import { makeStyles, Theme as AugmentedTheme, darken } from '@material-ui/core/styles';\n\nconst toggleButtonCss = {\n  borderRadius: '0%',\n  marginLeft: '1px',\n  width: '50px',\n  height: '50px'\n};\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh'\n    },\n    main: {\n      flex: '1',\n      display: 'flex',\n      alignItems: 'stretch',\n      overflowY: 'auto'\n    },\n    graph: {\n      'overflow-y': 'auto',\n      flex: '1'\n    },\n    graphHeader: {\n      display: 'flex',\n      height: '50px',\n      backgroundColor: theme.palette.common.white,\n      marginLeft: '1px'\n    },\n    graphHeaderText: {\n      height: '50px',\n      display: 'flex',\n      width: '100%',\n      backgroundColor: theme.palette.primary.main,\n      alignItems: 'center',\n      color: theme.palette.common.white,\n      fontSize: '1.4em',\n      paddingLeft: '1.5em'\n    },\n    toggleButton: {\n      '&-on': {\n        ...toggleButtonCss,\n        backgroundColor: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: darken(theme.palette.primary.main, 0.1)\n        }\n      },\n      '&-off': {\n        ...toggleButtonCss,\n        backgroundColor: theme.palette.text.primary,\n        '&:hover': {\n          backgroundColor: darken(theme.palette.text.primary, 0.1)\n        }\n      }\n    },\n    toggleIcon: {\n      transform: 'rotate(90deg) scaleY(-1)',\n      color: theme.palette.common.white\n    }\n  }),\n  { name: 'Builder', index: 1 }\n);\n","import React, { FC, useEffect, memo, useState, useCallback } from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\n\nimport Header from 'components/Header';\nimport Navigation from 'components/Navigation';\nimport Sidebar from 'components/Sidebar';\nimport DagreGraph from 'components/DagreGraph';\nimport CriteriaBuilder from 'components/CriteriaBuilder';\nimport { useTheme } from 'components/ThemeProvider';\nimport useStyles from './styles';\nimport { IconButton } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faProjectDiagram } from '@fortawesome/free-solid-svg-icons';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\n\nconst Builder: FC = () => {\n  const styles = useStyles();\n  const { pathway } = useCurrentPathwayContext();\n  const { currentCriteriaNodeId } = useCurrentCriteriaContext();\n  const theme = useTheme('dark');\n  const [showCriteriaBuilder, setShowCriteriaBuilder] = useState<boolean>(true);\n\n  const toggleShowCriteria = useCallback((): void => {\n    setShowCriteriaBuilder(!showCriteriaBuilder);\n  }, [showCriteriaBuilder]);\n\n  // Reset criteriaBuilderToggle to true if not currently building criteria\n  useEffect(() => {\n    if (!showCriteriaBuilder && currentCriteriaNodeId === '') setShowCriteriaBuilder(true);\n  }, [currentCriteriaNodeId, showCriteriaBuilder]);\n\n  return (\n    <div className={styles.root}>\n      <div>\n        <Header />\n        <Navigation />\n      </div>\n\n      {pathway && (\n        <div className={styles.main}>\n          <MuiThemeProvider theme={theme}>\n            <Sidebar />\n          </MuiThemeProvider>\n\n          <div className={styles.graph}>\n            {currentCriteriaNodeId !== '' && (\n              <div className={styles.graphHeader}>\n                <div className={styles.graphHeaderText}>\n                  <span>Criteria Builder</span>\n                </div>\n                <IconButton\n                  className={`${styles.toggleButton}-${showCriteriaBuilder ? 'on' : 'off'}`}\n                  onClick={toggleShowCriteria}\n                >\n                  <FontAwesomeIcon className={styles.toggleIcon} icon={faProjectDiagram} />\n                </IconButton>\n              </div>\n            )}\n            {currentCriteriaNodeId !== '' && showCriteriaBuilder ? (\n              <CriteriaBuilder />\n            ) : (\n              <DagreGraph />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Builder);\n","import React, { FC, memo, useMemo, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\n\nimport Builder from 'components/Builder';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport { useCurrentPathwayContext } from './CurrentPathwayProvider';\nimport { useCurrentNodeContext } from './CurrentNodeProvider';\n\nconst BuilderRoute: FC = () => {\n  const { id, nodeId } = useParams();\n  const { pathways } = usePathwaysContext();\n  const { setPathway } = useCurrentPathwayContext();\n  const { setCurrentNode } = useCurrentNodeContext();\n  const pathwayId = decodeURIComponent(id);\n  const pathwayIndex = useMemo(() => pathways.findIndex(pathway => pathway.id === pathwayId), [\n    pathwayId,\n    pathways\n  ]);\n  const pathway = pathways[pathwayIndex];\n  const currentNode = pathway?.nodes?.[decodeURIComponent(nodeId)];\n\n  useEffect(() => {\n    setPathway(pathway);\n  }, [pathway, setPathway]);\n\n  useEffect(() => {\n    setCurrentNode(currentNode);\n  }, [currentNode, setCurrentNode]);\n\n  if (pathway == null) return null;\n  if (currentNode == null) return <Redirect to={`/builder/${id}/node/Start`} />;\n\n  return <Builder />;\n};\n\nexport default memo(BuilderRoute);\n","import React, { FC, createContext, useContext, useState, ReactNode } from 'react';\n\ninterface UserContextInterface {\n  user: string | null;\n  setUser: Function;\n}\n\nexport const UserContext = createContext<UserContextInterface>({} as UserContextInterface);\n\ninterface UserProviderProps {\n  children: ReactNode;\n}\n\nexport const UserProvider: FC<UserProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<string | null>(null);\n  return <UserContext.Provider value={{ user, setUser }}>{children}</UserContext.Provider>;\n};\n\nexport const useUser = (): UserContextInterface => useContext(UserContext);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    label: {\n      padding: `0.2em 2em`,\n      textTransform: 'none',\n      fontSize: '1.2em',\n      fontWeight: 100\n    }\n  }),\n  { name: 'Tabs', index: 1 }\n);\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Tab as ReactTab, TabList, TabPanel, Tabs as ReactTabs } from 'react-tabs';\n\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\nimport shortid from 'shortid';\n\ninterface Tab {\n  label: string;\n  component: ReactNode;\n}\n\ninterface TabsProp {\n  tabs: Tab[];\n}\n\nconst Tabs: FC<TabsProp> = ({ tabs }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.root}>\n      <ReactTabs>\n        <TabList>\n          {tabs.map(tab => (\n            <ReactTab key={shortid.generate()}>\n              <Button classes={{ label: styles.label }}>{tab.label}</Button>\n            </ReactTab>\n          ))}\n        </TabList>\n\n        {tabs.map(tab => (\n          <TabPanel key={shortid.generate()}>{tab.component}</TabPanel>\n        ))}\n      </ReactTabs>\n    </div>\n  );\n};\n\nexport default memo(Tabs);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './Loading.module.scss';\n\nconst Loading: FC = () => {\n  return (\n    <div className={styles.root}>\n      <FontAwesomeIcon icon={faSpinner} className={styles.root} size=\"4x\" spin />\n    </div>\n  );\n};\n\nexport default memo(Loading);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    createPathwayButton: {\n      alignSelf: 'flex-end'\n    },\n    pathwayList: {\n      marginTop: '2em'\n    },\n    pathwaysListButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    }\n  }),\n  { name: 'PathwaysList', index: 1 }\n);\n","import React, { FC, useCallback, useRef, memo, FormEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  IconButton\n} from '@material-ui/core';\nimport shortid from 'shortid';\nimport produce from 'immer';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { createNewPathway } from 'utils/builder';\nimport { Pathway } from 'pathways-model';\n\ninterface PathwayModalProps {\n  open: boolean;\n  onClose: () => void;\n  editPathway?: Pathway;\n}\n\nconst PathwayModal: FC<PathwayModalProps> = ({ open, onClose, editPathway }) => {\n  const createNewPathwayMeta = !editPathway;\n  const styles = useStyles();\n  const history = useHistory();\n  const pathwayNameRef = useRef<HTMLInputElement>(null);\n  const pathwayDescRef = useRef<HTMLInputElement>(null);\n  const { addPathway, updatePathway } = usePathwaysContext();\n\n  const closeModal = useCallback(\n    (pathwayId: string): void => {\n      history.push(`/builder/${encodeURIComponent(pathwayId)}/node/Start`);\n      onClose();\n    },\n    [history, onClose]\n  );\n\n  const handleCreateNewPathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      const pathwayId = shortid.generate();\n      const name: string = pathwayNameRef.current?.value ?? '';\n      const description: string = pathwayDescRef.current?.value ?? '';\n      addPathway(createNewPathway(name, description, pathwayId));\n      closeModal(pathwayId);\n    },\n    [addPathway, closeModal]\n  );\n\n  const handleUpdatePathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      if (\n        editPathway &&\n        (pathwayNameRef.current?.value !== editPathway.name ||\n          pathwayDescRef.current?.value !== editPathway.description)\n      ) {\n        const newEditPathway = produce(editPathway, (draftEditPathway: Pathway) => {\n          if (pathwayNameRef.current?.value) draftEditPathway.name = pathwayNameRef.current.value;\n          if (pathwayDescRef.current?.value)\n            draftEditPathway.description = pathwayDescRef.current.value;\n        });\n        updatePathway(newEditPathway);\n      }\n      onClose();\n    },\n    [updatePathway, editPathway, onClose]\n  );\n\n  let name, description;\n  if (editPathway) {\n    name = editPathway.name;\n    const metaDescription = editPathway.description;\n    if (metaDescription && metaDescription !== '') description = metaDescription;\n  }\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"create-pathway\" fullWidth maxWidth=\"md\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={createNewPathwayMeta ? handleCreateNewPathway : handleUpdatePathway}>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            autoFocus\n            label=\"Pathway Name\"\n            fullWidth\n            required={createNewPathwayMeta}\n            inputRef={pathwayNameRef}\n            defaultValue={createNewPathwayMeta ? undefined : name}\n          />\n\n          <TextField\n            variant=\"outlined\"\n            label=\"Pathway Description\"\n            fullWidth\n            inputRef={pathwayDescRef}\n            defaultValue={createNewPathwayMeta ? undefined : description}\n            multiline\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={createNewPathwayMeta && <FontAwesomeIcon icon={faPlus} />}\n            type=\"submit\"\n          >\n            {createNewPathwayMeta ? 'Create' : 'Save'}\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(PathwayModal);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    container: {\n      display: 'inline-block'\n    },\n    paper: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      borderRadius: '10px',\n      border: '5px solid rgba(74, 74, 74, 0.5)',\n      backgroundColor: theme.palette.common.gray,\n      color: theme.palette.common.white,\n      padding: '0.5em',\n      mozBackgroundClip: 'padding' /* Firefox 3.6 */,\n      webkitBackgroundVlip: 'padding' /* Safari 4? Chrome 6? */,\n      backgroundClip: 'padding-box' /* Firefox 4, Safari 5, Opera 10, IE 9 */\n    },\n    displayText: {\n      marginRight: '4em',\n      whiteSpace: 'nowrap'\n    },\n    buttons: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minWidth: '2.5em',\n      minHeight: '2em',\n      cursor: 'pointer',\n      borderRadius: '15%',\n      marginRight: '0.5em'\n    }\n  }),\n  { name: 'ConfirmedDeletionButton' }\n);\n","import React, { FC, memo } from 'react';\nimport styles from './ActionButton.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\n\ninterface ButtonProps {\n  type: 'accept' | 'decline';\n  onClick?: () => void;\n}\n\ninterface ActionButtonProps extends ButtonProps {\n  size: 'small' | 'large' | 'medium';\n}\n\nconst LargeActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <button\n      className={`${styles.largeActionButton} button ${type === 'decline' && styles.largeDecline}`}\n      type=\"button\"\n      onClick={onClick}\n    >\n      {type[0].toUpperCase() + type.slice(1)}\n    </button>\n  );\n};\n\nconst SmallActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.smallActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n    </div>\n  );\n};\n\nconst MediumActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  const buttonText = {\n    accept: 'Submit',\n    decline: 'Cancel'\n  };\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.mediumActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n      {buttonText[type]}\n    </div>\n  );\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({ type, size, onClick }) => {\n  switch (size) {\n    case 'small':\n      return <SmallActionButton type={type} onClick={onClick} />;\n    case 'large':\n      return <LargeActionButton type={type} onClick={onClick} />;\n    case 'medium':\n      return <MediumActionButton type={type} onClick={onClick} />;\n  }\n};\n\nexport default memo(ActionButton);\n","import React, { FC, memo, useState, MouseEvent, useCallback } from 'react';\n\nimport { Button } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport useStyles from './styles';\n\nimport ActionButton from 'components/ActionButton';\n\ninterface ConfirmedDeletionButtonProps {\n  deleteId: string;\n  deleteMethod: (id: string) => void;\n  deleteType?: string;\n  deleteName?: string;\n}\n\nconst ConfirmedDeletionButton: FC<ConfirmedDeletionButtonProps> = ({\n  deleteId,\n  deleteMethod,\n  deleteType,\n  deleteName\n}) => {\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const displayText =\n    'Are you sure' +\n    (deleteType && deleteMethod\n      ? ' that you would like to delete the ' + deleteName + ' ' + deleteType + ' ?'\n      : '?');\n\n  const onClickHandler = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n    setOpen(true);\n  }, []);\n\n  const onAcceptHandler = useCallback((): void => {\n    deleteMethod(deleteId);\n    setOpen(false);\n    setAnchorEl(null);\n  }, [deleteId, deleteMethod]);\n\n  const onDeclineHandler = useCallback((): void => {\n    setOpen(false);\n    setAnchorEl(null);\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <ClickAwayListener onClickAway={onDeclineHandler}>\n        <Button\n          color=\"secondary\"\n          size=\"small\"\n          startIcon={<FontAwesomeIcon icon={faTrashAlt} />}\n          onClick={onClickHandler}\n        >\n          Delete\n        </Button>\n      </ClickAwayListener>\n      <Popover\n        classes={{ paper: styles.paper }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n      >\n        <div className={styles.displayText}> {displayText} </div>\n        <div className={styles.buttons}>\n          <ActionButton size=\"small\" type=\"accept\" onClick={onAcceptHandler} />\n          <ActionButton size=\"small\" type=\"decline\" onClick={onDeclineHandler} />\n        </div>\n      </Popover>\n    </div>\n  );\n};\n\nexport default memo(ConfirmedDeletionButton);\n","import React, { FC, memo, useState, useCallback, MouseEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faFileDownload } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Link\n} from '@material-ui/core';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport PathwayModal from './PathwayModal';\n\nimport useStyles from './styles';\nimport { Pathway } from 'pathways-model';\nimport { Link as RouterLink } from 'react-router-dom';\nimport ConfirmedDeletionButton from 'components/ConfirmedDeletionButton';\nimport ExportMenu from 'components/elements/ExportMenu';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\n\nconst PathwaysTable: FC = () => {\n  const styles = useStyles();\n  const { pathways, deletePathway } = usePathwaysContext();\n  const { setPathway } = useCurrentPathwayContext();\n  const [open, setOpen] = useState(false);\n  const [editablePathway, setEditablePathway] = useState<Pathway>();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const openEditPathwayModal = useCallback((pathway: Pathway): void => {\n    setOpen(true);\n    setEditablePathway(pathway);\n  }, []);\n\n  const closeEditPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  const openMenu = useCallback(\n    (event: MouseEvent<HTMLButtonElement>): void => {\n      setAnchorEl(event.currentTarget);\n      const pathway = pathways.filter(pathway => pathway.id === event.currentTarget.id);\n      if (pathway.length) setPathway(pathway[0]);\n    },\n    [pathways, setPathway]\n  );\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const deletion = useCallback(\n    (id: string): void => {\n      deletePathway(id);\n    },\n    [deletePathway]\n  );\n\n  return (\n    <div>\n      <TableContainer className={styles.pathwayList}>\n        <Table aria-label=\"pathway list\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Pathway Name</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Last Updated</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {pathways.map(pathway => (\n              <TableRow key={pathway.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Link\n                    component={RouterLink}\n                    to={`/builder/${encodeURIComponent(pathway.id)}`}\n                    color=\"primary\"\n                    underline=\"none\"\n                  >\n                    {pathway.name}\n                  </Link>\n                </TableCell>\n\n                <TableCell>draft</TableCell>\n                <TableCell>2 days ago</TableCell>\n\n                <TableCell align=\"right\">\n                  <Button\n                    className={styles.pathwaysListButton}\n                    color=\"primary\"\n                    size=\"small\"\n                    startIcon={<FontAwesomeIcon icon={faEdit} />}\n                    onClick={(): void => openEditPathwayModal(pathway)}\n                  >\n                    Edit Info\n                  </Button>\n                  <Button\n                    id={pathway.id}\n                    className={styles.pathwaysListButton}\n                    color=\"primary\"\n                    size=\"small\"\n                    startIcon={<FontAwesomeIcon icon={faFileDownload} />}\n                    onClick={openMenu}\n                  >\n                    Export\n                  </Button>\n                  <ConfirmedDeletionButton\n                    deleteType=\"pathway\"\n                    deleteName={pathway.name}\n                    deleteId={pathway.id}\n                    deleteMethod={deletion}\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <ExportMenu anchorEl={anchorEl} closeMenu={closeMenu} />\n      <PathwayModal open={open} onClose={closeEditPathwayModal} editPathway={editablePathway} />\n    </div>\n  );\n};\n\nexport default memo(PathwaysTable);\n","import React, { FC, useCallback, useState, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport Loading from 'components/elements/Loading';\nimport PathwaysTable from './PathwaysTable';\nimport PathwayModal from './PathwayModal';\n\nimport useStyles from './styles';\n\nconst PathwaysList: FC = () => {\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n  const { status } = usePathwaysContext();\n\n  const openNewPathwayModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeNewPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <Button\n        className={styles.createPathwayButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<FontAwesomeIcon icon={faPlus} />}\n        onClick={openNewPathwayModal}\n      >\n        Create Pathway\n      </Button>\n\n      <PathwayModal open={open} onClose={closeNewPathwayModal} />\n      {status === 'loading' ? <Loading /> : <PathwaysTable />}\n    </div>\n  );\n};\n\nexport default memo(PathwaysList);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    buttonRow: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    buildCriteriaButton: {\n      alignSelf: 'flex-end',\n      marginLeft: '20px'\n    },\n    criteriaList: {\n      marginTop: '2em'\n    },\n    editButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    },\n    input: {\n      display: 'none'\n    },\n    chooseFileInput: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    inputButton: {\n      whiteSpace: 'nowrap',\n      marginRight: '1em'\n    },\n    fileName: {\n      fontStyle: 'italic'\n    }\n  }),\n  { name: 'CriteriaList', index: 1 }\n);\n","import React, { FC, memo, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport moment from 'moment';\n\nimport useStyles from './styles';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport ConfirmedDeletionButton from 'components/ConfirmedDeletionButton';\n\nconst CriteriaTable: FC = () => {\n  const styles = useStyles();\n  const { criteria, deleteCriteria } = useCriteriaContext();\n\n  const renderDate = (datetime: number): string => {\n    return moment(datetime).fromNow();\n  };\n\n  const deletion = useCallback(\n    (id: string): void => {\n      deleteCriteria(id);\n    },\n    [deleteCriteria]\n  );\n\n  return (\n    <TableContainer className={styles.criteriaList}>\n      <Table aria-label=\"criteria list\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Criteria Name</TableCell>\n            <TableCell>Version</TableCell>\n            <TableCell>Added</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {criteria.map(c => (\n            <TableRow key={c.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {c.label}\n              </TableCell>\n              <TableCell>{c.version}</TableCell>\n              <TableCell>{renderDate(c.modified)}</TableCell>\n\n              <TableCell align=\"right\">\n                <Button\n                  className={styles.editButton}\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faEdit} />}\n                >\n                  Edit\n                </Button>\n                <ConfirmedDeletionButton\n                  deleteType=\"criterion\"\n                  deleteName={c.label}\n                  deleteId={c.id}\n                  deleteMethod={deletion}\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default memo(CriteriaTable);\n","import React, { FC, useCallback, useRef, memo, FormEvent, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileImport, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Input,\n  IconButton\n} from '@material-ui/core';\n\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport useStyles from './styles';\n\ninterface ImportCriteriaModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst ImportCriteriaModal: FC<ImportCriteriaModalProps> = ({ open, onClose }) => {\n  const styles = useStyles();\n  const [fileName, setFileName] = useState<string>('');\n  const importFileRef = useRef<HTMLInputElement>(null);\n\n  const { addCriteria } = useCriteriaContext();\n\n  const selectFile = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      const files = importFileRef?.current?.files;\n      if (files?.length) addCriteria(files[0]);\n      onClose();\n      setFileName('');\n    },\n    [addCriteria, onClose]\n  );\n\n  const handleChooseFile = useCallback(() => {\n    if (importFileRef?.current?.files?.[0]) setFileName(importFileRef.current.files[0].name);\n  }, [importFileRef]);\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"import-criteria\" fullWidth maxWidth=\"sm\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={selectFile}>\n        <DialogContent>\n          <div className={styles.chooseFileInput}>\n            <Input\n              id=\"choose-file-input\"\n              className={styles.input}\n              inputRef={importFileRef}\n              type=\"file\"\n              inputProps={{ accept: '.json' }}\n              onChange={handleChooseFile}\n            />\n\n            <label htmlFor=\"choose-file-input\">\n              <Button\n                className={styles.inputButton}\n                variant=\"contained\"\n                color=\"primary\"\n                component=\"span\"\n              >\n                Choose File\n              </Button>\n            </label>\n\n            <div className={styles.fileName}>\n              {fileName ? <span>{fileName}</span> : <span>Choose ELM file to import.</span>}\n            </div>\n          </div>\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faFileImport} />}\n            type=\"submit\"\n          >\n            Import\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(ImportCriteriaModal);\n","import React, { FC, memo, useState, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTools, faFileImport } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport Loading from 'components/elements/Loading';\nimport CriteriaTable from './CriteriaTable';\nimport ImportCriteriaModal from './ImportCriteriaModal';\n\nimport useStyles from './styles';\n\nconst CriteriaList: FC = () => {\n  const styles = useStyles();\n  const { status } = usePathwaysContext();\n\n  const [open, setOpen] = useState<boolean>(false);\n  const openImportModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeImportModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.buttonRow}>\n        <Button\n          className={styles.buildCriteriaButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={faFileImport} />}\n          onClick={openImportModal}\n        >\n          Import Library\n        </Button>\n        <Button\n          className={styles.buildCriteriaButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={faTools} />}\n        >\n          Build Criteria\n        </Button>\n      </div>\n\n      <ImportCriteriaModal open={open} onClose={closeImportModal} />\n\n      {status === 'loading' ? <Loading /> : <CriteriaTable />}\n    </div>\n  );\n};\n\nexport default memo(CriteriaList);\n","import React, { FC, memo } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from 'components/Header';\n\nimport BuilderRoute from './BuilderRoute';\nimport ThemeProvider from './ThemeProvider';\nimport { PathwaysProvider } from './PathwaysProvider';\nimport { UserProvider } from './UserProvider';\nimport { CriteriaProvider } from './CriteriaProvider';\nimport Tabs from './Tabs';\nimport PathwaysList from './PathwaysList';\nimport CriteriaList from './CriteriaList';\nimport { CurrentPathwayProvider } from './CurrentPathwayProvider';\nimport { CurrentNodeProvider } from './CurrentNodeProvider';\nimport { CurrentCriteriaProvider } from './CurrentCriteriaProvider';\nimport { SnackbarProvider } from './SnackbarProvider';\nimport { CriteriaBuilderProvider } from './CriteriaBuilderProvider';\n\nconst App: FC = () => {\n  return (\n    <ThemeProvider theme=\"light\">\n      <UserProvider>\n        <CurrentPathwayProvider>\n          <PathwaysProvider>\n            <CurrentNodeProvider>\n              <CriteriaProvider>\n                <SnackbarProvider>\n                  <CurrentCriteriaProvider>\n                    <CriteriaBuilderProvider>\n                      <Router>\n                        <Switch>\n                          <Route path=\"/builder/:id/node/:nodeId\">\n                            <BuilderRoute />\n                          </Route>\n                          <Route path=\"/builder/:id\">\n                            <BuilderRoute />\n                          </Route>\n                          <Route path=\"/\">\n                            <Header />\n                            <Tabs\n                              tabs={[\n                                { label: 'Pathway', component: <PathwaysList /> },\n                                { label: 'Criteria', component: <CriteriaList /> }\n                              ]}\n                            />\n                          </Route>\n                        </Switch>\n                      </Router>\n                    </CriteriaBuilderProvider>\n                  </CurrentCriteriaProvider>\n                </SnackbarProvider>\n              </CriteriaProvider>\n            </CurrentNodeProvider>\n          </PathwaysProvider>\n        </CurrentPathwayProvider>\n      </UserProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default memo(App);\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport './immer';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\n\nimport './styles/index.scss';\n\n// Enable why did you render for development mode\n// Will automatically track all memoized components\nif (process.env.NODE_ENV === 'development') {\n  const whyDidYouRender = require('@welldone-software/why-did-you-render');\n  whyDidYouRender(React, {\n    trackAllPureComponents: true\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n","export class ConfigManager {\n  constructor(config = {}) {\n    this.config = global.CONFIG ? { ...global.CONFIG, ...config } : { ...config };\n  }\n\n  get(name, defaultValue) {\n    const parts = name.split('.');\n    let context = this.config;\n    let value = null;\n    for (const i in parts) {\n      const part = parts[i];\n      value = context[part];\n      context = value;\n    }\n    return value || defaultValue;\n  }\n\n  add(conf) {\n    if (conf) {\n      this.config = {\n        ...this.config,\n        ...conf\n      };\n    }\n  }\n}\n\nconst config = new ConfigManager();\nexport default config;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3T0lc\",\"homeLink\":\"Header_homeLink__2ew4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Loading_root__3b6qy\"};"],"sourceRoot":""}