{"version":3,"sources":["components/ExpandedNode/ExpandedNode.module.scss","components/Header/Header.module.scss","components/elements/Loading/Loading.module.scss","camino-logo-dark.png","components/Graph/Graph.module.scss","components/ActionButton/ActionButton.module.scss","components/BuildCriteriaProvider.tsx","styles/theme.tsx","components/ThemeProvider.tsx","components/Header/Header.tsx","utils/builder.ts","components/Navigation/styles.tsx","utils/useRefState.ts","components/CurrentPathwayProvider.tsx","components/Navigation/Navigation.tsx","components/Services/Services.tsx","components/PathwaysProvider.tsx","components/Sidebar/styles.tsx","components/CurrentNodeProvider.tsx","utils/nodeUtils.ts","components/elements/DropDown/DropDown.tsx","components/SnackbarProvider.tsx","components/Sidebar/DeleteSnackbar.tsx","components/Sidebar/Sidebar.tsx","components/Sidebar/SidebarHeader.tsx","components/Sidebar/SidebarButton.tsx","engine/cql-to-elm.ts","components/Sidebar/ActionNodeEditor.tsx","components/CriteriaProvider.tsx","components/Sidebar/BranchTransition.tsx","components/Sidebar/OutlinedDiv.tsx","components/Sidebar/DeleteModal.tsx","components/Sidebar/TransitionEditor.tsx","visualization/layout.ts","components/ExpandedNode/ExpandedNode.tsx","components/Node/Node.tsx","components/Arrow/styles.tsx","components/Arrow/Arrow.tsx","components/Graph/Graph.tsx","components/Builder/styles.tsx","components/Builder/Builder.tsx","components/BuilderRoute.tsx","components/UserProvider.tsx","components/Tabs/styles.tsx","components/Tabs/Tabs.tsx","components/elements/Loading/Loading.tsx","components/PathwaysList/styles.tsx","components/PathwaysList/PathwayModal.tsx","components/ConfirmedDeletionButton/styles.tsx","components/ActionButton/ActionButton.tsx","components/ConfirmedDeletionButton/ConfirmedDeletionButton.tsx","components/PathwaysList/PathwaysTable.tsx","components/PathwaysList/PathwaysList.tsx","components/CriteriaList/styles.tsx","components/CriteriaList/CriteriaTable.tsx","components/CriteriaList/ImportCriteriaModal.tsx","components/CriteriaList/CriteriaList.tsx","components/App.tsx","index.js","utils/ConfigManager.js","components/Node/Node.module.scss"],"names":["module","exports","BuildCriteriaContext","createContext","BuildCriteriaProvider","memo","children","useState","buildCriteriaNodeId","setBuildCriteriaNodeId","updateBuildCriteriaNodeId","useCallback","id","Provider","value","useBuildCriteriaContext","useContext","variables","spacing","globalPadding","colors","white","black","red","blue","blueLighter","gray","grayMedium","grayBlue","grayLight","grayLighter","grayDark","grayVeryDark","green","typography","fontFamily","join","materialUiOverridesBase","MuiButton","root","borderRadius","backgroundColor","color","label","fontWeight","iconSizeMedium","fontSize","iconSizeSmall","MuiTableHead","MuiTableCell","head","padding","borderBottom","MuiFormControl","margin","MuiFormLabel","fontStyle","MuiInputBase","input","transitionDelay","transitionProperty","MuiTooltip","tooltip","arrow","MuiOutlinedInput","MuiSelect","icon","MuiPaper","rounded","MuiDialogTitle","MuiDialogContent","MuiDialogActions","MuiCard","overflow","MuiIconButton","materialUiOverridesDark","borderColor","notchedOutline","MuiMenuItem","paletteBase","primary","main","secondary","error","common","background","default","text","grey","800","lightTheme","createMuiTheme","palette","overrides","darkTheme","deepmerge","projectorTheme","getTheme","theme","useProjector","ThemeContext","ThemeProvider","setUseProjector","muiTheme","toggleTheme","currentUseProjector","anchorEl","setAnchorEl","openMenu","event","currentTarget","closeMenu","handleToggleTheme","className","styles","header","to","homeLink","onClick","src","logo","alt","aria-controls","aria-haspopup","faCog","Menu","keepMounted","open","Boolean","onClose","MenuItem","downloadPathway","pathway","pathwayString","elm","library","identifier","version","schemaIdentifier","usings","def","localIdentifier","uri","localId","locator","statements","name","context","expression","type","operand","dataType","includes","valueSets","codes","codeSystems","pathwayToExport","preconditions","map","precondition","undefined","nodes","Object","keys","forEach","nodeKey","node","key","mergeElm","elmStatement","produce","getElmStatement","draftElmStatement","push","transitions","transition","condition","description","action","JSON","stringify","draftPathway","navigational","setNavigationalElm","exportPathway","pathwayBlob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","additionalElm","using","find","include","path","valueSet","code","codesystem","defaultStatementNames","createNode","shortid","generate","nodeTypeIsUndefined","addNode","setNodeType","nodeType","setNodeAction","makeNodeAction","resource","resourceType","medicationCodeableConcept","coding","system","display","title","cql","makeNodeBranch","console","getNodeType","makeStyles","alignItems","height","justifyContent","backButton","width","navigationIcons","cursor","pathwayName","marginLeft","index","useRefState","initialValue","state","setState","stateRef","useRef","useEffect","current","CurrentPathwayContext","CurrentPathwayProvider","pathwayRef","_setPathway","setPathway","useCurrentPathwayContext","Navigation","useStyles","history","useHistory","handleGoBack","IconButton","aria-label","faChevronLeft","faEllipsisH","getContentAnchorEl","anchorOrigin","vertical","horizontal","alert","useGetService","status","result","setResult","fetch","headers","Accept","getObject","then","response","json","listOfFiles","f","options","typedFetch","listOfPromises","Promise","all","list","payload","catch","PathwaysContext","PathwaysProvider","pathways","pathwaysRef","setPathways","service","config","get","servicePayload","addPathway","currentPathways","deletePathway","filter","updatePathway","newPathway","findIndex","slice","usePathwaysContext","flexDirection","minWidth","overflowY","float","formControl","divider","headerLabelStart","displayText","sidebarHeader","sidebarHeaderGroup","sidebarHeaderButton","headerLabelGroup","headerLabel","headerLabelText","marginBottom","editIcon","sidebarButtonGroup","sidebarButtonGroupExtraMargin","sidebarButton","marginRight","sidebarButtonText","outlinedDiv","outlinedDivError","toggleSidebar","cancelButton","alignSelf","marginTop","buildCriteriaContainer","saveButton","transitionContainer","dividerHeader","textTransform","lineHeight","paddingLeft","dialogCloseButton","dialogContent","dialogContentText","alertIcon","CurrentNodeContext","CurrentNodeProvider","currentNode","currentNodeRef","_setCurrentNode","setCurrentNode","useCurrentNodeContext","isActionNode","isBranchNode","resourceNameConversion","MedicationRequest","ServiceRequest","CarePlan","nodeTypeOptions","findParents","childNodeKey","parents","parentNodeKey","willOrphanChild","transitionCount","canDeleteNode","canDeleteAllTransitions","redirect","pathwayId","encodeURIComponent","location","pathname","onChange","handleSetSelected","FormControl","variant","fullWidth","InputLabel","htmlFor","Select","MenuProps","transformOrigin","displayEmpty","option","SnackbarContext","SnackbarProvider","openSnackbar","setOpenSnackbar","snackbarText","setSnackbarText","handleCloseSnackbar","useSnackbarContext","Snackbar","autoHideDuration","message","Fragment","Button","size","faTimes","headerElement","isExpanded","setIsExpanded","sidebarContainerElement","changeNodeType","selectNodeType","target","addPathwayNode","newNode","startNodeKey","endNodeKey","addTransition","connectToNode","log","resize","style","innerHeight","clientHeight","addEventListener","removeEventListener","ref","isTransition","buttonName","buttonIcon","faPlus","buttonText","displayTransitions","length","faLevelDownAlt","faChevronRight","showInput","setShowInput","openTooltip","setOpenTooltip","openDelete","setOpenDelete","inputRef","nodeLabel","goToParentNode","redirectToNode","changeNodeLabel","setNodeLabel","handleShowInput","deleteNode","filterTransition","removeNode","deleteTransition","removeTransition","openDeleteModal","closeDeleteModal","handleOpenTooltip","handleCloseTooltip","handleKeyPress","deleteNodeDisabled","deleteTransitionDisabled","deleteDisabled","titleText","Input","onBlur","onKeyPress","defaultValue","autoFocus","onFocus","select","clsx","faEdit","Tooltip","placement","onOpen","disabled","faTrashAlt","onDelete","extraMargin","startIcon","codeSystemOptions","addActionCQL","currentNodeKey","method","body","convertBasicCQL","cqlId","replace","codesystemStatement","returnStatement","retrieveStatement","defineStatement","escape","createCQL","setActionNodeElm","changeCode","draftAction","resetDisplay","changeDescription","changeTitle","selectCodeSystem","codeSystem","validateFunction","setActionResourceDisplay","onEnter","e","changeNodeTypeEnabled","TextField","inputProps","faCheckCircle","CriteriaContext","jsonToCriteria","rawElm","parse","modified","Date","now","CriteriaProvider","criteria","setCriteria","newCriteria","jsonCriterion","criterion","addCriteria","file","reader","FileReader","onload","currentCriteria","readAsText","deleteCriteria","useCriteriaContext","criteriaOptions","useMemo","c","useCriteriaSelected","setUseCriteriaSelected","criteriaDescription","criteriaIsValid","criteriaDisplayIsValid","hasCriteria","displayCriteria","buildCriteriaSelected","setBuildCriteriaSelected","criteriaName","setCriteriaName","transitionRef","handleUseCriteria","transitionId","selectCriteriaSource","criteriaSource","criteriaLabel","foundTransition","setTransitionCondition","setCriteriaDisplay","criteriaDisplay","handleCriteriaName","handleBuildCriteria","handleBuildCriteriaCancel","faThList","faTools","FormControlLabel","Box","control","Checkbox","faSave","InputComponent","OutlinedDiv","multiline","InputLabelProps","shrink","InputProps","inputComponent","classes","Dialog","aria-labelledby","maxWidth","DialogTitle","disableTypography","DialogContent","faExclamationCircle","DialogActions","transitionKey","transitionNode","Card","raised","graphLayoutProvider","layout","nodeDimensions","nodeKeys","g","dagre","graphlib","Graph","setGraph","setDefaultEdgeLabel","nodeDimension","setNode","setEdge","nodeCoordinates","startNodeShift","x","y","edges","edge","edgeName","v","w","start","end","points","p","layoutDagre","rank","NaN","horizontalPosition","canMove","initializeNodes","graph","assignRankToChildren","assignHorizontalPositionToNode","assignHorizontalPositionToNodesInRank","coordinates","NODE_HEIGHT","produceCoordinates","hPos","isNaN","i","hasOverlap","direction","Math","ceil","NODE_WIDTH","parentsOnHigherRank","parentKey","parent","floor","splice","childNode","spreadChildrenEvenly","sum","reduce","b","nodesInRank","nodesOverlap","otherNode","nodesEqual","child","indexOf","assignRankToNode","err","layoutCustom","ExpandedNode","actionNode","ExpandedNodeMemo","ExpandedNodeField","descTitle","desc","returnElements","rel","faExternalLinkAlt","externalLink","renderAction","branch","infoTable","Node","forwardRef","pathwayNode","xCoordinate","yCoordinate","expanded","hasMetadata","setHasMetadata","onClickHandler","top","left","isCurrentNode","isTransitionOfCurrentBranch","some","isActionable","topLevelClasses","expandedNodeClass","actionable","childActionable","childNotActionable","expandedNode","NodeIcon","faPlay","faPrescriptionBottleAlt","faSyringe","faBookMedical","faMicroscope","StatusIcon","faTimesCircle","stroke","strokeWidth","currentBranchArrow","arrowhead","fill","currentBranchArrowhead","ArrowPath","arrowheadId","widthOffset","pointsWithOffset","remainder","pathString","acc","point","arr","d","markerEnd","Arrow","isCurrentBranchArrow","edgeNameNoWhitespace","substring","markerWidth","markerHeight","refX","refY","orient","graphContainerWidth","interactive","nodeRefs","getGraphLayout","nodeElement","clientWidth","Array","from","graphLayout","setLayout","maxHeight","values","max","minX","min","toAdd","curr","lastSelectedNode","setExpanded","toggleExpanded","prevState","parentWidth","GraphMemo","useParams","position","xmlns","zIndex","toggleButtonCss","graphHeader","graphHeaderText","toggleButton","darken","toggleIcon","transform","useTheme","showCriteriaBuilder","setShowCriteriaBuilder","graphContainerElement","setGraphContainerElement","setGraphContainerWidth","toggleShowCriteria","handleGraphContainerElement","reactNode","ResizeSensor","faProjectDiagram","nodeId","decodeURIComponent","pathwayIndex","UserContext","UserProvider","user","setUser","tabs","tab","component","faSpinner","spin","createPathwayButton","pathwayList","pathwaysListButton","editPathway","createNewPathwayMeta","pathwayNameRef","pathwayDescRef","closeModal","handleCreateNewPathway","preventDefault","Start","createNewPathway","handleUpdatePathway","newEditPathway","draftEditPathway","metaDescription","onSubmit","required","container","paper","border","mozBackgroundClip","webkitBackgroundVlip","backgroundClip","whiteSpace","buttons","minHeight","LargeActionButton","largeActionButton","largeDecline","toUpperCase","SmallActionButton","accept","decline","smallActionButton","data-testid","faCheck","MediumActionButton","mediumActionButton","deleteId","deleteMethod","deleteType","deleteName","setOpen","onAcceptHandler","onDeclineHandler","ClickAwayListener","onClickAway","Popover","editablePathway","setEditablePathway","openEditPathwayModal","closeEditPathwayModal","deletion","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","Link","RouterLink","underline","align","faFileDownload","openNewPathwayModal","closeNewPathwayModal","buttonRow","buildCriteriaButton","criteriaList","editButton","chooseFileInput","inputButton","fileName","datetime","moment","fromNow","setFileName","importFileRef","selectFile","files","handleChooseFile","faFileImport","openImportModal","closeImportModal","enableMapSet","ReactDOM","render","getElementById","this","global","CONFIG","parts","split","conf"],"mappings":"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","file":"static/js/main.c8645e74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoTable\":\"ExpandedNode_infoTable__3v2tx\",\"descTitle\":\"ExpandedNode_descTitle__15ki8\",\"desc\":\"ExpandedNode_desc__3Xdkf\",\"externalLink\":\"ExpandedNode_externalLink__1Mr1x\",\"defaultTextButton\":\"ExpandedNode_defaultTextButton__2Bvq6\",\"commentsForm\":\"ExpandedNode_commentsForm__3Q20Y\",\"footer\":\"ExpandedNode_footer__FOCYI\",\"comments\":\"ExpandedNode_comments__9q-JW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3T0lc\",\"homeLink\":\"Header_homeLink__2ew4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Loading_root__3b6qy\"};","module.exports = __webpack_public_path__ + \"static/media/camino-logo-dark.c8fc712a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Graph_root__1SJOc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectButton\":\"ActionButton_selectButton___qB5R\",\"accept\":\"ActionButton_accept__28b2D\",\"decline\":\"ActionButton_decline__zz-vG\",\"smallActionButton\":\"ActionButton_smallActionButton__1bPWu\",\"largeActionButton\":\"ActionButton_largeActionButton__blRdA\",\"largeDecline\":\"ActionButton_largeDecline__wz9Zw\",\"mediumActionButton\":\"ActionButton_mediumActionButton__3EpOp\"};","import React, {\n  createContext,\n  FC,\n  ReactNode,\n  memo,\n  useState,\n  useCallback,\n  useContext\n} from 'react';\n\ninterface BuildCriteriaContextInterface {\n  buildCriteriaNodeId: string;\n  updateBuildCriteriaNodeId: (id: string) => void;\n}\n\nexport const BuildCriteriaContext = createContext<BuildCriteriaContextInterface>(\n  {} as BuildCriteriaContextInterface\n);\n\ninterface BuildCriteriaProviderProps {\n  children: ReactNode;\n}\n\nexport const BuildCriteriaProvider: FC<BuildCriteriaProviderProps> = memo(({ children }) => {\n  const [buildCriteriaNodeId, setBuildCriteriaNodeId] = useState<string>('');\n\n  const updateBuildCriteriaNodeId = useCallback(\n    (id: string) => {\n      setBuildCriteriaNodeId(id);\n    },\n    [setBuildCriteriaNodeId]\n  );\n\n  return (\n    <BuildCriteriaContext.Provider value={{ buildCriteriaNodeId, updateBuildCriteriaNodeId }}>\n      {children}\n    </BuildCriteriaContext.Provider>\n  );\n});\n\nexport const useBuildCriteriaContext = (): BuildCriteriaContextInterface =>\n  useContext(BuildCriteriaContext);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport deepmerge from 'deepmerge';\n\ndeclare module '@material-ui/core/styles/createMuiTheme' {\n  interface Theme {\n    variables: {\n      spacing: {\n        globalPadding: string;\n      };\n    };\n  }\n  // allow configuration using `createMuiTheme`\n  interface ThemeOptions {\n    variables?: {\n      spacing?: {\n        globalPadding?: string;\n      };\n    };\n  }\n}\n\ndeclare module '@material-ui/core/styles/createPalette' {\n  interface CommonColors {\n    blue: string;\n    blueLighter: string;\n    red: string;\n    gray: string;\n    grayMedium: string;\n    grayBlue: string;\n    grayLighter: string;\n    grayDark: string;\n    grayVeryDark: string;\n    green: string;\n  }\n}\n\nconst variables = {\n  spacing: {\n    globalPadding: '2em'\n  }\n};\n\nconst colors = {\n  white: '#fff',\n  black: '#222',\n  red: '#d95d77',\n  blue: '#5d89a1',\n  blueLighter: '#9ad2f0',\n  gray: '#4a4a4a',\n  grayMedium: '#bbbdc0',\n  grayBlue: '#cbd5df',\n  grayLight: '#6c6c6c',\n  grayLighter: '#eaeef2',\n  grayDark: '#444',\n  grayVeryDark: '#3a3a3a',\n  green: '#2fa874'\n};\n\nconst typography = {\n  fontFamily: [\n    'Open Sans',\n    '-apple-system',\n    'BlinkMacSystemFont',\n    'Segoe UI',\n    'Roboto',\n    'Oxygen',\n    'Ubuntu',\n    'Cantarell',\n    'Fira Sans',\n    'Droid Sans',\n    'Helvetica Neue',\n    'sans-serif'\n  ].join(',')\n};\n\nconst materialUiOverridesBase = {\n  MuiButton: {\n    root: {\n      borderRadius: 0,\n      '&.Mui-disabled': {\n        backgroundColor: colors.grayMedium,\n        color: colors.white\n      }\n    },\n    label: {\n      fontWeight: 600\n    },\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    },\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    }\n  },\n  MuiTableHead: {\n    root: {\n      backgroundColor: colors.grayLighter\n    }\n  },\n  MuiTableCell: {\n    root: {\n      fontSize: '1em'\n    },\n    head: {\n      padding: '5px 16px',\n      borderBottom: 'none'\n    }\n  },\n  MuiFormControl: {\n    root: {\n      margin: '10px 0'\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      fontStyle: 'italic',\n      '&.Mui-error': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      fontWeight: 600\n    },\n    input: {\n      '&::selection': {\n        color: colors.white,\n        backgroundColor: colors.grayDark\n      },\n      '&:-webkit-autofill': {\n        transitionDelay: '9999s',\n        transitionProperty: 'background-color, color'\n      }\n    }\n  },\n  MuiTooltip: {\n    tooltip: {\n      fontSize: 14,\n      backgroundColor: colors.grayVeryDark\n    },\n    arrow: {\n      color: colors.grayVeryDark\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      borderRadius: '0'\n    }\n  },\n  MuiSelect: {\n    icon: {\n      fontSize: '2em'\n    }\n  },\n  MuiPaper: {\n    rounded: {\n      borderRadius: '0'\n    }\n  },\n  MuiDialogTitle: {\n    root: {\n      padding: '1em'\n    }\n  },\n  MuiDialogContent: {\n    root: {\n      padding: '0 4em'\n    }\n  },\n  MuiDialogActions: {\n    root: {\n      padding: '2em 4em'\n    }\n  },\n  MuiCard: {\n    root: {\n      overflow: 'visible'\n    }\n  },\n  MuiIconButton: {\n    root: {\n      '&:disabled': {\n        color: colors.grayLight\n      }\n    }\n  }\n};\n\nconst materialUiOverridesDark = {\n  MuiFormControl: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      }\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      color: colors.white,\n      '&$focused': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      color: colors.white,\n      '&:hover': {\n        borderColor: colors.white,\n        backgroundColor: colors.grayDark\n      }\n    }\n  },\n  MuiTooltip: {\n    tooltip: {\n      fontSize: 14\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      },\n      '&:hover $notchedOutline': {\n        borderColor: colors.white\n      },\n      '&$focused $notchedOutline': {\n        borderColor: colors.white\n      }\n    },\n    notchedOutline: {\n      borderColor: colors.white\n    }\n  },\n  MuiSelect: {\n    icon: {\n      color: colors.white\n    }\n  },\n  MuiMenuItem: {\n    root: {\n      color: colors.grayDark\n    }\n  }\n};\n\nconst paletteBase = {\n  primary: {\n    main: colors.blue\n  },\n  secondary: {\n    main: colors.red\n  },\n  error: {\n    main: colors.red\n  },\n  common: colors,\n  background: {\n    default: colors.grayLighter\n  },\n  text: {\n    primary: colors.gray,\n    secondary: colors.gray\n  },\n  grey: {\n    800: colors.gray\n  }\n};\n\nconst lightTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: { ...paletteBase },\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nconst darkTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    text: {\n      primary: colors.white,\n      secondary: colors.white\n    }\n  }),\n  overrides: deepmerge(materialUiOverridesBase, materialUiOverridesDark),\n  variables: { ...variables }\n});\n\nconst projectorTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    background: {\n      default: colors.grayBlue\n    },\n    text: {\n      primary: colors.black,\n      secondary: colors.black\n    }\n  }),\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nexport default lightTheme;\nexport { lightTheme, darkTheme, projectorTheme };\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useState,\n  useCallback,\n  useContext,\n  ReactNode\n} from 'react';\nimport { ThemeProvider as MuiThemeProvider, Theme } from '@material-ui/core/styles';\nimport { lightTheme, darkTheme, projectorTheme } from '../styles/theme';\n\ninterface ThemeProviderProps {\n  theme: string;\n  children: ReactNode;\n}\n\ninterface ThemeContextInterface {\n  toggleTheme: () => void;\n  useProjector: boolean;\n}\n\nconst getTheme = ({ theme, useProjector }: { theme: string; useProjector: boolean }): Theme => {\n  if (useProjector) {\n    switch (theme) {\n      case 'dark':\n        // TODO: replace with dark projector theme\n        return darkTheme;\n\n      default:\n        return projectorTheme;\n    }\n  }\n\n  switch (theme) {\n    case 'dark':\n      return darkTheme;\n\n    default:\n      return lightTheme;\n  }\n};\n\nexport const ThemeContext = createContext({} as ThemeContextInterface);\nexport const useThemeToggle = (): (() => void) => {\n  const { toggleTheme } = useContext(ThemeContext);\n  return toggleTheme;\n};\nexport const useTheme = (theme: string): Theme => {\n  const { useProjector } = useContext(ThemeContext);\n  return getTheme({ theme, useProjector });\n};\n\nconst ThemeProvider: FC<ThemeProviderProps> = memo(({ theme = 'light', children }) => {\n  const [useProjector, setUseProjector] = useState(false);\n  const muiTheme = getTheme({ theme, useProjector });\n\n  const toggleTheme = useCallback(() => {\n    setUseProjector(currentUseProjector => !currentUseProjector);\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <ThemeContext.Provider value={{ useProjector, toggleTheme }}>\n        {children}\n      </ThemeContext.Provider>\n    </MuiThemeProvider>\n  );\n});\n\nexport default ThemeProvider;\n","import React, { FC, memo, useCallback, useState, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { useBuildCriteriaContext } from 'components/BuildCriteriaProvider';\nimport { useThemeToggle } from '../ThemeProvider';\n\nimport logo from 'camino-logo-dark.png';\nimport styles from './Header.module.scss';\n\nconst Header: FC = () => {\n  const { updateBuildCriteriaNodeId } = useBuildCriteriaContext();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const toggleTheme = useThemeToggle();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleToggleTheme = useCallback((): void => {\n    toggleTheme();\n    closeMenu();\n  }, [toggleTheme, closeMenu]);\n\n  return (\n    <header className={styles.header}>\n      <Link to=\"/\" className={styles.homeLink} onClick={(): void => updateBuildCriteriaNodeId('')}>\n        <img src={logo} alt=\"logo\" className={styles.logo} />\n      </Link>\n\n      <button onClick={openMenu} aria-controls=\"options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faCog} />\n      </button>\n\n      <Menu\n        id=\"options-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n      >\n        <MenuItem onClick={handleToggleTheme}>Toggle Theme</MenuItem>\n      </Menu>\n    </header>\n  );\n};\n\nexport default memo(Header);\n","import {\n  Pathway,\n  Precondition,\n  PathwayNode,\n  Transition,\n  Action,\n  ActionNode,\n  BranchNode\n} from 'pathways-model';\nimport { ElmLibrary, ElmStatement } from 'elm-model';\nimport shortid from 'shortid';\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\nimport produce from 'immer';\n\nexport function createNewPathway(name: string, description?: string, pathwayId?: string): Pathway {\n  return {\n    id: pathwayId ?? shortid.generate(),\n    name: name,\n    description: description ?? '',\n    library: '',\n    preconditions: [],\n    nodes: {\n      Start: {\n        key: 'Start',\n        label: 'Start',\n        transitions: []\n      }\n    }\n  };\n}\n\nexport function downloadPathway(pathway: Pathway): void {\n  const pathwayString = exportPathway(pathway);\n  // Create blob from pathwayString to save to file system\n  const pathwayBlob = new Blob([pathwayString], {\n    type: 'application/json'\n  });\n  // Temporarily create hidden <a> tag to download pathwayBlob\n  // File name is set to <pathway-name>.json\n  const url = window.URL.createObjectURL(pathwayBlob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = `${pathway.name}.json`;\n  a.click();\n  window.URL.revokeObjectURL(url);\n}\n\nexport function exportPathway(pathway: Pathway): string {\n  const elm: ElmLibrary = {\n    library: {\n      identifier: {\n        id: pathway.id,\n        version: '1.0.0'\n      },\n      schemaIdentifier: {\n        id: 'urn:hl7-org:elm',\n        version: 'r1'\n      },\n      usings: {\n        def: [\n          {\n            localIdentifier: 'System',\n            uri: 'urn:hl7-org:elm-types:r1'\n          },\n          {\n            localId: '1',\n            locator: '3:1-3:26',\n            localIdentifier: 'FHIR',\n            uri: 'http://hl7.org/fhir',\n            version: '4.0.0'\n          }\n        ]\n      },\n      statements: {\n        def: [\n          {\n            locator: '13:1-13:15',\n            name: 'Patient',\n            context: 'Patient',\n            expression: {\n              type: 'SingletonFrom',\n              operand: {\n                locator: '13:1-13:15',\n                dataType: '{http://hl7.org/fhir}Patient',\n                type: 'Retrieve'\n              }\n            }\n          }\n        ]\n      },\n      includes: { def: [] },\n      valueSets: { def: [] },\n      codes: { def: [] },\n      codeSystems: { def: [] }\n    }\n  };\n\n  const pathwayToExport: Pathway = {\n    ...pathway,\n    // Strip id from each precondition\n    preconditions: pathway.preconditions.map((precondition: Precondition) => ({\n      ...precondition,\n      id: undefined\n    })),\n    nodes: { ...pathway.nodes }\n  };\n\n  Object.keys(pathwayToExport.nodes).forEach((nodeKey: string) => {\n    const node = pathway.nodes[nodeKey];\n    if ('elm' in node && node.elm && node.key) {\n      mergeElm(elm, node.elm);\n      const elmStatement = produce(getElmStatement(node.elm), (draftElmStatement: ElmStatement) => {\n        // state.key is defined due to if statement above\n        // eslint-disable-next-line\n        draftElmStatement.name = node.key!;\n      });\n      elm.library.statements.def.push(elmStatement);\n    }\n\n    pathwayToExport.nodes[nodeKey] = {\n      ...pathwayToExport.nodes[nodeKey],\n      // Strip key from each node\n      key: undefined,\n      elm: undefined,\n      // Strip id from each node.transition\n      transitions: node.transitions.map((transition: Transition) => {\n        if (transition.condition?.elm) {\n          // Add tranistion.condition.elm to elm\n          mergeElm(elm, transition.condition.elm);\n          const elmStatement = produce(\n            getElmStatement(transition.condition.elm),\n            (draftElmStatement: ElmStatement) => {\n              draftElmStatement.name = transition.condition?.description ?? 'Unknown';\n            }\n          );\n          elm.library.statements.def.push(elmStatement);\n        }\n        return {\n          ...transition,\n          id: undefined,\n          condition: transition.condition ? { ...transition.condition, elm: undefined } : undefined\n        };\n      }),\n      // Strip id from each node.action\n      action:\n        (node as ActionNode).action == null\n          ? undefined\n          : (node as ActionNode).action.map((action: Action) => ({\n              ...action,\n              id: undefined\n            }))\n    };\n  });\n\n  return JSON.stringify(setNavigationalElm(pathwayToExport, elm), undefined, 2);\n}\n\nfunction mergeElm(elm: ElmLibrary, additionalElm: ElmLibrary): void {\n  // Merge usings\n  additionalElm.library.usings?.def.forEach(using => {\n    // Check if it is in ELM\n    if (!elm.library.usings?.def.find(def => def.uri === using.uri))\n      elm.library.usings?.def.push(using);\n  });\n\n  // Merge includes\n  additionalElm.library.includes?.def.forEach(include => {\n    if (!elm.library.includes?.def.find(def => def.path === include.path))\n      elm.library.includes?.def.push(include);\n  });\n\n  // Merge valueSets\n  additionalElm.library.valueSets?.def.forEach(valueSet => {\n    if (!elm.library.valueSets?.def.find(def => def.id === valueSet.id))\n      elm.library.valueSets?.def.push(valueSet);\n  });\n  // Merge codes\n  additionalElm.library.codes?.def.forEach(code => {\n    if (!elm.library.codes?.def.find(def => def.name === code.name))\n      elm.library.codes?.def.push(code);\n  });\n  // Merge codesystems\n  additionalElm.library.codeSystems?.def.forEach(codesystem => {\n    if (!elm.library.codeSystems?.def.find(def => def.name === codesystem.name))\n      elm.library.codeSystems?.def.push(codesystem);\n  });\n\n  // TODO: merge concepts\n}\n\nfunction getElmStatement(elm: ElmLibrary): ElmStatement {\n  const defaultStatementNames = [\n    'Patient',\n    'MeetsInclusionCriteria',\n    'InPopulation',\n    'Recommendation',\n    'Rationale',\n    'Errors'\n  ];\n  const elmStatement = elm.library.statements.def.find(\n    def => !defaultStatementNames.includes(def.name)\n  );\n\n  // elmStatement type is ElmStatement | undefined but criteria\n  // provider validates such a statement exists in the elm\n  return elmStatement as ElmStatement;\n}\n\n// TODO: possibly add more precondition methods\nexport function addPrecondition(\n  pathway: Pathway,\n  elementName: string,\n  expected: string,\n  cql: string\n): string {\n  const id = shortid.generate();\n  const precondition: Precondition = {\n    id: id,\n    elementName: elementName,\n    expected: expected,\n    cql: cql\n  };\n  pathway.preconditions.push(precondition);\n\n  return id;\n}\n\nexport function setNavigationalElm(pathway: Pathway, elm: object): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if (!draftPathway.elm) draftPathway.elm = {};\n    draftPathway.elm.navigational = elm;\n  });\n}\n\nexport function setPreconditionElm(pathway: Pathway, elm: object): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if (!draftPathway.elm) draftPathway.elm = {};\n    draftPathway.elm.preconditions = elm;\n  });\n}\n\nexport function createNode(key?: string): PathwayNode {\n  if (!key) key = shortid.generate();\n  const node: PathwayNode = {\n    key,\n    label: 'New Node',\n    transitions: [],\n    nodeTypeIsUndefined: true\n  };\n\n  return node;\n}\n\nexport function addNode(pathway: Pathway, node: PathwayNode): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.nodes[node.key as string] = node;\n  });\n}\n\nexport function addActionNode(pathway: Pathway): Pathway {\n  const node = createNode();\n  const newPathway = addNode(pathway, node);\n\n  return makeNodeAction(newPathway, node.key as string);\n}\n\nexport function setNodeLabel(pathway: Pathway, key: string, label: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.nodes[key].label = label;\n  });\n}\n\nexport function setNodeType(pathway: Pathway, nodeKey: string, nodeType: string): Pathway {\n  let action: Action;\n  let newPathway: Pathway;\n  switch (nodeType) {\n    case 'MedicationRequest':\n      newPathway = makeNodeAction(pathway, nodeKey);\n      action = {\n        type: 'create',\n        description: '',\n        id: shortid.generate(),\n        resource: {\n          resourceType: nodeType,\n          medicationCodeableConcept: {\n            coding: [\n              {\n                system: '',\n                code: '',\n                display: ''\n              }\n            ]\n          }\n        }\n      };\n      return setNodeAction(newPathway, nodeKey, [action]);\n    case 'ServiceRequest':\n      newPathway = makeNodeAction(pathway, nodeKey);\n      action = {\n        type: 'create',\n        description: '',\n        id: shortid.generate(),\n        resource: {\n          resourceType: nodeType,\n          code: {\n            coding: [\n              {\n                system: '',\n                code: '',\n                display: ''\n              }\n            ]\n          }\n        }\n      };\n      return setNodeAction(newPathway, nodeKey, [action]);\n    case 'CarePlan':\n      newPathway = makeNodeAction(pathway, nodeKey);\n      action = {\n        type: 'create',\n        description: '',\n        id: shortid.generate(),\n        resource: {\n          resourceType: nodeType,\n          title: ''\n        }\n      };\n      return setNodeAction(newPathway, nodeKey, [action]);\n    case 'Observation':\n      return makeNodeBranch(pathway, nodeKey);\n    default:\n      console.error('Unknown nodeType: ' + nodeType);\n      return pathway;\n  }\n}\n\nexport function setNodeCriteriaSource(\n  pathway: Pathway,\n  key: string,\n  criteriaSource: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as BranchNode).criteriaSource = criteriaSource;\n  });\n}\n\nexport function setNodeAction(pathway: Pathway, key: string, action: Action[]): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as ActionNode).action = action;\n  });\n}\n\nexport function setNodeMcodeCriteria(\n  pathway: Pathway,\n  key: string,\n  mcodeCriteria: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as BranchNode).mcodeCriteria = mcodeCriteria;\n  });\n}\n\nexport function setNodeOtherCriteria(\n  pathway: Pathway,\n  key: string,\n  otherCriteria: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as BranchNode).otherCriteria = otherCriteria;\n  });\n}\n\nexport function addTransition(pathway: Pathway, startNodeKey: string, endNodeKey: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transition: Transition = {\n      id: shortid.generate(),\n      transition: endNodeKey\n    };\n\n    draftPathway.nodes[startNodeKey].transitions.push(transition);\n  });\n}\n\nexport function setTransitionCondition(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string,\n  elm: ElmLibrary,\n  criteriaLabel?: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const foundTransition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n\n    const cql = criteriaLabel ? criteriaLabel : getElmStatement(elm).name;\n\n    if (foundTransition)\n      foundTransition.condition = {\n        description: description,\n        cql: cql,\n        elm: elm\n      };\n  });\n}\n\nexport function setActionNodeElm(pathway: Pathway, nodeKey: string, elm: ElmLibrary): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[nodeKey] as ActionNode).elm = elm;\n    (draftPathway.nodes[nodeKey] as ActionNode).cql = getElmStatement(elm).name;\n  });\n}\n\n// TODO: possibly add more action methods\nexport function addAction(\n  pathway: Pathway,\n  key: string,\n  type: string,\n  description: string,\n  resource: MedicationRequest | ServiceRequest\n): string {\n  const id = shortid.generate();\n  const action = {\n    id: id,\n    type: type,\n    description: description,\n    resource: resource\n  };\n\n  const node = produce(pathway.nodes[key] as ActionNode, (draftState: ActionNode) => {\n    draftState.action.push(action);\n  });\n  pathway.nodes[key] = node;\n\n  return id;\n}\n\nexport function getNodeType(pathway: Pathway, key: string | undefined): string {\n  if (!key) {\n    return 'null';\n  }\n  const node = pathway.nodes[key];\n  if (!node || node.nodeTypeIsUndefined) {\n    return 'null';\n  } else if (!(node as ActionNode).action && key !== 'Start') {\n    return 'branch';\n  } else {\n    return 'action';\n  }\n}\n\n/*\nSet Element Functions\n*/\nexport function setPathwayName(pathway: Pathway, name: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.name = name;\n  });\n}\n\nexport function setPathwayDescription(pathway: Pathway, description: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.description = description;\n  });\n}\n\nexport function setLibrary(pathway: Pathway, library: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.library = library;\n  });\n}\n\nexport function setTransition(\n  pathway: Pathway,\n  startNodeKey: string,\n  endNodeKey: string,\n  transitionId: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n    if (transition) transition.transition = endNodeKey;\n  });\n}\n\nexport function setTransitionConditionDescription(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const foundTransition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n\n    if (foundTransition?.condition) {\n      foundTransition.condition.description = description;\n    } else if (foundTransition) {\n      foundTransition.condition = {\n        description: description,\n        cql: ''\n      };\n    }\n  });\n}\n\nexport function setTransitionConditionElm(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  elm: ElmLibrary\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const foundTransition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n\n    if (foundTransition?.condition) {\n      foundTransition.condition.elm = elm;\n      foundTransition.condition.cql = getElmStatement(elm).name;\n    }\n  });\n}\n\nexport function setActionType(\n  pathway: Pathway,\n  nodeKey: string,\n  actionId: string,\n  type: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if ((draftPathway.nodes[nodeKey] as ActionNode).action) {\n      const action = (draftPathway.nodes[nodeKey] as ActionNode).action.find(\n        (action: Action) => action.id === actionId\n      );\n      if (action) action.type = type;\n    }\n  });\n}\n\nexport function setActionDescription(\n  pathway: Pathway,\n  nodeKey: string,\n  actionId: string,\n  description: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const node = (draftPathway.nodes[nodeKey] as ActionNode).action;\n\n    if (node) {\n      const action = node.find((action: Action) => action.id === actionId);\n      if (action) {\n        action.description = description;\n      }\n    }\n  });\n}\n\nexport function setActionResource(\n  pathway: Pathway,\n  nodeKey: string,\n  actionId: string,\n  resource: MedicationRequest | ServiceRequest\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if ((draftPathway.nodes[nodeKey] as ActionNode).action) {\n      const action = (draftPathway.nodes[nodeKey] as ActionNode).action.find(\n        (action: Action) => action.id === actionId\n      );\n      if (action) action.resource = resource;\n    }\n  });\n}\n\nexport function setActionResourceDisplay(action: Action, display: string): Action {\n  return produce(action, (draftAction: Action) => {\n    if (draftAction.resource.medicationCodeableConcept) {\n      draftAction.resource.medicationCodeableConcept.coding[0].display = display;\n    } else if (draftAction.resource.title) {\n      draftAction.resource.description = display;\n    } else {\n      draftAction.resource.code.coding[0].display = display;\n    }\n  });\n}\n\nexport function makeNodeAction(pathway: Pathway, nodeKey: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const node = draftPathway.nodes[nodeKey] as ActionNode;\n\n    if (node.cql === undefined && node.action === undefined) {\n      node.cql = '';\n      node.action = [];\n      node.nodeTypeIsUndefined = undefined;\n    }\n\n    node.transitions.forEach(transition => {\n      delete transition.condition;\n    });\n  });\n}\n\nexport function makeNodeBranch(pathway: Pathway, nodeKey: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const node = draftPathway.nodes[nodeKey] as ActionNode;\n\n    if (\n      node.cql !== undefined ||\n      node.elm !== undefined ||\n      node.action !== undefined ||\n      node.nodeTypeIsUndefined !== undefined\n    ) {\n      delete node.cql;\n      delete node.elm;\n      delete node.action;\n      delete node.nodeTypeIsUndefined;\n    }\n  });\n}\n\nexport function createCQL(action: Action, nodeKey: string): string {\n  const resource = action.resource;\n  // CQl identifier cannot start with a number or contain '-'\n  const cqlId = `cql${shortid.generate().replace(/-/g, 'a')}`;\n  let cql = `library ${cqlId} version '1'\\nusing FHIR version '4.0.0'\\n`;\n\n  const codesystemStatement = (system: string): string => `codesystem \"${system}\": '${system}'\\n`;\n\n  const returnStatement = (resourceType: string): string =>\n    `return Tuple{ resourceType: '${resourceType}', id: R.id.value, status: R.status.value}`;\n\n  const retrieveStatement = (resourceType: string): string => `[${resourceType}: \"${cqlId} code\"]`;\n\n  const defineStatement = (): string => `define \"${nodeKey}\":`;\n\n  if (resource.resourceType === 'MedicationRequest') {\n    const coding = resource.medicationCodeableConcept.coding[0];\n\n    cql += codesystemStatement(coding.system);\n\n    // eslint-disable-next-line\n    cql += `code \"${cqlId} code\": '${escape(coding.code)}' from \"${coding.system}\" display '${\n      coding.display\n    }'\\n`;\n    cql += `${defineStatement()}\n      ${retrieveStatement('MedicationRequest')} R ${returnStatement('MedicationRequest')}`;\n  } else if (resource.resourceType === 'ServiceRequest') {\n    const coding = resource.code.coding[0];\n\n    cql += codesystemStatement(coding.system);\n\n    // eslint-disable-next-line\n    cql += `code \"${cqlId} code\": '${escape(coding.code)}' from \"${coding.system}\" display '${\n      coding.display\n    }'\\n`;\n    cql += `${defineStatement()}\n      if exists ${retrieveStatement('Procedure')} \n      then ${retrieveStatement('Procedure')} R ${returnStatement('Procedure')} \n      else ${retrieveStatement('ServiceRequest')} R ${returnStatement('ServiceRequest')}`;\n  } else if (resource.resourceType === 'CarePlan') {\n    cql += `${defineStatement()}\n      [CarePlan] R where R.title.value = '${escape(resource.title)}' ${returnStatement(\n      'CarePlan'\n    )}`;\n  } else {\n    console.error(\n      'Auto generating CQL for action - unsupported resource type: ' + resource.resourceType\n    );\n  }\n\n  return cql;\n}\n\n/*\nRemove Element Function\n*/\nexport function removePathwayDescription(pathway: Pathway): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.description;\n  });\n}\n\nexport function removePrecondition(pathway: Pathway, id: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const preconditions = draftPathway.preconditions.filter(\n      (precondition: Precondition) => precondition.id !== id\n    );\n    draftPathway.preconditions = preconditions;\n  });\n}\n\nexport function removeNavigationalElm(pathway: Pathway): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.elm?.navigational;\n  });\n}\n\nexport function removePreconditionElm(pathway: Pathway): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.elm?.preconditions;\n  });\n}\n\nexport function removeNode(pathway: Pathway, key: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.nodes[key];\n\n    Object.keys(draftPathway.nodes).forEach((nodeKey: string) => {\n      const node = draftPathway.nodes[nodeKey];\n      node.transitions.forEach((transition: Transition) => {\n        if (transition.transition === key)\n          draftPathway.nodes[nodeKey].transitions = draftPathway.nodes[nodeKey].transitions.filter(\n            (filterTransition: Transition) => transition.id !== filterTransition.id\n          );\n      });\n    });\n  });\n}\n\nexport function removeTransitionCondition(\n  pathway: Pathway,\n  nodeKey: string,\n  transitionId: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transition = draftPathway.nodes[nodeKey].transitions.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n    if (transition) delete transition.condition;\n  });\n}\n\nexport function removeTransition(\n  pathway: Pathway,\n  parentNodeKey: string,\n  childNodeKey: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transitions = draftPathway.nodes[parentNodeKey].transitions.filter(\n      (transition: Transition) => transition.transition !== childNodeKey\n    );\n    draftPathway.nodes[parentNodeKey].transitions = transitions;\n  });\n}\n\nexport function removeAction(pathway: Pathway, nodeKey: string, actionId: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if ((draftPathway.nodes[nodeKey] as ActionNode).action) {\n      const actions = (draftPathway.nodes[nodeKey] as ActionNode).action.filter(\n        (action: Action) => action.id !== actionId\n      );\n      (draftPathway.nodes[nodeKey] as ActionNode).action = actions;\n    }\n  });\n}\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: '2em',\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary,\n      height: '6em',\n      justifyContent: 'space-between'\n    },\n    backButton: {\n      height: '45px',\n      width: '45px'\n    },\n    navigationIcons: {\n      fontSize: '20px',\n      color: theme.palette.common.gray,\n      cursor: 'pointer'\n    },\n    pathwayName: {\n      fontSize: '1.4em',\n      marginLeft: '1.5em'\n    }\n  }),\n  { name: 'Navigation', index: 1 }\n);\n","import { useEffect, useRef, useState, MutableRefObject } from 'react';\n\nfunction useRefState<T>(initialValue: T): [T, MutableRefObject<T>, Function] {\n  const [state, setState] = useState<T>(initialValue);\n  const stateRef = useRef(state);\n  useEffect(() => {\n    stateRef.current = state;\n  }, [state]);\n  return [state, stateRef, setState];\n}\n\nexport default useRefState;\n","import React, {\n  ReactNode,\n  createContext,\n  useContext,\n  FC,\n  memo,\n  useCallback,\n  MutableRefObject\n} from 'react';\nimport { Pathway } from 'pathways-model';\nimport useRefState from 'utils/useRefState';\n\ninterface CurrentPathwayContextInterface {\n  pathway: Pathway | null;\n  pathwayRef: MutableRefObject<Pathway | null>;\n  setPathway: (value: Pathway) => void;\n}\n\nexport const CurrentPathwayContext = createContext<CurrentPathwayContextInterface>(\n  {} as CurrentPathwayContextInterface\n);\n\ninterface CurrentPathwayProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrentPathwayProvider: FC<CurrentPathwayProviderProps> = memo(({ children }) => {\n  const [pathway, pathwayRef, _setPathway] = useRefState<Pathway | null>(null);\n\n  const setPathway = useCallback(\n    (value: Pathway) => {\n      _setPathway(value);\n    },\n    [_setPathway]\n  );\n\n  return (\n    <CurrentPathwayContext.Provider value={{ pathway, pathwayRef, setPathway }}>\n      {children}\n    </CurrentPathwayContext.Provider>\n  );\n});\n\nexport const useCurrentPathwayContext = (): CurrentPathwayContextInterface =>\n  useContext(CurrentPathwayContext);\n","import React, { FC, useCallback, useState, MouseEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faEllipsisH } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\n\nimport { downloadPathway } from 'utils/builder';\nimport { useBuildCriteriaContext } from 'components/BuildCriteriaProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\n\nconst Navigation: FC = () => {\n  const { updateBuildCriteriaNodeId } = useBuildCriteriaContext();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const { pathway } = useCurrentPathwayContext();\n  const styles = useStyles();\n  const history = useHistory();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleGoBack = useCallback((): void => {\n    updateBuildCriteriaNodeId('');\n    history.push('/');\n  }, [history, updateBuildCriteriaNodeId]);\n\n  return (\n    <nav className={styles.root}>\n      <div>\n        <IconButton className={styles.backButton} onClick={handleGoBack} aria-label=\"go back\">\n          <FontAwesomeIcon icon={faChevronLeft} className={styles.navigationIcons} />\n        </IconButton>\n\n        <span className={styles.pathwayName}>{pathway?.name}</span>\n      </div>\n      <IconButton onClick={openMenu} aria-controls=\"pathway-options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faEllipsisH} className={styles.navigationIcons} />\n      </IconButton>\n      <Menu\n        id=\"pathway-options-menu\"\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n      >\n        <MenuItem\n          onClick={(): void => {\n            if (pathway) downloadPathway(pathway);\n            else alert('No pathway to download!');\n            closeMenu();\n          }}\n        >\n          Export Pathway\n        </MenuItem>\n      </Menu>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { useState, useEffect } from 'react';\nimport { Service } from 'pathways-objects';\n\nfunction getObject(url: string): Promise<Response> {\n  return fetch(url, {\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n}\n\nfunction typedFetch<T>(url: string, options?: object): Promise<T> {\n  return fetch(url, options).then(response => response.json() as Promise<T>);\n}\n\nfunction useGetService<T>(url: string): Service<Array<T>> {\n  const [result, setResult] = useState<Service<Array<T>>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    getObject(url)\n      .then(response => response.json() as Promise<string[]>)\n      .then(listOfFiles => listOfFiles.map(f => typedFetch<T>(url + '/' + f)))\n      .then(listOfPromises => Promise.all(listOfPromises))\n      .then(list => setResult({ status: 'loaded', payload: list }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, [url]);\n\n  return result;\n}\n\nexport default useGetService;\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  ReactNode\n} from 'react';\nimport { Pathway } from 'pathways-model';\nimport { ServiceLoaded } from 'pathways-objects';\nimport config from 'utils/ConfigManager';\nimport useGetService from './Services';\nimport useRefState from 'utils/useRefState';\n\ninterface PathwaysContextInterface {\n  pathways: Pathway[];\n  status: string;\n  addPathway: (pathway: Pathway) => void;\n  deletePathway: (id: string) => void;\n  updatePathway: (pathway: Pathway) => void;\n}\n\nexport const PathwaysContext = createContext<PathwaysContextInterface>(\n  {} as PathwaysContextInterface\n);\n\ninterface PathwaysProviderProps {\n  children: ReactNode;\n}\n\nexport const PathwaysProvider: FC<PathwaysProviderProps> = memo(function PathwaysProvider({\n  children\n}) {\n  const [pathways, pathwaysRef, setPathways] = useRefState<Pathway[]>([]);\n  const service = useGetService<Pathway>(config.get('demoPathwaysService'));\n  const servicePayload = (service as ServiceLoaded<Pathway[]>).payload;\n\n  const addPathway = useCallback(\n    (pathway: Pathway) => {\n      setPathways((currentPathways: Pathway[]) => [...currentPathways, pathway]);\n    },\n    [setPathways]\n  );\n\n  const deletePathway = useCallback(\n    (id: string) => {\n      setPathways((currentPathways: Pathway[]) =>\n        currentPathways.filter(pathway => pathway.id !== id)\n      );\n    },\n    [setPathways]\n  );\n\n  const updatePathway = useCallback(\n    (newPathway: Pathway) => {\n      const index = pathwaysRef.current.findIndex(pathway => pathway.id === newPathway.id);\n      setPathways((currentPathways: Pathway[]) => [\n        ...currentPathways.slice(0, index),\n        newPathway,\n        ...currentPathways.slice(index + 1)\n      ]);\n    },\n    [pathwaysRef, setPathways]\n  );\n\n  useEffect(() => {\n    if (servicePayload) setPathways(servicePayload);\n  }, [servicePayload, setPathways]);\n\n  switch (service.status) {\n    case 'error':\n      return <div>Error loading pathways</div>;\n\n    default:\n      return (\n        <PathwaysContext.Provider\n          value={{\n            pathways,\n            addPathway,\n            deletePathway,\n            updatePathway,\n            status: service.status\n          }}\n        >\n          {children}\n        </PathwaysContext.Provider>\n      );\n  }\n});\n\nexport const usePathwaysContext = (): PathwaysContextInterface => useContext(PathwaysContext);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding,\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.common.gray,\n      width: '33%',\n      minWidth: '550px',\n      overflowY: 'scroll',\n      float: 'left'\n    },\n    formControl: {\n      margin: theme.spacing(1, 0),\n      minWidth: 375\n    },\n    divider: {\n      width: '100%'\n    },\n    headerLabelStart: {\n      cursor: 'default'\n    },\n    displayText: {\n      margin: '0 0 5px 0',\n      fontWeight: 900,\n      fontSize: '1em'\n    },\n    sidebarHeader: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    sidebarHeaderGroup: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    sidebarHeaderButton: {\n      height: '45px',\n      width: '45px',\n      color: theme.palette.text.primary\n    },\n    headerLabelGroup: {\n      display: 'flex',\n      cursor: 'pointer',\n      height: '60px'\n    },\n    headerLabel: {\n      display: 'flex',\n      alignItems: 'center',\n      fontSize: '1.6em',\n      fontWeight: 700,\n      margin: '0 5px'\n    },\n    headerLabelText: {\n      marginBottom: '5px'\n    },\n    editIcon: {\n      fontSize: '0.6em',\n      marginLeft: '10px'\n    },\n    sidebarButtonGroup: {\n      display: 'flex',\n      margin: '10px 0'\n    },\n    sidebarButtonGroupExtraMargin: {\n      display: 'flex',\n      margin: '20px 0 10px 0'\n    },\n    sidebarButton: {\n      minWidth: 180,\n      marginRight: '20px'\n    },\n    sidebarButtonText: {\n      fontStyle: 'italic'\n    },\n    outlinedDiv: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      '& div': {\n        width: '100%'\n      }\n    },\n    outlinedDivError: {\n      borderColor: `${theme.palette.error.main} !important`,\n      '&:hover': {\n        borderColor: `${theme.palette.error.main} !important`\n      }\n    },\n    toggleSidebar: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      float: 'left',\n      width: '50px',\n      minWidth: '50px',\n      height: '50px',\n      fontSize: '2em',\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.text.primary,\n      '&:hover': {\n        cursor: 'pointer'\n      }\n    },\n    cancelButton: {\n      alignSelf: 'flex-end',\n      marginTop: '5px',\n      padding: '5px 15px',\n      fontSize: '1em'\n    },\n    buildCriteriaContainer: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    saveButton: {\n      marginLeft: '1em'\n    },\n    transitionContainer: {\n      backgroundColor: theme.palette.common.grayVeryDark,\n      padding: '5px 15px',\n      margin: '15px 0'\n    },\n    dividerHeader: {\n      width: '100%',\n      textTransform: 'uppercase',\n      borderBottom: '1px solid ' + theme.palette.common.blueLighter,\n      color: theme.palette.common.blueLighter,\n      lineHeight: '0.1em',\n      margin: '10px 0 20px',\n      fontWeight: 800,\n      paddingLeft: '15px',\n      '& span': {\n        background: theme.palette.common.gray,\n        padding: '0 10px'\n      }\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    },\n    dialogContent: {\n      color: theme.palette.common.black,\n      fontSize: '16px',\n      display: 'flex',\n      marginTop: '-25px'\n    },\n    dialogContentText: {\n      paddingLeft: '10px',\n      lineHeight: '40px'\n    },\n    alertIcon: {\n      color: theme.palette.common.red,\n      fontSize: '40px'\n    }\n  }),\n  { name: 'Sidebar', index: 1 }\n);\n","import React, {\n  MutableRefObject,\n  createContext,\n  useCallback,\n  memo,\n  ReactNode,\n  FC,\n  useContext\n} from 'react';\nimport { PathwayNode } from 'pathways-model';\nimport useRefState from 'utils/useRefState';\n\ninterface CurrentNodeContextInterface {\n  currentNode: PathwayNode | null;\n  currentNodeRef: MutableRefObject<PathwayNode | null>;\n  setCurrentNode: (value: PathwayNode) => void;\n}\n\nexport const CurrentNodeContext = createContext<CurrentNodeContextInterface>(\n  {} as CurrentNodeContextInterface\n);\n\ninterface CurrentNodeProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrentNodeProvider: FC<CurrentNodeProviderProps> = memo(({ children }) => {\n  const [currentNode, currentNodeRef, _setCurrentNode] = useRefState<PathwayNode | null>(null);\n\n  const setCurrentNode = useCallback(\n    (value: PathwayNode) => {\n      _setCurrentNode(value);\n    },\n    [_setCurrentNode]\n  );\n\n  return (\n    <CurrentNodeContext.Provider value={{ currentNode, currentNodeRef, setCurrentNode }}>\n      {children}\n    </CurrentNodeContext.Provider>\n  );\n});\n\nexport const useCurrentNodeContext = (): CurrentNodeContextInterface =>\n  useContext(CurrentNodeContext);\n","import { PathwayNode, ActionNode, Pathway, Transition } from 'pathways-model';\nimport { History } from 'history';\n\nexport function isActionNode(node: PathwayNode): node is ActionNode {\n  const { action } = node as ActionNode;\n  return action !== undefined;\n}\n\nexport function isBranchNode(node: PathwayNode): boolean {\n  const { action, label, nodeTypeIsUndefined } = node as ActionNode;\n  return action === undefined && label !== 'Start' && !nodeTypeIsUndefined;\n}\n\ntype ConversionResource = {\n  [key: string]: string;\n};\nexport const resourceNameConversion: ConversionResource = {\n  MedicationRequest: 'Medication',\n  ServiceRequest: 'Procedure',\n  CarePlan: 'Regimen'\n};\n\nexport const nodeTypeOptions = [\n  { label: 'Medication', value: 'MedicationRequest' },\n  { label: 'Procedure', value: 'ServiceRequest' },\n  { label: 'Regimen', value: 'CarePlan' },\n  { label: 'Observation', value: 'Observation' }\n];\n\nexport function findParents(pathway: Pathway, childNodeKey: string): string[] {\n  const parents: string[] = [];\n  Object.keys(pathway.nodes).forEach(parentNodeKey => {\n    for (const transition of pathway.nodes[parentNodeKey].transitions) {\n      if (transition.transition === childNodeKey) {\n        parents.push(parentNodeKey);\n        break;\n      }\n    }\n  });\n  return parents;\n}\n\nexport function willOrphanChild(pathway: Pathway, childNodeKey: string): boolean {\n  // Count the number of transitions into the node\n  let transitionCount = 0;\n  Object.keys(pathway.nodes).forEach(nodeKey => {\n    pathway.nodes[nodeKey].transitions.forEach(transition => {\n      if (transition.transition === childNodeKey) transitionCount += 1;\n    });\n  });\n\n  return transitionCount >= 2 ? false : true;\n}\n\nexport function canDeleteNode(pathway: Pathway, transitions: Transition[]): boolean {\n  let canDeleteAllTransitions = true;\n  transitions.forEach(transition => {\n    if (willOrphanChild(pathway, transition.transition)) canDeleteAllTransitions = false;\n  });\n  return canDeleteAllTransitions;\n}\n\nexport function redirect(\n  pathwayId: string,\n  nodeKey: string,\n  history: History<History.PoorMansUnknown>\n): void {\n  const url = `/builder/${encodeURIComponent(pathwayId)}/node/${encodeURIComponent(nodeKey)}`;\n  if (url !== history.location.pathname) {\n    history.push(url);\n  }\n}\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { InputLabel, FormControl, Select, MenuItem } from '@material-ui/core';\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface DropDownProps {\n  id: string;\n  label: string;\n  options: Array<Option>;\n  value?: string;\n  onChange: Function | null;\n}\n\nconst DropDown: FC<DropDownProps> = ({ id, label, options, value, onChange }: DropDownProps) => {\n  const handleSetSelected = useCallback(\n    (event: ChangeEvent<{ value: unknown }>): void => {\n      if (onChange) onChange(event);\n    },\n    [onChange]\n  );\n\n  return (\n    <FormControl variant=\"outlined\" fullWidth>\n      <InputLabel id={id} htmlFor={`${id}-select`}>\n        {label}\n      </InputLabel>\n\n      <Select\n        id={`${id}-select`}\n        value={value || ''}\n        onChange={handleSetSelected}\n        label={label}\n        error={value == null || value === ''}\n        MenuProps={{\n          getContentAnchorEl: null,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'center'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          }\n        }}\n        displayEmpty\n      >\n        {options.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(DropDown);\n","import React, {\n  FC,\n  createContext,\n  useState,\n  memo,\n  ReactNode,\n  useContext,\n  useCallback\n} from 'react';\n\ninterface SnackbarContextInterface {\n  snackbarText: string;\n  openSnackbar: boolean;\n  handleCloseSnackbar: () => void;\n  setSnackbarText: (value: string) => void;\n  setOpenSnackbar: (value: boolean) => void;\n}\n\nexport const SnackbarContext = createContext<SnackbarContextInterface>(\n  {} as SnackbarContextInterface\n);\n\ninterface SnackbarProviderProps {\n  children: ReactNode;\n}\n\nexport const SnackbarProvider: FC<SnackbarProviderProps> = memo(({ children }) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n  const [snackbarText, setSnackbarText] = useState<string>('Deleted Successfully');\n\n  const handleCloseSnackbar = useCallback(() => {\n    setOpenSnackbar(false);\n  }, [setOpenSnackbar]);\n\n  return (\n    <SnackbarContext.Provider\n      value={{ snackbarText, openSnackbar, handleCloseSnackbar, setSnackbarText, setOpenSnackbar }}\n    >\n      {children}\n    </SnackbarContext.Provider>\n  );\n});\n\nexport const useSnackbarContext = (): SnackbarContextInterface => useContext(SnackbarContext);\n","import React, { FC, memo } from 'react';\nimport { Snackbar, Button, IconButton } from '@material-ui/core';\nimport { useSnackbarContext } from 'components/SnackbarProvider';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst DeleteSnackbar: FC = () => {\n  const { snackbarText, openSnackbar, handleCloseSnackbar } = useSnackbarContext();\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right'\n      }}\n      open={openSnackbar}\n      autoHideDuration={10000}\n      onClose={handleCloseSnackbar}\n      message={snackbarText}\n      action={\n        <React.Fragment>\n          <Button color=\"secondary\" size=\"small\" onClick={handleCloseSnackbar}>\n            UNDO\n          </Button>\n          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\n            <FontAwesomeIcon icon={faTimes} />\n          </IconButton>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default memo(DeleteSnackbar);\n","import React, {\n  FC,\n  memo,\n  useCallback,\n  useState,\n  useEffect,\n  useRef,\n  RefObject,\n  ChangeEvent\n} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChevronLeft,\n  faChevronRight,\n  faPlus,\n  faLevelDownAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  SidebarHeader,\n  ActionNodeEditor,\n  SidebarButton,\n  TransitionEditor,\n  BranchTransition\n} from 'components/Sidebar';\nimport { setNodeType, addTransition, createNode, addNode, getNodeType } from 'utils/builder';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { isBranchNode, redirect } from 'utils/nodeUtils';\nimport { nodeTypeOptions } from 'utils/nodeUtils';\nimport DropDown from 'components/elements/DropDown';\nimport DeleteSnackbar from './DeleteSnackbar';\n\ninterface SidebarProps {\n  headerElement: RefObject<HTMLDivElement>;\n}\n\nconst Sidebar: FC<SidebarProps> = ({ headerElement }) => {\n  const { updatePathway } = usePathwaysContext();\n  const { pathway, pathwayRef } = useCurrentPathwayContext();\n  const { currentNode, currentNodeRef } = useCurrentNodeContext();\n  const [isExpanded, setIsExpanded] = useState<boolean>(true);\n  const styles = useStyles();\n  const history = useHistory();\n  const sidebarContainerElement = useRef<HTMLDivElement>(null);\n\n  const toggleSidebar = useCallback((): void => {\n    setIsExpanded(!isExpanded);\n  }, [isExpanded]);\n\n  const changeNodeType = useCallback(\n    (nodeType: string): void => {\n      if (currentNodeRef.current?.key && pathwayRef.current)\n        updatePathway(setNodeType(pathwayRef.current, currentNodeRef.current.key, nodeType));\n    },\n    [pathwayRef, updatePathway, currentNodeRef]\n  );\n\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  const addPathwayNode = useCallback((): void => {\n    if (!currentNodeRef.current?.key || !pathwayRef.current) return;\n\n    const newNode = createNode();\n    let newPathway = addNode(pathwayRef.current, newNode);\n    newPathway = addTransition(newPathway, currentNodeRef.current.key, newNode.key as string);\n    updatePathway(newPathway);\n    if (!isBranchNode(currentNodeRef.current) && newNode.key)\n      redirect(pathwayRef.current.id, newNode.key, history);\n  }, [pathwayRef, updatePathway, currentNodeRef, history]);\n\n  const connectToNode = useCallback((): void => {\n    console.log('Connect to existing node');\n  }, []);\n\n  // Set the height of the sidebar container\n  useEffect(() => {\n    const resize = (): void => {\n      if (sidebarContainerElement?.current && headerElement?.current)\n        sidebarContainerElement.current.style.height =\n          window.innerHeight - headerElement.current.clientHeight + 'px';\n    };\n    resize();\n    window.addEventListener('resize', resize);\n    return (): void => window.removeEventListener('resize', resize);\n  }, [isExpanded, headerElement]);\n\n  if (!pathway) return <div>Error: No pathway</div>;\n  if (!currentNode) return <div>Error: No current node</div>;\n\n  if (currentNode.key === 'Start') {\n    return (\n      <>\n        {isExpanded && (\n          <div className={styles.root} ref={sidebarContainerElement}>\n            <SidebarHeader node={currentNode} isTransition={false} />\n            <h5 className={styles.dividerHeader}>\n              <></>{' '}\n            </h5>\n            <SidebarButton\n              buttonName=\"Add Node\"\n              buttonIcon={faPlus}\n              buttonText=\"Add a new transition to a new node in the pathway.\"\n              onClick={addPathwayNode}\n            />\n          </div>\n        )}\n\n        <DeleteSnackbar />\n      </>\n    );\n  } else {\n    const nodeType = getNodeType(pathway, currentNode.key);\n    const displayTransitions =\n      currentNode.key !== undefined &&\n      (currentNode.key !== 'Start' || currentNode.transitions.length === 0);\n\n    return (\n      <>\n        {isExpanded && (\n          <div className={styles.root} ref={sidebarContainerElement}>\n            <SidebarHeader node={currentNode} isTransition={false} />\n\n            <h5 className={styles.dividerHeader}>\n              <span>Details</span>\n            </h5>\n\n            {nodeType === 'null' && (\n              <DropDown\n                id=\"nodeType\"\n                label=\"Node Type\"\n                options={nodeTypeOptions}\n                onChange={selectNodeType}\n                value=\"\"\n              />\n            )}\n\n            {nodeType === 'action' && <ActionNodeEditor changeNodeType={changeNodeType} />}\n\n            {nodeType === 'branch' && (\n              <DropDown\n                id=\"nodeType\"\n                label=\"Node Type\"\n                options={nodeTypeOptions}\n                onChange={selectNodeType}\n                value=\"Observation\"\n              />\n            )}\n\n            <h5 className={styles.dividerHeader}>\n              <span>Transitions</span>\n            </h5>\n\n            {currentNode?.transitions.map(transition => {\n              return (\n                <TransitionEditor key={transition.id} transition={transition}>\n                  {nodeType === 'branch' && (\n                    <BranchTransition key={transition.id} transition={transition} />\n                  )}\n                </TransitionEditor>\n              );\n            })}\n\n            {displayTransitions && (\n              <>\n                <SidebarButton\n                  buttonName=\"Add New Node\"\n                  buttonIcon={faPlus}\n                  buttonText=\"Add a new transition to a new node in the pathway.\"\n                  onClick={addPathwayNode}\n                />\n\n                <SidebarButton\n                  buttonName=\"Connect Node\"\n                  buttonIcon={faLevelDownAlt}\n                  buttonText=\"Create a transition to an existing node in the pathway.\"\n                  onClick={connectToNode}\n                />\n              </>\n            )}\n          </div>\n        )}\n\n        <div className={styles.toggleSidebar} onClick={toggleSidebar}>\n          <FontAwesomeIcon icon={isExpanded ? faChevronLeft : faChevronRight} />\n        </div>\n\n        <DeleteSnackbar />\n      </>\n    );\n  }\n};\n\nexport default memo(Sidebar);\n","import React, { FC, memo, useCallback, useRef, useState, KeyboardEvent, FocusEvent } from 'react';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEdit,\n  faChevronLeft,\n  faChevronRight,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, FormControl, Input, Tooltip } from '@material-ui/core';\n\nimport { PathwayNode } from 'pathways-model';\nimport { setNodeLabel, removeNode, removeTransition } from 'utils/builder';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useHistory } from 'react-router-dom';\nimport { canDeleteNode, redirect, findParents, willOrphanChild } from 'utils/nodeUtils';\nimport { DeleteModal } from '.';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { useSnackbarContext } from 'components/SnackbarProvider';\n\ninterface SidebarHeaderProps {\n  node: PathwayNode;\n  isTransition?: boolean;\n}\n\nconst SidebarHeader: FC<SidebarHeaderProps> = ({ node, isTransition = false }) => {\n  const { updatePathway } = usePathwaysContext();\n  const [showInput, setShowInput] = useState<boolean>(false);\n  const [openTooltip, setOpenTooltip] = useState<boolean>(false);\n  const [openDelete, setOpenDelete] = useState<boolean>(false);\n  const { currentNodeRef } = useCurrentNodeContext();\n  const { setSnackbarText, setOpenSnackbar } = useSnackbarContext();\n  const { pathway, pathwayRef } = useCurrentPathwayContext();\n  const inputRef = useRef<HTMLInputElement>(null);\n  const nodeLabel = node?.label || '';\n  const styles = useStyles();\n  const history = useHistory();\n\n  const goToParentNode = useCallback(() => {\n    if (!pathwayRef.current || !node.key) return;\n    const parents = findParents(pathwayRef.current, node.key);\n    redirect(pathwayRef.current.id, parents[0], history);\n  }, [history, pathwayRef, node.key]);\n\n  const redirectToNode = useCallback(() => {\n    if (!pathwayRef.current || !node.key) return;\n    redirect(pathwayRef.current.id, node.key, history);\n  }, [history, pathwayRef, node.key]);\n\n  const changeNodeLabel = useCallback(() => {\n    const label = inputRef.current?.value ?? '';\n    if (node.key && pathwayRef.current)\n      updatePathway(setNodeLabel(pathwayRef.current, node.key, label));\n    setShowInput(false);\n  }, [pathwayRef, updatePathway, node.key]);\n\n  const handleShowInput = useCallback(() => {\n    setShowInput(true);\n  }, []);\n\n  const deleteNode = useCallback(() => {\n    if (node.key && pathwayRef.current && canDeleteNode(pathwayRef.current, node.transitions)) {\n      const parents = findParents(pathwayRef.current, node.key);\n      updatePathway(removeNode(pathwayRef.current, node.key));\n      redirect(pathwayRef.current.id, parents[0], history);\n      setOpenDelete(false);\n      setSnackbarText(`${node.label} node deleted successfully`);\n      setOpenSnackbar(true);\n    }\n  }, [\n    pathwayRef,\n    updatePathway,\n    setSnackbarText,\n    setOpenSnackbar,\n    node.key,\n    node.label,\n    node.transitions,\n    history\n  ]);\n\n  const deleteTransition = useCallback(() => {\n    if (\n      node.key &&\n      currentNodeRef.current?.key &&\n      pathwayRef.current &&\n      !willOrphanChild(pathwayRef.current, node.key)\n    ) {\n      updatePathway(removeTransition(pathwayRef.current, currentNodeRef.current.key, node.key));\n      setOpenDelete(false);\n      setSnackbarText(\n        `Transition from ${currentNodeRef.current.label} to ${node.label} deleted successfully`\n      );\n      setOpenSnackbar(true);\n    }\n  }, [pathwayRef, currentNodeRef, updatePathway, setSnackbarText, setOpenSnackbar, node]);\n\n  const openDeleteModal = useCallback((): void => {\n    setOpenDelete(true);\n  }, []);\n\n  const closeDeleteModal = useCallback((): void => {\n    setOpenDelete(false);\n  }, []);\n\n  const handleOpenTooltip = useCallback((): void => {\n    setOpenTooltip(true);\n  }, []);\n\n  const handleCloseTooltip = useCallback((): void => {\n    setOpenTooltip(false);\n  }, []);\n\n  const handleKeyPress = useCallback(\n    (event: KeyboardEvent<HTMLDivElement>): void => {\n      if (event.key === 'Enter') changeNodeLabel();\n    },\n    [changeNodeLabel]\n  );\n\n  const deleteNodeDisabled = pathway ? !canDeleteNode(pathway, node.transitions) : true;\n  const deleteTransitionDisabled = pathway && node.key ? willOrphanChild(pathway, node.key) : true;\n  const deleteDisabled = isTransition ? deleteTransitionDisabled : deleteNodeDisabled;\n  const titleText = isTransition\n    ? 'Deleting this transition would result in an orphaned node. To delete, first add the child node as a transition to another node, or delete it directly.'\n    : 'Deleting this node would result in an orphaned descendent node. To delete, first add another transition to the would-be orphaned node from another node, or delete it directly.';\n\n  return (\n    <div className={styles.sidebarHeader}>\n      <div className={styles.sidebarHeaderGroup}>\n        {node.key !== 'Start' && !isTransition && (\n          <IconButton\n            className={styles.sidebarHeaderButton}\n            onClick={goToParentNode}\n            aria-label=\"go to parent node\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft} />\n          </IconButton>\n        )}\n\n        <div className={styles.headerLabelGroup} onClick={handleShowInput}>\n          {showInput && node.key !== 'Start' ? (\n            <FormControl className={styles.formControl} fullWidth>\n              <Input\n                className={styles.headerLabel}\n                type=\"text\"\n                inputRef={inputRef}\n                onBlur={changeNodeLabel}\n                onKeyPress={handleKeyPress}\n                defaultValue={nodeLabel}\n                autoFocus\n                onFocus={(event: FocusEvent<HTMLInputElement>): void => event.target.select()}\n              />\n            </FormControl>\n          ) : (\n            <div\n              className={clsx(\n                styles.headerLabel,\n                styles.headerLabelText,\n                node.key === 'Start' && styles.headerLabelStart\n              )}\n            >\n              {nodeLabel}\n              {node.key !== 'Start' && (\n                <FontAwesomeIcon className={styles.editIcon} icon={faEdit} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className={styles.sidebarHeaderGroup}>\n        {node.key !== 'Start' && (\n          <Tooltip\n            placement=\"top\"\n            open={deleteDisabled ? openTooltip : false}\n            onClose={handleCloseTooltip}\n            onOpen={handleOpenTooltip}\n            title={titleText}\n            arrow\n          >\n            <span>\n              <IconButton\n                className={styles.sidebarHeaderButton}\n                onClick={openDeleteModal}\n                aria-label={isTransition ? 'delete transition' : 'delete node'}\n                disabled={deleteDisabled}\n              >\n                <FontAwesomeIcon icon={faTrashAlt} />\n              </IconButton>\n            </span>\n          </Tooltip>\n        )}\n\n        {isTransition && (\n          <IconButton\n            className={styles.sidebarHeaderButton}\n            onClick={redirectToNode}\n            aria-label={'go to transition node'}\n          >\n            <FontAwesomeIcon icon={faChevronRight} />\n          </IconButton>\n        )}\n      </div>\n\n      <DeleteModal\n        nodeLabel={node.label}\n        isTransition={isTransition}\n        open={openDelete}\n        onDelete={isTransition ? deleteTransition : deleteNode}\n        onClose={closeDeleteModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(SidebarHeader);\n","import React, { FC, memo } from 'react';\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\n\ninterface SidebarButtonProps {\n  buttonName: string;\n  buttonIcon: IconDefinition;\n  buttonText: string;\n  extraMargin?: boolean;\n  onClick?: () => void;\n}\n\nconst SidebarButton: FC<SidebarButtonProps> = ({\n  buttonName,\n  buttonIcon,\n  buttonText,\n  extraMargin = false,\n  onClick\n}) => {\n  const styles = useStyles();\n\n  return (\n    <div className={extraMargin ? styles.sidebarButtonGroupExtraMargin : styles.sidebarButtonGroup}>\n      <Button\n        className={styles.sidebarButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<FontAwesomeIcon icon={buttonIcon} />}\n        onClick={onClick}\n      >\n        {buttonName}\n      </Button>\n\n      <div className={styles.sidebarButtonText}>{buttonText}</div>\n    </div>\n  );\n};\n\nexport default memo(SidebarButton);\n","// External CQL -> ELM service\nimport { CqlObject } from './cql-extractor';\nimport config from 'utils/ConfigManager';\nimport {\n  extractJSONContent,\n  extractMultipartBoundary,\n  extractMultipartFileName\n} from 'utils/regexes';\n\nconst url = config.get('cqlToElmWebserviceUrl');\n\nexport interface ElmObject {\n  main: object;\n  libraries: {\n    [key: string]: object;\n  };\n}\n\n/**\n * Function that requests web_service to convert the cql into elm.\n * @param cql - cql file that is the input to the function.\n * @return The resulting elm translation of the cql file.\n */\nexport default function convertCQL(cql: CqlObject): Promise<ElmObject> {\n  // Connect to web service\n  const formdata = new FormData();\n  Object.keys(cql.libraries).forEach((key, i) => {\n    formdata.append(`${key}`, cql.libraries[key]);\n  });\n\n  formdata.append('main', cql.main);\n  return fetch(url, {\n    method: 'POST',\n    body: formdata\n  }).then(elm => {\n    const header = elm.headers.get('content-type');\n    let boundary = '';\n    if (header) {\n      // sample header= \"multipart/form-data;boundary=Boundary_1\"\n      const result = extractMultipartBoundary.exec(header);\n      boundary = result ? `--${result[1]}` : '';\n    }\n    const obj: ElmObject = { main: {}, libraries: {} };\n    return elm.text().then(text => {\n      const elms = text.split(boundary).reduce((oldArray, line, i) => {\n        const body = extractJSONContent.exec(line);\n        if (body) {\n          const elmName = extractMultipartFileName.exec(line);\n          if (elmName && elmName[1] === 'main') {\n            oldArray[elmName[1]] = JSON.parse(body[1]);\n          } else if (elmName) {\n            oldArray.libraries[elmName[1]] = JSON.parse(body[1]);\n          }\n        }\n        return oldArray;\n      }, obj);\n\n      return elms;\n    });\n  });\n}\n\nexport function convertBasicCQL(cql: string): Promise<object> {\n  // Connect to web service\n\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/cql',\n      Accept: 'application/elm+json'\n    },\n    body: cql\n  }).then(elm => elm.json());\n}\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { SidebarButton } from '.';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport {\n  setNodeAction,\n  createCQL,\n  setActionNodeElm,\n  setActionResourceDisplay\n} from 'utils/builder';\nimport DropDown from 'components/elements/DropDown';\nimport { ActionNode, Action } from 'pathways-model';\nimport { ElmLibrary } from 'elm-model';\nimport useStyles from './styles';\nimport { TextField } from '@material-ui/core';\nimport { convertBasicCQL } from 'engine/cql-to-elm';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport produce from 'immer';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { nodeTypeOptions } from 'utils/nodeUtils';\n\nconst codeSystemOptions = [\n  { label: 'ICD-9-CM', value: 'http://hl7.org/fhir/sid/icd-9-cm' },\n  { label: 'ICD-10-CM', value: 'http://hl7.org/fhir/sid/icd-10-cm' },\n  { label: 'LOINC', value: 'http://loinc.org' },\n  { label: 'NCI', value: 'http://ncimeta.nci.nih.gov' },\n  { label: 'RXNORM', value: 'http://www.nlm.nih.gov/research/umls/rxnorm' },\n  { label: 'SNOMED', value: 'http://snomed.info/sct' }\n];\n\ninterface ActionNodeEditorProps {\n  changeNodeType: (event: string) => void;\n}\n\nconst ActionNodeEditor: FC<ActionNodeEditorProps> = ({ changeNodeType }) => {\n  const { updatePathway } = usePathwaysContext();\n  const { pathwayRef } = useCurrentPathwayContext();\n  const { currentNode, currentNodeRef } = useCurrentNodeContext();\n  const styles = useStyles();\n\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  const addActionCQL = useCallback(\n    (action: Action, currentNodeKey: string): void => {\n      if (!pathwayRef.current) return;\n\n      const cql = createCQL(action, currentNodeKey);\n      convertBasicCQL(cql).then(elm => {\n        // Disable lint for no-null assertion since it is already checked above\n        // eslint-disable-next-line\n        updatePathway(setActionNodeElm(pathwayRef.current!, currentNodeKey, elm as ElmLibrary));\n      });\n    },\n    [pathwayRef, updatePathway]\n  );\n\n  const changeCode = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current?.key || !pathwayRef.current) return;\n\n      const code = event?.target.value || '';\n      const action = produce(\n        (currentNodeRef.current as ActionNode).action[0],\n        (draftAction: Action) => {\n          if (draftAction.resource.medicationCodeableConcept) {\n            draftAction.resource.medicationCodeableConcept.coding[0].code = code;\n          } else {\n            draftAction.resource.code.coding[0].code = code;\n          }\n        }\n      );\n      updatePathway(\n        setNodeAction(pathwayRef.current, currentNodeRef.current.key, [resetDisplay(action)])\n      );\n    },\n    [currentNodeRef, pathwayRef, updatePathway]\n  );\n\n  const changeDescription = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current?.key || !pathwayRef.current) return;\n\n      const description = event?.target.value || '';\n      const action = produce(\n        (currentNodeRef.current as ActionNode).action[0],\n        (draftAction: Action) => {\n          draftAction.description = description;\n        }\n      );\n      updatePathway(setNodeAction(pathwayRef.current, currentNodeRef.current.key, [action]));\n    },\n    [currentNodeRef, pathwayRef, updatePathway]\n  );\n\n  const changeTitle = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current?.key || !pathwayRef.current) return;\n\n      const title = event?.target.value || '';\n      const action = produce(\n        (currentNodeRef.current as ActionNode).action[0],\n        (draftAction: Action) => {\n          draftAction.resource.title = title;\n        }\n      );\n      updatePathway(\n        setNodeAction(pathwayRef.current, currentNodeRef.current.key, [resetDisplay(action)])\n      );\n\n      addActionCQL(action, currentNodeRef.current.key);\n    },\n    [currentNodeRef, pathwayRef, updatePathway, addActionCQL]\n  );\n\n  const selectCodeSystem = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current?.key || !pathwayRef.current) return;\n\n      const codeSystem = event?.target.value || '';\n      const action = produce(\n        (currentNodeRef.current as ActionNode).action[0],\n        (draftAction: Action) => {\n          if (draftAction.resource.medicationCodeableConcept) {\n            draftAction.resource.medicationCodeableConcept.coding[0].system = codeSystem;\n          } else {\n            draftAction.resource.code.coding[0].system = codeSystem;\n          }\n        }\n      );\n      updatePathway(\n        setNodeAction(pathwayRef.current, currentNodeRef.current.key, [resetDisplay(action)])\n      );\n    },\n    [currentNodeRef, pathwayRef, updatePathway]\n  );\n\n  const validateFunction = useCallback((): void => {\n    if (\n      currentNodeRef.current?.key &&\n      (currentNodeRef.current as ActionNode).action.length &&\n      pathwayRef.current\n    ) {\n      const action = setActionResourceDisplay(\n        (currentNodeRef.current as ActionNode).action[0],\n        'Example Text'\n      );\n      updatePathway(setNodeAction(pathwayRef.current, currentNodeRef.current.key, [action]));\n\n      addActionCQL(action, currentNodeRef.current.key);\n    } else {\n      console.error('No Actions -- Cannot Validate');\n    }\n  }, [currentNodeRef, pathwayRef, updatePathway, addActionCQL]);\n\n  const resetDisplay = (action: Action): Action => {\n    return produce(action, (draftAction: Action) => {\n      if (draftAction.resource.medicationCodeableConcept) {\n        draftAction.resource.medicationCodeableConcept.coding[0].display = '';\n      } else if (draftAction.resource.resourceType === 'CarePlan') {\n        draftAction.resource.description = '';\n      } else {\n        draftAction.resource.code.coding[0].display = ''; // TODO: actually validate\n      }\n    });\n  };\n\n  const onEnter = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key === 'Enter') {\n      validateFunction();\n    }\n  };\n\n  // The node has a key and is not the start node\n  const changeNodeTypeEnabled = currentNode?.key !== undefined && currentNode.key !== 'Start';\n  const action = (currentNode as ActionNode).action;\n  const resource = action?.length > 0 && action[0].resource;\n  let system = '';\n  let code = '';\n  let display = '';\n  if (resource.resourceType === 'MedicationRequest' || resource.resourceType === 'ServiceRequest') {\n    system = resource.code\n      ? resource.code.coding[0].system\n      : resource.medicationCodeableConcept.coding[0].system;\n    code = resource.code\n      ? resource.code.coding[0].code\n      : resource.medicationCodeableConcept.coding[0].code;\n    display = resource.code\n      ? resource.code.coding[0].display\n      : resource.medicationCodeableConcept.coding[0].display;\n  } else {\n    display = resource.description;\n  }\n\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <>\n          <DropDown\n            id=\"nodeType\"\n            label=\"Node Type\"\n            options={nodeTypeOptions}\n            onChange={selectNodeType}\n            value={resource.resourceType}\n          />\n\n          {(resource.resourceType === 'MedicationRequest' ||\n            resource.resourceType === 'ServiceRequest') && (\n            <>\n              <DropDown\n                id=\"codeSystem\"\n                label=\"Code System\"\n                options={codeSystemOptions}\n                onChange={selectCodeSystem}\n                value={system}\n              />\n              {system && (\n                <TextField\n                  id=\"code-input\"\n                  label=\"Code\"\n                  value={code}\n                  onChange={changeCode}\n                  variant=\"outlined\"\n                  error={code === ''}\n                  inputProps={{ onKeyPress: onEnter }}\n                />\n              )}\n              {code && (\n                <>\n                  {display ? (\n                    <div className={styles.displayText}>\n                      <FontAwesomeIcon icon={faCheckCircle} /> {display}\n                    </div>\n                  ) : (\n                    <SidebarButton\n                      buttonName=\"Validate\"\n                      buttonIcon={faCheckCircle}\n                      buttonText={display || 'Check validation of the input system and code'}\n                      onClick={validateFunction}\n                    />\n                  )}\n\n                  <TextField\n                    id=\"description-input\"\n                    label=\"Description\"\n                    value={action[0].description || ''}\n                    onChange={changeDescription}\n                    variant=\"outlined\"\n                    error={action[0].description === ''}\n                  />\n                </>\n              )}\n            </>\n          )}\n\n          {resource.resourceType === 'CarePlan' && (\n            <>\n              <TextField\n                id=\"title-input\"\n                label=\"Title\"\n                value={resource.title || ''}\n                onChange={changeTitle}\n                variant=\"outlined\"\n                error={resource.title == null}\n                inputProps={{ onKeyPress: onEnter }}\n              />\n              {resource.title && (\n                <TextField\n                  id=\"description-input\"\n                  label=\"Description\"\n                  value={action[0].description || ''}\n                  onChange={changeDescription}\n                  variant=\"outlined\"\n                  error={action[0].description === ''}\n                />\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(ActionNodeEditor);\n","import React, {\n  createContext,\n  ReactNode,\n  FC,\n  useState,\n  memo,\n  useContext,\n  useCallback,\n  useEffect\n} from 'react';\nimport shortid from 'shortid';\nimport { ElmStatement } from 'elm-model';\nimport config from 'utils/ConfigManager';\nimport useGetService from './Services';\nimport { ServiceLoaded } from 'pathways-objects';\n\ninterface Criteria {\n  id: string;\n  label: string;\n  version: string;\n  modified: number;\n  elm: object;\n}\n\ninterface CriteriaContextInterface {\n  criteria: Criteria[];\n  addCriteria: (file: File) => void;\n  deleteCriteria: (id: string) => void;\n}\n\nexport const CriteriaContext = createContext<CriteriaContextInterface>(\n  {} as CriteriaContextInterface\n);\n\ninterface CriteriaProviderProps {\n  children: ReactNode;\n}\n\nfunction jsonToCriteria(rawElm: string): Criteria | undefined {\n  const elm = JSON.parse(rawElm);\n  if (!elm.library?.identifier) {\n    alert('Please upload ELM file');\n    return;\n  }\n  const defaultStatementNames = [\n    'Patient',\n    'MeetsInclusionCriteria',\n    'InPopulation',\n    'Recommendation',\n    'Rationale',\n    'Errors'\n  ];\n  const elmStatements: ElmStatement[] = elm.library.statements.def;\n  const elmStatement = elmStatements.find(def => !defaultStatementNames.includes(def.name));\n  if (!elmStatement) {\n    alert('No elm statement found in that file');\n    return;\n  }\n  const newCriteria: Criteria = {\n    id: shortid.generate(),\n    label: elm.library.identifier.id,\n    version: elm.library.identifier.version,\n    modified: Date.now(),\n    elm: elm\n  };\n  return newCriteria;\n}\n\nexport const CriteriaProvider: FC<CriteriaProviderProps> = memo(({ children }) => {\n  const [criteria, setCriteria] = useState<Criteria[]>([]);\n  const service = useGetService<Criteria>(config.get('demoCriteria'));\n  const payload = (service as ServiceLoaded<Criteria[]>).payload;\n\n  useEffect(() => {\n    if (payload) {\n      const newCriteria: Criteria[] = [];\n      payload.forEach(jsonCriterion => {\n        const criterion = jsonToCriteria(JSON.stringify(jsonCriterion));\n        if (criterion) newCriteria.push(criterion);\n      });\n      setCriteria(newCriteria);\n    }\n  }, [payload]);\n\n  const addCriteria = useCallback((file: File) => {\n    const reader = new FileReader();\n    reader.onload = (event: ProgressEvent<FileReader>): void => {\n      if (event.target?.result) {\n        const rawElm = event.target.result as string;\n        const newCriteria = jsonToCriteria(rawElm);\n        if (newCriteria) setCriteria(currentCriteria => [...currentCriteria, newCriteria]);\n      } else alert('Unable to read that file');\n    };\n    reader.readAsText(file);\n  }, []);\n\n  const deleteCriteria = useCallback((id: string) => {\n    setCriteria(currentCriteria => currentCriteria.filter(criteria => criteria.id !== id));\n  }, []);\n\n  return (\n    <CriteriaContext.Provider\n      value={{\n        criteria,\n        addCriteria,\n        deleteCriteria\n      }}\n    >\n      {children}\n    </CriteriaContext.Provider>\n  );\n});\n\nexport const useCriteriaContext = (): CriteriaContextInterface => useContext(CriteriaContext);\n","import React, {\n  FC,\n  memo,\n  useState,\n  useCallback,\n  ChangeEvent,\n  useEffect,\n  useMemo,\n  useRef\n} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave, faTools, faTrashAlt, faThList } from '@fortawesome/free-solid-svg-icons';\nimport DropDown from 'components/elements/DropDown';\nimport { Button, Checkbox, FormControlLabel, TextField, Box } from '@material-ui/core';\nimport {\n  removeTransitionCondition,\n  setTransitionCondition,\n  setTransitionConditionDescription\n} from 'utils/builder';\nimport { OutlinedDiv, SidebarButton } from '.';\nimport { Transition } from 'pathways-model';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { useBuildCriteriaContext } from 'components/BuildCriteriaProvider';\n\ninterface BranchTransitionProps {\n  transition: Transition;\n}\n\nconst BranchTransition: FC<BranchTransitionProps> = ({ transition }) => {\n  const { updatePathway } = usePathwaysContext();\n  const { criteria } = useCriteriaContext();\n  const { buildCriteriaNodeId, updateBuildCriteriaNodeId } = useBuildCriteriaContext();\n  const { pathwayRef } = useCurrentPathwayContext();\n  const { currentNodeRef } = useCurrentNodeContext();\n  const criteriaOptions = useMemo(() => criteria.map(c => ({ value: c.id, label: c.label })), [\n    criteria\n  ]);\n  const styles = useStyles();\n  const [useCriteriaSelected, setUseCriteriaSelected] = useState<boolean>(false);\n  const criteriaDescription = transition.condition?.description;\n  const criteriaIsValid = criteriaDescription != null;\n  const criteriaDisplayIsValid = criteriaDescription && criteriaDescription !== '';\n  const hasCriteria = transition.condition?.cql || transition.condition?.description;\n  const buttonText = hasCriteria ? 'DELETE' : 'CANCEL';\n  const icon = hasCriteria ? <FontAwesomeIcon icon={faTrashAlt} /> : null;\n  const displayCriteria =\n    useCriteriaSelected || transition.condition?.cql || transition.condition?.description;\n  const [buildCriteriaSelected, setBuildCriteriaSelected] = useState<boolean>(false);\n  const [criteriaName, setCriteriaName] = useState<string>('');\n  const transitionRef = useRef(transition);\n\n  const handleUseCriteria = useCallback((): void => {\n    if (hasCriteria && transition.id && currentNodeRef.current?.key && pathwayRef.current) {\n      // delete the transition criteria\n      updatePathway(\n        removeTransitionCondition(pathwayRef.current, currentNodeRef.current.key, transition.id)\n      );\n      setUseCriteriaSelected(false);\n    } else {\n      setUseCriteriaSelected(!useCriteriaSelected);\n    }\n  }, [useCriteriaSelected, currentNodeRef, pathwayRef, hasCriteria, transition.id, updatePathway]);\n\n  const selectCriteriaSource = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current?.key || !transitionRef.current.id || !pathwayRef.current) return;\n\n      const criteriaSource = event?.target.value || '';\n      let elm = undefined;\n      criteria.forEach(c => {\n        if (c.id === criteriaSource) {\n          elm = c.elm;\n        }\n      });\n      if (!elm) return;\n      const newPathway = setTransitionCondition(\n        pathwayRef.current,\n        currentNodeRef.current.key,\n        transitionRef.current.id,\n        transitionRef.current.condition?.description || '',\n        elm,\n        criteriaSource\n      );\n\n      updatePathway(newPathway);\n    },\n    [currentNodeRef, updatePathway, pathwayRef, transitionRef, criteria]\n  );\n\n  const setCriteriaDisplay = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current?.key || !transition.id || !pathwayRef.current) return;\n\n      const criteriaDisplay = event?.target.value || '';\n      updatePathway(\n        setTransitionConditionDescription(\n          pathwayRef.current,\n          currentNodeRef.current.key,\n          transition.id,\n          criteriaDisplay\n        )\n      );\n    },\n    [currentNodeRef, transition.id, updatePathway, pathwayRef]\n  );\n\n  const handleCriteriaName = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setCriteriaName(event?.target.value || '');\n    },\n    [setCriteriaName]\n  );\n\n  const handleBuildCriteria = useCallback((): void => {\n    updateBuildCriteriaNodeId(transition.id ?? '');\n    setBuildCriteriaSelected(!buildCriteriaSelected);\n  }, [buildCriteriaSelected, updateBuildCriteriaNodeId, transition]);\n\n  const handleBuildCriteriaCancel = useCallback((): void => {\n    if (buildCriteriaNodeId === transition.id) updateBuildCriteriaNodeId('');\n    setBuildCriteriaSelected(false);\n    setCriteriaName('');\n  }, [updateBuildCriteriaNodeId, setCriteriaName, buildCriteriaNodeId, transition]);\n\n  // Cancel current build criteria if clicked on another BranchTransition\n  useEffect(() => {\n    if (buildCriteriaNodeId !== '' && buildCriteriaNodeId !== transition.id) {\n      handleBuildCriteriaCancel();\n    }\n  }, [buildCriteriaNodeId, handleBuildCriteriaCancel, transition]);\n\n  return (\n    <>\n      {!displayCriteria && !buildCriteriaSelected && (\n        <SidebarButton\n          buttonName=\"Select Criteria\"\n          buttonIcon={faThList}\n          buttonText=\"Add previously built or imported criteria logic to branch node.\"\n          onClick={handleUseCriteria}\n        />\n      )}\n\n      {displayCriteria && (\n        <OutlinedDiv label=\"Criteria Selector\" error={!criteriaIsValid || !criteriaDisplayIsValid}>\n          <>\n            <DropDown\n              id=\"Criteria\"\n              label=\"Criteria\"\n              options={criteriaOptions}\n              onChange={selectCriteriaSource}\n              value={transition.condition?.cql || undefined}\n            />\n\n            <TextField\n              label=\"Criteria Display\"\n              value={transition.condition?.description || ''}\n              variant=\"outlined\"\n              onChange={setCriteriaDisplay}\n              error={!criteriaDisplayIsValid}\n            />\n          </>\n\n          <Button\n            className={styles.cancelButton}\n            color=\"inherit\"\n            size=\"small\"\n            variant=\"outlined\"\n            startIcon={icon}\n            onClick={handleUseCriteria}\n          >\n            {buttonText}\n          </Button>\n        </OutlinedDiv>\n      )}\n\n      {!displayCriteria && !buildCriteriaSelected && (\n        <SidebarButton\n          buttonName=\"Build Criteria\"\n          buttonIcon={faTools}\n          buttonText=\"Create new criteria logic to add to branch node.\"\n          extraMargin\n          onClick={handleBuildCriteria}\n        />\n      )}\n\n      {buildCriteriaSelected && (\n        <OutlinedDiv label=\"Criteria Builder\" error={true}>\n          <TextField\n            error={criteriaName === ''}\n            label=\"Criteria Name\"\n            variant=\"outlined\"\n            onChange={handleCriteriaName}\n            fullWidth\n          />\n          <div className={styles.buildCriteriaContainer}>\n            <FormControlLabel\n              label={<Box fontStyle=\"italic\">Add to reusable criteria</Box>}\n              control={<Checkbox color=\"default\" />}\n            />\n            <Button\n              color=\"inherit\"\n              size=\"large\"\n              variant=\"outlined\"\n              onClick={handleBuildCriteriaCancel}\n            >\n              Cancel\n            </Button>\n            <Button\n              className={styles.saveButton}\n              color=\"inherit\"\n              size=\"large\"\n              variant=\"outlined\"\n              startIcon={<FontAwesomeIcon icon={faSave} />}\n              disabled\n            >\n              Save\n            </Button>\n          </div>\n        </OutlinedDiv>\n      )}\n    </>\n  );\n};\n\nexport default memo(BranchTransition);\n","import React, { FC, ReactNode } from 'react';\nimport clsx from 'clsx';\n\nimport TextField from '@material-ui/core/TextField';\nimport useStyles from './styles';\n\ninterface InputComponentProps {\n  children?: ReactNode;\n}\n\nconst InputComponent: FC<InputComponentProps> = ({ children }) => {\n  return <>{children}</>;\n};\n\ninterface OutlinedDivProps {\n  children: ReactNode;\n  label: string;\n  error: boolean;\n}\n\nconst OutlinedDiv: FC<OutlinedDivProps> = ({ children, label, error }) => {\n  const styles = useStyles();\n\n  return (\n    <TextField\n      variant=\"outlined\"\n      label={label}\n      multiline\n      InputLabelProps={{ shrink: true }}\n      InputProps={{\n        inputComponent: InputComponent,\n        classes: {\n          root: clsx(styles.outlinedDiv, error && styles.outlinedDivError),\n          notchedOutline: clsx(error && styles.outlinedDivError)\n        }\n      }}\n      inputProps={{ children }}\n      fullWidth\n    />\n  );\n};\n\n// This is not memoized since one of its props is children\nexport default OutlinedDiv;\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton\n} from '@material-ui/core';\n\nimport useStyles from './styles';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\n\ninterface DeleteModalProps {\n  open: boolean;\n  nodeLabel: string;\n  isTransition: boolean;\n  onClose: () => void;\n  onDelete: () => void;\n}\n\nconst DeleteModal: FC<DeleteModalProps> = ({\n  open,\n  nodeLabel,\n  isTransition,\n  onClose,\n  onDelete\n}) => {\n  const styles = useStyles();\n  const { currentNode } = useCurrentNodeContext();\n\n  const text = isTransition ? (\n    <span>\n      Delete the transition from <strong>{currentNode?.label}</strong> to{' '}\n      <strong>{nodeLabel}</strong>? This will not delete either node, just the transition between\n      them.\n    </span>\n  ) : (\n    <span>\n      Delete the node <strong>{nodeLabel}</strong>? This will also remove any transitions to this\n      node.\n    </span>\n  );\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"create-pathway\"\n        fullWidth\n        maxWidth=\"md\"\n      >\n        <DialogTitle disableTypography>\n          <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n            <FontAwesomeIcon icon={faTimes} />\n          </IconButton>\n        </DialogTitle>\n\n        <DialogContent className={styles.dialogContent}>\n          <FontAwesomeIcon icon={faExclamationCircle} className={styles.alertIcon} />\n          <p className={styles.dialogContentText}>{text}</p>\n        </DialogContent>\n\n        <DialogActions>\n          <Button variant=\"text\" color=\"primary\" onClick={onClose}>\n            Cancel\n          </Button>\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDelete}>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default memo(DeleteModal);\n","import React, { FC, ReactNode, memo } from 'react';\nimport SidebarHeader from './SidebarHeader';\nimport useStyles from './styles';\nimport { Card } from '@material-ui/core';\nimport { Transition } from 'pathways-model';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\n\ninterface TransitionEditorProps {\n  transition: Transition;\n  children?: ReactNode;\n}\n\nconst TransitionEditor: FC<TransitionEditorProps> = ({ transition, children }) => {\n  const styles = useStyles();\n  const { pathway } = useCurrentPathwayContext();\n  const transitionKey = transition?.transition || '';\n  const transitionNode = pathway?.nodes[transitionKey];\n\n  return (\n    <Card raised className={styles.transitionContainer}>\n      {transitionNode && <SidebarHeader node={transitionNode} isTransition />}\n\n      {children}\n    </Card>\n  );\n};\n\nexport default memo(TransitionEditor);\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport { Pathway, PathwayNode } from 'pathways-model';\nimport { Node, Nodes, Layout, NodeCoordinates, Edges, NodeDimensions } from 'graph-model';\n\nimport dagre from 'dagre';\n\nimport config from 'utils/ConfigManager';\nconst graphLayoutProvider = config.get('graphLayoutProvider', 'dagre');\n\n/**\n * Obtain the graph layout for the pathway as coordinates for every node\n *\n * @param pathway - JSON pathway\n */\nexport default function layout(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  return graphLayoutProvider === 'dagre'\n    ? layoutDagre(pathway, nodeDimensions)\n    : layoutCustom(pathway);\n}\n\n/**\n * Layout the pathway using the Dagre layout engine.\n * @see {@link https://github.com/dagrejs/dagre}\n */\nfunction layoutDagre(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  const START = 'Start';\n  const NODE_HEIGHT = 50;\n  const NODE_WIDTH_FACTOR = 10; // factor to convert label length => width, assume font size roughly 10\n  const nodeKeys = Object.keys(pathway.nodes);\n  const g = new dagre.graphlib.Graph();\n\n  g.setGraph({});\n  g.setDefaultEdgeLabel(() => ({})); // dagre requires a default edge label, we want it to just be empty\n\n  nodeKeys.forEach(nodeKey => {\n    const node: PathwayNode = pathway.nodes[nodeKey];\n    const nodeDimension = nodeDimensions[nodeKey];\n\n    if (nodeDimension) {\n      g.setNode(nodeKey, {\n        label: node.label,\n        width: nodeDimension.width,\n        height: nodeDimension.height\n      });\n    } else {\n      g.setNode(nodeKey, {\n        label: node.label,\n        width: node.label.length * NODE_WIDTH_FACTOR,\n        height: NODE_HEIGHT\n      });\n    }\n\n    node.transitions.forEach(transition => {\n      const label = transition.condition\n        ? {\n            label: transition.condition.description,\n            width: 25,\n            height: 20\n          }\n        : {};\n\n      g.setEdge(nodeKey, transition.transition, label);\n    });\n  });\n\n  dagre.layout(g);\n  const nodeCoordinates: NodeCoordinates = {};\n  const startNodeShift = g.node(START).x;\n\n  for (const nodeKey of nodeKeys) {\n    const node = g.node(nodeKey);\n    // dagre returns coordinates for the center of the node,\n    // our renderer expects coordinates for the corner of the node.\n    // further, our renderer expects the Start node to be centered at x: 0\n    nodeCoordinates[nodeKey] = {\n      x: node.x - startNodeShift - node.width / 2,\n      y: node.y - node.height / 2,\n      width: node.width\n    };\n  }\n\n  const edges: Edges = {};\n\n  g.edges().forEach(e => {\n    const edge = g.edge(e);\n    const edgeName = `${e.v}, ${e.w}`;\n    const label = edge.label ? { text: edge.label, x: edge.x - startNodeShift, y: edge.y } : null;\n\n    edges[edgeName] = {\n      label,\n      start: e.v,\n      end: e.w,\n      points: edge.points.map(p => {\n        return {\n          x: p.x - startNodeShift,\n          y: p.y\n        };\n      })\n    };\n  });\n\n  return { nodeCoordinates, edges };\n}\n\n/**\n * Layout the pathway using our homegrown layout algorithm.\n */\nfunction layoutCustom(pathway: Pathway): Layout {\n  const START = 'Start';\n  const NODE_WIDTH = 100;\n  const NODE_HEIGHT = 50;\n  const MIN_MARGIN_X = 10;\n  const MIN_MARGIN_Y = 50;\n  const nodes: Nodes = initializeNodes(pathway);\n  const graph: string[][] = [[START]];\n  const HORIZONTAL_OFFSET = NODE_WIDTH + MIN_MARGIN_X;\n  const VERTICAL_OFFSET = NODE_HEIGHT + MIN_MARGIN_Y;\n\n  // Set the rank for every node\n  let rank = 0;\n  do {\n    // Iterate over each node on the current level\n    for (const nodeKey of graph[rank]) {\n      // Assign all children to the next rank\n      assignRankToChildren(nodes[nodeKey], rank + 1);\n    }\n\n    rank++;\n\n    // To start rank = 0 and graph.length = 1. In each iteration children will be added\n    // to the next rank incrementing the length of graph. When there are no new children\n    // the graph.length will remain unchanged but the rank would have increased by one.\n    // Therefore we stop when the rank and graph length are the same.\n  } while (graph.length !== rank);\n\n  // Set the position of nodes within the rank\n  assignHorizontalPositionToNode(nodes[START], -1 * (NODE_WIDTH / 2));\n  for (rank = 1; rank < graph.length; rank++) {\n    assignHorizontalPositionToNodesInRank(rank);\n  }\n\n  return {\n    nodeCoordinates: produceCoordinates(),\n    edges: {}\n  };\n\n  /**\n   * Convert the Nodes into a Coordinates object\n   *\n   * @returns Coordinates for every node\n   */\n  function produceCoordinates(): NodeCoordinates {\n    const coordinates: NodeCoordinates = {};\n\n    for (const nodeKey in nodes) {\n      const node = nodes[nodeKey];\n      coordinates[nodeKey] = {\n        x: node.horizontalPosition,\n        y: node.rank * VERTICAL_OFFSET\n      };\n    }\n\n    return coordinates;\n  }\n\n  /**\n   * Set the horizontal position for child elements of a parent\n   *\n   * @param parent - the parent Node\n   * @param nodes - the Nodes\n   */\n  function spreadChildrenEvenly(parent: Node): void {\n    const children = parent.children.filter(\n      c => isNaN(nodes[c].horizontalPosition) || nodes[c].canMove\n    );\n    if (children.length === 0) return;\n    if (children.length === 1) {\n      assignHorizontalPositionToNode(nodes[children[0]], parent.horizontalPosition);\n      return;\n    }\n    if (children.length % 2 === 1) children.splice(Math.ceil(children.length / 2), 1); // Remove middle element if odd\n\n    // TODO: this does not consider if there are connections between the children which order to put them in\n    for (let i = 0; i < children.length / 2; i++) {\n      // Set the left child i from the center\n      let childNode = nodes[children[children.length / 2 - i - 1]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition - (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n\n      // Set the right child i from the center\n      childNode = nodes[children[children.length / 2 + i]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition + (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n    }\n  }\n\n  /**\n   * Assigns the node given by nodeKey the horizontal position hPos if it is not already set\n   * @param node - the node to set the horizontal position of\n   * @param hPos - the horizontal position for the node\n   */\n  function assignHorizontalPositionToNode(node: Node, hPos: number): void {\n    if (isNaN(node.horizontalPosition) || node.canMove) {\n      node.horizontalPosition = hPos;\n\n      // Check the new position is not on top of another node\n      let i = 1;\n      while (hasOverlap(node)) {\n        // Update Horizontal position of this node\n        // Alternate directions moving further and further away\n        const direction = i % 2 === 0 ? -1 : 1;\n        node.horizontalPosition = hPos + direction * Math.ceil(i / 2) * HORIZONTAL_OFFSET;\n        i += 1;\n      }\n    }\n  }\n\n  /**\n   * Assigns the horizontal position of all nodes on the current level\n   *\n   * @param rank - the level of the graph to assign node positions of\n   */\n  function assignHorizontalPositionToNodesInRank(rank: number): void {\n    for (const nodeKey of graph[rank]) {\n      const node = nodes[nodeKey];\n      if (!isNaN(node.horizontalPosition)) continue;\n      const parentsOnHigherRank = node.parents.filter(p => nodes[p].rank < node.rank);\n      if (parentsOnHigherRank.length === 1) {\n        const parentKey = node.parents[0];\n        const parent = nodes[parentKey];\n\n        if (parent.children.length % 2 === 1) {\n          // Odd number of children: one directly below, others to the side\n          const childNode = nodes[parent.children[Math.floor(parent.children.length / 2)]];\n          assignHorizontalPositionToNode(childNode, parent.horizontalPosition);\n        }\n        spreadChildrenEvenly(parent);\n      } else {\n        // Multiple Parents: Place the node at the average of parents on higher rank\n        // TODO: collect all parents to be next to each other\n        const sum = parentsOnHigherRank\n          .map(p => nodes[p].horizontalPosition)\n          .reduce((a, b) => a + b, 0);\n\n        assignHorizontalPositionToNode(node, sum / parentsOnHigherRank.length);\n      }\n    }\n  }\n\n  /**\n   * Determines if the node overlaps with any other nodes in the rank\n   *\n   * @param node - the node to check for overlap with\n   * @returns true if the node overlaps with any other node in the rank, false otherwise\n   */\n  function hasOverlap(node: Node): boolean {\n    const nodesInRank = graph[node.rank].map(name => nodes[name]);\n\n    for (const otherNode of nodesInRank) {\n      if (nodesOverlap(node, otherNode)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Helper function to determine if two nodes are in the same slot\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the nodes share same rank and position, false otherwise\n   */\n  function nodesOverlap(node: Node, otherNode: Node): boolean {\n    if (nodesEqual(node, otherNode)) return false;\n    else\n      return (\n        !isNaN(node.rank) &&\n        !isNaN(node.horizontalPosition) &&\n        !isNaN(otherNode.rank) &&\n        !isNaN(otherNode.horizontalPosition) &&\n        node.rank === otherNode.rank &&\n        node.horizontalPosition === otherNode.horizontalPosition\n      );\n  }\n\n  /**\n   * Determine if two nodes are the same\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the two nodes are the same (have the same label)\n   */\n  function nodesEqual(node: Node, otherNode: Node): boolean {\n    return node.label === otherNode.label;\n  }\n\n  /**\n   * Assigns the rank to every child of node. If the child has a lower rank the entire\n   * subtree rooted at that child will be shifted down by recursively assigning rank to\n   * the children.\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param node - the node to get children from\n   * @param rank - the rank to assign to the children\n   */\n  function assignRankToChildren(node: Node, rank: number): void {\n    node.children.forEach(child => {\n      const childNode = nodes[child];\n\n      // If the child is on a higher rank than the parent (node) move subtree rooted at child down\n      if (childNode.rank < node.rank) {\n        // Remove node from previous rank\n        graph[childNode.rank].splice(graph[childNode.rank].indexOf(child), 1);\n\n        // Move this node down\n        assignRankToNode(child, rank);\n\n        // Move all children of this child down\n        assignRankToChildren(childNode, rank + 1);\n      } else if (isNaN(childNode.rank)) assignRankToNode(child, rank);\n    });\n  }\n\n  /**\n   * Assigns the node labeled by nodeKey the rank by updating graph and nodes data structures\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param nodeKey - the name of the node to set the rank of\n   * @param rank - the new rank for the node\n   */\n  function assignRankToNode(nodeKey: string, rank: number): void {\n    try {\n      graph[rank].push(nodeKey);\n    } catch (err) {\n      graph[rank] = [nodeKey];\n    } finally {\n      nodes[nodeKey].rank = rank;\n    }\n  }\n\n  /**\n   * Initialize the Nodes data structure for the graph representation\n   *\n   * @param pathway - JSON Pathway\n   * @returns initial Nodes data structure with default values\n   */\n  function initializeNodes(pathway: Pathway): Nodes {\n    const nodes: Nodes = {};\n\n    // Iniitalize each node with default values\n    let nodeKey: string;\n    for (nodeKey in pathway.nodes) {\n      nodes[nodeKey] = {\n        label: nodeKey,\n        rank: NaN,\n        horizontalPosition: NaN,\n        children: [],\n        parents: [],\n        canMove: true\n      };\n    }\n\n    // Set the child and parent properties of each node\n    Object.keys(pathway.nodes).forEach(nodeKey => {\n      const node: PathwayNode = pathway.nodes[nodeKey];\n\n      node.transitions.forEach(transition => {\n        if (!nodes[nodeKey].children.includes(transition.transition))\n          nodes[nodeKey].children.push(transition.transition);\n        if (!nodes[transition.transition].parents.includes(nodeKey))\n          nodes[transition.transition].parents.push(nodeKey);\n      });\n    });\n\n    nodes[START].rank = 0;\n\n    return nodes;\n  }\n}\n","import React, { FC, ReactNode, ReactElement, memo } from 'react';\nimport { ActionNode } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from './ExpandedNode.module.scss';\nimport { isBranchNode, resourceNameConversion, isActionNode } from 'utils/nodeUtils';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\n\ninterface ExpandedNodeProps {\n  actionNode: ActionNode;\n}\n\nconst ExpandedNode: FC<ExpandedNodeProps> = memo(({ actionNode }) => {\n  return (\n    <>\n      <ExpandedNodeMemo actionNode={actionNode} />\n    </>\n  );\n});\n\ntype ExpandedNodeFieldProps = {\n  title: string;\n  description: ReactNode;\n};\n\nconst ExpandedNodeField: FC<ExpandedNodeFieldProps> = ({ title, description }) => {\n  if (!description) return null;\n\n  return (\n    <tr>\n      <td className={styles.descTitle}>{title}</td>\n      <td className={styles.desc}>{description}</td>\n    </tr>\n  );\n};\n\nfunction isMedicationRequest(\n  request: MedicationRequest | ServiceRequest\n): request is MedicationRequest {\n  return (request as MedicationRequest).medicationCodeableConcept !== undefined;\n}\n\nfunction renderAction(actionNode: ActionNode): ReactElement[] {\n  let returnElements: ReactElement[] = [];\n  if (actionNode.action[0]) {\n    const resource = actionNode.action[0].resource;\n    const coding = isMedicationRequest(resource)\n      ? resource?.medicationCodeableConcept?.coding\n      : resource?.code?.coding;\n\n    const resourceType = resourceNameConversion[resource.resourceType]\n      ? resourceNameConversion[resource.resourceType]\n      : resource.resourceType;\n    returnElements = [\n      <ExpandedNodeField\n        key=\"Description\"\n        title=\"Description\"\n        description={actionNode.action[0].description}\n      />,\n      <ExpandedNodeField key=\"Type\" title=\"Type\" description={resourceType} />,\n      <ExpandedNodeField\n        key=\"System\"\n        title=\"System\"\n        description={\n          coding &&\n          coding[0].system && (\n            <>\n              {coding[0].system}\n              <a href={coding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n              </a>\n            </>\n          )\n        }\n      />,\n      <ExpandedNodeField key=\"Code\" title=\"Code\" description={coding && coding[0].code} />,\n      <ExpandedNodeField key=\"Display\" title=\"Display\" description={coding && coding[0].display} />,\n      <ExpandedNodeField key=\"Title\" title=\"Title\" description={resource.title} />\n    ];\n  }\n\n  return returnElements;\n}\n\nfunction renderBranch(): ReactElement {\n  return <ExpandedNodeField key=\"Type\" title=\"Type\" description=\"Observation\" />;\n}\n\ninterface ExpandedNodeMemoProps {\n  actionNode: ActionNode;\n}\n\nconst ExpandedNodeMemo: FC<ExpandedNodeMemoProps> = memo(({ actionNode }) => {\n  const action = isActionNode(actionNode) && renderAction(actionNode);\n  const branch = isBranchNode(actionNode) && renderBranch();\n  return (\n    <div className=\"expandedNode\">\n      <table className={styles.infoTable}>\n        <tbody>{action || branch}</tbody>\n      </table>\n    </div>\n  );\n});\n\nexport default ExpandedNode;\n","import React, { FC, Ref, forwardRef, memo, useCallback, useState, useEffect } from 'react';\nimport { ActionNode, PathwayNode } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './Node.module.scss';\nimport ExpandedNode from 'components/ExpandedNode';\nimport { isActionNode, isBranchNode } from 'utils/nodeUtils';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faMicroscope,\n  faPlay,\n  faPrescriptionBottleAlt,\n  faSyringe,\n  faCheckCircle,\n  faTimesCircle,\n  faBookMedical\n} from '@fortawesome/free-solid-svg-icons';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\n\ninterface NodeProps {\n  nodeKey: string;\n  pathwayNode: PathwayNode;\n  xCoordinate: number;\n  yCoordinate: number;\n  expanded?: boolean;\n  onClick?: (nodeKey: string) => void;\n  nodeType: string;\n}\n\nconst Node: FC<NodeProps & { ref: Ref<HTMLDivElement> }> = memo(\n  forwardRef<HTMLDivElement, NodeProps>(\n    (\n      { nodeKey, pathwayNode, xCoordinate, yCoordinate, expanded = false, onClick, nodeType },\n      ref\n    ) => {\n      const { currentNode } = useCurrentNodeContext();\n      const [hasMetadata, setHasMetadata] = useState<boolean>(\n        isActionNode(pathwayNode) ? pathwayNode.action.length > 0 : false\n      );\n\n      const onClickHandler = useCallback(() => {\n        if (onClick) onClick(nodeKey);\n      }, [onClick, nodeKey]);\n\n      useEffect(() => {\n        if (!hasMetadata && isActionNode(pathwayNode) && pathwayNode.action.length > 0) {\n          setHasMetadata(true);\n          if (!expanded) {\n            onClickHandler();\n          }\n        }\n      }, [hasMetadata, pathwayNode, setHasMetadata, onClickHandler, expanded]);\n\n      const { label } = pathwayNode;\n      const style = {\n        top: yCoordinate,\n        left: xCoordinate\n      };\n\n      const isCurrentNode = pathwayNode.key === currentNode?.key;\n      const isTransitionOfCurrentBranch =\n        currentNode &&\n        isBranchNode(currentNode) &&\n        currentNode.transitions.some(e => e?.transition === nodeKey);\n\n      const isActionable = isCurrentNode;\n      const topLevelClasses = [styles.node];\n      let expandedNodeClass = '';\n      if (expanded) topLevelClasses.push('expanded');\n      if (isActionable || isTransitionOfCurrentBranch) {\n        topLevelClasses.push(styles.actionable);\n        expandedNodeClass = styles.childActionable;\n      } else {\n        expandedNodeClass = styles.childNotActionable;\n      }\n\n      return (\n        <div className={topLevelClasses.join(' ')} style={style} ref={ref}>\n          <div className={`nodeTitle ${onClickHandler && 'clickable'}`} onClick={onClickHandler}>\n            <div className=\"iconAndLabel\">\n              <NodeIcon pathwayNode={pathwayNode} nodeType={nodeType} />\n              {label}\n            </div>\n            <StatusIcon status={null} />\n          </div>\n          {expanded && (\n            <div className={`${styles.expandedNode} ${expandedNodeClass}`}>\n              <ExpandedNode actionNode={pathwayNode as ActionNode} />\n            </div>\n          )}\n        </div>\n      );\n    }\n  )\n);\n\ninterface NodeIconProps {\n  pathwayNode: PathwayNode;\n  nodeType: string;\n}\n\nconst NodeIcon: FC<NodeIconProps> = ({ pathwayNode, nodeType }) => {\n  let icon: IconDefinition | undefined;\n  if (pathwayNode.label === 'Start') {\n    icon = faPlay;\n  } else if (nodeType === 'action') {\n    const actionNode = pathwayNode as ActionNode;\n    if (actionNode.action.length > 0) {\n      const resourceType = actionNode.action[0].resource.resourceType;\n      if (resourceType === 'MedicationRequest') icon = faPrescriptionBottleAlt;\n      else if (resourceType === 'ServiceRequest') icon = faSyringe;\n      else if (resourceType === 'CarePlan') icon = faBookMedical;\n    }\n  } else if (nodeType === 'branch') {\n    icon = faMicroscope;\n  }\n\n  return icon ? <FontAwesomeIcon icon={icon} className={styles.icon} /> : null;\n};\n\ninterface StatusIconProps {\n  status: boolean | null;\n}\n\nconst StatusIcon: FC<StatusIconProps> = ({ status }) => {\n  if (status == null) {\n    return null;\n  }\n  const icon = status ? faCheckCircle : faTimesCircle;\n  return (\n    <div className=\"statusIcon\">\n      <FontAwesomeIcon icon={icon} className={styles.icon} />\n    </div>\n  );\n};\n\nexport default Node;\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    arrow: {\n      '& path': {\n        stroke: theme.palette.primary.main,\n        strokeWidth: 2\n      },\n      '& text': {\n        fontSize: '18px'\n      }\n    },\n    currentBranchArrow: {\n      '& path': {\n        stroke: theme.palette.secondary.main\n      }\n    },\n    arrowhead: {\n      '& polygon': {\n        fill: theme.palette.primary.main\n      }\n    },\n    currentBranchArrowhead: {\n      '& polygon': {\n        fill: theme.palette.secondary.main\n      }\n    }\n  }),\n  { name: 'Arrow', index: 1 }\n);\n","import React, { FC } from 'react';\nimport { Edge, Coordinate } from 'graph-model';\nimport { PathwayNode } from 'pathways-model';\nimport { isBranchNode } from 'utils/nodeUtils';\nimport useStyles from './styles';\nimport clsx from 'clsx';\nimport { Tooltip } from '@material-ui/core';\n\ninterface ArrowProps {\n  edge: Edge;\n  edgeName: string;\n  widthOffset: number;\n  currentNode: PathwayNode;\n}\n\ninterface ArrowPathProps {\n  points: Coordinate[];\n  arrowheadId: string;\n  widthOffset: number;\n}\n\nconst Arrow: FC<ArrowProps> = ({ edge, edgeName, widthOffset, currentNode }) => {\n  const styles = useStyles();\n  const isCurrentBranchArrow = isBranchNode(currentNode) && edge.start === currentNode.key;\n  const edgeNameNoWhitespace = edgeName.replace(' ', '');\n  const arrowheadId = `arrowhead-${edgeNameNoWhitespace}`;\n\n  const { label } = edge;\n  return (\n    <svg className={clsx(styles.arrow, isCurrentBranchArrow && styles.currentBranchArrow)}>\n      <ArrowPath points={edge.points} arrowheadId={arrowheadId} widthOffset={widthOffset} />\n      {label ? (\n        label.text.length > 12 ? (\n          <Tooltip title={label.text} aria-label=\"tooltip\">\n            <text x={label.x + widthOffset} y={label.y}>\n              {label.text.substring(0, 11) + '...'}\n            </text>\n          </Tooltip>\n        ) : (\n          <text x={label.x + widthOffset} y={label.y}>\n            {label.text}\n          </text>\n        )\n      ) : null}\n      <defs>\n        <marker\n          id={arrowheadId}\n          className={clsx(isCurrentBranchArrow ? styles.currentBranchArrowhead : styles.arrowhead)}\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n    </svg>\n  );\n};\n\n// Returns path for arrow from edge points\nconst ArrowPath: FC<ArrowPathProps> = ({ points, arrowheadId, widthOffset }) => {\n  const pointsWithOffset = points.map(p => ({ x: p.x + widthOffset, y: p.y }));\n  const length = pointsWithOffset.length;\n  pointsWithOffset[length - 1].y -= 17.5;\n  let pathString = `M ${pointsWithOffset[0].x} ${pointsWithOffset[0].y} `;\n\n  /**\n   * The points to use in the Cubic command is determined by the length of points array\n   * If i % 3 is 0, use all points including the 1st point\n   * If i % 3 is 1, use all points except the 1st point\n   * If i % 3 is 2, use all points including the 1st point and reuse every 3rd point\n   * We need points to be a multiple of 3 because the Cubic command expects 3 points\n   */\n  const writeCommandString = (remainder: number): string => {\n    return pointsWithOffset.reduce((acc, point, i, arr) => {\n      return i % 3 !== remainder\n        ? acc\n        : `${acc} C ${point.x} ${point.y} ${arr[i + 1].x} ${arr[i + 1].y} ${arr[i + 2].x}\n        ${arr[i + 2].y}`;\n    }, pathString);\n  };\n\n  pathString = writeCommandString(length % 3);\n\n  return <path d={pathString} fill=\"transparent\" markerEnd={`url(#${arrowheadId})`} />;\n};\n\nexport default Arrow;\n","import React, { FC, useCallback, useEffect, useMemo, useRef, useState, memo } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport graphLayout from 'visualization/layout';\nimport Node from 'components/Node';\nimport Arrow from 'components/Arrow';\nimport { useBuildCriteriaContext } from 'components/BuildCriteriaProvider';\nimport { Pathway, PathwayNode } from 'pathways-model';\nimport { Layout, NodeDimensions, NodeCoordinates, Edges } from 'graph-model';\nimport styles from './Graph.module.scss';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { getNodeType } from 'utils/builder';\nimport { redirect } from 'utils/nodeUtils';\n\ninterface GraphProps {\n  graphContainerWidth: number;\n  interactive?: boolean;\n}\n\ninterface ExpandedNode {\n  [key: string]: boolean | string | null;\n}\n\nconst Graph: FC<GraphProps> = memo(function Graph({ graphContainerWidth, interactive = true }) {\n  const { pathway } = useCurrentPathwayContext();\n  const { currentNode } = useCurrentNodeContext();\n  const nodeRefs = useRef<{ [key: string]: HTMLDivElement }>({});\n\n  // Get the layout of the graph\n  const getGraphLayout = useCallback((): Layout => {\n    const nodeDimensions: NodeDimensions = {};\n\n    // Retrieve dimensions from nodeRefs\n    if (nodeRefs?.current) {\n      Object.keys(nodeRefs.current).forEach(key => {\n        const nodeElement = nodeRefs.current[key];\n        const width = nodeElement.clientWidth;\n        // nodeElement can have multiple children so calculate the sum to get the node height\n        const height = Array.from(nodeElement.children).reduce(\n          (acc, child) => acc + child.clientHeight,\n          0\n        );\n\n        nodeDimensions[key] = { width, height };\n      });\n    }\n\n    if (pathway) return graphLayout(pathway, nodeDimensions);\n    else return {} as Layout;\n  }, [pathway]);\n\n  const [layout, setLayout] = useState(getGraphLayout());\n  const { nodeCoordinates, edges } = layout;\n  const maxHeight = useMemo(() => {\n    return nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          .map(x => x.y)\n          .reduce((a, b) => Math.max(a, b))\n      : 0;\n  }, [nodeCoordinates]);\n\n  // If a node has a negative x value, shift nodes and edges to the right by that value\n  const minX =\n    nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          .map(x => x.x + graphContainerWidth / 2)\n          .reduce((a, b) => Math.min(a, b))\n      : 0;\n\n  if (minX < 0) {\n    const toAdd = minX * -1;\n    Object.keys(nodeCoordinates).forEach(key => {\n      const node = nodeCoordinates[key];\n      node.x += toAdd;\n    });\n\n    Object.keys(edges).forEach(key => {\n      const edge = edges[key];\n\n      edge.points.forEach(p => (p.x += toAdd));\n      if (edge.label) edge.label.x += toAdd;\n    });\n  }\n\n  // Find node that is farthest to the right\n  const maxWidth = useMemo(() => {\n    return nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          // Add width of the node to account for x coordinate starting at top left corner\n          .map(x => x.x + graphContainerWidth / 2 + (x.width ?? 0))\n          .reduce((a, b) => Math.max(a, b))\n      : 0;\n  }, [nodeCoordinates, graphContainerWidth]);\n\n  const [expanded, setExpanded] = useState<ExpandedNode>(() =>\n    Object.keys(layout).reduce(\n      (acc, curr: string) => {\n        acc[curr] = false;\n        return acc;\n      },\n      { lastSelectedNode: null } as ExpandedNode\n    )\n  );\n\n  const toggleExpanded = useCallback((key: string) => {\n    if (key === 'Start') {\n      setExpanded(prevState => ({\n        ...prevState,\n        lastSelectedNode: key\n      }));\n    } else {\n      setExpanded(prevState => ({\n        ...prevState,\n        [key]:\n          !prevState[key] || prevState.lastSelectedNode === key ? !prevState[key] : prevState[key],\n        lastSelectedNode: key\n      }));\n    }\n  }, []);\n\n  // Recalculate graph layout if a node is expanded\n  useEffect(() => {\n    setLayout(getGraphLayout());\n  }, [pathway, expanded, getGraphLayout]);\n\n  if (!pathway) return <div>Error: No pathway loaded</div>;\n  else if (!currentNode) return <div>Error: No node selected</div>;\n  else\n    return (\n      <GraphMemo\n        interactive={interactive}\n        maxHeight={maxHeight}\n        nodeCoordinates={nodeCoordinates}\n        edges={edges}\n        pathway={pathway}\n        nodeRefs={nodeRefs}\n        parentWidth={graphContainerWidth}\n        maxWidth={maxWidth}\n        expanded={expanded}\n        toggleExpanded={toggleExpanded}\n        currentNode={currentNode}\n      />\n    );\n});\n\ninterface GraphMemoProps {\n  interactive: boolean;\n  maxHeight: number;\n  nodeCoordinates: NodeCoordinates;\n  edges: Edges;\n  pathway: Pathway;\n  nodeRefs: React.MutableRefObject<{\n    [key: string]: HTMLDivElement;\n  }>;\n  parentWidth: number;\n  maxWidth: number;\n  expanded: ExpandedNode;\n  toggleExpanded: (key: string) => void;\n  currentNode: PathwayNode;\n}\n\nconst GraphMemo: FC<GraphMemoProps> = memo(function GraphMemo({\n  interactive,\n  maxHeight,\n  nodeCoordinates,\n  edges,\n  pathway,\n  nodeRefs,\n  parentWidth,\n  maxWidth,\n  expanded,\n  toggleExpanded,\n  currentNode\n}) {\n  const { id: pathwayId } = useParams();\n  const history = useHistory();\n  const { updateBuildCriteriaNodeId } = useBuildCriteriaContext();\n  const onClickHandler = useCallback(\n    (nodeKey: string) => {\n      if (interactive) {\n        redirect(pathwayId, nodeKey, history);\n        toggleExpanded(nodeKey);\n        updateBuildCriteriaNodeId('');\n      }\n    },\n    [toggleExpanded, updateBuildCriteriaNodeId, interactive, history, pathwayId]\n  );\n\n  return (\n    <div\n      id=\"graph-root\"\n      className={styles.root}\n      style={{\n        height: interactive ? maxHeight + 150 : 'inherit',\n        width: maxWidth + 'px',\n        position: 'relative',\n        marginRight: '5px'\n      }}\n    >\n      {nodeCoordinates !== undefined\n        ? Object.keys(nodeCoordinates).map(nodeKey => {\n            if (Object.keys(pathway.nodes).includes(nodeKey)) {\n              return (\n                <Node\n                  key={nodeKey}\n                  nodeKey={nodeKey}\n                  ref={(node: HTMLDivElement): void => {\n                    if (node) nodeRefs.current[nodeKey] = node;\n                    else delete nodeRefs.current[nodeKey];\n                  }}\n                  pathwayNode={pathway.nodes[nodeKey]}\n                  xCoordinate={nodeCoordinates[nodeKey].x + parentWidth / 2}\n                  yCoordinate={nodeCoordinates[nodeKey].y}\n                  expanded={Boolean(expanded[nodeKey])}\n                  onClick={onClickHandler}\n                  nodeType={getNodeType(pathway, nodeKey)}\n                />\n              );\n            } else return null;\n          })\n        : []}\n\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{\n          width: maxWidth + 100,\n          height: maxHeight,\n          zIndex: 1,\n          top: 0,\n          left: 0,\n          overflow: 'visible'\n        }}\n      >\n        {edges !== undefined\n          ? Object.keys(edges).map(edgeName => {\n              const edge = edges[edgeName];\n              return (\n                <Arrow\n                  key={edgeName}\n                  edge={edge}\n                  edgeName={edgeName}\n                  widthOffset={parentWidth / 2}\n                  currentNode={currentNode}\n                />\n              );\n            })\n          : []}\n      </svg>\n    </div>\n  );\n});\n\nexport default Graph;\n","import { makeStyles, Theme as AugmentedTheme, darken } from '@material-ui/core/styles';\n\nconst toggleButtonCss = {\n  borderRadius: '0%',\n  marginLeft: '1px',\n  width: '50px',\n  height: '50px'\n};\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    display: {\n      display: 'flex'\n    },\n    graph: {\n      width: '100%',\n      height: '100%',\n      'overflow-y': 'scroll'\n    },\n    graphHeader: {\n      display: 'flex',\n      height: '50px',\n      backgroundColor: theme.palette.common.white,\n      marginLeft: '1px'\n    },\n    graphHeaderText: {\n      height: '50px',\n      display: 'flex',\n      width: '100%',\n      backgroundColor: theme.palette.primary.main,\n      alignItems: 'center',\n      color: theme.palette.common.white,\n      fontSize: '1.4em',\n      paddingLeft: '1.5em'\n    },\n    toggleButton: {\n      '&-on': {\n        ...toggleButtonCss,\n        backgroundColor: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: darken(theme.palette.primary.main, 0.1)\n        }\n      },\n      '&-off': {\n        ...toggleButtonCss,\n        backgroundColor: theme.palette.text.primary,\n        '&:hover': {\n          backgroundColor: darken(theme.palette.text.primary, 0.1)\n        }\n      }\n    },\n    toggleIcon: {\n      transform: 'rotate(90deg) scaleY(-1)',\n      color: theme.palette.common.white\n    }\n  }),\n  { name: 'Builder', index: 1 }\n);\n","import React, { FC, useRef, useEffect, memo, useState, useCallback } from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { useBuildCriteriaContext } from 'components/BuildCriteriaProvider';\n\nimport Header from 'components/Header';\nimport Navigation from 'components/Navigation';\nimport Sidebar from 'components/Sidebar';\nimport Graph from 'components/Graph';\nimport { useTheme } from 'components/ThemeProvider';\nimport useStyles from './styles';\nimport { IconButton } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faProjectDiagram } from '@fortawesome/free-solid-svg-icons';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor';\n\nconst Builder: FC = () => {\n  const styles = useStyles();\n  const { pathway } = useCurrentPathwayContext();\n  const { buildCriteriaNodeId } = useBuildCriteriaContext();\n  const headerElement = useRef<HTMLDivElement>(null);\n  const theme = useTheme('dark');\n  const [showCriteriaBuilder, setShowCriteriaBuilder] = useState<boolean>(true);\n  const [graphContainerElement, setGraphContainerElement] = useState<HTMLDivElement | null>(null);\n  const [graphContainerWidth, setGraphContainerWidth] = useState<number>(0);\n\n  const toggleShowCriteria = useCallback((): void => {\n    setShowCriteriaBuilder(!showCriteriaBuilder);\n  }, [showCriteriaBuilder]);\n\n  const handleGraphContainerElement = useCallback((reactNode: HTMLDivElement) => {\n    setGraphContainerElement(reactNode);\n    if (reactNode) {\n      setGraphContainerWidth(reactNode.clientWidth);\n    }\n  }, []);\n\n  // Recalculate graph layout if graph container size changes\n  useEffect(() => {\n    if (graphContainerElement) {\n      new ResizeSensor(graphContainerElement, function() {\n        setGraphContainerWidth(graphContainerElement.clientWidth);\n      });\n    }\n  }, [graphContainerElement]);\n\n  // Set the height of the graph container\n  useEffect(() => {\n    const resize = (): void => {\n      if (graphContainerElement && headerElement?.current)\n        graphContainerElement.style.height =\n          window.innerHeight - headerElement.current.clientHeight + 'px';\n    };\n    resize();\n    window.addEventListener('resize', resize);\n    return (): void => window.removeEventListener('resize', resize);\n  }, [pathway, headerElement, graphContainerElement]);\n\n  // Reset criteriaBuilderToggle to true if not currently building criteria\n  useEffect(() => {\n    if (!showCriteriaBuilder && buildCriteriaNodeId === '') setShowCriteriaBuilder(true);\n  }, [buildCriteriaNodeId, showCriteriaBuilder]);\n\n  return (\n    <>\n      <div ref={headerElement}>\n        <Header />\n        <Navigation />\n      </div>\n\n      {pathway && (\n        <div className={styles.display}>\n          <MuiThemeProvider theme={theme}>\n            <Sidebar headerElement={headerElement} />\n          </MuiThemeProvider>\n\n          <div ref={handleGraphContainerElement} className={styles.graph}>\n            {buildCriteriaNodeId !== '' && (\n              <div className={styles.graphHeader}>\n                <div className={styles.graphHeaderText}>\n                  <span>Criteria Builder</span>\n                </div>\n                <IconButton\n                  className={`${styles.toggleButton}-${showCriteriaBuilder ? 'on' : 'off'}`}\n                  onClick={toggleShowCriteria}\n                >\n                  <FontAwesomeIcon className={styles.toggleIcon} icon={faProjectDiagram} />\n                </IconButton>\n              </div>\n            )}\n            {buildCriteriaNodeId !== '' && showCriteriaBuilder ? (\n              // Empty section for authoring tool\n              <div />\n            ) : (\n              <Graph graphContainerWidth={graphContainerWidth} />\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default memo(Builder);\n","import React, { FC, memo, useMemo, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\n\nimport Builder from 'components/Builder';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport { useCurrentPathwayContext } from './CurrentPathwayProvider';\nimport { useCurrentNodeContext } from './CurrentNodeProvider';\n\nconst BuilderRoute: FC = () => {\n  const { id, nodeId } = useParams();\n  const { pathways } = usePathwaysContext();\n  const { setPathway } = useCurrentPathwayContext();\n  const { setCurrentNode } = useCurrentNodeContext();\n  const pathwayId = decodeURIComponent(id);\n  const pathwayIndex = useMemo(() => pathways.findIndex(pathway => pathway.id === pathwayId), [\n    pathwayId,\n    pathways\n  ]);\n  const pathway = pathways[pathwayIndex];\n  const currentNode = pathway?.nodes?.[decodeURIComponent(nodeId)];\n\n  useEffect(() => {\n    setPathway(pathway);\n  }, [pathway, setPathway]);\n\n  useEffect(() => {\n    setCurrentNode(currentNode);\n  }, [currentNode, setCurrentNode]);\n\n  if (pathway == null) return null;\n  if (currentNode == null) return <Redirect to={`/builder/${id}/node/Start`} />;\n\n  return <Builder />;\n};\n\nexport default memo(BuilderRoute);\n","import React, { FC, createContext, useContext, useState, ReactNode } from 'react';\n\ninterface UserContextInterface {\n  user: string | null;\n  setUser: Function;\n}\n\nexport const UserContext = createContext<UserContextInterface>({} as UserContextInterface);\n\ninterface UserProviderProps {\n  children: ReactNode;\n}\n\nexport const UserProvider: FC<UserProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<string | null>(null);\n  return <UserContext.Provider value={{ user, setUser }}>{children}</UserContext.Provider>;\n};\n\nexport const useUser = (): UserContextInterface => useContext(UserContext);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    label: {\n      padding: `0.2em 2em`,\n      textTransform: 'none',\n      fontSize: '1.2em',\n      fontWeight: 100\n    }\n  }),\n  { name: 'Tabs', index: 1 }\n);\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Tab as ReactTab, TabList, TabPanel, Tabs as ReactTabs } from 'react-tabs';\n\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\nimport shortid from 'shortid';\n\ninterface Tab {\n  label: string;\n  component: ReactNode;\n}\n\ninterface TabsProp {\n  tabs: Tab[];\n}\n\nconst Tabs: FC<TabsProp> = ({ tabs }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.root}>\n      <ReactTabs>\n        <TabList>\n          {tabs.map(tab => (\n            <ReactTab key={shortid.generate()}>\n              <Button classes={{ label: styles.label }}>{tab.label}</Button>\n            </ReactTab>\n          ))}\n        </TabList>\n\n        {tabs.map(tab => (\n          <TabPanel key={shortid.generate()}>{tab.component}</TabPanel>\n        ))}\n      </ReactTabs>\n    </div>\n  );\n};\n\nexport default memo(Tabs);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './Loading.module.scss';\n\nconst Loading: FC = () => {\n  return (\n    <div className={styles.root}>\n      <FontAwesomeIcon icon={faSpinner} className={styles.root} size=\"4x\" spin />\n    </div>\n  );\n};\n\nexport default memo(Loading);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    createPathwayButton: {\n      alignSelf: 'flex-end'\n    },\n    pathwayList: {\n      marginTop: '2em'\n    },\n    pathwaysListButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    }\n  }),\n  { name: 'PathwaysList', index: 1 }\n);\n","import React, { FC, useCallback, useRef, memo, FormEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  IconButton\n} from '@material-ui/core';\nimport shortid from 'shortid';\nimport produce from 'immer';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { createNewPathway } from 'utils/builder';\nimport { Pathway } from 'pathways-model';\n\ninterface PathwayModalProps {\n  open: boolean;\n  onClose: () => void;\n  editPathway?: Pathway;\n}\n\nconst PathwayModal: FC<PathwayModalProps> = ({ open, onClose, editPathway }) => {\n  const createNewPathwayMeta = !editPathway;\n  const styles = useStyles();\n  const history = useHistory();\n  const pathwayNameRef = useRef<HTMLInputElement>(null);\n  const pathwayDescRef = useRef<HTMLInputElement>(null);\n  const { addPathway, updatePathway } = usePathwaysContext();\n\n  const closeModal = useCallback(\n    (pathwayId: string): void => {\n      history.push(`/builder/${encodeURIComponent(pathwayId)}/node/Start`);\n      onClose();\n    },\n    [history, onClose]\n  );\n\n  const handleCreateNewPathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      const pathwayId = shortid.generate();\n      const name: string = pathwayNameRef.current?.value ?? '';\n      const description: string = pathwayDescRef.current?.value ?? '';\n      addPathway(createNewPathway(name, description, pathwayId));\n      closeModal(pathwayId);\n    },\n    [addPathway, closeModal]\n  );\n\n  const handleUpdatePathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      if (\n        editPathway &&\n        (pathwayNameRef.current?.value !== editPathway.name ||\n          pathwayDescRef.current?.value !== editPathway.description)\n      ) {\n        const newEditPathway = produce(editPathway, (draftEditPathway: Pathway) => {\n          if (pathwayNameRef.current?.value) draftEditPathway.name = pathwayNameRef.current?.value;\n          draftEditPathway.description = pathwayDescRef.current?.value;\n        });\n        updatePathway(newEditPathway);\n      }\n      onClose();\n    },\n    [updatePathway, editPathway, onClose]\n  );\n\n  let name, description;\n  if (editPathway) {\n    name = editPathway.name;\n    const metaDescription = editPathway.description;\n    if (metaDescription && metaDescription !== '') description = metaDescription;\n  }\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"create-pathway\" fullWidth maxWidth=\"md\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={createNewPathwayMeta ? handleCreateNewPathway : handleUpdatePathway}>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            autoFocus\n            label=\"Pathway Name\"\n            fullWidth\n            required={createNewPathwayMeta}\n            inputRef={pathwayNameRef}\n            defaultValue={createNewPathwayMeta ? undefined : name}\n          />\n\n          <TextField\n            variant=\"outlined\"\n            label=\"Pathway Description\"\n            fullWidth\n            inputRef={pathwayDescRef}\n            defaultValue={createNewPathwayMeta ? undefined : description}\n            multiline\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={createNewPathwayMeta && <FontAwesomeIcon icon={faPlus} />}\n            type=\"submit\"\n          >\n            {createNewPathwayMeta ? 'Create' : 'Save'}\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(PathwayModal);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    container: {\n      display: 'inline-block'\n    },\n    paper: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      borderRadius: '10px',\n      border: '5px solid rgba(74, 74, 74, 0.5)',\n      backgroundColor: theme.palette.common.gray,\n      color: theme.palette.common.white,\n      padding: '0.5em',\n      mozBackgroundClip: 'padding' /* Firefox 3.6 */,\n      webkitBackgroundVlip: 'padding' /* Safari 4? Chrome 6? */,\n      backgroundClip: 'padding-box' /* Firefox 4, Safari 5, Opera 10, IE 9 */\n    },\n    displayText: {\n      marginRight: '4em',\n      whiteSpace: 'nowrap'\n    },\n    buttons: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minWidth: '2.5em',\n      minHeight: '2em',\n      cursor: 'pointer',\n      borderRadius: '15%',\n      marginRight: '0.5em'\n    }\n  }),\n  { name: 'ConfirmedDeletionButton' }\n);\n","import React, { FC, memo } from 'react';\nimport styles from './ActionButton.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\n\ninterface ButtonProps {\n  type: 'accept' | 'decline';\n  onClick?: () => void;\n}\n\ninterface ActionButtonProps extends ButtonProps {\n  size: 'small' | 'large' | 'medium';\n}\n\nconst LargeActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <button\n      className={`${styles.largeActionButton} button ${type === 'decline' && styles.largeDecline}`}\n      type=\"button\"\n      onClick={onClick}\n    >\n      {type[0].toUpperCase() + type.slice(1)}\n    </button>\n  );\n};\n\nconst SmallActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.smallActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n    </div>\n  );\n};\n\nconst MediumActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  const buttonText = {\n    accept: 'Submit',\n    decline: 'Cancel'\n  };\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.mediumActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n      {buttonText[type]}\n    </div>\n  );\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({ type, size, onClick }) => {\n  switch (size) {\n    case 'small':\n      return <SmallActionButton type={type} onClick={onClick} />;\n    case 'large':\n      return <LargeActionButton type={type} onClick={onClick} />;\n    case 'medium':\n      return <MediumActionButton type={type} onClick={onClick} />;\n  }\n};\n\nexport default memo(ActionButton);\n","import React, { FC, memo, useState, MouseEvent, useCallback } from 'react';\n\nimport { Button } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport useStyles from './styles';\n\nimport ActionButton from 'components/ActionButton';\n\ninterface ConfirmedDeletionButtonProps {\n  deleteId: string;\n  deleteMethod: (id: string) => void;\n  deleteType?: string;\n  deleteName?: string;\n}\n\nconst ConfirmedDeletionButton: FC<ConfirmedDeletionButtonProps> = ({\n  deleteId,\n  deleteMethod,\n  deleteType,\n  deleteName\n}) => {\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const displayText =\n    'Are you sure' +\n    (deleteType && deleteMethod\n      ? ' that you would like to delete the ' + deleteName + ' ' + deleteType + ' ?'\n      : '?');\n\n  const onClickHandler = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n    setOpen(true);\n  }, []);\n\n  const onAcceptHandler = useCallback((): void => {\n    deleteMethod(deleteId);\n    setOpen(false);\n    setAnchorEl(null);\n  }, [deleteId, deleteMethod]);\n\n  const onDeclineHandler = useCallback((): void => {\n    setOpen(false);\n    setAnchorEl(null);\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <ClickAwayListener onClickAway={onDeclineHandler}>\n        <Button\n          color=\"secondary\"\n          size=\"small\"\n          startIcon={<FontAwesomeIcon icon={faTrashAlt} />}\n          onClick={onClickHandler}\n        >\n          Delete\n        </Button>\n      </ClickAwayListener>\n      <Popover\n        classes={{ paper: styles.paper }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n      >\n        <div className={styles.displayText}> {displayText} </div>\n        <div className={styles.buttons}>\n          <ActionButton size=\"small\" type=\"accept\" onClick={onAcceptHandler} />\n          <ActionButton size=\"small\" type=\"decline\" onClick={onDeclineHandler} />\n        </div>\n      </Popover>\n    </div>\n  );\n};\n\nexport default memo(ConfirmedDeletionButton);\n","import React, { FC, memo, useState, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faFileDownload } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Link\n} from '@material-ui/core';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport { downloadPathway } from 'utils/builder';\nimport PathwayModal from './PathwayModal';\n\nimport useStyles from './styles';\nimport { Pathway } from 'pathways-model';\nimport { Link as RouterLink } from 'react-router-dom';\nimport ConfirmedDeletionButton from 'components/ConfirmedDeletionButton';\n\nconst PathwaysTable: FC = () => {\n  const styles = useStyles();\n  const { pathways, deletePathway } = usePathwaysContext();\n  const [open, setOpen] = useState(false);\n  const [editablePathway, setEditablePathway] = useState<Pathway>();\n\n  const openEditPathwayModal = useCallback((pathway: Pathway): void => {\n    setOpen(true);\n    setEditablePathway(pathway);\n  }, []);\n\n  const closeEditPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  const deletion = useCallback(\n    (id: string): void => {\n      deletePathway(id);\n    },\n    [deletePathway]\n  );\n\n  return (\n    <div>\n      <TableContainer className={styles.pathwayList}>\n        <Table aria-label=\"pathway list\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Pathway Name</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Last Updated</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {pathways.map(pathway => (\n              <TableRow key={pathway.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Link\n                    component={RouterLink}\n                    to={`/builder/${encodeURIComponent(pathway.id)}`}\n                    color=\"primary\"\n                    underline=\"none\"\n                  >\n                    {pathway.name}\n                  </Link>\n                </TableCell>\n\n                <TableCell>draft</TableCell>\n                <TableCell>2 days ago</TableCell>\n\n                <TableCell align=\"right\">\n                  <Button\n                    className={styles.pathwaysListButton}\n                    color=\"primary\"\n                    size=\"small\"\n                    startIcon={<FontAwesomeIcon icon={faEdit} />}\n                    onClick={(): void => openEditPathwayModal(pathway)}\n                  >\n                    Edit Info\n                  </Button>\n                  <Button\n                    className={styles.pathwaysListButton}\n                    color=\"primary\"\n                    size=\"small\"\n                    startIcon={<FontAwesomeIcon icon={faFileDownload} />}\n                    onClick={(): void => downloadPathway(pathway)}\n                  >\n                    Export\n                  </Button>\n                  <ConfirmedDeletionButton\n                    deleteType=\"pathway\"\n                    deleteName={pathway.name}\n                    deleteId={pathway.id}\n                    deleteMethod={deletion}\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <PathwayModal open={open} onClose={closeEditPathwayModal} editPathway={editablePathway} />\n    </div>\n  );\n};\n\nexport default memo(PathwaysTable);\n","import React, { FC, useCallback, useState, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport Loading from 'components/elements/Loading';\nimport PathwaysTable from './PathwaysTable';\nimport PathwayModal from './PathwayModal';\n\nimport useStyles from './styles';\n\nconst PathwaysList: FC = () => {\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n  const { status } = usePathwaysContext();\n\n  const openNewPathwayModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeNewPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <Button\n        className={styles.createPathwayButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<FontAwesomeIcon icon={faPlus} />}\n        onClick={openNewPathwayModal}\n      >\n        Create Pathway\n      </Button>\n\n      <PathwayModal open={open} onClose={closeNewPathwayModal} />\n      {status === 'loading' ? <Loading /> : <PathwaysTable />}\n    </div>\n  );\n};\n\nexport default memo(PathwaysList);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    buttonRow: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    buildCriteriaButton: {\n      alignSelf: 'flex-end',\n      marginLeft: '20px'\n    },\n    criteriaList: {\n      marginTop: '2em'\n    },\n    editButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    },\n    input: {\n      display: 'none'\n    },\n    chooseFileInput: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    inputButton: {\n      whiteSpace: 'nowrap',\n      marginRight: '1em'\n    },\n    fileName: {\n      fontStyle: 'italic'\n    }\n  }),\n  { name: 'CriteriaList', index: 1 }\n);\n","import React, { FC, memo, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport moment from 'moment';\n\nimport useStyles from './styles';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport ConfirmedDeletionButton from 'components/ConfirmedDeletionButton';\n\nconst CriteriaTable: FC = () => {\n  const styles = useStyles();\n  const { criteria, deleteCriteria } = useCriteriaContext();\n\n  const renderDate = (datetime: number): string => {\n    return moment(datetime).fromNow();\n  };\n\n  const deletion = useCallback(\n    (id: string): void => {\n      deleteCriteria(id);\n    },\n    [deleteCriteria]\n  );\n\n  return (\n    <TableContainer className={styles.criteriaList}>\n      <Table aria-label=\"criteria list\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Criteria Name</TableCell>\n            <TableCell>Version</TableCell>\n            <TableCell>Added</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {criteria.map(c => (\n            <TableRow key={c.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {c.label}\n              </TableCell>\n              <TableCell>{c.version}</TableCell>\n              <TableCell>{renderDate(c.modified)}</TableCell>\n\n              <TableCell align=\"right\">\n                <Button\n                  className={styles.editButton}\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faEdit} />}\n                >\n                  Edit\n                </Button>\n                <ConfirmedDeletionButton\n                  deleteType=\"criterion\"\n                  deleteName={c.label}\n                  deleteId={c.id}\n                  deleteMethod={deletion}\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default memo(CriteriaTable);\n","import React, { FC, useCallback, useRef, memo, FormEvent, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileImport, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Input,\n  IconButton\n} from '@material-ui/core';\n\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport useStyles from './styles';\n\ninterface ImportCriteriaModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst ImportCriteriaModal: FC<ImportCriteriaModalProps> = ({ open, onClose }) => {\n  const styles = useStyles();\n  const [fileName, setFileName] = useState<string>('');\n  const importFileRef = useRef<HTMLInputElement>(null);\n\n  const { addCriteria } = useCriteriaContext();\n\n  const selectFile = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      const files = importFileRef?.current?.files;\n      if (files?.length) addCriteria(files[0]);\n      onClose();\n      setFileName('');\n    },\n    [addCriteria, onClose]\n  );\n\n  const handleChooseFile = useCallback(() => {\n    if (importFileRef?.current?.files?.[0]) setFileName(importFileRef.current.files[0].name);\n  }, [importFileRef]);\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"import-criteria\" fullWidth maxWidth=\"sm\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={selectFile}>\n        <DialogContent>\n          <div className={styles.chooseFileInput}>\n            <Input\n              id=\"choose-file-input\"\n              className={styles.input}\n              inputRef={importFileRef}\n              type=\"file\"\n              inputProps={{ accept: '.json' }}\n              onChange={handleChooseFile}\n            />\n\n            <label htmlFor=\"choose-file-input\">\n              <Button\n                className={styles.inputButton}\n                variant=\"contained\"\n                color=\"primary\"\n                component=\"span\"\n              >\n                Choose File\n              </Button>\n            </label>\n\n            <div className={styles.fileName}>\n              {fileName ? <span>{fileName}</span> : <span>Choose ELM file to import.</span>}\n            </div>\n          </div>\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faFileImport} />}\n            type=\"submit\"\n          >\n            Import\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(ImportCriteriaModal);\n","import React, { FC, memo, useState, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTools, faFileImport } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport Loading from 'components/elements/Loading';\nimport CriteriaTable from './CriteriaTable';\nimport ImportCriteriaModal from './ImportCriteriaModal';\n\nimport useStyles from './styles';\n\nconst CriteriaList: FC = () => {\n  const styles = useStyles();\n  const { status } = usePathwaysContext();\n\n  const [open, setOpen] = useState<boolean>(false);\n  const openImportModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeImportModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.buttonRow}>\n        <Button\n          className={styles.buildCriteriaButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={faFileImport} />}\n          onClick={openImportModal}\n        >\n          Import Library\n        </Button>\n        <Button\n          className={styles.buildCriteriaButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={faTools} />}\n        >\n          Build Criteria\n        </Button>\n      </div>\n\n      <ImportCriteriaModal open={open} onClose={closeImportModal} />\n\n      {status === 'loading' ? <Loading /> : <CriteriaTable />}\n    </div>\n  );\n};\n\nexport default memo(CriteriaList);\n","import React, { FC, memo } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from 'components/Header';\n\nimport BuilderRoute from './BuilderRoute';\nimport ThemeProvider from './ThemeProvider';\nimport { PathwaysProvider } from './PathwaysProvider';\nimport { UserProvider } from './UserProvider';\nimport { CriteriaProvider } from './CriteriaProvider';\nimport Tabs from './Tabs';\nimport PathwaysList from './PathwaysList';\nimport CriteriaList from './CriteriaList';\nimport { CurrentPathwayProvider } from './CurrentPathwayProvider';\nimport { CurrentNodeProvider } from './CurrentNodeProvider';\nimport { BuildCriteriaProvider } from './BuildCriteriaProvider';\nimport { SnackbarProvider } from './SnackbarProvider';\n\nconst App: FC = () => {\n  return (\n    <ThemeProvider theme=\"light\">\n      <UserProvider>\n        <CurrentPathwayProvider>\n          <PathwaysProvider>\n            <CurrentNodeProvider>\n              <CriteriaProvider>\n                <SnackbarProvider>\n                  <BuildCriteriaProvider>\n                    <Router>\n                      <Switch>\n                        <Route path=\"/builder/:id/node/:nodeId\">\n                          <BuilderRoute />\n                        </Route>\n                        <Route path=\"/builder/:id\">\n                          <BuilderRoute />\n                        </Route>\n                        <Route path=\"/\">\n                          <Header />\n                          <Tabs\n                            tabs={[\n                              { label: 'Pathway', component: <PathwaysList /> },\n                              { label: 'Criteria', component: <CriteriaList /> }\n                            ]}\n                          />\n                        </Route>\n                      </Switch>\n                    </Router>\n                  </BuildCriteriaProvider>\n                </SnackbarProvider>\n              </CriteriaProvider>\n            </CurrentNodeProvider>\n          </PathwaysProvider>\n        </CurrentPathwayProvider>\n      </UserProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default memo(App);\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { enableMapSet } from 'immer';\n\nimport App from 'components/App';\n\nimport './styles/index.scss';\n\n// Enable use of immer produce on maps\nenableMapSet();\n\n// Enable why did you render for development mode\n// Will automatically track all memoized components\nif (process.env.NODE_ENV === 'development') {\n  const whyDidYouRender = require('@welldone-software/why-did-you-render');\n  whyDidYouRender(React, {\n    trackAllPureComponents: true\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n","export class ConfigManager {\n  constructor(config = {}) {\n    this.config = global.CONFIG ? { ...global.CONFIG, ...config } : { ...config };\n  }\n\n  get(name, defaultValue) {\n    const parts = name.split('.');\n    let context = this.config;\n    let value = null;\n    for (const i in parts) {\n      const part = parts[i];\n      value = context[part];\n      context = value;\n    }\n    return value || defaultValue;\n  }\n\n  add(conf) {\n    if (conf) {\n      this.config = {\n        ...this.config,\n        ...conf\n      };\n    }\n  }\n}\n\nconst config = new ConfigManager();\nexport default config;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__38uoJ\",\"icon\":\"Node_icon__354W4\",\"actionable\":\"Node_actionable__bHXKd\",\"expandedNode\":\"Node_expandedNode__1ar-A\",\"childNotActionable\":\"Node_childNotActionable__1bfBq\",\"childActionable\":\"Node_childActionable__SwUjD\"};"],"sourceRoot":""}