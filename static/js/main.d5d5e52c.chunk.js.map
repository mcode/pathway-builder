{"version":3,"sources":["camino-logo-dark.png","components/ActionButton/ActionButton.module.scss","immer.js","components/CurrentCriteriaProvider.tsx","styles/theme.tsx","components/ThemeProvider.tsx","components/Header/Header.tsx","components/Navigation/styles.tsx","utils/useRefState.ts","components/CurrentPathwayProvider.tsx","components/Services/Services.tsx","engine/cql-to-elm.ts","components/CriteriaProvider.tsx","utils/nodeUtils.ts","utils/cpg.ts","utils/builder.ts","components/elements/ExportMenu/ExportMenu.tsx","components/Navigation/Navigation.tsx","components/PathwaysProvider.tsx","components/Sidebar/styles.tsx","components/CurrentNodeProvider.tsx","components/elements/DropDown/DropDown.tsx","components/SnackbarProvider.tsx","components/Sidebar/DeleteSnackbar.tsx","components/Sidebar/ConnectNodeButton.tsx","components/Sidebar/Sidebar.tsx","components/Sidebar/SidebarHeader.tsx","components/Sidebar/SidebarButton.tsx","components/Sidebar/ActionNodeEditor.tsx","components/CriteriaBuilderProvider.tsx","components/Sidebar/BranchTransition.tsx","components/Sidebar/OutlinedDiv.tsx","components/Sidebar/DeleteModal.tsx","components/Sidebar/TransitionEditor.tsx","components/DagreGraph/useCoordinatesCalculator.ts","components/DagreGraph/GraphProvider.tsx","components/DagreGraph/GraphEdges.styles.ts","components/DagreGraph/GraphEdges.tsx","components/DagreGraph/NodeDetails.styles.ts","components/DagreGraph/NodeDetails.tsx","components/DagreGraph/NodeIcon.styles.ts","components/DagreGraph/NodeIcon.tsx","components/DagreGraph/Node.styles.ts","components/DagreGraph/Node.tsx","components/DagreGraph/useExpandedState.ts","components/DagreGraph/useRedirectToNode.ts","components/DagreGraph/GraphNodes.tsx","components/DagreGraph/GraphRoot.styles.ts","components/DagreGraph/GraphRoot.tsx","components/DagreGraph/DagreGraph.tsx","components/CriteriaBuilder/styles.tsx","components/CriteriaBuilder/CriteriaBuilder.tsx","components/Builder/styles.tsx","components/Builder/Builder.tsx","components/BuilderRoute.tsx","components/UserProvider.tsx","components/Tabs/styles.tsx","components/Tabs/Tabs.tsx","components/elements/Loading/Loading.tsx","components/PathwaysList/styles.tsx","components/PathwaysList/PathwayModal.tsx","components/ConfirmedDeletionButton/styles.tsx","components/ActionButton/ActionButton.tsx","components/ConfirmedDeletionButton/ConfirmedDeletionButton.tsx","components/PathwaysList/PathwaysTable.tsx","components/PathwaysList/PathwaysList.tsx","components/CriteriaList/styles.tsx","components/CriteriaList/CriteriaTable.tsx","components/CriteriaList/ImportCriteriaModal.tsx","components/CriteriaList/CriteriaList.tsx","components/App.tsx","index.js","utils/ConfigManager.js","components/Header/Header.module.scss","components/elements/Loading/Loading.module.scss"],"names":["module","exports","enableAllPlugins","CurrentCriteriaContext","createContext","CurrentCriteriaProvider","memo","children","useState","currentCriteriaNodeId","setCurrentCriteriaNodeId","currentCriteria","setCurrentCriteria","buildCriteriaSelected","setBuildCriteriaSelected","criteriaName","setCriteriaName","resetCurrentCriteria","useCallback","Provider","value","useCurrentCriteriaContext","useContext","variables","spacing","globalPadding","colors","white","black","red","blue","blueLighter","gray","grayMedium","grayBlue","grayLight","grayLighter","grayDark","grayVeryDark","green","typography","fontFamily","join","materialUiOverridesBase","MuiButton","root","borderRadius","height","backgroundColor","color","contained","label","fontWeight","iconSizeMedium","fontSize","iconSizeSmall","MuiTableHead","MuiTableCell","head","padding","borderBottom","MuiFormControl","margin","MuiFormLabel","fontStyle","MuiInputBase","input","transitionDelay","transitionProperty","MuiTooltip","tooltip","arrow","MuiOutlinedInput","MuiSelect","icon","MuiPaper","rounded","MuiDialogTitle","MuiDialogContent","MuiDialogActions","MuiCard","overflow","MuiIconButton","materialUiOverridesDark","borderColor","notchedOutline","MuiMenuItem","paletteBase","primary","main","secondary","error","common","background","default","text","grey","800","lightTheme","createMuiTheme","palette","overrides","darkTheme","deepmerge","projectorTheme","getTheme","theme","useProjector","ThemeContext","ThemeProvider","setUseProjector","muiTheme","toggleTheme","currentUseProjector","anchorEl","setAnchorEl","openMenu","event","currentTarget","closeMenu","handleToggleTheme","className","styles","header","to","homeLink","onClick","src","logo","alt","aria-controls","aria-haspopup","faCog","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","makeStyles","display","alignItems","justifyContent","backButton","width","navigationIcons","cursor","pathwayName","marginLeft","name","index","useRefState","initialValue","state","setState","stateRef","useRef","useEffect","current","CurrentPathwayContext","CurrentPathwayProvider","pathway","pathwayRef","_setPathway","setPathway","useCurrentPathwayContext","getObject","url","fetch","headers","Accept","typedFetch","raw","options","then","response","json","useGetService","status","result","setResult","listOfFiles","map","f","listOfPromises","Promise","all","list","payload","catch","config","get","convertBasicCQL","cql","method","body","elm","CriteriaContext","DEFAULT_ELM_STATEMENTS","elmLibraryToCriteria","undefined","custom","allElmStatements","library","statements","def","elmStatements","filter","includes","includesTypes","find","s","resultTypeName","alert","labelTitle","identifier","substring","statement","shortid","generate","version","modified","Date","now","cqlToCriteria","rawCql","CriteriaProvider","criteria","setCriteria","listOfLists","flat","newCriteria","addCriteria","file","reader","FileReader","onload","target","rawContent","endsWith","rawElm","JSON","parse","jsonToCriteria","length","readAsText","deleteCriteria","addElmCriteria","addBuilderCriteria","builder","builderModelToCriteria","useCriteriaContext","isBranchNode","node","action","nodeTypeIsUndefined","resourceNameConversion","MedicationRequest","ServiceRequest","CarePlan","nodeTypeOptions","findParents","childNodeKey","parents","Object","keys","nodes","forEach","parentNodeKey","transitions","transition","push","willOrphanChild","transitionCount","nodeKey","canDeleteNode","canDeleteAllTransitions","redirect","pathwayId","history","encodeURIComponent","location","pathname","LIBRARY_DRAFT","R4","LibraryStatusKind","_draft","PLANDEFINITION_DRAFT","PlanDefinitionStatusKind","ACTIVITYDEFINITION_DRAFT","ActivityDefinitionStatusKind","BUNDLE_TRANSACTION","BundleTypeKind","_transaction","BUNDLE_PUT","Bundle_RequestMethodKind","_put","CONDITION_APPLICABILITY","PlanDefinition_ConditionKindKind","_applicability","EXPRESSION_CQL","ExpressionLanguageKind","_textCql","createAction","description","definition","resourceType","title","code","coding","system","definitionCanonical","createPlanDefinition","type","libraryId","planDefinition","meta","profile","extension","valueCode","experimental","publisher","createBundleEntry","resource","fullUrl","request","createLibraries","uuidv4","libraryName","mainLibrary","content","includedCqlLibraries","referencedDefines","builderDefines","nodeId","condition","criteriaSource","c","libraryIdentifier","additionalLibraries","entries","details","newId","contentType","data","btoa","libraryCql","definesList","srcLibrary","defines","constructCqlLibrary","stringify","navigational","preconditions","toCPG","bundle","entry","libraries","cpgStrategy","key","isActionNode","cpgRecommendation","cpgStrategyAction","parent","kind","expression","language","cpgActivityDefinition","activityId","activityDefinition","date","toISOString","productCodeableConcept","medicationCodeableConcept","createActivityDefinition","cpgRecommendationAction","l","downloadPathway","cpg","pathwayString","exportPathway","pathwayBlob","Blob","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","pathwayWithElm","produce","draftPathway","setNavigationalElm","schemaIdentifier","usings","localIdentifier","uri","localId","locator","context","operand","dataType","valueSets","codes","codeSystems","mergeElm","elmStatement","getElmStatement","draftElmStatement","generateNavigationalElm","pathwayToExport","additionalElm","using","include","path","valueSet","codesystem","defaultStatementNames","setNodeType","nodeType","setNodeAction","makeNodeAction","makeNodeBranch","console","addTransition","startNodeKey","endNodeKey","setTransitionCondition","transitionId","foundTransition","getNodeType","getContentAnchorEl","anchorOrigin","vertical","horizontal","Navigation","useStyles","useHistory","handleGoBack","IconButton","aria-label","faChevronLeft","faEllipsisH","PathwaysContext","PathwaysProvider","pathways","pathwaysRef","setPathways","service","servicePayload","addPathway","currentPathways","deletePathway","updatePathway","newPathway","findIndex","slice","usePathwaysContext","flexDirection","minWidth","overflowY","formControl","divider","headerLabelStart","displayText","sidebarHeader","sidebarHeaderGroup","sidebarHeaderButton","headerLabelGroup","headerLabel","headerLabelText","marginBottom","editIcon","sidebarButtonGroup","sidebarButtonGroupExtraMargin","sidebarButton","marginRight","sidebarButtonText","outlinedDiv","outlinedDivError","toggleSidebar","float","cancelButton","alignSelf","marginTop","buildCriteriaContainer","buildCriteriaText","saveButton","transitionContainer","dividerHeader","textTransform","lineHeight","paddingLeft","dialogCloseButton","dialogContent","dialogContentText","alertIcon","connectDropdown","flexWrap","alignContent","connectText","cancelButtonDropdown","border","CurrentNodeContext","CurrentNodeProvider","currentNode","currentNodeRef","_setCurrentNode","setCurrentNode","useCurrentNodeContext","onChange","handleSetSelected","FormControl","variant","fullWidth","InputLabel","htmlFor","Select","MenuProps","transformOrigin","displayEmpty","option","SnackbarContext","SnackbarProvider","openSnackbar","setOpenSnackbar","snackbarText","setSnackbarText","handleCloseSnackbar","useSnackbarContext","Snackbar","autoHideDuration","message","Fragment","Button","size","faTimes","setOpen","rootNode","connectableNodes","ancestorNodes","getAncestorNodes","rootNodeKey","currNodeKey","ancestors","previousNodes","currNode","some","concat","rootNodeConnectsToNode","nodeIsAncestor","getConnectableNodes","optionsAvailable","connectToNode","showDropdown","buttonName","buttonIcon","faLevelDownAlt","buttonText","disabled","hasTooltip","tooltipTitle","isExpanded","setIsExpanded","sidebarContainerElement","changeNodeType","selectNodeType","addPathwayNode","newNode","addNode","ref","isTransition","faPlus","faChevronRight","displayTransitions","showInput","setShowInput","openTooltip","setOpenTooltip","openDelete","setOpenDelete","inputRef","nodeLabel","goToParentNode","redirectToNode","changeNodeLabel","setNodeLabel","handleShowInput","deleteNode","filterTransition","removeNode","deleteTransition","removeTransition","openDeleteModal","closeDeleteModal","handleOpenTooltip","handleCloseTooltip","handleKeyPress","deleteNodeDisabled","deleteTransitionDisabled","deleteDisabled","titleText","Input","onBlur","onKeyPress","defaultValue","autoFocus","onFocus","select","clsx","faEdit","Tooltip","placement","onOpen","faTrashAlt","onDelete","extraMargin","ConditionalTooltip","startIcon","codeSystemOptions","addActionCQL","currentNodeKey","cqlId","replace","codesystemStatement","returnStatement","retrieveStatement","defineStatement","escape","createCQL","setActionNodeElm","changeCode","draftAction","setActionCode","resetDisplay","changeDescription","draftaction","setActionDescription","changeTitle","setActionTitle","selectCodeSystem","codeSystem","setActionCodeSystem","validateFunction","setActionResourceDisplay","onEnter","e","changeNodeTypeEnabled","TextField","inputProps","faCheckCircle","CriteriaBuilderContext","CriteriaBuilderProvider","selectedElement","setSelectedElement","selectedDemoElement","setSelectedDemoElement","gender","setGender","minimumAge","setMinimumAge","maximumAge","setMaximumAge","resetCriteriaBuilder","useCriteriaBuilderContext","criteriaOptions","useMemo","criteriaAvailable","useCriteriaSelected","setUseCriteriaSelected","criteriaDescription","criteriaIsValid","criteriaDisplayIsValid","hasCriteria","displayCriteria","transitionRef","handleUseCriteria","selectCriteriaSource","criteriaId","selectedCriteria","setCriteriaDisplay","criteriaDisplay","handleCriteriaName","handleBuildCriteria","handleBuildCriteriaCancel","handleBuildCriteriaSave","transitionSelected","faThList","faTools","FormControlLabel","Box","control","Checkbox","checked","faSave","InputComponent","OutlinedDiv","multiline","InputLabelProps","shrink","InputProps","inputComponent","classes","Dialog","aria-labelledby","maxWidth","DialogTitle","disableTypography","DialogContent","faExclamationCircle","DialogActions","transitionKey","transitionNode","Card","raised","useCoordinatesCalculator","edges","coordinates","setCoordinates","updateCoordinates","graph","graphWidth","xOffset","x","xOffsetCorrection","newCoordinates","y","Math","min","abs","edgeKey","edge","edgeName","v","w","points","point","isNaN","start","end","GraphContext","SetGraphWidthContext","GraphCoordinatesContext","createGraph","g","dagre","graphlib","Graph","setGraph","setDefaultEdgeLabel","GraphProvider","useRafState","setWidth","reflowRequired","setReflowRequired","reflow","graphValue","layout","useUpdateEffect","useGraphProvider","useGraphCoordinates","position","top","left","zIndex","fill","stroke","props","isActive","LabelTooltip","Edge","reduce","i","generatePathString","truncateTooltip","d","strokeWidth","markerEnd","edgeCoordinates","markerWidth","markerHeight","refX","refY","orient","edgeId","table","verticalAlign","textAlign","overflowWrap","externalLink","Field","BranchNodeContents","ActionNodeFields","actionNode","rel","faExternalLinkAlt","pathwayNode","isStartNode","faPlay","faPrescriptionBottleAlt","faSyringe","faBookMedical","faMicroscope","minHeight","isActionable","nodeTitle","flex","nodeContent","clickable","createTransitionLabel","getBoundingClientRect","element","dimensions","ceil","xCoordinate","yCoordinate","openNode","onClickHandler","nodeRef","nodeStyle","useLifecycles","setNode","setEdge","transitionNodes","Set","outEdges","has","removeEdge","style","useExpandedState","lastSelectedNode","expanded","setExpanded","toggleExpanded","nodeName","prevState","closeNode","useRedirectToNode","useParams","interactive","expandedNodes","nodeCoordinates","GraphRoot","graphRef","setGraphWidth","values","b","max","graphHeight","rootStyles","graphElement","parentElement","sensor","ResizeSensor","detach","elementContainer","elementSelect","addElementLabel","headerText","elementField","elementFieldLabel","onElementSelected","onDemoElementSelected","onGenderSelected","onMinimumAgeChange","parseInt","onMaximumAgeChange","handleClose","genderString","ageRangeString","toggleButtonCss","graphHeader","graphHeaderText","toggleButton","darken","toggleIcon","transform","useTheme","showCriteriaBuilder","setShowCriteriaBuilder","toggleShowCriteria","faProjectDiagram","decodeURIComponent","pathwayIndex","UserContext","UserProvider","user","setUser","tabs","tab","component","faSpinner","spin","createPathwayButton","pathwayList","pathwaysListButton","editPathway","createNewPathwayMeta","pathwayNameRef","pathwayDescRef","closeModal","handleCreateNewPathway","preventDefault","Start","createNewPathway","handleUpdatePathway","newEditPathway","draftEditPathway","metaDescription","onSubmit","required","container","paper","mozBackgroundClip","webkitBackgroundVlip","backgroundClip","whiteSpace","buttons","LargeActionButton","largeActionButton","largeDecline","toUpperCase","SmallActionButton","accept","decline","smallActionButton","data-testid","faCheck","MediumActionButton","mediumActionButton","deleteId","deleteMethod","deleteType","deleteName","onAcceptHandler","onDeclineHandler","ClickAwayListener","onClickAway","Popover","editablePathway","setEditablePathway","openEditPathwayModal","closeEditPathwayModal","deletion","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","Link","RouterLink","underline","align","faFileDownload","openNewPathwayModal","closeNewPathwayModal","buttonRow","buildCriteriaButton","criteriaList","editButton","chooseFileInput","inputButton","fileName","datetime","moment","fromNow","setFileName","importFileRef","selectFile","files","handleChooseFile","faFileImport","openImportModal","closeImportModal","ReactDOM","render","getElementById","this","global","CONFIG","parts","split","conf"],"mappings":"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","file":"static/js/main.d5d5e52c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/camino-logo-dark.c8fc712a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectButton\":\"ActionButton_selectButton___qB5R\",\"accept\":\"ActionButton_accept__28b2D\",\"decline\":\"ActionButton_decline__zz-vG\",\"smallActionButton\":\"ActionButton_smallActionButton__1bPWu\",\"largeActionButton\":\"ActionButton_largeActionButton__blRdA\",\"largeDecline\":\"ActionButton_largeDecline__wz9Zw\",\"mediumActionButton\":\"ActionButton_mediumActionButton__3EpOp\"};","import { enableAllPlugins } from 'immer';\n\n// enables immer to run in IE11\nenableAllPlugins();\n","import React, {\n  createContext,\n  FC,\n  ReactNode,\n  memo,\n  useState,\n  useContext,\n  useCallback\n} from 'react';\n\nimport { BuilderModel } from 'criteria-model';\n\ninterface CurrentCriteriaContextInterface {\n  buildCriteriaSelected: boolean;\n  currentCriteriaNodeId: string;\n  currentCriteria: BuilderModel | null;\n  criteriaName: string;\n  setBuildCriteriaSelected: (buildCriteriaSelect: boolean) => void;\n  setCurrentCriteriaNodeId: (id: string) => void;\n  setCurrentCriteria: (currentCriteria: BuilderModel | null) => void;\n  setCriteriaName: (criteriaName: string) => void;\n  resetCurrentCriteria: () => void;\n}\n\nexport const CurrentCriteriaContext = createContext<CurrentCriteriaContextInterface>(\n  {} as CurrentCriteriaContextInterface\n);\n\ninterface CurrentCriteriaProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrentCriteriaProvider: FC<CurrentCriteriaProviderProps> = memo(({ children }) => {\n  const [currentCriteriaNodeId, setCurrentCriteriaNodeId] = useState<string>('');\n  const [currentCriteria, setCurrentCriteria] = useState<BuilderModel | null>(null);\n  const [buildCriteriaSelected, setBuildCriteriaSelected] = useState<boolean>(false);\n  const [criteriaName, setCriteriaName] = useState<string>('');\n\n  const resetCurrentCriteria = useCallback(() => {\n    setCurrentCriteriaNodeId('');\n    setCurrentCriteria(null);\n    setBuildCriteriaSelected(false);\n    setCriteriaName('');\n  }, [setCurrentCriteriaNodeId, setCurrentCriteria, setBuildCriteriaSelected, setCriteriaName]);\n\n  return (\n    <CurrentCriteriaContext.Provider\n      value={{\n        buildCriteriaSelected,\n        setBuildCriteriaSelected,\n        currentCriteriaNodeId,\n        setCurrentCriteriaNodeId,\n        currentCriteria: currentCriteria,\n        setCurrentCriteria: setCurrentCriteria,\n        criteriaName,\n        setCriteriaName,\n        resetCurrentCriteria\n      }}\n    >\n      {children}\n    </CurrentCriteriaContext.Provider>\n  );\n});\n\nexport const useCurrentCriteriaContext = (): CurrentCriteriaContextInterface =>\n  useContext(CurrentCriteriaContext);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport deepmerge from 'deepmerge';\n\ndeclare module '@material-ui/core/styles/createMuiTheme' {\n  interface Theme {\n    variables: {\n      spacing: {\n        globalPadding: string;\n      };\n    };\n  }\n  // allow configuration using `createMuiTheme`\n  interface ThemeOptions {\n    variables?: {\n      spacing?: {\n        globalPadding?: string;\n      };\n    };\n  }\n}\n\ndeclare module '@material-ui/core/styles/createPalette' {\n  interface CommonColors {\n    blue: string;\n    blueLighter: string;\n    red: string;\n    gray: string;\n    grayMedium: string;\n    grayBlue: string;\n    grayLighter: string;\n    grayDark: string;\n    grayVeryDark: string;\n    green: string;\n  }\n}\n\nconst variables = {\n  spacing: {\n    globalPadding: '2em'\n  }\n};\n\nconst colors = {\n  white: '#fff',\n  black: '#222',\n  red: '#d95d77',\n  blue: '#5d89a1',\n  blueLighter: '#9ad2f0',\n  gray: '#4a4a4a',\n  grayMedium: '#bbbdc0',\n  grayBlue: '#cbd5df',\n  grayLight: '#6c6c6c',\n  grayLighter: '#eaeef2',\n  grayDark: '#444',\n  grayVeryDark: '#3a3a3a',\n  green: '#2fa874'\n};\n\nconst typography = {\n  fontFamily: [\n    'Open Sans',\n    '-apple-system',\n    'BlinkMacSystemFont',\n    'Segoe UI',\n    'Roboto',\n    'Oxygen',\n    'Ubuntu',\n    'Cantarell',\n    'Fira Sans',\n    'Droid Sans',\n    'Helvetica Neue',\n    'sans-serif'\n  ].join(',')\n};\n\nconst materialUiOverridesBase = {\n  MuiButton: {\n    root: {\n      borderRadius: 0,\n      height: '38px',\n      '&$disabled': {\n        backgroundColor: colors.grayMedium,\n        color: colors.white\n      }\n    },\n    contained: {\n      '&$disabled': {\n        backgroundColor: colors.grayMedium,\n        color: colors.white\n      }\n    },\n    label: {\n      fontWeight: 600\n    },\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    },\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    }\n  },\n  MuiTableHead: {\n    root: {\n      backgroundColor: colors.grayLighter\n    }\n  },\n  MuiTableCell: {\n    root: {\n      fontSize: '1em'\n    },\n    head: {\n      padding: '5px 16px',\n      borderBottom: 'none'\n    }\n  },\n  MuiFormControl: {\n    root: {\n      margin: '10px 0'\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      fontStyle: 'italic',\n      '&.Mui-error': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      fontWeight: 600\n    },\n    input: {\n      '&::selection': {\n        color: colors.white,\n        backgroundColor: colors.grayDark\n      },\n      '&:-webkit-autofill': {\n        transitionDelay: '9999s',\n        transitionProperty: 'background-color, color'\n      }\n    }\n  },\n  MuiTooltip: {\n    tooltip: {\n      fontSize: 14,\n      backgroundColor: colors.black\n    },\n    arrow: {\n      color: colors.black\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      borderRadius: '0'\n    }\n  },\n  MuiSelect: {\n    icon: {\n      fontSize: '2em'\n    }\n  },\n  MuiPaper: {\n    rounded: {\n      borderRadius: '0'\n    }\n  },\n  MuiDialogTitle: {\n    root: {\n      padding: '1em'\n    }\n  },\n  MuiDialogContent: {\n    root: {\n      padding: '0 4em'\n    }\n  },\n  MuiDialogActions: {\n    root: {\n      padding: '2em 4em'\n    }\n  },\n  MuiCard: {\n    root: {\n      overflow: 'visible'\n    }\n  },\n  MuiIconButton: {\n    root: {\n      '&:disabled': {\n        color: colors.grayLight\n      }\n    }\n  }\n};\n\nconst materialUiOverridesDark = {\n  MuiFormControl: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      }\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      color: colors.white,\n      '&$focused': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      color: colors.white,\n      '&:hover': {\n        borderColor: colors.white,\n        backgroundColor: colors.grayDark\n      }\n    }\n  },\n  MuiTooltip: {\n    tooltip: {\n      fontSize: 14\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      },\n      '&:hover $notchedOutline': {\n        borderColor: colors.white\n      },\n      '&$focused $notchedOutline': {\n        borderColor: colors.white\n      }\n    },\n    notchedOutline: {\n      borderColor: colors.white\n    }\n  },\n  MuiSelect: {\n    icon: {\n      color: colors.white\n    }\n  },\n  MuiMenuItem: {\n    root: {\n      color: colors.grayDark\n    }\n  }\n};\n\nconst paletteBase = {\n  primary: {\n    main: colors.blue\n  },\n  secondary: {\n    main: colors.red\n  },\n  error: {\n    main: colors.red\n  },\n  common: colors,\n  background: {\n    default: colors.grayLighter\n  },\n  text: {\n    primary: colors.gray,\n    secondary: colors.gray\n  },\n  grey: {\n    800: colors.gray\n  }\n};\n\nconst lightTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: { ...paletteBase },\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nconst darkTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    text: {\n      primary: colors.white,\n      secondary: colors.white\n    }\n  }),\n  overrides: deepmerge(materialUiOverridesBase, materialUiOverridesDark),\n  variables: { ...variables }\n});\n\nconst projectorTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    background: {\n      default: colors.grayBlue\n    },\n    text: {\n      primary: colors.black,\n      secondary: colors.black\n    }\n  }),\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nexport default lightTheme;\nexport { lightTheme, darkTheme, projectorTheme };\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useState,\n  useCallback,\n  useContext,\n  ReactNode\n} from 'react';\nimport { ThemeProvider as MuiThemeProvider, Theme } from '@material-ui/core/styles';\nimport { lightTheme, darkTheme, projectorTheme } from '../styles/theme';\n\ninterface ThemeProviderProps {\n  theme: string;\n  children: ReactNode;\n}\n\ninterface ThemeContextInterface {\n  toggleTheme: () => void;\n  useProjector: boolean;\n}\n\nconst getTheme = ({ theme, useProjector }: { theme: string; useProjector: boolean }): Theme => {\n  if (useProjector) {\n    switch (theme) {\n      case 'dark':\n        // TODO: replace with dark projector theme\n        return darkTheme;\n\n      default:\n        return projectorTheme;\n    }\n  }\n\n  switch (theme) {\n    case 'dark':\n      return darkTheme;\n\n    default:\n      return lightTheme;\n  }\n};\n\nexport const ThemeContext = createContext({} as ThemeContextInterface);\nexport const useThemeToggle = (): (() => void) => {\n  const { toggleTheme } = useContext(ThemeContext);\n  return toggleTheme;\n};\nexport const useTheme = (theme: string): Theme => {\n  const { useProjector } = useContext(ThemeContext);\n  return getTheme({ theme, useProjector });\n};\n\nconst ThemeProvider: FC<ThemeProviderProps> = memo(({ theme = 'light', children }) => {\n  const [useProjector, setUseProjector] = useState(false);\n  const muiTheme = getTheme({ theme, useProjector });\n\n  const toggleTheme = useCallback(() => {\n    setUseProjector(currentUseProjector => !currentUseProjector);\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <ThemeContext.Provider value={{ useProjector, toggleTheme }}>\n        {children}\n      </ThemeContext.Provider>\n    </MuiThemeProvider>\n  );\n});\n\nexport default ThemeProvider;\n","import React, { FC, memo, useCallback, useState, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport { useThemeToggle } from '../ThemeProvider';\n\nimport logo from 'camino-logo-dark.png';\nimport styles from './Header.module.scss';\n\nconst Header: FC = () => {\n  const { resetCurrentCriteria } = useCurrentCriteriaContext();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const toggleTheme = useThemeToggle();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleToggleTheme = useCallback((): void => {\n    toggleTheme();\n    closeMenu();\n  }, [toggleTheme, closeMenu]);\n\n  return (\n    <header className={styles.header}>\n      <Link to=\"/\" className={styles.homeLink} onClick={(): void => resetCurrentCriteria()}>\n        <img src={logo} alt=\"logo\" className={styles.logo} />\n      </Link>\n\n      <button onClick={openMenu} aria-controls=\"options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faCog} />\n      </button>\n\n      <Menu\n        id=\"options-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n      >\n        <MenuItem onClick={handleToggleTheme}>Toggle Theme</MenuItem>\n      </Menu>\n    </header>\n  );\n};\n\nexport default memo(Header);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: '2em',\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary,\n      height: '6em',\n      justifyContent: 'space-between'\n    },\n    backButton: {\n      height: '45px',\n      width: '45px'\n    },\n    navigationIcons: {\n      fontSize: '20px',\n      color: theme.palette.common.gray,\n      cursor: 'pointer'\n    },\n    pathwayName: {\n      fontSize: '1.4em',\n      marginLeft: '1.5em'\n    }\n  }),\n  { name: 'Navigation', index: 1 }\n);\n","import { useEffect, useRef, useState, MutableRefObject } from 'react';\n\nfunction useRefState<T>(initialValue: T): [T, MutableRefObject<T>, Function] {\n  const [state, setState] = useState<T>(initialValue);\n  const stateRef = useRef(state);\n  useEffect(() => {\n    stateRef.current = state;\n  }, [state]);\n  return [state, stateRef, setState];\n}\n\nexport default useRefState;\n","import React, {\n  ReactNode,\n  createContext,\n  useContext,\n  FC,\n  memo,\n  useCallback,\n  MutableRefObject\n} from 'react';\nimport { Pathway } from 'pathways-model';\nimport useRefState from 'utils/useRefState';\n\ninterface CurrentPathwayContextInterface {\n  pathway: Pathway | null;\n  pathwayRef: MutableRefObject<Pathway | null>;\n  setPathway: (value: Pathway) => void;\n}\n\nexport const CurrentPathwayContext = createContext<CurrentPathwayContextInterface>(\n  {} as CurrentPathwayContextInterface\n);\n\ninterface CurrentPathwayProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrentPathwayProvider: FC<CurrentPathwayProviderProps> = memo(({ children }) => {\n  const [pathway, pathwayRef, _setPathway] = useRefState<Pathway | null>(null);\n\n  const setPathway = useCallback(\n    (value: Pathway) => {\n      _setPathway(value);\n    },\n    [_setPathway]\n  );\n\n  return (\n    <CurrentPathwayContext.Provider value={{ pathway, pathwayRef, setPathway }}>\n      {children}\n    </CurrentPathwayContext.Provider>\n  );\n});\n\nexport const useCurrentPathwayContext = (): CurrentPathwayContextInterface =>\n  useContext(CurrentPathwayContext);\n","import { useState, useEffect } from 'react';\nimport { Service } from 'pathways-objects';\n\nfunction getObject(url: string): Promise<Response> {\n  return fetch(url, {\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n}\n\nfunction typedFetch<T>(url: string, raw: boolean, options?: object): Promise<T> {\n  return fetch(url, options).then(\n    response => (raw ? response.text() : response.json()) as Promise<T>\n  );\n}\n\nfunction useGetService<T>(url: string, raw = false): Service<Array<T>> {\n  const [result, setResult] = useState<Service<Array<T>>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    getObject(url)\n      .then(response => response.json() as Promise<string[]>)\n      .then(listOfFiles => listOfFiles.map(f => typedFetch<T>(url + '/' + f, raw)))\n      .then(listOfPromises => Promise.all(listOfPromises))\n      .then(list => setResult({ status: 'loaded', payload: list }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, [url, raw]);\n\n  return result;\n}\n\nexport default useGetService;\n","// External CQL -> ELM service\nimport config from 'utils/ConfigManager';\nimport { ElmLibrary } from 'elm-model';\n\nconst url = config.get('cqlToElmWebserviceUrl');\n\nexport function convertBasicCQL(cql: string): Promise<ElmLibrary> {\n  // Connect to web service\n\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/cql',\n      Accept: 'application/elm+json'\n    },\n    body: cql\n  }).then(elm => elm.json());\n}\n","import React, {\n  createContext,\n  ReactNode,\n  FC,\n  useState,\n  memo,\n  useContext,\n  useCallback,\n  useEffect\n} from 'react';\nimport shortid from 'shortid';\nimport { ElmStatement, ElmLibrary } from 'elm-model';\nimport config from 'utils/ConfigManager';\nimport useGetService from './Services';\nimport { ServiceLoaded } from 'pathways-objects';\nimport { Criteria, BuilderModel } from 'criteria-model';\nimport { convertBasicCQL } from 'engine/cql-to-elm';\n\ninterface CriteriaContextInterface {\n  criteria: Criteria[];\n  addCriteria: (file: File) => void;\n  deleteCriteria: (id: string) => void;\n  addElmCriteria: (elm: ElmLibrary) => Criteria[];\n  addBuilderCriteria: (criteria: BuilderModel, label: string) => Criteria[];\n}\n\nexport const CriteriaContext = createContext<CriteriaContextInterface>(\n  {} as CriteriaContextInterface\n);\n\ninterface CriteriaProviderProps {\n  children: ReactNode;\n}\n\nconst DEFAULT_ELM_STATEMENTS = [\n  'Patient',\n  'MeetsInclusionCriteria',\n  'InPopulation',\n  'Recommendation',\n  'Rationale',\n  'Errors'\n];\n\nfunction builderModelToCriteria(criteria: BuilderModel, label: string): Criteria {\n  return {\n    id: shortid.generate(),\n    label,\n    modified: Date.now(),\n    builder: criteria,\n    statement: label\n  };\n}\nfunction elmLibraryToCriteria(\n  elm: ElmLibrary,\n  cql: string | undefined = undefined,\n  custom = false\n): Criteria[] {\n  const allElmStatements: ElmStatement[] = elm.library.statements.def;\n  let elmStatements = allElmStatements.filter(def => !DEFAULT_ELM_STATEMENTS.includes(def.name));\n  const includesTypes = !!allElmStatements.find(s => s.resultTypeName);\n  if (includesTypes) {\n    // if we have types, filter down to just booleans\n    elmStatements = elmStatements.filter(\n      s => s.resultTypeName === '{urn:hl7-org:elm-types:r1}Boolean'\n    );\n  }\n  if (!elmStatements) {\n    alert('No elm statement found in that file');\n    return [];\n  }\n  const labelTitle = custom\n    ? `Criteria Builder (${elm.library.identifier.id.substring(0, 5)})`\n    : elm.library.identifier.id;\n  return elmStatements.map(statement => {\n    return {\n      id: shortid.generate(),\n      label: `${labelTitle}: ${statement.name}`,\n      version: elm.library.identifier.version,\n      modified: Date.now(),\n      elm: elm,\n      cql: cql,\n      statement: statement.name\n    };\n  });\n}\n\nfunction jsonToCriteria(rawElm: string): Criteria[] | undefined {\n  const elm = JSON.parse(rawElm);\n  if (!elm.library?.identifier) {\n    alert('Please upload ELM file');\n    return;\n  }\n  return elmLibraryToCriteria(elm);\n}\n\nfunction cqlToCriteria(rawCql: string): Promise<Criteria[]> {\n  return convertBasicCQL(rawCql).then(elm => {\n    // the cql-to-elm webservice always responds with ELM\n    // even if the CQL was complete garbage\n    // TODO: consider showing the error messages from the annotations?\n    if (!elm.library?.identifier?.id) {\n      // we're async right now so don't show an error here\n      // just return empty\n      return [];\n    }\n    return elmLibraryToCriteria(elm, rawCql);\n  });\n}\n\nexport const CriteriaProvider: FC<CriteriaProviderProps> = memo(({ children }) => {\n  const [criteria, setCriteria] = useState<Criteria[]>([]);\n  const service = useGetService<string>(config.get('demoCriteria'), true);\n  const payload = (service as ServiceLoaded<string[]>).payload;\n\n  useEffect(() => {\n    if (payload) {\n      const listOfPromises = payload.map(rawCql => cqlToCriteria(rawCql));\n      Promise.all(listOfPromises)\n        .then(listOfLists => listOfLists.flat())\n        .then(newCriteria => setCriteria(newCriteria));\n    }\n  }, [payload]);\n\n  const addCriteria = useCallback((file: File) => {\n    // figure out incoming file type\n    const reader = new FileReader();\n    reader.onload = (event: ProgressEvent<FileReader>): void => {\n      if (event.target?.result) {\n        const rawContent = event.target.result as string;\n        // TODO: more robust file type identification?\n        if (file.name.endsWith('.json')) {\n          const newCriteria = jsonToCriteria(rawContent);\n          if (newCriteria) setCriteria(currentCriteria => [...currentCriteria, ...newCriteria]);\n        } else if (file.name.endsWith('.cql')) {\n          cqlToCriteria(rawContent).then(newCriteria => {\n            if (newCriteria.length > 0) {\n              setCriteria(currentCriteria => [...currentCriteria, ...newCriteria]);\n            } else {\n              alert('No valid criteria were found in the provided file');\n            }\n          });\n        }\n      } else alert('Unable to read that file');\n    };\n    reader.readAsText(file);\n  }, []);\n\n  const deleteCriteria = useCallback((id: string) => {\n    setCriteria(currentCriteria => currentCriteria.filter(criteria => criteria.id !== id));\n  }, []);\n\n  const addElmCriteria = useCallback((elm: ElmLibrary): Criteria[] => {\n    const newCriteria = elmLibraryToCriteria(elm, undefined, true);\n    setCriteria(currentCriteria => [...currentCriteria, ...newCriteria]);\n\n    return newCriteria;\n  }, []);\n\n  const addBuilderCriteria = useCallback((criteria: BuilderModel, label: string): Criteria[] => {\n    const newCriteria = builderModelToCriteria(criteria, label);\n    setCriteria(currentCriteria => [...currentCriteria, newCriteria]);\n\n    return [newCriteria];\n  }, []);\n\n  return (\n    <CriteriaContext.Provider\n      value={{\n        criteria,\n        addCriteria,\n        deleteCriteria,\n        addElmCriteria,\n        addBuilderCriteria\n      }}\n    >\n      {children}\n    </CriteriaContext.Provider>\n  );\n});\n\nexport const useCriteriaContext = (): CriteriaContextInterface => useContext(CriteriaContext);\n","import { PathwayNode, ActionNode, Pathway, Transition } from 'pathways-model';\nimport { History } from 'history';\n\nexport function isActionNode(node: PathwayNode): node is ActionNode {\n  const { action } = node as ActionNode;\n  return action !== undefined;\n}\n\nexport function isBranchNode(node: PathwayNode): boolean {\n  const { action, label, nodeTypeIsUndefined } = node as ActionNode;\n  return action === undefined && label !== 'Start' && !nodeTypeIsUndefined;\n}\n\ntype ConversionResource = {\n  [key: string]: string;\n};\nexport const resourceNameConversion: ConversionResource = {\n  MedicationRequest: 'Medication',\n  ServiceRequest: 'Procedure',\n  CarePlan: 'Regimen'\n};\n\nexport const nodeTypeOptions = [\n  { label: 'Medication', value: 'MedicationRequest' },\n  { label: 'Procedure', value: 'ServiceRequest' },\n  { label: 'Regimen', value: 'CarePlan' },\n  { label: 'Observation', value: 'Observation' }\n];\n\nexport function findParents(pathway: Pathway, childNodeKey: string): string[] {\n  const parents: string[] = [];\n  Object.keys(pathway.nodes).forEach(parentNodeKey => {\n    for (const transition of pathway.nodes[parentNodeKey].transitions) {\n      if (transition.transition === childNodeKey) {\n        parents.push(parentNodeKey);\n        break;\n      }\n    }\n  });\n  return parents;\n}\n\nexport function willOrphanChild(pathway: Pathway, childNodeKey: string): boolean {\n  // Count the number of transitions into the node\n  let transitionCount = 0;\n  Object.keys(pathway.nodes).forEach(nodeKey => {\n    pathway.nodes[nodeKey].transitions.forEach(transition => {\n      if (transition.transition === childNodeKey) transitionCount += 1;\n    });\n  });\n\n  return transitionCount >= 2 ? false : true;\n}\n\nexport function canDeleteNode(pathway: Pathway, transitions: Transition[]): boolean {\n  let canDeleteAllTransitions = true;\n  transitions.forEach(transition => {\n    if (willOrphanChild(pathway, transition.transition)) canDeleteAllTransitions = false;\n  });\n  return canDeleteAllTransitions;\n}\n\nexport function redirect(\n  pathwayId: string,\n  nodeKey: string,\n  history: History<History.PoorMansUnknown>\n): void {\n  const url = `/builder/${encodeURIComponent(pathwayId)}/node/${encodeURIComponent(nodeKey)}`;\n  if (url !== history.location.pathname) {\n    history.push(url);\n  }\n}\n\nconst getAncestorNodes = (\n  pathway: Pathway,\n  rootNodeKey: string,\n  currNodeKey: string\n): Array<PathwayNode> => {\n  let ancestors: Array<PathwayNode> = [];\n  let previousNodes: Array<PathwayNode> = [];\n  const currNode = pathway.nodes[currNodeKey];\n\n  currNode.transitions.forEach(transition => {\n    if (transition.transition === rootNodeKey) ancestors.push(currNode);\n    else {\n      previousNodes = getAncestorNodes(pathway, rootNodeKey, transition.transition);\n      if (previousNodes?.length) {\n        if (!ancestors.some(node => node.key === currNode.key)) ancestors.push(currNode);\n        ancestors = ancestors.concat(previousNodes);\n      }\n    }\n  });\n\n  return ancestors;\n};\n\nexport const getConnectableNodes = (\n  pathway: Pathway,\n  rootNode: PathwayNode\n): Array<{ label: string; value: string }> => {\n  const connectableNodes: Array<{ label: string; value: string }> = [];\n  const ancestorNodes = getAncestorNodes(pathway, rootNode.key ?? '', 'Start');\n  ancestorNodes.push(rootNode);\n\n  Object.keys(pathway.nodes).forEach(nodeKey => {\n    const node = pathway.nodes[nodeKey];\n    const rootNodeConnectsToNode = rootNode.transitions.some(\n      transition => transition.transition === nodeKey\n    );\n    const nodeIsAncestor = ancestorNodes.some(node => node.key === nodeKey);\n    if (!rootNodeConnectsToNode && !nodeIsAncestor && node.key)\n      connectableNodes.push({ label: node.label, value: node.key });\n  });\n\n  return connectableNodes;\n};\n","import { Action, Pathway } from 'pathways-model';\nimport {\n  ActivityDefinition,\n  PlanDefinition,\n  PlanDefinitionAction,\n  Bundle,\n  BundleEntry,\n  Library\n} from 'fhir-objects';\nimport { Criteria } from 'criteria-model';\nimport { v4 as uuidv4 } from 'uuid';\nimport { isActionNode, findParents, isBranchNode } from './nodeUtils';\nimport { R4 } from '@ahryman40k/ts-fhir-types';\n\nconst LIBRARY_DRAFT = R4.LibraryStatusKind._draft;\nconst PLANDEFINITION_DRAFT = R4.PlanDefinitionStatusKind._draft;\nconst ACTIVITYDEFINITION_DRAFT = R4.ActivityDefinitionStatusKind._draft;\nconst BUNDLE_TRANSACTION = R4.BundleTypeKind._transaction;\nconst BUNDLE_PUT = R4.Bundle_RequestMethodKind._put;\nconst CONDITION_APPLICABILITY = R4.PlanDefinition_ConditionKindKind._applicability; // eslint-disable-line\nconst EXPRESSION_CQL = R4.ExpressionLanguageKind._textCql;\n\nexport function createActivityDefinition(action: Action): ActivityDefinition {\n  const activityId = uuidv4();\n  const kind =\n    action.resource.resourceType === 'Procedure' ? 'ServiceRequest' : action.resource.resourceType;\n\n  const activityDefinition: ActivityDefinition = {\n    id: activityId,\n    resourceType: 'ActivityDefinition',\n    meta: {\n      profile: ['http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-publishableactivity']\n    },\n    extension: [\n      {\n        url: 'http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability',\n        valueCode: 'publishable'\n      }\n    ],\n    url: `urn:uuid:${activityId}`,\n    version: '1.0',\n    name: `AD${activityId.substring(0, 7)}`,\n    title: `ActivityDefinition: ${activityId}`,\n    status: ACTIVITYDEFINITION_DRAFT,\n    experimental: true,\n    date: new Date().toISOString(),\n    publisher: 'Logged in user',\n    description: action.description,\n    kind: kind\n  };\n\n  switch (kind) {\n    case 'MedicationRequest':\n      activityDefinition.productCodeableConcept = action.resource.medicationCodeableConcept;\n      break;\n    case 'ServiceRequest':\n    case 'CarePlan':\n      activityDefinition.code = action.resource.code;\n      break;\n    default:\n      // do nothing\n      break;\n  }\n\n  return activityDefinition;\n}\n\nfunction createAction(\n  id: string,\n  description: string,\n  definition: string,\n  resourceType: string\n): PlanDefinitionAction {\n  const cpgAction: PlanDefinitionAction = {\n    id: id,\n    title: `Action: ${id}`,\n    description: description,\n    code: [\n      {\n        coding: [\n          {\n            system: 'http://hl7.org/fhir/uv/cpg/CodeSystem/cpg-common-process',\n            code: 'guideline-based-care',\n            display: 'Guideline-based Care'\n          }\n        ]\n      }\n    ],\n    definitionCanonical: `http://example.com/${resourceType}/${definition}`\n  };\n  return cpgAction;\n}\n\nexport function createPlanDefinition(\n  id: string,\n  title: string,\n  description: string,\n  type: 'strategy' | 'recommendation',\n  libraryId?: string\n): PlanDefinition {\n  const planDefinition: PlanDefinition = {\n    id: id,\n    resourceType: 'PlanDefinition',\n    meta: {\n      profile: [`http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-${type}definition`]\n    },\n    extension: [\n      {\n        url: 'http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability',\n        valueCode: 'executable'\n      }\n    ],\n    url: `urn:uuid:${id}`,\n    version: '1.0',\n    name: `PD${id.substring(0, 7)}`,\n    title: title,\n    type: {\n      coding: [\n        {\n          system: 'http://terminology.hl7.org/CodeSystem/plan-definition-type',\n          code: type === 'strategy' ? 'workflow-definition' : 'eca-rule',\n          display: type === 'strategy' ? 'Workflow Definition' : 'ECA Rule'\n        }\n      ]\n    },\n    status: PLANDEFINITION_DRAFT,\n    experimental: true,\n    publisher: 'Logged in user',\n    description: description,\n    action: []\n  };\n\n  if (type === 'strategy' && libraryId) {\n    planDefinition.library = [libraryId];\n  }\n\n  return planDefinition;\n}\n\nfunction createBundleEntry(resource: PlanDefinition | ActivityDefinition | Library): BundleEntry {\n  return {\n    fullUrl: `http://example.com/${resource.resourceType}/${resource.id}`,\n    resource: resource,\n    request: {\n      method: BUNDLE_PUT,\n      url: `/${resource.resourceType}/${resource.id}`\n    }\n  };\n}\n\n// interface purely for intermediate working objects\ninterface IncludedCqlLibraries {\n  [id: string]: {\n    cql: string;\n    version: string;\n  };\n}\n\nfunction createLibraries(pathway: Pathway, criteria: Criteria[]): Library[] {\n  const libraryId = uuidv4();\n  const libraryName = `LIB${libraryId.substring(0, 7)}`;\n\n  const mainLibrary: Library = {\n    id: libraryId,\n    resourceType: 'Library',\n    meta: {\n      profile: ['http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-executablelibrary']\n    },\n    extension: [\n      {\n        url: 'http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability',\n        valueCode: 'executable'\n      }\n    ],\n    url: `urn:uuid:${libraryId}`,\n    version: '1.0',\n    name: libraryName,\n    title: `Library for ${pathway.name}`,\n    status: LIBRARY_DRAFT,\n    experimental: true,\n    type: {\n      coding: [\n        {\n          system: 'http://terminology.hl7.org/CodeSystem/library-type',\n          code: 'logic-library',\n          display: 'Logic Library'\n        }\n      ]\n    },\n    publisher: 'Logged in user',\n    description: `CQL/ELM library for pathway: ${pathway.name}`,\n    content: []\n  };\n\n  const includedCqlLibraries: IncludedCqlLibraries = {};\n  const referencedDefines: Record<string, string> = {};\n\n  const builderDefines: Record<string, string> = {};\n\n  // iterate through the nodes and find all criteria that are actually used.\n  // for each one, add the criteria CQL to our appropriate map\n  //  - if it's an included library, keep track of the library name and version\n  //    as well as the specific definition we're referencing\n  //  - if it was constructed in the builder, track the name and raw CQL\n  for (const nodeId in pathway.nodes) {\n    const node = pathway.nodes[nodeId];\n    for (const transition of node.transitions) {\n      if (transition.condition?.criteriaSource) {\n        const criteriaSource = criteria.find(c => c.id === transition.condition?.criteriaSource);\n        if (criteriaSource?.elm && criteriaSource?.cql) {\n          const libraryIdentifier = criteriaSource.elm.library.identifier;\n          includedCqlLibraries[libraryIdentifier.id] = {\n            cql: criteriaSource.cql,\n            version: libraryIdentifier.version\n          };\n\n          referencedDefines[transition.condition.cql] = libraryIdentifier.id;\n        } else if (criteriaSource?.builder) {\n          builderDefines[criteriaSource.statement] = criteriaSource.builder.cql;\n        }\n      }\n    }\n  }\n\n  const additionalLibraries: Library[] = Object.entries(includedCqlLibraries).map(\n    ([name, details]) => {\n      const newId = uuidv4();\n      return {\n        id: newId,\n        resourceType: 'Library',\n        url: `urn:uuid:${newId}`,\n        version: details.version,\n        name: name,\n        title: name,\n        status: LIBRARY_DRAFT,\n        experimental: true,\n        type: {\n          coding: [\n            {\n              system: 'http://terminology.hl7.org/CodeSystem/library-type',\n              code: 'logic-library',\n              display: 'Logic Library'\n            }\n          ]\n        },\n        publisher: 'Logged in user',\n        description: `CQL/ELM library for pathway: ${pathway.name} / sublibrary ${name}`,\n        content: [\n          {\n            id: name,\n            contentType: 'text/cql',\n            data: btoa(details.cql),\n            title: `CQL for library ${name}`\n          }\n        ]\n      };\n    }\n  );\n\n  const libraryCql = constructCqlLibrary(\n    libraryName,\n    includedCqlLibraries,\n    referencedDefines,\n    builderDefines\n  );\n\n  mainLibrary.content.push({\n    id: 'navigational-cql',\n    contentType: 'text/cql',\n    data: btoa(libraryCql),\n    title: 'CQL for navigating the pathway'\n  });\n\n  if (pathway.elm) {\n    mainLibrary.content.push(\n      {\n        id: 'navigational-elm',\n        contentType: 'application/elm+json',\n        data: btoa(JSON.stringify(pathway.elm.navigational)),\n        title: 'ELM for navigating the pathway'\n      },\n      {\n        id: 'precondition',\n        contentType: 'application/elm+json',\n        data: btoa(JSON.stringify(pathway.elm.preconditions)),\n        title: 'ELM for pathway preconditions'\n      }\n    );\n  }\n\n  return [mainLibrary, ...additionalLibraries];\n}\n\nfunction constructCqlLibrary(\n  libraryName: string,\n  includedCqlLibraries: IncludedCqlLibraries,\n  referencedDefines: Record<string, string>,\n  builderDefines: Record<string, string>\n): string {\n  const includes = Object.entries(includedCqlLibraries)\n    .map(([name, details]) => `include \"${name}\" version '${details.version}' called ${name}\\n\\n`)\n    .join('');\n  const definesList = Object.entries(referencedDefines).map(\n    ([name, srcLibrary]) => `define \"${name}\": ${srcLibrary}.${name}\\n\\n`\n  );\n\n  Object.entries(builderDefines).forEach(([statement, cql]) =>\n    definesList.push(`define \"${statement}\": ${cql}\\n\\n`)\n  );\n\n  const defines = definesList.join('');\n\n  // NOTE: this library should use the same FHIR version as all referenced libraries\n  // and if we want to run it in cqf-ruler, as of today that needs to be FHIR 4.0.1 (NOT 4.0.0)\n  const libraryCql = `\nlibrary ${libraryName} version '1.0'\n\nusing FHIR version '4.0.1'\n\n${includes}\n\ncontext Patient\n\n${defines}\n`;\n\n  return libraryCql;\n}\n\nexport function toCPG(pathway: Pathway, criteria: Criteria[]): Bundle {\n  const bundle: Bundle = {\n    id: pathway.id,\n    resourceType: 'Bundle',\n    type: BUNDLE_TRANSACTION,\n    entry: []\n  };\n  const libraries = createLibraries(pathway, criteria);\n  const library = libraries[0];\n  const cpgStrategy = createPlanDefinition(\n    uuidv4(),\n    pathway.name,\n    pathway.description,\n    'strategy',\n    library.id\n  );\n\n  Object.keys(pathway.nodes).forEach(key => {\n    const node = pathway.nodes[key];\n    if (isActionNode(node) && node.key && node.action) {\n      const description = `Represents an action for ${node.label}`;\n      const cpgRecommendation = createPlanDefinition(\n        uuidv4(),\n        node.label,\n        description,\n        'recommendation'\n      );\n      const cpgStrategyAction = createAction(\n        node.key,\n        node.label,\n        cpgRecommendation.id,\n        'PlanDefinition'\n      );\n      const parents = findParents(pathway, node.key).map(key => pathway.nodes[key]);\n      parents.forEach(parent => {\n        const transition = parent.transitions.find(\n          transition => transition.transition === node.key\n        );\n        if (isBranchNode(parent) && transition?.condition) {\n          const criteriaSource = criteria.find(c => c.id === transition?.condition?.criteriaSource);\n          const condition = {\n            kind: CONDITION_APPLICABILITY,\n            expression: {\n              // TODO: this would be cleaner if it was \"text/cql.name\" instead of \"text/cql\"\n              // however the typescript type doesn't allow that.\n              // if we do eventually change it to cql.name,\n              // change expression below to just be criteriaSource.statement\n              language: EXPRESSION_CQL,\n              expression: `${library.name}.${criteriaSource?.statement}`\n            }\n          };\n          cpgStrategyAction.condition = cpgStrategyAction.condition || [];\n          cpgStrategyAction.condition?.push(condition);\n        }\n      });\n      const action = node.action;\n      const cpgActivityDefinition = createActivityDefinition(action);\n      const cpgRecommendationAction = createAction(\n        action.id,\n        action.description,\n        cpgActivityDefinition.id,\n        'ActivityDefinition'\n      );\n      cpgRecommendation.action.push(cpgRecommendationAction);\n      bundle.entry.push(createBundleEntry(cpgActivityDefinition));\n      cpgStrategy.action.push(cpgStrategyAction);\n      bundle.entry.push(createBundleEntry(cpgRecommendation));\n    }\n  });\n  libraries.forEach(l => bundle.entry.push(createBundleEntry(l)));\n  bundle.entry.push(createBundleEntry(cpgStrategy));\n\n  return bundle;\n}\n","import {\n  Pathway,\n  Precondition,\n  PathwayNode,\n  Transition,\n  Action,\n  ActionNode,\n  BranchNode\n} from 'pathways-model';\nimport { ElmLibrary, ElmStatement } from 'elm-model';\nimport shortid from 'shortid';\nimport produce from 'immer';\nimport { toCPG } from './cpg';\nimport { Criteria } from 'criteria-model';\n\nexport function createNewPathway(name: string, description: string, pathwayId?: string): Pathway {\n  return {\n    id: pathwayId ?? shortid.generate(),\n    name: name,\n    description: description,\n    library: '',\n    preconditions: [],\n    nodes: {\n      Start: {\n        key: 'Start',\n        label: 'Start',\n        transitions: []\n      }\n    }\n  };\n}\n\nexport function downloadPathway(pathway: Pathway, criteria: Criteria[], cpg = false): void {\n  const pathwayString = exportPathway(pathway, criteria, cpg);\n  // Create blob from pathwayString to save to file system\n  const pathwayBlob = new Blob([pathwayString], {\n    type: 'application/json'\n  });\n  // Temporarily create hidden <a> tag to download pathwayBlob\n  // File name is set to <pathway-name>.json\n  const url = window.URL.createObjectURL(pathwayBlob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = `${pathway.name}.json`;\n  a.click();\n  window.URL.revokeObjectURL(url);\n}\n\nexport function exportPathway(pathway: Pathway, criteria: Criteria[], cpg: boolean): string {\n  const elm = generateNavigationalElm(pathway);\n  const pathwayWithElm = setNavigationalElm(pathway, elm);\n  const pathwayToExport = cpg ? toCPG(pathwayWithElm, criteria) : pathwayWithElm;\n  return JSON.stringify(pathwayToExport, undefined, 2);\n}\n\nfunction generateNavigationalElm(pathway: Pathway): ElmLibrary {\n  const elm: ElmLibrary = {\n    library: {\n      identifier: {\n        id: pathway.id,\n        version: '1.0.0'\n      },\n      schemaIdentifier: {\n        id: 'urn:hl7-org:elm',\n        version: 'r1'\n      },\n      usings: {\n        def: [\n          {\n            localIdentifier: 'System',\n            uri: 'urn:hl7-org:elm-types:r1'\n          },\n          {\n            localId: '1',\n            locator: '3:1-3:26',\n            localIdentifier: 'FHIR',\n            uri: 'http://hl7.org/fhir',\n            version: '4.0.0'\n          }\n        ]\n      },\n      statements: {\n        def: [\n          {\n            locator: '13:1-13:15',\n            name: 'Patient',\n            context: 'Patient',\n            expression: {\n              type: 'SingletonFrom',\n              operand: {\n                locator: '13:1-13:15',\n                dataType: '{http://hl7.org/fhir}Patient',\n                type: 'Retrieve'\n              }\n            }\n          }\n        ]\n      },\n      includes: { def: [] },\n      valueSets: { def: [] },\n      codes: { def: [] },\n      codeSystems: { def: [] }\n    }\n  };\n\n  Object.keys(pathway.nodes).forEach((nodeKey: string) => {\n    const node = pathway.nodes[nodeKey];\n    if ('elm' in node && node.elm) {\n      mergeElm(elm, node.elm);\n      const elmStatement = produce(getElmStatement(node.elm), (draftElmStatement: ElmStatement) => {\n        draftElmStatement.name = node.key;\n      });\n      elm.library.statements.def.push(elmStatement);\n    }\n\n    node.transitions.forEach((transition: Transition) => {\n      if (transition.condition?.elm) {\n        // Add tranistion.condition.elm to elm\n        mergeElm(elm, transition.condition.elm);\n        const elmStatement = produce(\n          getElmStatement(transition.condition.elm),\n          (draftElmStatement: ElmStatement) => {\n            draftElmStatement.name = transition.condition?.description ?? 'Unknown';\n          }\n        );\n        elm.library.statements.def.push(elmStatement);\n      }\n    });\n  });\n\n  return elm;\n}\n\nfunction mergeElm(elm: ElmLibrary, additionalElm: ElmLibrary): void {\n  // Merge usings\n  additionalElm.library.usings?.def.forEach(using => {\n    // Check if it is in ELM\n    if (!elm.library.usings?.def.find(def => def.uri === using.uri))\n      elm.library.usings?.def.push(using);\n  });\n\n  // Merge includes\n  additionalElm.library.includes?.def.forEach(include => {\n    if (!elm.library.includes?.def.find(def => def.path === include.path))\n      elm.library.includes?.def.push(include);\n  });\n\n  // Merge valueSets\n  additionalElm.library.valueSets?.def.forEach(valueSet => {\n    if (!elm.library.valueSets?.def.find(def => def.id === valueSet.id))\n      elm.library.valueSets?.def.push(valueSet);\n  });\n  // Merge codes\n  additionalElm.library.codes?.def.forEach(code => {\n    if (!elm.library.codes?.def.find(def => def.name === code.name))\n      elm.library.codes?.def.push(code);\n  });\n  // Merge codesystems\n  additionalElm.library.codeSystems?.def.forEach(codesystem => {\n    if (!elm.library.codeSystems?.def.find(def => def.name === codesystem.name))\n      elm.library.codeSystems?.def.push(codesystem);\n  });\n\n  // TODO: merge concepts\n}\n\nfunction getElmStatement(elm: ElmLibrary): ElmStatement {\n  const defaultStatementNames = [\n    'Patient',\n    'MeetsInclusionCriteria',\n    'InPopulation',\n    'Recommendation',\n    'Rationale',\n    'Errors'\n  ];\n  const elmStatement = elm.library.statements.def.find(\n    def => !defaultStatementNames.includes(def.name)\n  );\n\n  // elmStatement type is ElmStatement | undefined but criteria\n  // provider validates such a statement exists in the elm\n  return elmStatement as ElmStatement;\n}\n\n// TODO: possibly add more precondition methods\nexport function addPrecondition(\n  pathway: Pathway,\n  id: string,\n  elementName: string,\n  expected: string,\n  cql: string\n): Pathway {\n  const precondition: Precondition = {\n    id: id,\n    elementName: elementName,\n    expected: expected,\n    cql: cql\n  };\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.preconditions.push(precondition);\n  });\n}\n\nexport function setNavigationalElm(pathway: Pathway, elm: object): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if (!draftPathway.elm) draftPathway.elm = {};\n    draftPathway.elm.navigational = elm;\n  });\n}\n\nexport function setPreconditionElm(pathway: Pathway, elm: object): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if (!draftPathway.elm) draftPathway.elm = {};\n    draftPathway.elm.preconditions = elm;\n  });\n}\n\nexport function createNode(key?: string): PathwayNode {\n  if (!key) key = shortid.generate();\n  const node: PathwayNode = {\n    key,\n    label: 'New Node',\n    transitions: [],\n    nodeTypeIsUndefined: true\n  };\n\n  return node;\n}\n\nexport function addNode(pathway: Pathway, node: PathwayNode): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.nodes[node.key] = node;\n  });\n}\n\nexport function setNodeLabel(pathway: Pathway, key: string, label: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.nodes[key].label = label;\n  });\n}\n\nexport function setNodeType(pathway: Pathway, nodeKey: string, nodeType: string): Pathway {\n  let action: Action;\n  let newPathway: Pathway;\n  switch (nodeType) {\n    case 'MedicationRequest':\n      newPathway = makeNodeAction(pathway, nodeKey);\n      action = {\n        type: 'create',\n        description: '',\n        id: shortid.generate(),\n        resource: {\n          resourceType: nodeType,\n          medicationCodeableConcept: {\n            coding: [\n              {\n                system: '',\n                code: '',\n                display: ''\n              }\n            ]\n          }\n        }\n      };\n      return setNodeAction(newPathway, nodeKey, action);\n    case 'ServiceRequest':\n      newPathway = makeNodeAction(pathway, nodeKey);\n      action = {\n        type: 'create',\n        description: '',\n        id: shortid.generate(),\n        resource: {\n          resourceType: nodeType,\n          code: {\n            coding: [\n              {\n                system: '',\n                code: '',\n                display: ''\n              }\n            ]\n          }\n        }\n      };\n      return setNodeAction(newPathway, nodeKey, action);\n    case 'CarePlan':\n      newPathway = makeNodeAction(pathway, nodeKey);\n      action = {\n        type: 'create',\n        description: '',\n        id: shortid.generate(),\n        resource: {\n          resourceType: nodeType,\n          title: ''\n        }\n      };\n      return setNodeAction(newPathway, nodeKey, action);\n    case 'Observation':\n      return makeNodeBranch(pathway, nodeKey);\n    default:\n      console.error('Unknown nodeType: ' + nodeType);\n      return pathway;\n  }\n}\n\nexport function setNodeAction(pathway: Pathway, key: string, action: Action): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as ActionNode).action = action;\n  });\n}\n\nexport function setNodeMcodeCriteria(\n  pathway: Pathway,\n  key: string,\n  mcodeCriteria: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as BranchNode).mcodeCriteria = mcodeCriteria;\n  });\n}\n\nexport function setNodeOtherCriteria(\n  pathway: Pathway,\n  key: string,\n  otherCriteria: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as BranchNode).otherCriteria = otherCriteria;\n  });\n}\n\nexport function addTransition(pathway: Pathway, startNodeKey: string, endNodeKey: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transition: Transition = {\n      id: shortid.generate(),\n      transition: endNodeKey\n    };\n\n    draftPathway.nodes[startNodeKey].transitions.push(transition);\n  });\n}\n\nexport function setTransitionCondition(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string,\n  criteria: Criteria\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const foundTransition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n\n    if (foundTransition) {\n      foundTransition.condition = {\n        description: description,\n        cql: criteria.statement,\n        elm: criteria.elm,\n        criteriaSource: criteria.id\n      };\n    }\n  });\n}\n\nexport function setActionNodeElm(pathway: Pathway, nodeKey: string, elm: ElmLibrary): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[nodeKey] as ActionNode).elm = elm;\n    (draftPathway.nodes[nodeKey] as ActionNode).cql = getElmStatement(elm).name;\n  });\n}\n\nexport function getNodeType(node?: ActionNode | BranchNode | PathwayNode | null): string {\n  if (!node || node.nodeTypeIsUndefined) {\n    return 'null';\n  } else if (!(node as ActionNode).action && node.key !== 'Start') {\n    return 'branch';\n  } else {\n    return 'action';\n  }\n}\n\n/*\nSet Element Functions\n*/\nexport function setPathwayName(pathway: Pathway, name: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.name = name;\n  });\n}\n\nexport function setPathwayDescription(pathway: Pathway, description: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.description = description;\n  });\n}\n\nexport function setLibrary(pathway: Pathway, library: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.library = library;\n  });\n}\n\nexport function setTransition(\n  pathway: Pathway,\n  startNodeKey: string,\n  endNodeKey: string,\n  transitionId: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n    if (transition) transition.transition = endNodeKey;\n  });\n}\n\nexport function setTransitionConditionDescription(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const foundTransition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n\n    if (foundTransition?.condition) {\n      foundTransition.condition.description = description;\n    } else if (foundTransition) {\n      foundTransition.condition = {\n        description: description,\n        cql: ''\n      };\n    }\n  });\n}\n\nexport function setTransitionConditionElm(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  criteria: Criteria\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const foundTransition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n\n    if (foundTransition?.condition) {\n      foundTransition.condition.elm = criteria.elm;\n      foundTransition.condition.cql = criteria.statement;\n    }\n  });\n}\n\nexport function setActionCode(action: Action, code: string): Action {\n  return produce(action, (draftAction: Action) => {\n    if (draftAction.resource.medicationCodeableConcept) {\n      draftAction.resource.medicationCodeableConcept.coding[0].code = code;\n    } else {\n      draftAction.resource.code.coding[0].code = code;\n    }\n  });\n}\n\nexport function setActionCodeSystem(action: Action, codeSystem: string): Action {\n  return produce(action, (draftAction: Action) => {\n    if (draftAction.resource.medicationCodeableConcept) {\n      draftAction.resource.medicationCodeableConcept.coding[0].system = codeSystem;\n    } else {\n      draftAction.resource.code.coding[0].system = codeSystem;\n    }\n  });\n}\n\nexport function setActionDescription(action: Action, description: string): Action {\n  return produce(action, (draftaction: Action) => {\n    draftaction.description = description;\n  });\n}\n\nexport function setActionTitle(action: Action, title: string): Action {\n  return produce(action, (draftaction: Action) => {\n    draftaction.resource.title = title;\n  });\n}\n\nexport function setActionResourceDisplay(action: Action, display: string): Action {\n  return produce(action, (draftAction: Action) => {\n    if (draftAction.resource.medicationCodeableConcept) {\n      draftAction.resource.medicationCodeableConcept.coding[0].display = display;\n    } else if (draftAction.resource.title) {\n      draftAction.resource.description = display;\n    } else {\n      draftAction.resource.code.coding[0].display = display;\n    }\n  });\n}\n\nexport function makeNodeAction(pathway: Pathway, nodeKey: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const node = draftPathway.nodes[nodeKey] as ActionNode;\n\n    if (node.cql === undefined && node.action === undefined) {\n      node.cql = '';\n      node.nodeTypeIsUndefined = undefined;\n    }\n\n    node.transitions.forEach(transition => {\n      delete transition.condition;\n    });\n  });\n}\n\nexport function makeNodeBranch(pathway: Pathway, nodeKey: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const node = draftPathway.nodes[nodeKey] as ActionNode;\n\n    if (\n      node.cql !== undefined ||\n      node.elm !== undefined ||\n      node.action !== undefined ||\n      node.nodeTypeIsUndefined !== undefined\n    ) {\n      delete node.cql;\n      delete node.elm;\n      delete node.action;\n      delete node.nodeTypeIsUndefined;\n    }\n  });\n}\n\nexport function createCQL(action: Action, nodeKey: string): string {\n  const resource = action.resource;\n  // CQl identifier cannot start with a number or contain '-'\n  const cqlId = `cql${shortid.generate().replace(/-/g, 'a')}`;\n  let cql = `library ${cqlId} version '1'\\nusing FHIR version '4.0.0'\\n`;\n\n  const codesystemStatement = (system: string): string => `codesystem \"${system}\": '${system}'\\n`;\n\n  const returnStatement = (resourceType: string): string =>\n    `return Tuple{ resourceType: '${resourceType}', id: R.id.value, status: R.status.value}`;\n\n  const retrieveStatement = (resourceType: string): string => `[${resourceType}: \"${cqlId} code\"]`;\n\n  const defineStatement = (): string => `define \"${nodeKey}\":`;\n\n  if (resource.resourceType === 'MedicationRequest') {\n    const coding = resource.medicationCodeableConcept.coding[0];\n\n    cql += codesystemStatement(coding.system);\n\n    // eslint-disable-next-line\n    cql += `code \"${cqlId} code\": '${escape(coding.code)}' from \"${coding.system}\" display '${\n      coding.display\n    }'\\n`;\n    cql += `${defineStatement()}\n      ${retrieveStatement('MedicationRequest')} R ${returnStatement('MedicationRequest')}`;\n  } else if (resource.resourceType === 'ServiceRequest') {\n    const coding = resource.code.coding[0];\n\n    cql += codesystemStatement(coding.system);\n\n    // eslint-disable-next-line\n    cql += `code \"${cqlId} code\": '${escape(coding.code)}' from \"${coding.system}\" display '${\n      coding.display\n    }'\\n`;\n    cql += `${defineStatement()}\n      if exists ${retrieveStatement('Procedure')} \n      then ${retrieveStatement('Procedure')} R ${returnStatement('Procedure')} \n      else ${retrieveStatement('ServiceRequest')} R ${returnStatement('ServiceRequest')}`;\n  } else if (resource.resourceType === 'CarePlan') {\n    cql += `${defineStatement()}\n      [CarePlan] R where R.title.value = '${escape(resource.title)}' ${returnStatement(\n      'CarePlan'\n    )}`;\n  } else {\n    console.error(\n      'Auto generating CQL for action - unsupported resource type: ' + resource.resourceType\n    );\n  }\n\n  return cql;\n}\n\n/*\nRemove Element Function\n*/\nexport function removePrecondition(pathway: Pathway, id: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const preconditions = draftPathway.preconditions.filter(\n      (precondition: Precondition) => precondition.id !== id\n    );\n    draftPathway.preconditions = preconditions;\n  });\n}\n\nexport function removeNavigationalElm(pathway: Pathway): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.elm?.navigational;\n  });\n}\n\nexport function removePreconditionElm(pathway: Pathway): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.elm?.preconditions;\n  });\n}\n\nexport function removeNode(pathway: Pathway, key: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.nodes[key];\n\n    Object.keys(draftPathway.nodes).forEach((nodeKey: string) => {\n      const node = draftPathway.nodes[nodeKey];\n      node.transitions.forEach((transition: Transition) => {\n        if (transition.transition === key)\n          draftPathway.nodes[nodeKey].transitions = draftPathway.nodes[nodeKey].transitions.filter(\n            (filterTransition: Transition) => transition.id !== filterTransition.id\n          );\n      });\n    });\n  });\n}\n\nexport function removeTransitionCondition(\n  pathway: Pathway,\n  nodeKey: string,\n  transitionId: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transition = draftPathway.nodes[nodeKey].transitions.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n    if (transition) delete transition.condition;\n  });\n}\n\nexport function removeTransition(\n  pathway: Pathway,\n  parentNodeKey: string,\n  childNodeKey: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transitions = draftPathway.nodes[parentNodeKey].transitions.filter(\n      (transition: Transition) => transition.transition !== childNodeKey\n    );\n    draftPathway.nodes[parentNodeKey].transitions = transitions;\n  });\n}\n","import React, { FC, memo } from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport { downloadPathway } from 'utils/builder';\n\ninterface ExportMenuPropsInterface {\n  anchorEl: HTMLElement | null;\n  closeMenu: () => void;\n}\n\nconst ExportMenu: FC<ExportMenuPropsInterface> = ({ anchorEl, closeMenu }) => {\n  const { pathway } = useCurrentPathwayContext();\n  const { criteria } = useCriteriaContext();\n\n  return (\n    <Menu\n      id=\"pathway-options-menu\"\n      anchorEl={anchorEl}\n      getContentAnchorEl={null}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n      keepMounted\n      open={Boolean(anchorEl)}\n      onClose={closeMenu}\n    >\n      <MenuItem\n        onClick={(): void => {\n          if (pathway) downloadPathway(pathway, criteria);\n          else alert('No pathway to download!');\n          closeMenu();\n        }}\n      >\n        Export Pathway\n      </MenuItem>\n      <MenuItem\n        onClick={(): void => {\n          if (pathway) downloadPathway(pathway, criteria, true);\n          else alert('No pathway to download!');\n          closeMenu();\n        }}\n      >\n        Export to CPG\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(ExportMenu);\n","import React, { FC, useCallback, useState, MouseEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faEllipsisH } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton } from '@material-ui/core';\n\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport ExportMenu from 'components/elements/ExportMenu';\n\nconst Navigation: FC = () => {\n  const { resetCurrentCriteria } = useCurrentCriteriaContext();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const { pathway } = useCurrentPathwayContext();\n  const styles = useStyles();\n  const history = useHistory();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleGoBack = useCallback((): void => {\n    resetCurrentCriteria();\n    history.push('/');\n  }, [history, resetCurrentCriteria]);\n\n  return (\n    <nav className={styles.root}>\n      <div>\n        <IconButton className={styles.backButton} onClick={handleGoBack} aria-label=\"go back\">\n          <FontAwesomeIcon icon={faChevronLeft} className={styles.navigationIcons} />\n        </IconButton>\n\n        <span className={styles.pathwayName}>{pathway?.name}</span>\n      </div>\n      <IconButton onClick={openMenu} aria-controls=\"pathway-options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faEllipsisH} className={styles.navigationIcons} />\n      </IconButton>\n      <ExportMenu anchorEl={anchorEl} closeMenu={closeMenu} />\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  ReactNode\n} from 'react';\nimport { Pathway } from 'pathways-model';\nimport { ServiceLoaded } from 'pathways-objects';\nimport config from 'utils/ConfigManager';\nimport useGetService from './Services';\nimport useRefState from 'utils/useRefState';\n\ninterface PathwaysContextInterface {\n  pathways: Pathway[];\n  status: string;\n  addPathway: (pathway: Pathway) => void;\n  deletePathway: (id: string) => void;\n  updatePathway: (pathway: Pathway) => void;\n}\n\nexport const PathwaysContext = createContext<PathwaysContextInterface>(\n  {} as PathwaysContextInterface\n);\n\ninterface PathwaysProviderProps {\n  children: ReactNode;\n}\n\nexport const PathwaysProvider: FC<PathwaysProviderProps> = memo(function PathwaysProvider({\n  children\n}) {\n  const [pathways, pathwaysRef, setPathways] = useRefState<Pathway[]>([]);\n  const service = useGetService<Pathway>(config.get('demoPathwaysService'));\n  const servicePayload = (service as ServiceLoaded<Pathway[]>).payload;\n\n  const addPathway = useCallback(\n    (pathway: Pathway) => {\n      setPathways((currentPathways: Pathway[]) => [...currentPathways, pathway]);\n    },\n    [setPathways]\n  );\n\n  const deletePathway = useCallback(\n    (id: string) => {\n      setPathways((currentPathways: Pathway[]) =>\n        currentPathways.filter(pathway => pathway.id !== id)\n      );\n    },\n    [setPathways]\n  );\n\n  const updatePathway = useCallback(\n    (newPathway: Pathway) => {\n      const index = pathwaysRef.current.findIndex(pathway => pathway.id === newPathway.id);\n      setPathways((currentPathways: Pathway[]) => [\n        ...currentPathways.slice(0, index),\n        newPathway,\n        ...currentPathways.slice(index + 1)\n      ]);\n    },\n    [pathwaysRef, setPathways]\n  );\n\n  useEffect(() => {\n    if (servicePayload) setPathways(servicePayload);\n  }, [servicePayload, setPathways]);\n\n  switch (service.status) {\n    case 'error':\n      return <div>Error loading pathways</div>;\n\n    default:\n      return (\n        <PathwaysContext.Provider\n          value={{\n            pathways,\n            addPathway,\n            deletePathway,\n            updatePathway,\n            status: service.status\n          }}\n        >\n          {children}\n        </PathwaysContext.Provider>\n      );\n  }\n});\n\nexport const usePathwaysContext = (): PathwaysContextInterface => useContext(PathwaysContext);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding,\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.common.gray,\n      width: '33%',\n      minWidth: '550px',\n      overflowY: 'scroll'\n    },\n    formControl: {\n      margin: theme.spacing(1, 0),\n      minWidth: 375\n    },\n    divider: {\n      width: '100%'\n    },\n    headerLabelStart: {\n      cursor: 'default'\n    },\n    displayText: {\n      margin: '0 0 5px 0',\n      fontWeight: 900,\n      fontSize: '1em'\n    },\n    sidebarHeader: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    sidebarHeaderGroup: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    sidebarHeaderButton: {\n      height: '45px',\n      width: '45px',\n      color: theme.palette.text.primary\n    },\n    headerLabelGroup: {\n      display: 'flex',\n      cursor: 'pointer',\n      height: '60px'\n    },\n    headerLabel: {\n      display: 'flex',\n      alignItems: 'center',\n      fontSize: '1.6em',\n      fontWeight: 700,\n      margin: '0 5px'\n    },\n    headerLabelText: {\n      marginBottom: '5px'\n    },\n    editIcon: {\n      fontSize: '0.6em',\n      marginLeft: '10px'\n    },\n    sidebarButtonGroup: {\n      display: 'flex',\n      margin: '10px 0'\n    },\n    sidebarButtonGroupExtraMargin: {\n      display: 'flex',\n      margin: '20px 0 10px 0'\n    },\n    sidebarButton: {\n      minWidth: 180,\n      marginRight: '20px'\n    },\n    sidebarButtonText: {\n      fontStyle: 'italic'\n    },\n    outlinedDiv: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      '& div': {\n        width: '100%'\n      }\n    },\n    outlinedDivError: {\n      borderColor: `${theme.palette.error.main} !important`,\n      '&:hover': {\n        borderColor: `${theme.palette.error.main} !important`\n      }\n    },\n    toggleSidebar: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      float: 'left',\n      width: '50px',\n      minWidth: '50px',\n      height: '50px',\n      fontSize: '2em',\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.text.primary,\n      '&:hover': {\n        cursor: 'pointer'\n      }\n    },\n    cancelButton: {\n      alignSelf: 'flex-end',\n      marginTop: '5px',\n      padding: '5px 15px',\n      fontSize: '1em'\n    },\n    buildCriteriaContainer: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    buildCriteriaText: {\n      marginTop: '0.5em',\n      marginBottom: '1em'\n    },\n    saveButton: {\n      marginLeft: '1em',\n      backgroundColor: theme.palette.error.main,\n      borderColor: theme.palette.error.main,\n      '&:hover': {\n        backgroundColor: theme.palette.error.main\n      }\n    },\n    transitionContainer: {\n      backgroundColor: theme.palette.common.grayVeryDark,\n      padding: '5px 15px',\n      margin: '15px 0'\n    },\n    dividerHeader: {\n      width: '100%',\n      textTransform: 'uppercase',\n      borderBottom: '1px solid ' + theme.palette.common.blueLighter,\n      color: theme.palette.common.blueLighter,\n      lineHeight: '0.1em',\n      margin: '10px 0 20px',\n      fontWeight: 800,\n      paddingLeft: '15px',\n      '& span': {\n        background: theme.palette.common.gray,\n        padding: '0 10px'\n      }\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    },\n    dialogContent: {\n      color: theme.palette.common.black,\n      fontSize: '16px',\n      display: 'flex',\n      marginTop: '-25px'\n    },\n    dialogContentText: {\n      paddingLeft: '10px',\n      lineHeight: '40px'\n    },\n    alertIcon: {\n      color: theme.palette.common.red,\n      fontSize: '40px'\n    },\n    connectDropdown: {\n      margin: 'auto',\n      display: 'flex',\n      flexDirection: 'column',\n      flexWrap: 'nowrap',\n      alignContent: 'center'\n    },\n    connectText: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      fontSize: '0.95em',\n      fontStyle: 'italic'\n    },\n    cancelButtonDropdown: {\n      marginLeft: 'auto',\n      border: 'none',\n      alignSelf: 'center',\n      color: theme.palette.common.blueLighter,\n      fontSize: '1em',\n      fontStyle: 'italic',\n      textTransform: 'none'\n    }\n  }),\n  { name: 'Sidebar', index: 1 }\n);\n","import React, {\n  MutableRefObject,\n  createContext,\n  useCallback,\n  memo,\n  ReactNode,\n  FC,\n  useContext\n} from 'react';\nimport { PathwayNode } from 'pathways-model';\nimport useRefState from 'utils/useRefState';\n\ninterface CurrentNodeContextInterface {\n  currentNode: PathwayNode | null;\n  currentNodeRef: MutableRefObject<PathwayNode | null>;\n  setCurrentNode: (value: PathwayNode) => void;\n}\n\nexport const CurrentNodeContext = createContext<CurrentNodeContextInterface>(\n  {} as CurrentNodeContextInterface\n);\n\ninterface CurrentNodeProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrentNodeProvider: FC<CurrentNodeProviderProps> = memo(({ children }) => {\n  const [currentNode, currentNodeRef, _setCurrentNode] = useRefState<PathwayNode | null>(null);\n\n  const setCurrentNode = useCallback(\n    (value: PathwayNode) => {\n      _setCurrentNode(value);\n    },\n    [_setCurrentNode]\n  );\n\n  return (\n    <CurrentNodeContext.Provider value={{ currentNode, currentNodeRef, setCurrentNode }}>\n      {children}\n    </CurrentNodeContext.Provider>\n  );\n});\n\nexport const useCurrentNodeContext = (): CurrentNodeContextInterface =>\n  useContext(CurrentNodeContext);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { InputLabel, FormControl, Select, MenuItem } from '@material-ui/core';\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface DropDownProps {\n  id: string;\n  label: string;\n  options: Array<Option>;\n  value?: string;\n  onChange: Function | null;\n}\n\nconst DropDown: FC<DropDownProps> = ({ id, label, options, value, onChange }: DropDownProps) => {\n  const handleSetSelected = useCallback(\n    (event: ChangeEvent<{ value: unknown }>): void => {\n      if (onChange) onChange(event);\n    },\n    [onChange]\n  );\n\n  return (\n    <FormControl variant=\"outlined\" fullWidth>\n      <InputLabel id={id} htmlFor={`${id}-select`}>\n        {label}\n      </InputLabel>\n\n      <Select\n        id={`${id}-select`}\n        value={value || ''}\n        onChange={handleSetSelected}\n        label={label}\n        error={value == null || value === ''}\n        MenuProps={{\n          getContentAnchorEl: null,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'center'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          }\n        }}\n        displayEmpty\n      >\n        {options.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(DropDown);\n","import React, {\n  FC,\n  createContext,\n  useState,\n  memo,\n  ReactNode,\n  useContext,\n  useCallback\n} from 'react';\n\ninterface SnackbarContextInterface {\n  snackbarText: string;\n  openSnackbar: boolean;\n  handleCloseSnackbar: () => void;\n  setSnackbarText: (value: string) => void;\n  setOpenSnackbar: (value: boolean) => void;\n}\n\nexport const SnackbarContext = createContext<SnackbarContextInterface>(\n  {} as SnackbarContextInterface\n);\n\ninterface SnackbarProviderProps {\n  children: ReactNode;\n}\n\nexport const SnackbarProvider: FC<SnackbarProviderProps> = memo(({ children }) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n  const [snackbarText, setSnackbarText] = useState<string>('Deleted Successfully');\n\n  const handleCloseSnackbar = useCallback(() => {\n    setOpenSnackbar(false);\n  }, [setOpenSnackbar]);\n\n  return (\n    <SnackbarContext.Provider\n      value={{ snackbarText, openSnackbar, handleCloseSnackbar, setSnackbarText, setOpenSnackbar }}\n    >\n      {children}\n    </SnackbarContext.Provider>\n  );\n});\n\nexport const useSnackbarContext = (): SnackbarContextInterface => useContext(SnackbarContext);\n","import React, { FC, memo } from 'react';\nimport { Snackbar, Button, IconButton } from '@material-ui/core';\nimport { useSnackbarContext } from 'components/SnackbarProvider';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst DeleteSnackbar: FC = () => {\n  const { snackbarText, openSnackbar, handleCloseSnackbar } = useSnackbarContext();\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right'\n      }}\n      open={openSnackbar}\n      autoHideDuration={10000}\n      onClose={handleCloseSnackbar}\n      message={snackbarText}\n      action={\n        <React.Fragment>\n          <Button color=\"secondary\" size=\"small\" onClick={handleCloseSnackbar}>\n            UNDO\n          </Button>\n          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\n            <FontAwesomeIcon icon={faTimes} />\n          </IconButton>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default memo(DeleteSnackbar);\n","import React, { useState, memo, useCallback, ChangeEvent, FC } from 'react';\nimport { SidebarButton } from 'components/Sidebar';\nimport DropDown from 'components/elements/DropDown';\nimport useStyles from './styles';\nimport { addTransition } from 'utils/builder';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport { getConnectableNodes } from 'utils/nodeUtils';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\n\nimport { faLevelDownAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nconst ConnectNodeButton: FC = () => {\n  const { pathway, pathwayRef } = useCurrentPathwayContext();\n  const { currentNode, currentNodeRef } = useCurrentNodeContext();\n  const { updatePathway } = usePathwaysContext();\n\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const options: Array<{ label: string; value: string }> =\n    currentNode && pathway ? getConnectableNodes(pathway, currentNode) : [];\n  const optionsAvailable = options.length > 0;\n\n  const connectToNode = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      const nodeKey = event?.target.value;\n      if (pathwayRef.current && currentNodeRef.current)\n        updatePathway(addTransition(pathwayRef.current, currentNodeRef.current.key, nodeKey));\n      setOpen(false);\n    },\n    [updatePathway, currentNodeRef, pathwayRef]\n  );\n\n  const showDropdown = useCallback(() => {\n    setOpen(!open);\n  }, [open]);\n\n  return (\n    <div>\n      {!open && (\n        <SidebarButton\n          buttonName=\"Connect Node\"\n          buttonIcon={faLevelDownAlt}\n          buttonText=\"Create a transition to an existing node in the pathway.\"\n          onClick={showDropdown}\n          disabled={!optionsAvailable}\n          hasTooltip={!optionsAvailable}\n          tooltipTitle=\"There are no possible nodes to connect to.\"\n        />\n      )}\n      {open && optionsAvailable && (\n        <div className={styles.connectDropdown}>\n          <DropDown\n            id=\"transitions\"\n            label=\"Node To Connect To\"\n            options={options}\n            onChange={connectToNode}\n          />\n          <div className={styles.connectText}>\n            Select node from list to add transition.\n            <Button\n              className={styles.cancelButtonDropdown}\n              size=\"small\"\n              variant=\"text\"\n              onClick={showDropdown}\n            >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(ConnectNodeButton);\n","import React, { FC, memo, useCallback, useState, useRef, ChangeEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport {\n  SidebarHeader,\n  ActionNodeEditor,\n  SidebarButton,\n  TransitionEditor,\n  BranchTransition\n} from 'components/Sidebar';\nimport { setNodeType, addTransition, createNode, addNode, getNodeType } from 'utils/builder';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { isBranchNode, redirect } from 'utils/nodeUtils';\nimport { nodeTypeOptions } from 'utils/nodeUtils';\nimport DropDown from 'components/elements/DropDown';\nimport DeleteSnackbar from './DeleteSnackbar';\nimport ConnectNodeButton from 'components/Sidebar/ConnectNodeButton';\n\nconst Sidebar: FC = () => {\n  const { updatePathway } = usePathwaysContext();\n  const { pathway, pathwayRef } = useCurrentPathwayContext();\n  const { currentNode, currentNodeRef } = useCurrentNodeContext();\n  const [isExpanded, setIsExpanded] = useState<boolean>(true);\n  const styles = useStyles();\n  const history = useHistory();\n  const sidebarContainerElement = useRef<HTMLDivElement>(null);\n\n  const toggleSidebar = useCallback((): void => {\n    setIsExpanded(!isExpanded);\n  }, [isExpanded]);\n\n  const changeNodeType = useCallback(\n    (nodeType: string): void => {\n      if (currentNodeRef.current && pathwayRef.current)\n        updatePathway(setNodeType(pathwayRef.current, currentNodeRef.current.key, nodeType));\n    },\n    [pathwayRef, updatePathway, currentNodeRef]\n  );\n\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  const addPathwayNode = useCallback((): void => {\n    if (!currentNodeRef.current || !pathwayRef.current) return;\n\n    const newNode = createNode();\n    let newPathway = addNode(pathwayRef.current, newNode);\n    newPathway = addTransition(newPathway, currentNodeRef.current.key, newNode.key);\n    updatePathway(newPathway);\n    if (!isBranchNode(currentNodeRef.current))\n      redirect(pathwayRef.current.id, newNode.key, history);\n  }, [pathwayRef, updatePathway, currentNodeRef, history]);\n\n  if (!pathway) return <div>Error: No pathway</div>;\n  if (!currentNode) return <div>Error: No current node</div>;\n\n  if (currentNode.key === 'Start') {\n    return (\n      <>\n        {isExpanded && (\n          <div className={styles.root} ref={sidebarContainerElement}>\n            <SidebarHeader node={currentNode} isTransition={false} />\n            <h5 className={styles.dividerHeader}>\n              <></>{' '}\n            </h5>\n            <SidebarButton\n              buttonName=\"Add Node\"\n              buttonIcon={faPlus}\n              buttonText=\"Add a new transition to a new node in the pathway.\"\n              onClick={addPathwayNode}\n            />\n          </div>\n        )}\n\n        <div className={styles.toggleSidebar} onClick={toggleSidebar}>\n          <FontAwesomeIcon icon={isExpanded ? faChevronLeft : faChevronRight} />\n        </div>\n        <DeleteSnackbar />\n      </>\n    );\n  } else {\n    const nodeType = getNodeType(currentNode);\n    const displayTransitions = currentNode.key !== 'Start' || currentNode.transitions.length === 0;\n\n    return (\n      <>\n        {isExpanded && (\n          <div className={styles.root} ref={sidebarContainerElement}>\n            <SidebarHeader node={currentNode} isTransition={false} />\n\n            <h5 className={styles.dividerHeader}>\n              <span>Details</span>\n            </h5>\n\n            {nodeType === 'null' && (\n              <DropDown\n                id=\"nodeType\"\n                label=\"Node Type\"\n                options={nodeTypeOptions}\n                onChange={selectNodeType}\n                value=\"\"\n              />\n            )}\n\n            {nodeType === 'action' && <ActionNodeEditor changeNodeType={changeNodeType} />}\n\n            {nodeType === 'branch' && (\n              <DropDown\n                id=\"nodeType\"\n                label=\"Node Type\"\n                options={nodeTypeOptions}\n                onChange={selectNodeType}\n                value=\"Observation\"\n              />\n            )}\n\n            <h5 className={styles.dividerHeader}>\n              <span>Transitions</span>\n            </h5>\n\n            {currentNode?.transitions.map(transition => {\n              return (\n                <TransitionEditor key={transition.id} transition={transition}>\n                  {nodeType === 'branch' && (\n                    <BranchTransition key={transition.id} transition={transition} />\n                  )}\n                </TransitionEditor>\n              );\n            })}\n\n            {displayTransitions && (\n              <>\n                <SidebarButton\n                  buttonName=\"Add New Node\"\n                  buttonIcon={faPlus}\n                  buttonText=\"Add a new transition to a new node in the pathway.\"\n                  onClick={addPathwayNode}\n                />\n                <ConnectNodeButton />\n              </>\n            )}\n          </div>\n        )}\n        <div className={styles.toggleSidebar} onClick={toggleSidebar}>\n          <FontAwesomeIcon icon={isExpanded ? faChevronLeft : faChevronRight} />\n        </div>\n        <DeleteSnackbar />\n      </>\n    );\n  }\n};\n\nexport default memo(Sidebar);\n","import React, { FC, memo, useCallback, useRef, useState, KeyboardEvent, FocusEvent } from 'react';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEdit,\n  faChevronLeft,\n  faChevronRight,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, FormControl, Input, Tooltip } from '@material-ui/core';\n\nimport { PathwayNode } from 'pathways-model';\nimport { setNodeLabel, removeNode, removeTransition } from 'utils/builder';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useHistory } from 'react-router-dom';\nimport { canDeleteNode, redirect, findParents, willOrphanChild } from 'utils/nodeUtils';\nimport { DeleteModal } from '.';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { useSnackbarContext } from 'components/SnackbarProvider';\n\ninterface SidebarHeaderProps {\n  node: PathwayNode;\n  isTransition?: boolean;\n}\n\nconst SidebarHeader: FC<SidebarHeaderProps> = ({ node, isTransition = false }) => {\n  const { updatePathway } = usePathwaysContext();\n  const [showInput, setShowInput] = useState<boolean>(false);\n  const [openTooltip, setOpenTooltip] = useState<boolean>(false);\n  const [openDelete, setOpenDelete] = useState<boolean>(false);\n  const { currentNodeRef } = useCurrentNodeContext();\n  const { setSnackbarText, setOpenSnackbar } = useSnackbarContext();\n  const { pathway, pathwayRef } = useCurrentPathwayContext();\n  const inputRef = useRef<HTMLInputElement>(null);\n  const nodeLabel = node?.label || '';\n  const styles = useStyles();\n  const history = useHistory();\n\n  const goToParentNode = useCallback(() => {\n    if (!pathwayRef.current) return;\n    const parents = findParents(pathwayRef.current, node.key);\n    redirect(pathwayRef.current.id, parents[0], history);\n  }, [history, pathwayRef, node.key]);\n\n  const redirectToNode = useCallback(() => {\n    if (!pathwayRef.current) return;\n    redirect(pathwayRef.current.id, node.key, history);\n  }, [history, pathwayRef, node.key]);\n\n  const changeNodeLabel = useCallback(() => {\n    const label = inputRef.current?.value ?? '';\n    if (pathwayRef.current) updatePathway(setNodeLabel(pathwayRef.current, node.key, label));\n    setShowInput(false);\n  }, [pathwayRef, updatePathway, node.key]);\n\n  const handleShowInput = useCallback(() => {\n    setShowInput(true);\n  }, []);\n\n  const deleteNode = useCallback(() => {\n    if (pathwayRef.current && canDeleteNode(pathwayRef.current, node.transitions)) {\n      const parents = findParents(pathwayRef.current, node.key);\n      updatePathway(removeNode(pathwayRef.current, node.key));\n      redirect(pathwayRef.current.id, parents[0], history);\n      setOpenDelete(false);\n      setSnackbarText(`${node.label} node deleted successfully`);\n      setOpenSnackbar(true);\n    }\n  }, [\n    pathwayRef,\n    updatePathway,\n    setSnackbarText,\n    setOpenSnackbar,\n    node.key,\n    node.label,\n    node.transitions,\n    history\n  ]);\n\n  const deleteTransition = useCallback(() => {\n    if (\n      currentNodeRef.current &&\n      pathwayRef.current &&\n      !willOrphanChild(pathwayRef.current, node.key)\n    ) {\n      updatePathway(removeTransition(pathwayRef.current, currentNodeRef.current.key, node.key));\n      setOpenDelete(false);\n      setSnackbarText(\n        `Transition from ${currentNodeRef.current.label} to ${node.label} deleted successfully`\n      );\n      setOpenSnackbar(true);\n    }\n  }, [pathwayRef, currentNodeRef, updatePathway, setSnackbarText, setOpenSnackbar, node]);\n\n  const openDeleteModal = useCallback((): void => {\n    setOpenDelete(true);\n  }, []);\n\n  const closeDeleteModal = useCallback((): void => {\n    setOpenDelete(false);\n  }, []);\n\n  const handleOpenTooltip = useCallback((): void => {\n    setOpenTooltip(true);\n  }, []);\n\n  const handleCloseTooltip = useCallback((): void => {\n    setOpenTooltip(false);\n  }, []);\n\n  const handleKeyPress = useCallback(\n    (event: KeyboardEvent<HTMLDivElement>): void => {\n      if (event.key === 'Enter') changeNodeLabel();\n    },\n    [changeNodeLabel]\n  );\n\n  const deleteNodeDisabled = pathway ? !canDeleteNode(pathway, node.transitions) : true;\n  const deleteTransitionDisabled = pathway ? willOrphanChild(pathway, node.key) : true;\n  const deleteDisabled = isTransition ? deleteTransitionDisabled : deleteNodeDisabled;\n  const titleText = isTransition\n    ? 'Deleting this transition would result in an orphaned node. To delete, first add the child node as a transition to another node, or delete it directly.'\n    : 'Deleting this node would result in an orphaned descendent node. To delete, first add another transition to the would-be orphaned node from another node, or delete it directly.';\n\n  return (\n    <div className={styles.sidebarHeader}>\n      <div className={styles.sidebarHeaderGroup}>\n        {node.key !== 'Start' && !isTransition && (\n          <IconButton\n            className={styles.sidebarHeaderButton}\n            onClick={goToParentNode}\n            aria-label=\"go to parent node\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft} />\n          </IconButton>\n        )}\n\n        <div className={styles.headerLabelGroup} onClick={handleShowInput}>\n          {showInput && node.key !== 'Start' ? (\n            <FormControl className={styles.formControl} fullWidth>\n              <Input\n                className={styles.headerLabel}\n                type=\"text\"\n                inputRef={inputRef}\n                onBlur={changeNodeLabel}\n                onKeyPress={handleKeyPress}\n                defaultValue={nodeLabel}\n                autoFocus\n                onFocus={(event: FocusEvent<HTMLInputElement>): void => event.target.select()}\n              />\n            </FormControl>\n          ) : (\n            <div\n              className={clsx(\n                styles.headerLabel,\n                styles.headerLabelText,\n                node.key === 'Start' && styles.headerLabelStart\n              )}\n            >\n              {nodeLabel}\n              {node.key !== 'Start' && (\n                <FontAwesomeIcon className={styles.editIcon} icon={faEdit} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className={styles.sidebarHeaderGroup}>\n        {node.key !== 'Start' && (\n          <Tooltip\n            placement=\"top\"\n            open={deleteDisabled ? openTooltip : false}\n            onClose={handleCloseTooltip}\n            onOpen={handleOpenTooltip}\n            title={titleText}\n            arrow\n          >\n            <span>\n              <IconButton\n                className={styles.sidebarHeaderButton}\n                onClick={openDeleteModal}\n                aria-label={isTransition ? 'delete transition' : 'delete node'}\n                disabled={deleteDisabled}\n              >\n                <FontAwesomeIcon icon={faTrashAlt} />\n              </IconButton>\n            </span>\n          </Tooltip>\n        )}\n\n        {isTransition && (\n          <IconButton\n            className={styles.sidebarHeaderButton}\n            onClick={redirectToNode}\n            aria-label={'go to transition node'}\n          >\n            <FontAwesomeIcon icon={faChevronRight} />\n          </IconButton>\n        )}\n      </div>\n\n      <DeleteModal\n        nodeLabel={node.label}\n        isTransition={isTransition}\n        open={openDelete}\n        onDelete={isTransition ? deleteTransition : deleteNode}\n        onClose={closeDeleteModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(SidebarHeader);\n","import React, { FC, memo } from 'react';\nimport { Button, Tooltip } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\n\nimport useStyles from './styles';\n\ninterface SidebarButtonProps {\n  buttonName: string;\n  buttonIcon: IconDefinition;\n  buttonText: string;\n  extraMargin?: boolean;\n  onClick?: () => void;\n  hasTooltip?: boolean;\n  tooltipTitle?: string;\n  disabled?: boolean;\n}\n\nconst SidebarButton: FC<SidebarButtonProps> = ({\n  buttonName,\n  buttonIcon,\n  buttonText,\n  extraMargin = false,\n  onClick,\n  hasTooltip = false,\n  tooltipTitle = '',\n  disabled = false\n}) => {\n  const styles = useStyles();\n\n  const ConditionalTooltip: FC = ({ children }) =>\n    hasTooltip ? (\n      <Tooltip title={tooltipTitle} placement=\"top\">\n        <span>{children}</span>\n      </Tooltip>\n    ) : (\n      <>{children}</>\n    );\n\n  return (\n    <div className={extraMargin ? styles.sidebarButtonGroupExtraMargin : styles.sidebarButtonGroup}>\n      <ConditionalTooltip>\n        <Button\n          className={styles.sidebarButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={buttonIcon} />}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {buttonName}\n        </Button>\n      </ConditionalTooltip>\n      <div className={styles.sidebarButtonText}>{buttonText}</div>\n    </div>\n  );\n};\n\nexport default memo(SidebarButton);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { SidebarButton } from '.';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport {\n  setNodeAction,\n  createCQL,\n  setActionNodeElm,\n  setActionResourceDisplay,\n  setActionCode,\n  setActionDescription,\n  setActionTitle,\n  setActionCodeSystem\n} from 'utils/builder';\nimport DropDown from 'components/elements/DropDown';\nimport { ActionNode, Action } from 'pathways-model';\nimport useStyles from './styles';\nimport { TextField } from '@material-ui/core';\nimport { convertBasicCQL } from 'engine/cql-to-elm';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport produce from 'immer';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { nodeTypeOptions } from 'utils/nodeUtils';\n\nconst codeSystemOptions = [\n  { label: 'ICD-9-CM', value: 'http://hl7.org/fhir/sid/icd-9-cm' },\n  { label: 'ICD-10-CM', value: 'http://hl7.org/fhir/sid/icd-10-cm' },\n  { label: 'LOINC', value: 'http://loinc.org' },\n  { label: 'NCI', value: 'http://ncimeta.nci.nih.gov' },\n  { label: 'RXNORM', value: 'http://www.nlm.nih.gov/research/umls/rxnorm' },\n  { label: 'SNOMED', value: 'http://snomed.info/sct' }\n];\n\ninterface ActionNodeEditorProps {\n  changeNodeType: (event: string) => void;\n}\n\nconst ActionNodeEditor: FC<ActionNodeEditorProps> = ({ changeNodeType }) => {\n  const { updatePathway } = usePathwaysContext();\n  const { pathwayRef } = useCurrentPathwayContext();\n  const { currentNode, currentNodeRef } = useCurrentNodeContext();\n  const styles = useStyles();\n\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  const addActionCQL = useCallback(\n    (action: Action, currentNodeKey: string): void => {\n      if (!pathwayRef.current) return;\n\n      const cql = createCQL(action, currentNodeKey);\n      convertBasicCQL(cql).then(elm => {\n        // Disable lint for no-null assertion since it is already checked above\n        // eslint-disable-next-line\n        updatePathway(setActionNodeElm(pathwayRef.current!, currentNodeKey, elm));\n      });\n    },\n    [pathwayRef, updatePathway]\n  );\n\n  const changeCode = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      const currentNode = currentNodeRef.current as ActionNode;\n      if (!currentNode.action || !pathwayRef.current) return;\n\n      const code = event?.target.value || '';\n      const action = setActionCode(currentNode.action, code);\n      updatePathway(setNodeAction(pathwayRef.current, currentNode.key, resetDisplay(action)));\n    },\n    [currentNodeRef, pathwayRef, updatePathway]\n  );\n\n  const changeDescription = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      const currentNode = currentNodeRef.current as ActionNode;\n      if (!currentNode.action || !pathwayRef.current) return;\n\n      const description = event?.target.value || '';\n      const action = setActionDescription(currentNode.action, description);\n      updatePathway(setNodeAction(pathwayRef.current, currentNode.key, action));\n    },\n    [currentNodeRef, pathwayRef, updatePathway]\n  );\n\n  const changeTitle = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      const currentNode = currentNodeRef.current as ActionNode;\n      if (!currentNode.action || !pathwayRef.current) return;\n\n      const title = event?.target.value || '';\n      const action = setActionTitle(currentNode.action, title);\n      updatePathway(setNodeAction(pathwayRef.current, currentNode.key, resetDisplay(action)));\n\n      addActionCQL(action, currentNode.key);\n    },\n    [currentNodeRef, pathwayRef, updatePathway, addActionCQL]\n  );\n\n  const selectCodeSystem = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      const currentNode = currentNodeRef.current as ActionNode;\n      if (!currentNode.action || !pathwayRef.current) return;\n\n      const codeSystem = event?.target.value || '';\n      const action = setActionCodeSystem(currentNode.action, codeSystem);\n      updatePathway(setNodeAction(pathwayRef.current, currentNode.key, resetDisplay(action)));\n    },\n    [currentNodeRef, pathwayRef, updatePathway]\n  );\n\n  const validateFunction = useCallback((): void => {\n    const currentNode = currentNodeRef.current as ActionNode;\n    if (!currentNode.action || !pathwayRef.current) {\n      console.error('No Actions -- Cannot Validate');\n      return;\n    }\n\n    const action = setActionResourceDisplay(currentNode.action, 'Example Text');\n    updatePathway(setNodeAction(pathwayRef.current, currentNode.key, action));\n\n    // TODO: move addActionCQL to builder.ts\n    addActionCQL(action, currentNode.key);\n  }, [currentNodeRef, pathwayRef, updatePathway, addActionCQL]);\n\n  const resetDisplay = (action: Action): Action => {\n    return produce(action, (draftAction: Action) => {\n      if (draftAction.resource.medicationCodeableConcept) {\n        draftAction.resource.medicationCodeableConcept.coding[0].display = '';\n      } else if (draftAction.resource.resourceType === 'CarePlan') {\n        draftAction.resource.description = '';\n      } else {\n        draftAction.resource.code.coding[0].display = ''; // TODO: actually validate\n      }\n    });\n  };\n\n  const onEnter = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key === 'Enter') {\n      validateFunction();\n    }\n  };\n\n  // The node has a key and is not the start node\n  const action = (currentNode as ActionNode).action;\n  if (!action) return <></>;\n\n  const changeNodeTypeEnabled = currentNode?.key !== 'Start';\n  const resource = action.resource;\n  let system = '';\n  let code = '';\n  let display = '';\n  if (resource.resourceType === 'MedicationRequest' || resource.resourceType === 'ServiceRequest') {\n    system = resource.code\n      ? resource.code.coding[0].system\n      : resource.medicationCodeableConcept.coding[0].system;\n    code = resource.code\n      ? resource.code.coding[0].code\n      : resource.medicationCodeableConcept.coding[0].code;\n    display = resource.code\n      ? resource.code.coding[0].display\n      : resource.medicationCodeableConcept.coding[0].display;\n  } else {\n    display = resource.description;\n  }\n\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <>\n          <DropDown\n            id=\"nodeType\"\n            label=\"Node Type\"\n            options={nodeTypeOptions}\n            onChange={selectNodeType}\n            value={resource.resourceType}\n          />\n\n          {(resource.resourceType === 'MedicationRequest' ||\n            resource.resourceType === 'ServiceRequest') && (\n            <>\n              <DropDown\n                id=\"codeSystem\"\n                label=\"Code System\"\n                options={codeSystemOptions}\n                onChange={selectCodeSystem}\n                value={system}\n              />\n              {system && (\n                <TextField\n                  id=\"code-input\"\n                  label=\"Code\"\n                  value={code}\n                  onChange={changeCode}\n                  variant=\"outlined\"\n                  error={code === ''}\n                  inputProps={{ onKeyPress: onEnter }}\n                />\n              )}\n              {code && (\n                <>\n                  {display ? (\n                    <div className={styles.displayText}>\n                      <FontAwesomeIcon icon={faCheckCircle} /> {display}\n                    </div>\n                  ) : (\n                    <SidebarButton\n                      buttonName=\"Validate\"\n                      buttonIcon={faCheckCircle}\n                      buttonText={display || 'Check validation of the input system and code'}\n                      onClick={validateFunction}\n                    />\n                  )}\n\n                  <TextField\n                    id=\"description-input\"\n                    label=\"Description\"\n                    value={action.description || ''}\n                    onChange={changeDescription}\n                    variant=\"outlined\"\n                    error={action.description === ''}\n                  />\n                </>\n              )}\n            </>\n          )}\n\n          {resource.resourceType === 'CarePlan' && (\n            <>\n              <TextField\n                id=\"title-input\"\n                label=\"Title\"\n                value={resource.title || ''}\n                onChange={changeTitle}\n                variant=\"outlined\"\n                error={resource.title == null}\n                inputProps={{ onKeyPress: onEnter }}\n              />\n              {resource.title && (\n                <TextField\n                  id=\"description-input\"\n                  label=\"Description\"\n                  value={action.description || ''}\n                  onChange={changeDescription}\n                  variant=\"outlined\"\n                  error={action.description === ''}\n                />\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(ActionNodeEditor);\n","import React, {\n  createContext,\n  useCallback,\n  useState,\n  memo,\n  ReactNode,\n  FC,\n  useContext\n} from 'react';\n\ninterface CriteriaBuilderContextInterface {\n  selectedElement: string;\n  selectedDemoElement: string;\n  gender: string;\n  minimumAge: number;\n  maximumAge: number;\n  setSelectedElement: (selectedElement: string) => void;\n  setSelectedDemoElement: (selectedDemoElement: string) => void;\n  setGender: (gender: string) => void;\n  setMinimumAge: (age: number) => void;\n  setMaximumAge: (age: number) => void;\n  resetCriteriaBuilder: () => void;\n}\n\nexport const CriteriaBuilderContext = createContext<CriteriaBuilderContextInterface>(\n  {} as CriteriaBuilderContextInterface\n);\n\ninterface CriteriaBuilderProviderProps {\n  children: ReactNode;\n}\n\nexport const CriteriaBuilderProvider: FC<CriteriaBuilderProviderProps> = memo(({ children }) => {\n  const [selectedElement, setSelectedElement] = useState<string>('');\n  const [selectedDemoElement, setSelectedDemoElement] = useState<string>('');\n  const [gender, setGender] = useState<string>('');\n  const [minimumAge, setMinimumAge] = useState<number>(0);\n  const [maximumAge, setMaximumAge] = useState<number>(0);\n\n  const resetCriteriaBuilder = useCallback(() => {\n    setSelectedElement('');\n    setSelectedDemoElement('');\n    setGender('');\n    setMinimumAge(0);\n    setMaximumAge(0);\n  }, [setSelectedElement, setSelectedDemoElement, setGender, setMinimumAge, setMaximumAge]);\n\n  return (\n    <CriteriaBuilderContext.Provider\n      value={{\n        selectedElement,\n        selectedDemoElement,\n        gender,\n        minimumAge,\n        maximumAge,\n        setSelectedElement,\n        setSelectedDemoElement,\n        setGender,\n        setMinimumAge,\n        setMaximumAge,\n        resetCriteriaBuilder\n      }}\n    >\n      {children}\n    </CriteriaBuilderContext.Provider>\n  );\n});\n\nexport const useCriteriaBuilderContext = (): CriteriaBuilderContextInterface =>\n  useContext(CriteriaBuilderContext);\n","import React, { FC, memo, useState, useCallback, ChangeEvent, useMemo, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave, faTools, faTrashAlt, faThList } from '@fortawesome/free-solid-svg-icons';\nimport DropDown from 'components/elements/DropDown';\nimport { Button, Checkbox, FormControlLabel, TextField, Box } from '@material-ui/core';\nimport {\n  removeTransitionCondition,\n  setTransitionCondition,\n  setTransitionConditionDescription\n} from 'utils/builder';\nimport { OutlinedDiv, SidebarButton } from '.';\nimport { Transition } from 'pathways-model';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport { useCriteriaBuilderContext } from 'components/CriteriaBuilderProvider';\n\ninterface BranchTransitionProps {\n  transition: Transition;\n}\n\nconst BranchTransition: FC<BranchTransitionProps> = ({ transition }) => {\n  const { updatePathway } = usePathwaysContext();\n  const { criteria, addBuilderCriteria } = useCriteriaContext();\n  const {\n    buildCriteriaSelected,\n    setBuildCriteriaSelected,\n    currentCriteriaNodeId,\n    setCurrentCriteriaNodeId,\n    currentCriteria,\n    setCurrentCriteria,\n    criteriaName,\n    setCriteriaName,\n    resetCurrentCriteria\n  } = useCurrentCriteriaContext();\n  const { resetCriteriaBuilder } = useCriteriaBuilderContext();\n  const { pathwayRef } = useCurrentPathwayContext();\n  const { currentNodeRef } = useCurrentNodeContext();\n  const criteriaOptions = useMemo(() => criteria.map(c => ({ value: c.id, label: c.label })), [\n    criteria\n  ]);\n  const criteriaAvailable = criteriaOptions.length > 0;\n  const styles = useStyles();\n  const [useCriteriaSelected, setUseCriteriaSelected] = useState<boolean>(false);\n  const criteriaDescription = transition.condition?.description;\n  const criteriaIsValid = criteriaDescription != null;\n  const criteriaDisplayIsValid = criteriaDescription && criteriaDescription !== '';\n  const hasCriteria = transition.condition?.cql || transition.condition?.description;\n  const buttonText = hasCriteria ? 'DELETE' : 'CANCEL';\n  const icon = hasCriteria ? <FontAwesomeIcon icon={faTrashAlt} /> : null;\n  const displayCriteria =\n    criteriaAvailable &&\n    (useCriteriaSelected || transition.condition?.cql || transition.condition?.description);\n  const transitionRef = useRef(transition);\n\n  const handleUseCriteria = useCallback((): void => {\n    if (hasCriteria && currentNodeRef.current && pathwayRef.current) {\n      // delete the transition criteria\n      updatePathway(\n        removeTransitionCondition(pathwayRef.current, currentNodeRef.current.key, transition.id)\n      );\n      setUseCriteriaSelected(false);\n    } else {\n      setUseCriteriaSelected(!useCriteriaSelected);\n    }\n  }, [useCriteriaSelected, currentNodeRef, pathwayRef, hasCriteria, transition.id, updatePathway]);\n\n  const selectCriteriaSource = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current || !pathwayRef.current) return;\n\n      const criteriaId = event?.target.value || '';\n      const selectedCriteria = criteria.find(c => c.id === criteriaId);\n      if (!selectedCriteria) return;\n      const newPathway = setTransitionCondition(\n        pathwayRef.current,\n        currentNodeRef.current.key,\n        transitionRef.current.id,\n        transitionRef.current.condition?.description || '',\n        selectedCriteria\n      );\n\n      updatePathway(newPathway);\n    },\n    [currentNodeRef, updatePathway, pathwayRef, transitionRef, criteria]\n  );\n\n  const setCriteriaDisplay = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current || !pathwayRef.current) return;\n\n      const criteriaDisplay = event?.target.value || '';\n      updatePathway(\n        setTransitionConditionDescription(\n          pathwayRef.current,\n          currentNodeRef.current.key,\n          transition.id,\n          criteriaDisplay\n        )\n      );\n    },\n    [currentNodeRef, transition.id, updatePathway, pathwayRef]\n  );\n\n  const handleCriteriaName = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setCriteriaName(event?.target.value || '');\n    },\n    [setCriteriaName]\n  );\n\n  const handleBuildCriteria = useCallback((): void => {\n    setCurrentCriteriaNodeId(transition.id);\n    setCurrentCriteria(null);\n    setCriteriaName('');\n    if (!buildCriteriaSelected) setBuildCriteriaSelected(true);\n    resetCriteriaBuilder();\n  }, [\n    buildCriteriaSelected,\n    setCurrentCriteriaNodeId,\n    transition,\n    setBuildCriteriaSelected,\n    setCurrentCriteria,\n    resetCriteriaBuilder,\n    setCriteriaName\n  ]);\n\n  const handleBuildCriteriaCancel = useCallback((): void => {\n    resetCurrentCriteria();\n    resetCriteriaBuilder();\n  }, [resetCurrentCriteria, resetCriteriaBuilder]);\n\n  const handleBuildCriteriaSave = useCallback(() => {\n    if (!currentNodeRef.current || !pathwayRef.current || !currentCriteria?.cql) return;\n\n    const criteria = addBuilderCriteria(currentCriteria, criteriaName);\n    const newPathway = setTransitionCondition(\n      pathwayRef.current,\n      currentNodeRef.current.key,\n      transitionRef.current.id,\n      criteriaName,\n      criteria[0]\n    );\n\n    updatePathway(newPathway);\n    handleBuildCriteriaCancel();\n  }, [\n    currentNodeRef,\n    updatePathway,\n    pathwayRef,\n    transitionRef,\n    currentCriteria,\n    criteriaName,\n    handleBuildCriteriaCancel,\n    addBuilderCriteria\n  ]);\n\n  const transitionSelected = buildCriteriaSelected && currentCriteriaNodeId === transition.id;\n  return (\n    <>\n      {!displayCriteria && !transitionSelected && (\n        <SidebarButton\n          buttonName=\"Select Criteria\"\n          buttonIcon={faThList}\n          buttonText=\"Add previously built or imported criteria logic to branch node.\"\n          onClick={handleUseCriteria}\n          disabled={!criteriaAvailable}\n          hasTooltip={!criteriaAvailable}\n          tooltipTitle=\"No criteria to select. Add criteria to use.\"\n        />\n      )}\n\n      {displayCriteria && !transitionSelected && (\n        <OutlinedDiv label=\"Criteria Selector\" error={!criteriaIsValid || !criteriaDisplayIsValid}>\n          <>\n            <DropDown\n              id=\"Criteria\"\n              label=\"Criteria\"\n              options={criteriaOptions}\n              onChange={selectCriteriaSource}\n              value={transition.condition?.criteriaSource || undefined}\n            />\n\n            <TextField\n              label=\"Criteria Display\"\n              value={transition.condition?.description || ''}\n              variant=\"outlined\"\n              onChange={setCriteriaDisplay}\n              error={!criteriaDisplayIsValid}\n            />\n          </>\n\n          <Button\n            className={styles.cancelButton}\n            color=\"inherit\"\n            size=\"small\"\n            variant=\"outlined\"\n            startIcon={icon}\n            onClick={handleUseCriteria}\n          >\n            {buttonText}\n          </Button>\n        </OutlinedDiv>\n      )}\n\n      {!displayCriteria && !transitionSelected && (\n        <SidebarButton\n          buttonName=\"Build Criteria\"\n          buttonIcon={faTools}\n          buttonText=\"Create new criteria logic to add to branch node.\"\n          extraMargin\n          onClick={handleBuildCriteria}\n        />\n      )}\n\n      {transitionSelected && (\n        <OutlinedDiv label=\"Criteria Builder\" error={!criteriaIsValid || !criteriaDisplayIsValid}>\n          <TextField\n            error={criteriaName === ''}\n            label=\"Criteria Name\"\n            variant=\"outlined\"\n            onChange={handleCriteriaName}\n            value={criteriaName}\n            fullWidth\n          />\n          {currentCriteria?.text && (\n            <span className={styles.buildCriteriaText}>{currentCriteria.text}</span>\n          )}\n          <div className={styles.buildCriteriaContainer}>\n            <FormControlLabel\n              label={<Box fontStyle=\"italic\">Add to reusable criteria</Box>}\n              control={<Checkbox color=\"default\" />}\n              checked\n            />\n            <Button\n              color=\"inherit\"\n              size=\"large\"\n              variant=\"outlined\"\n              onClick={handleBuildCriteriaCancel}\n            >\n              Cancel\n            </Button>\n            <Button\n              className={styles.saveButton}\n              color=\"inherit\"\n              size=\"large\"\n              variant=\"outlined\"\n              startIcon={<FontAwesomeIcon icon={faSave} />}\n              disabled={criteriaName === '' || currentCriteria === null}\n              onClick={handleBuildCriteriaSave}\n            >\n              Save\n            </Button>\n          </div>\n        </OutlinedDiv>\n      )}\n    </>\n  );\n};\n\nexport default memo(BranchTransition);\n","import React, { FC, ReactNode } from 'react';\nimport clsx from 'clsx';\n\nimport TextField from '@material-ui/core/TextField';\nimport useStyles from './styles';\n\ninterface InputComponentProps {\n  children?: ReactNode;\n}\n\nconst InputComponent: FC<InputComponentProps> = ({ children }) => {\n  return <>{children}</>;\n};\n\ninterface OutlinedDivProps {\n  children: ReactNode;\n  label: string;\n  error: boolean;\n}\n\nconst OutlinedDiv: FC<OutlinedDivProps> = ({ children, label, error }) => {\n  const styles = useStyles();\n\n  return (\n    <TextField\n      variant=\"outlined\"\n      label={label}\n      multiline\n      InputLabelProps={{ shrink: true }}\n      InputProps={{\n        inputComponent: InputComponent,\n        classes: {\n          root: clsx(styles.outlinedDiv, error && styles.outlinedDivError),\n          notchedOutline: clsx(error && styles.outlinedDivError)\n        }\n      }}\n      inputProps={{ children }}\n      fullWidth\n    />\n  );\n};\n\n// This is not memoized since one of its props is children\nexport default OutlinedDiv;\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton\n} from '@material-ui/core';\n\nimport useStyles from './styles';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\n\ninterface DeleteModalProps {\n  open: boolean;\n  nodeLabel: string;\n  isTransition: boolean;\n  onClose: () => void;\n  onDelete: () => void;\n}\n\nconst DeleteModal: FC<DeleteModalProps> = ({\n  open,\n  nodeLabel,\n  isTransition,\n  onClose,\n  onDelete\n}) => {\n  const styles = useStyles();\n  const { currentNode } = useCurrentNodeContext();\n\n  const text = isTransition ? (\n    <span>\n      Delete the transition from <strong>{currentNode?.label}</strong> to{' '}\n      <strong>{nodeLabel}</strong>? This will not delete either node, just the transition between\n      them.\n    </span>\n  ) : (\n    <span>\n      Delete the node <strong>{nodeLabel}</strong>? This will also remove any transitions to this\n      node.\n    </span>\n  );\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"create-pathway\"\n        fullWidth\n        maxWidth=\"md\"\n      >\n        <DialogTitle disableTypography>\n          <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n            <FontAwesomeIcon icon={faTimes} />\n          </IconButton>\n        </DialogTitle>\n\n        <DialogContent className={styles.dialogContent}>\n          <FontAwesomeIcon icon={faExclamationCircle} className={styles.alertIcon} />\n          <p className={styles.dialogContentText}>{text}</p>\n        </DialogContent>\n\n        <DialogActions>\n          <Button variant=\"text\" color=\"primary\" onClick={onClose}>\n            Cancel\n          </Button>\n          <Button variant=\"contained\" color=\"secondary\" onClick={onDelete}>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default memo(DeleteModal);\n","import React, { FC, ReactNode, memo } from 'react';\nimport SidebarHeader from './SidebarHeader';\nimport useStyles from './styles';\nimport { Card } from '@material-ui/core';\nimport { Transition } from 'pathways-model';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\n\ninterface TransitionEditorProps {\n  transition: Transition;\n  children?: ReactNode;\n}\n\nconst TransitionEditor: FC<TransitionEditorProps> = ({ transition, children }) => {\n  const styles = useStyles();\n  const { pathway } = useCurrentPathwayContext();\n  const transitionKey = transition?.transition || '';\n  const transitionNode = pathway?.nodes[transitionKey];\n\n  return (\n    <Card raised className={styles.transitionContainer}>\n      {transitionNode && <SidebarHeader node={transitionNode} isTransition />}\n\n      {children}\n    </Card>\n  );\n};\n\nexport default memo(TransitionEditor);\n","import { useCallback, useState } from 'react';\nimport { graphlib, Node } from 'dagre';\nimport { Edges } from 'graph-model';\n\nexport interface GraphCoordinates {\n  nodes: NodeCoordinates;\n  edges: Edges;\n}\n\nexport interface NodeCoordinates {\n  [nodeName: string]: Node;\n}\n\nexport interface UpdateCoordinatesInterface {\n  graph: graphlib.Graph;\n  graphWidth: number;\n}\n\nexport interface CoordinatesCalculator {\n  coordinates: GraphCoordinates;\n  updateCoordinates: (graph: UpdateCoordinatesInterface) => void;\n}\n\n// number of pixels to add as a buffer to the top of the graph\nconst OFFSET_TOP = 16;\n\nconst useCoordinatesCalculator = (): CoordinatesCalculator => {\n  const [coordinates, setCoordinates] = useState<GraphCoordinates>({\n    nodes: {},\n    edges: {}\n  } as GraphCoordinates);\n\n  const updateCoordinates = useCallback(\n    ({ graph, graphWidth }: UpdateCoordinatesInterface): void => {\n      const startNodeShift = graph.node('Start').x;\n\n      const xOffset = 0 - startNodeShift + graphWidth / 2;\n      let xOffsetCorrection = 0;\n      const yOffset = OFFSET_TOP;\n\n      const newCoordinates: GraphCoordinates = { nodes: {}, edges: {} };\n\n      for (const nodeKey of graph.nodes()) {\n        const node = graph.node(nodeKey);\n\n        // dagre returns coordinates for the center of the node,\n        // our renderer expects coordinates for the corner of the node.\n        // further, our renderer expects the Start node to be centered at x: 0\n        newCoordinates.nodes[nodeKey] = {\n          ...node,\n          x: node.x - node.width / 2 + xOffset,\n          y: node.y - node.height / 2 + yOffset\n        };\n\n        xOffsetCorrection = Math.min(0, xOffsetCorrection, newCoordinates.nodes[nodeKey].x);\n      }\n      xOffsetCorrection = Math.abs(xOffsetCorrection);\n\n      if (xOffsetCorrection > 0) {\n        for (const nodeKey of graph.nodes()) {\n          newCoordinates.nodes[nodeKey].x += xOffsetCorrection;\n        }\n      }\n\n      for (const edgeKey of graph.edges()) {\n        const edge = graph.edge(edgeKey);\n        const edgeName = `${edgeKey.v}, ${edgeKey.w}`;\n        const label = edge.label\n          ? { text: edge.label, x: edge.x + xOffset, y: edge.y + yOffset }\n          : null;\n\n        const points = edge.points.map(point => ({\n          x: (isNaN(point.x) ? 0 : point.x) + xOffset + xOffsetCorrection,\n          y: (isNaN(point.y) ? 0 : point.y) + yOffset\n        }));\n\n        // move the last point up to make room for the arrowhead\n        if (points.length > 0) points[points.length - 1].y -= 17.5;\n\n        newCoordinates.edges[edgeName] = {\n          label,\n          start: edgeKey.v,\n          end: edgeKey.w,\n          points\n        };\n      }\n\n      setCoordinates(newCoordinates);\n    },\n    []\n  );\n\n  return { coordinates, updateCoordinates };\n};\n\nexport default useCoordinatesCalculator;\n","import React, {\n  createContext,\n  FC,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState\n} from 'react';\nimport { useRafState, useUpdateEffect } from 'react-use';\nimport dagre, { graphlib } from 'dagre';\n\nimport useCoordinatesCalculator, { GraphCoordinates } from './useCoordinatesCalculator';\n\ninterface GraphContextInterface {\n  graph: graphlib.Graph;\n  reflow: () => void;\n}\n\ntype SetGraphWidthInterface = (width: number) => void;\n\nexport const GraphContext = createContext<GraphContextInterface>({} as GraphContextInterface);\nexport const SetGraphWidthContext = createContext<SetGraphWidthInterface>(() => undefined);\nexport const GraphCoordinatesContext = createContext<GraphCoordinates>({\n  nodes: {},\n  edges: {}\n} as GraphCoordinates);\n\ninterface GraphProviderProps {\n  children: ReactNode;\n}\n\nconst createGraph = (): graphlib.Graph => {\n  const g = new dagre.graphlib.Graph();\n  g.setGraph({});\n\n  // dagre requires a default edge label, we want it to just be empty\n  g.setDefaultEdgeLabel(() => ({}));\n  return g;\n};\n\nconst GraphProvider: FC<GraphProviderProps> = ({ children }) => {\n  const graph = useMemo(createGraph, []);\n  const { coordinates, updateCoordinates } = useCoordinatesCalculator();\n  const [width, setWidth] = useRafState<number>(0);\n  const [reflowRequired, setReflowRequired] = useState(true);\n  const reflow = useCallback(() => setReflowRequired(true), []);\n  const graphValue = useMemo(() => ({ graph, reflow }), [graph, reflow]);\n\n  useEffect(() => {\n    if (!reflowRequired) return;\n\n    dagre.layout(graph);\n    updateCoordinates({ graph, graphWidth: width });\n\n    setReflowRequired(false);\n  }, [graph, reflowRequired, setReflowRequired, width, updateCoordinates]);\n\n  useUpdateEffect(() => {\n    setReflowRequired(true);\n  }, [width]);\n\n  return (\n    <GraphContext.Provider value={graphValue}>\n      <SetGraphWidthContext.Provider value={setWidth}>\n        <GraphCoordinatesContext.Provider value={coordinates}>\n          {children}\n        </GraphCoordinatesContext.Provider>\n      </SetGraphWidthContext.Provider>\n    </GraphContext.Provider>\n  );\n};\n\nexport default GraphProvider;\nexport const useGraphProvider = (): GraphContextInterface => useContext(GraphContext);\nexport const useSetGraphWidth = (): SetGraphWidthInterface => useContext(SetGraphWidthContext);\nexport const useGraphCoordinates = (): GraphCoordinates => useContext(GraphCoordinatesContext);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\ninterface StyleProps {\n  isActive?: boolean;\n}\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    edges: {\n      display: 'block',\n      position: 'absolute',\n      top: '0',\n      left: '0',\n      overflow: 'visible',\n      width: '100%',\n      height: '100%',\n      zIndex: 1,\n      '& text': {\n        fontSize: '18px'\n      },\n      '& #arrowhead-inactive polygon': {\n        fill: theme.palette.common.blue\n      },\n      '& #arrowhead-active polygon': {\n        fill: theme.palette.common.red\n      }\n    },\n    edge: {\n      stroke: (props?: StyleProps): string => theme.palette.common[props?.isActive ? 'red' : 'blue']\n    }\n  }),\n  { name: 'DagreGraph-GraphEdges' }\n);\n","import React, { FC, ReactElement, memo, useMemo } from 'react';\nimport { Tooltip } from '@material-ui/core';\n\nimport { Label, Coordinate } from 'graph-model';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { useGraphCoordinates } from './GraphProvider';\nimport useStyles from './GraphEdges.styles';\n\ninterface EdgeProps {\n  label: Label | null;\n  points: Coordinate[];\n  isActive: boolean;\n}\n\ninterface LabelTooltipProps {\n  label: Label;\n  children: ReactElement;\n}\n\n/**\n * The points to use in the Cubic command is determined by the length of points array\n * If i % 3 is 0, use all points including the 1st point\n * If i % 3 is 1, use all points except the 1st point\n * If i % 3 is 2, use all points including the 1st point and reuse every 3rd point\n * We need points to be a multiple of 3 because the Cubic command expects 3 points\n */\nconst generatePathString = (points: Coordinate[]): string =>\n  points.reduce(\n    (path, point, i) =>\n      i % 3 === points.length % 3\n        ? `${path} C ${point.x} ${point.y} ${points[i + 1].x} ${points[i + 1].y} ${\n            points[i + 2].x\n          } ${points[i + 2].y}`\n        : path,\n    `M ${points[0].x} ${points[0].y} `\n  );\n\nconst LabelTooltip: FC<LabelTooltipProps> = ({ label, children }) => {\n  if (label.text.length > 12) {\n    return <Tooltip title={label.text} children={children} />;\n  } else {\n    return <>{children}</>;\n  }\n};\n\nconst Edge: FC<EdgeProps> = ({ label, points, isActive }) => {\n  const styles = useStyles({ isActive });\n  const path = useMemo(() => generatePathString(points), [points]);\n  const truncateTooltip = label && label.text?.length > 12;\n\n  return (\n    <>\n      <path\n        d={path}\n        fill=\"transparent\"\n        className={styles.edge}\n        strokeWidth=\"2\"\n        markerEnd={`url(#arrowhead-${isActive ? 'active' : 'inactive'})`}\n      />\n      {label && (\n        <LabelTooltip label={label}>\n          <text x={label.x} y={label.y}>\n            {truncateTooltip ? `${label.text.substring(0, 11)}...` : label.text}\n          </text>\n        </LabelTooltip>\n      )}\n    </>\n  );\n};\n\nconst GraphEdges: FC = () => {\n  const styles = useStyles();\n  const { edges: edgeCoordinates } = useGraphCoordinates();\n  const { currentNode } = useCurrentNodeContext();\n\n  return (\n    <svg className={styles.edges}>\n      <defs>\n        <marker\n          id=\"arrowhead-inactive\"\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n\n        <marker\n          id=\"arrowhead-active\"\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n\n      {Object.entries(edgeCoordinates).map(([edgeId, edge]) => (\n        <Edge\n          key={edgeId}\n          label={edge.label}\n          points={edge.points}\n          isActive={edge.start === currentNode?.key}\n        />\n      ))}\n    </svg>\n  );\n};\n\nexport default memo(GraphEdges);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    table: {\n      '& tr': {\n        verticalAlign: 'top'\n      }\n    },\n    title: {\n      fontWeight: 'bold',\n      textAlign: 'right',\n      minWidth: '80px'\n    },\n    description: {\n      paddingLeft: theme.spacing(2),\n      fontStyle: 'italic',\n      overflowWrap: 'break-word'\n    },\n    externalLink: {\n      color: theme.palette.common.blue,\n      marginLeft: theme.spacing(1),\n\n      '&:hover, &:focus': {\n        color: theme.palette.common.grayDark\n      }\n    }\n  }),\n  { name: 'NodeDetails' }\n);\n","import React, { FC, ReactNode, memo } from 'react';\nimport { ActionNode, BranchNode, PathwayNode } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\nimport { getNodeType } from 'utils/builder';\nimport { resourceNameConversion } from 'utils/nodeUtils';\nimport useStyles from './NodeDetails.styles';\n\ninterface NodeDetailsProps {\n  pathwayNode: ActionNode | BranchNode | PathwayNode;\n}\n\ninterface FieldProps {\n  title: string;\n  description: string | ReactNode;\n}\n\ninterface ActionNodeFieldsProps {\n  actionNode: ActionNode;\n}\n\nconst isMedicationRequest = (\n  request: MedicationRequest | ServiceRequest\n): request is MedicationRequest =>\n  (request as MedicationRequest).medicationCodeableConcept !== undefined;\n\nconst Field: FC<FieldProps> = ({ title, description }) => {\n  const styles = useStyles();\n\n  if (!description) return null;\n\n  return (\n    <tr>\n      <td className={styles.title}>{title}</td>\n      <td className={styles.description}>{description}</td>\n    </tr>\n  );\n};\n\nconst BranchNodeContents: FC = () => <Field title=\"Type\" description=\"Observation\" />;\n\nconst ActionNodeFields: FC<ActionNodeFieldsProps> = ({ actionNode }) => {\n  const styles = useStyles();\n\n  if (actionNode.action === null) return null;\n\n  const resource = actionNode.action.resource;\n  const coding = isMedicationRequest(resource)\n    ? resource?.medicationCodeableConcept?.coding\n    : resource?.code?.coding;\n  const resourceType = resourceNameConversion[resource.resourceType]\n    ? resourceNameConversion[resource.resourceType]\n    : resource.resourceType;\n\n  return (\n    <>\n      <Field title=\"Description\" description={actionNode.action.description} />\n      <Field key=\"Type\" title=\"Type\" description={resourceType} />\n      <Field\n        key=\"System\"\n        title=\"System\"\n        description={\n          coding?.[0]?.system && (\n            <>\n              {coding[0].system}\n              <a href={coding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n              </a>\n            </>\n          )\n        }\n      />\n      <Field key=\"Code\" title=\"Code\" description={coding?.[0]?.code} />\n      <Field key=\"Display\" title=\"Display\" description={coding?.[0]?.display} />\n      <Field key=\"Title\" title=\"Title\" description={resource.title} />\n    </>\n  );\n};\n\nconst NodeDetails: FC<NodeDetailsProps> = ({ pathwayNode }) => {\n  const styles = useStyles();\n  const nodeType = getNodeType(pathwayNode);\n\n  if (nodeType == null) return null;\n\n  return (\n    <table className={styles.table}>\n      <tbody>\n        {nodeType === 'branch' && <BranchNodeContents />}\n        {nodeType === 'action' && <ActionNodeFields actionNode={pathwayNode as ActionNode} />}\n      </tbody>\n    </table>\n  );\n};\n\nexport default memo(NodeDetails);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    icon: {\n      marginRight: theme.spacing(1),\n      fontSize: '0.9rem'\n    }\n  }),\n  { name: 'DagreGraph-NodeIcon' }\n);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faMicroscope,\n  faPlay,\n  faPrescriptionBottleAlt,\n  faSyringe,\n  faBookMedical\n} from '@fortawesome/free-solid-svg-icons';\n\nimport useStyles from './NodeIcon.styles';\n\ninterface NodeIconProps {\n  isStartNode: boolean;\n  nodeType: string;\n  resourceType?: string;\n}\n\nconst NodeIcon: FC<NodeIconProps> = ({ isStartNode, nodeType, resourceType }) => {\n  const styles = useStyles();\n\n  let icon: IconDefinition | undefined;\n  if (isStartNode) {\n    icon = faPlay;\n  } else if (nodeType === 'action' && resourceType) {\n    if (resourceType === 'MedicationRequest') icon = faPrescriptionBottleAlt;\n    else if (resourceType === 'ServiceRequest') icon = faSyringe;\n    else if (resourceType === 'CarePlan') icon = faBookMedical;\n  } else if (nodeType === 'branch') {\n    icon = faMicroscope;\n  }\n\n  return icon ? <FontAwesomeIcon icon={icon} className={styles.icon} /> : null;\n};\n\nexport default memo(NodeIcon);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\ninterface StyleProps {\n  isActionable: boolean;\n  isExpanded: boolean;\n}\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    node: {\n      position: 'absolute',\n      width: 'auto',\n      minWidth: ({ isExpanded }: StyleProps): string => (isExpanded ? '400px' : '100px'),\n      maxWidth: '600px',\n      minHeight: '50px',\n      display: 'flex',\n      alignItems: 'stretch',\n      flexDirection: 'column',\n      border: ({ isActionable }: StyleProps): string =>\n        `1px solid ${theme.palette.common[isActionable ? 'red' : 'blue']}`,\n      backgroundColor: theme.palette.common.white,\n      zIndex: 2,\n      overflow: 'hidden'\n    },\n    nodeTitle: {\n      padding: theme.spacing(2),\n      flex: '1',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: theme.palette.common.white,\n      backgroundColor: ({ isActionable }: StyleProps): string =>\n        theme.palette.common[isActionable ? 'red' : 'blue']\n    },\n    nodeContent: {\n      padding: theme.spacing(2)\n    },\n    clickable: {\n      cursor: 'pointer'\n    }\n  }),\n  { name: 'DagreGraph-Node' }\n);\n","import React, { FC, memo, useCallback, useMemo, useRef } from 'react';\nimport clsx from 'clsx';\nimport { useLifecycles, useUpdateEffect } from 'react-use';\n\nimport { ActionNode, BranchNode, PathwayNode, Transition } from 'pathways-model';\nimport { getNodeType } from 'utils/builder';\nimport NodeDetails from './NodeDetails';\nimport { useGraphProvider } from './GraphProvider';\nimport NodeIcon from './NodeIcon';\nimport useStyles from './Node.styles';\n\ninterface NodeProps {\n  nodeKey: string;\n  pathwayNode: ActionNode | BranchNode | PathwayNode;\n  isActionable: boolean;\n  isExpanded: boolean;\n  onClick?: (nodeName: string) => void;\n  xCoordinate: number;\n  yCoordinate: number;\n  openNode: (nodeName: string) => void;\n}\n\ninterface BoundingClientRectResponse {\n  width: number;\n  height: number;\n}\n\nconst createTransitionLabel = ({ condition }: Transition): { [key: string]: string | number } =>\n  condition\n    ? {\n        label: condition.description,\n        width: 25,\n        height: 20\n      }\n    : {};\n\nconst getBoundingClientRect = (element: HTMLDivElement | null): BoundingClientRectResponse => {\n  const dimensions = element?.getBoundingClientRect() ?? { width: 0, height: 0 };\n  return { width: Math.ceil(dimensions.width), height: Math.ceil(dimensions.height) };\n};\n\nconst Node: FC<NodeProps> = ({\n  nodeKey,\n  pathwayNode,\n  isActionable,\n  isExpanded,\n  onClick,\n  xCoordinate,\n  yCoordinate,\n  openNode\n}) => {\n  const styles = useStyles({ isExpanded, isActionable });\n  const onClickHandler = useCallback(() => {\n    if (onClick) onClick(nodeKey);\n  }, [onClick, nodeKey]);\n  const nodeRef = useRef<HTMLDivElement>(null);\n  const { graph, reflow } = useGraphProvider();\n  const nodeStyle = useMemo(() => ({ top: `${yCoordinate}px`, left: `${xCoordinate}px` }), [\n    xCoordinate,\n    yCoordinate\n  ]);\n  const nodeType = getNodeType(pathwayNode);\n  const action = (pathwayNode as ActionNode).action;\n\n  const { label, transitions } = pathwayNode;\n\n  useLifecycles(\n    (): void => {\n      const { width, height } = getBoundingClientRect(nodeRef.current);\n      graph.setNode(nodeKey, {\n        width,\n        height\n      });\n      transitions.forEach(transition => {\n        graph.setEdge(nodeKey, transition.transition, createTransitionLabel(transition));\n      });\n    },\n    (): void => {\n      graph.removeNode(nodeKey);\n    }\n  );\n\n  useUpdateEffect(() => {\n    if (!nodeRef.current) return undefined;\n\n    const { width, height } = getBoundingClientRect(nodeRef.current);\n    const node = graph.node(nodeKey);\n\n    if (node.width !== width || node.height !== height) {\n      graph.setNode(nodeKey, {\n        ...node,\n        width,\n        height\n      });\n      reflow();\n    }\n  });\n\n  useUpdateEffect(() => {\n    // remove transitions that no longer exist\n    const transitionNodes = new Set(transitions.map(({ transition }) => transition));\n    graph.outEdges(nodeKey)?.forEach(({ w }) => {\n      if (!transitionNodes.has(w)) {\n        graph.removeEdge(nodeKey, w);\n      }\n    });\n\n    transitions.forEach(transition => {\n      graph.setEdge(nodeKey, transition.transition, createTransitionLabel(transition));\n    });\n    reflow();\n  }, [nodeKey, transitions]);\n\n  useUpdateEffect(() => {\n    if (!action) return;\n    openNode(nodeKey);\n  }, [action, nodeKey]);\n\n  return (\n    <div className={styles.node} style={nodeStyle} ref={nodeRef}>\n      <div className={clsx(styles.nodeTitle, onClick && styles.clickable)} onClick={onClickHandler}>\n        <NodeIcon\n          resourceType={action ? action.resource?.resourceType : undefined}\n          nodeType={nodeType}\n          isStartNode={pathwayNode.label === 'Start'}\n        />\n        {label}\n      </div>\n\n      {isExpanded && (\n        <div className={styles.nodeContent}>\n          <NodeDetails pathwayNode={pathwayNode} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Node);\n","import { useState, useCallback } from 'react';\n\nexport interface ExpandedState {\n  [key: string]: boolean | string | null;\n}\n\ninterface ExpandedStateToggle {\n  expanded: ExpandedState;\n  toggleExpanded: (nodeName: string) => void;\n  openNode: (nodeName: string) => void;\n  closeNode: (nodeName: string) => void;\n}\n\nconst useExpandedState = (): ExpandedStateToggle => {\n  const [expanded, setExpanded] = useState<ExpandedState>({\n    lastSelectedNode: null\n  } as ExpandedState);\n\n  const toggleExpanded = useCallback((nodeName: string) => {\n    if (nodeName === 'Start') {\n      setExpanded(prevState => ({\n        ...prevState,\n        lastSelectedNode: nodeName\n      }));\n    } else {\n      setExpanded(prevState => ({\n        ...prevState,\n        [nodeName]:\n          !prevState[nodeName] || prevState.lastSelectedNode === nodeName\n            ? !prevState[nodeName]\n            : prevState[nodeName],\n        lastSelectedNode: nodeName\n      }));\n    }\n  }, []);\n\n  const openNode = useCallback((nodeName: string) => {\n    setExpanded(prevState => {\n      if (prevState[nodeName] && prevState.lastSelectedNode === nodeName) return prevState;\n\n      return {\n        ...prevState,\n        [nodeName]: true,\n        lastSelectedNode: nodeName\n      };\n    });\n  }, []);\n\n  const closeNode = useCallback((nodeName: string) => {\n    setExpanded(prevState => {\n      if (!prevState[nodeName]) return prevState;\n\n      return {\n        ...prevState,\n        [nodeName]: false\n      };\n    });\n  }, []);\n\n  return { expanded, toggleExpanded, openNode, closeNode };\n};\n\nexport default useExpandedState;\n","import { useCallback } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nexport type RedirectToNodeCallback = (nodeId: string) => void;\n\nconst useRedirectToNode = (): RedirectToNodeCallback => {\n  const { id: pathwayId } = useParams();\n  const history = useHistory();\n  const redirectToNode = useCallback(\n    nodeId => {\n      const url = `/builder/${encodeURIComponent(pathwayId)}/node/${encodeURIComponent(nodeId)}`;\n      if (url !== history.location.pathname) {\n        history.push(url);\n      }\n    },\n    [history, pathwayId]\n  );\n\n  return redirectToNode;\n};\n\nexport default useRedirectToNode;\n","import React, { FC, memo, useCallback } from 'react';\nimport { useUpdateEffect } from 'react-use';\n\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { useGraphCoordinates, useGraphProvider } from './GraphProvider';\nimport Node from './Node';\nimport useExpandedState from './useExpandedState';\nimport useRedirectToNode from './useRedirectToNode';\n\ninterface GraphNodesProps {\n  interactive: boolean;\n}\n\nconst GraphNodes: FC<GraphNodesProps> = ({ interactive }) => {\n  const { pathway } = useCurrentPathwayContext();\n  const { expanded: expandedNodes, toggleExpanded, openNode } = useExpandedState();\n  const { reflow } = useGraphProvider();\n  const { nodes: nodeCoordinates } = useGraphCoordinates();\n  const { currentNode } = useCurrentNodeContext();\n  const redirectToNode = useRedirectToNode();\n  const { resetCurrentCriteria } = useCurrentCriteriaContext();\n  const onClick = useCallback(\n    (nodeName: string) => {\n      redirectToNode(nodeName);\n      toggleExpanded(nodeName);\n      resetCurrentCriteria();\n    },\n    [redirectToNode, toggleExpanded, resetCurrentCriteria]\n  );\n\n  const nodes = Object.entries(pathway?.nodes ?? {});\n\n  useUpdateEffect(() => {\n    reflow();\n  }, [nodes.length]);\n\n  return (\n    <>\n      {nodes.map(([nodeName, pathwayNode]) => {\n        const coordinates = nodeCoordinates[nodeName] ?? { x: -999, y: -999 };\n\n        return (\n          <Node\n            key={nodeName}\n            nodeKey={nodeName}\n            pathwayNode={pathwayNode}\n            isActionable={pathwayNode.key === currentNode?.key}\n            isExpanded={Boolean(expandedNodes[nodeName])}\n            onClick={interactive ? onClick : undefined}\n            xCoordinate={coordinates.x}\n            yCoordinate={coordinates.y}\n            openNode={openNode}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default memo(GraphNodes);\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  {\n    root: {\n      position: 'relative',\n      minWidth: '100%',\n      minHeight: '100%'\n    }\n  },\n  { name: 'DagreGraph-GraphRoot' }\n);\n","import React, { FC, ReactNode, useEffect, useMemo, useRef } from 'react';\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor';\n\nimport { useSetGraphWidth, useGraphCoordinates } from './GraphProvider';\nimport useStyles from './GraphRoot.styles';\n\ninterface GraphRootProps {\n  children: ReactNode | ReactNode[];\n}\n\n// padding, in pixels, to add to the width and height of the graph\nconst GRAPH_PADDING = 150;\n\nconst GraphRoot: FC<GraphRootProps> = ({ children }) => {\n  const styles = useStyles();\n  const graphRef = useRef<HTMLDivElement>(null);\n  const setGraphWidth = useSetGraphWidth();\n  const { nodes: nodeCoordinates } = useGraphCoordinates();\n  const graphWidth = useMemo(() => {\n    return Math.ceil(\n      GRAPH_PADDING +\n        (nodeCoordinates !== undefined\n          ? Object.values(nodeCoordinates)\n              .map(({ x, width }) => x + width)\n              .reduce((a, b) => Math.max(a, b), 0)\n          : 0)\n    );\n  }, [nodeCoordinates]);\n  const graphHeight = useMemo(() => {\n    return Math.ceil(\n      GRAPH_PADDING +\n        (nodeCoordinates !== undefined\n          ? Object.values(nodeCoordinates)\n              .map(({ y, height }) => y + height)\n              .reduce((a, b) => Math.max(a, b), 0)\n          : 0)\n    );\n  }, [nodeCoordinates]);\n  const rootStyles = useMemo(() => ({ width: `${graphWidth}px`, height: `${graphHeight}px` }), [\n    graphWidth,\n    graphHeight\n  ]);\n\n  useEffect(() => {\n    const graphElement = graphRef.current;\n    if (graphElement?.parentElement) {\n      const { width } = graphElement.parentElement.getBoundingClientRect();\n      setGraphWidth(Math.ceil(width));\n      const sensor = new ResizeSensor(graphElement.parentElement, () => {\n        const { width } = graphElement?.parentElement?.getBoundingClientRect() ?? { width: 0 };\n        setGraphWidth(Math.ceil(width));\n      });\n      return (): void => {\n        sensor.detach();\n      };\n    }\n  }, [graphRef, setGraphWidth]);\n\n  return (\n    <div ref={graphRef} className={styles.root} style={rootStyles}>\n      {children}\n    </div>\n  );\n};\n\nexport default GraphRoot;\n","import React, { FC, memo } from 'react';\n\nimport GraphEdges from './GraphEdges';\nimport GraphProvider from './GraphProvider';\nimport GraphNodes from './GraphNodes';\nimport GraphRoot from './GraphRoot';\n\ninterface DagreGraphProps {\n  interactive?: boolean;\n}\n\nconst DagreGraph: FC<DagreGraphProps> = ({ interactive = true }) => {\n  return (\n    <GraphProvider>\n      <GraphRoot>\n        <GraphNodes interactive={interactive} />\n        <GraphEdges />\n      </GraphRoot>\n    </GraphProvider>\n  );\n};\n\nexport default memo(DagreGraph);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    elementContainer: {\n      padding: '1em',\n      marginRight: '10px',\n      border: '0.1em solid',\n      borderRadius: '0.2em',\n      fontWeight: 500,\n      width: 'auto',\n      backgroundColor: theme.palette.common.grayLighter\n    },\n    elementSelect: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    addElementLabel: {\n      marginLeft: '1em',\n      minWidth: '120px'\n    },\n    headerText: {\n      marginRight: '10px',\n      fontStyle: 'italic',\n      fontSize: '0.8em'\n    },\n    elementField: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    elementFieldLabel: {\n      fontWeight: 'bold',\n      marginRight: '1em'\n    }\n  }),\n  { name: 'CriteriaBuilder' }\n);\n","import React, { FC, memo, useCallback, useEffect, ChangeEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, TextField } from '@material-ui/core';\n\nimport DropDown from 'components/elements/DropDown';\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\nimport useStyles from './styles';\nimport { useCriteriaBuilderContext } from 'components/CriteriaBuilderProvider';\n\nconst CriteriaBuilder: FC = () => {\n  const {\n    selectedElement,\n    selectedDemoElement,\n    gender,\n    minimumAge,\n    maximumAge,\n    setSelectedElement,\n    setSelectedDemoElement,\n    setGender,\n    setMinimumAge,\n    setMaximumAge,\n    resetCriteriaBuilder\n  } = useCriteriaBuilderContext();\n  const styles = useStyles();\n  const { setCurrentCriteria } = useCurrentCriteriaContext();\n  const elementOptions = [{ value: 'Demographics', label: 'Demographics' }];\n  const demoElementOptions = [\n    { value: 'Age Range', label: 'Age Range' },\n    { value: 'Gender', label: 'Gender' }\n  ];\n  const genderOptions = [\n    {\n      label: 'Male',\n      value: 'Male'\n    },\n    {\n      label: 'Female',\n      value: 'Female'\n    },\n    {\n      label: 'Other',\n      value: 'Other'\n    },\n    {\n      label: 'Unknown',\n      value: 'Unknown'\n    }\n  ];\n\n  const onElementSelected = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setSelectedElement(event?.target.value || '');\n    },\n    [setSelectedElement]\n  );\n\n  const onDemoElementSelected = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setSelectedDemoElement(event?.target.value || '');\n    },\n    [setSelectedDemoElement]\n  );\n\n  const onGenderSelected = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setGender(event?.target.value || '');\n    },\n    [setGender]\n  );\n\n  const onMinimumAgeChange = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setMinimumAge(parseInt(event?.target.value) || 0);\n    },\n    [setMinimumAge]\n  );\n\n  const onMaximumAgeChange = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setMaximumAge(parseInt(event?.target.value) || 0);\n    },\n    [setMaximumAge]\n  );\n\n  const handleClose = useCallback((): void => {\n    resetCriteriaBuilder();\n    setCurrentCriteria(null);\n  }, [resetCriteriaBuilder, setCurrentCriteria]);\n\n  const genderString = `The patient's gender is ${gender}`;\n  const ageRangeString = `The patient's age is between ${minimumAge} years and ${maximumAge} years`;\n\n  useEffect(() => {\n    const cql = `AgeInYears() >= ${minimumAge} and AgeInYears() < ${maximumAge}`;\n    if (selectedDemoElement === 'Age Range') {\n      if (minimumAge >= 0 && maximumAge > 0 && minimumAge < maximumAge) {\n        setCurrentCriteria({\n          cql,\n          text: ageRangeString,\n          type: 'age',\n          min: minimumAge,\n          max: maximumAge\n        });\n      } else {\n        setCurrentCriteria(null);\n      }\n    }\n  }, [selectedDemoElement, minimumAge, maximumAge, ageRangeString, setCurrentCriteria]);\n\n  useEffect(() => {\n    const cql = `Patient.gender.value ~ '${gender}'`;\n    if (selectedDemoElement === 'Gender') {\n      if (gender !== '') {\n        setCurrentCriteria({ cql, text: genderString, type: 'gender', gender });\n      } else {\n        setCurrentCriteria(null);\n      }\n    }\n  }, [selectedDemoElement, gender, genderString, setCurrentCriteria]);\n\n  return (\n    <>\n      <div className={styles.headerText}>\n        Specify criteria to identify a target population that should receive a recommendation from\n        this artifact. Examples might include an age range, gender, presence of a certain condition,\n        or lab results within a specific range.\n      </div>\n      <div className={styles.elementContainer}>\n        {(selectedElement === '' || selectedDemoElement === '') && (\n          <div className={styles.elementSelect}>\n            <div className={styles.addElementLabel}>\n              <FontAwesomeIcon icon={faPlus} /> Add element\n            </div>\n            <DropDown\n              id=\"Choose Element Type\"\n              label=\"Choose Element Type\"\n              options={elementOptions}\n              onChange={onElementSelected}\n              value={selectedElement}\n            />\n            {selectedElement && (\n              <DropDown\n                id={`Select ${selectedElement} element`}\n                label={`Select ${selectedElement} element`}\n                options={demoElementOptions}\n                onChange={onDemoElementSelected}\n                value={selectedDemoElement}\n              />\n            )}\n          </div>\n        )}\n\n        {!(selectedElement === '' || selectedDemoElement === '') && (\n          <>\n            <span>{selectedDemoElement}</span>\n            <IconButton onClick={handleClose}>\n              <FontAwesomeIcon icon={faTimes} />\n            </IconButton>\n            <hr />\n            {selectedDemoElement === 'Gender' && (\n              <>\n                <span>{genderString}</span>\n                <DropDown\n                  id=\"Select Gender\"\n                  label=\"Gender\"\n                  options={genderOptions}\n                  onChange={onGenderSelected}\n                  value={gender}\n                />\n              </>\n            )}\n            {selectedDemoElement === 'Age Range' && (\n              <>\n                <span>{ageRangeString}</span>\n                <div className={styles.elementField}>\n                  <span className={styles.elementFieldLabel}>Minimum Age:</span>\n                  <TextField type=\"number\" value={minimumAge} onChange={onMinimumAgeChange} />\n                </div>\n                <div className={styles.elementField}>\n                  <span className={styles.elementFieldLabel}>Maximum Age:</span>\n                  <TextField type=\"number\" value={maximumAge} onChange={onMaximumAgeChange} />\n                </div>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(CriteriaBuilder);\n","import { makeStyles, Theme as AugmentedTheme, darken } from '@material-ui/core/styles';\n\nconst toggleButtonCss = {\n  borderRadius: '0%',\n  marginLeft: '1px',\n  width: '50px',\n  height: '50px'\n};\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh'\n    },\n    main: {\n      flex: '1',\n      display: 'flex',\n      alignItems: 'stretch',\n      overflowY: 'auto'\n    },\n    graph: {\n      'overflow-y': 'auto',\n      flex: '1'\n    },\n    graphHeader: {\n      display: 'flex',\n      height: '50px',\n      backgroundColor: theme.palette.common.white,\n      marginLeft: '1px'\n    },\n    graphHeaderText: {\n      height: '50px',\n      display: 'flex',\n      width: '100%',\n      backgroundColor: theme.palette.primary.main,\n      alignItems: 'center',\n      color: theme.palette.common.white,\n      fontSize: '1.4em',\n      paddingLeft: '1.5em'\n    },\n    toggleButton: {\n      '&-on': {\n        ...toggleButtonCss,\n        backgroundColor: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: darken(theme.palette.primary.main, 0.1)\n        }\n      },\n      '&-off': {\n        ...toggleButtonCss,\n        backgroundColor: theme.palette.text.primary,\n        '&:hover': {\n          backgroundColor: darken(theme.palette.text.primary, 0.1)\n        }\n      }\n    },\n    toggleIcon: {\n      transform: 'rotate(90deg) scaleY(-1)',\n      color: theme.palette.common.white\n    }\n  }),\n  { name: 'Builder', index: 1 }\n);\n","import React, { FC, useEffect, memo, useState, useCallback } from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { useCurrentCriteriaContext } from 'components/CurrentCriteriaProvider';\n\nimport Header from 'components/Header';\nimport Navigation from 'components/Navigation';\nimport Sidebar from 'components/Sidebar';\nimport DagreGraph from 'components/DagreGraph';\nimport CriteriaBuilder from 'components/CriteriaBuilder';\nimport { useTheme } from 'components/ThemeProvider';\nimport useStyles from './styles';\nimport { IconButton } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faProjectDiagram } from '@fortawesome/free-solid-svg-icons';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\n\nconst Builder: FC = () => {\n  const styles = useStyles();\n  const { pathway } = useCurrentPathwayContext();\n  const { currentCriteriaNodeId } = useCurrentCriteriaContext();\n  const theme = useTheme('dark');\n  const [showCriteriaBuilder, setShowCriteriaBuilder] = useState<boolean>(true);\n\n  const toggleShowCriteria = useCallback((): void => {\n    setShowCriteriaBuilder(!showCriteriaBuilder);\n  }, [showCriteriaBuilder]);\n\n  // Reset criteriaBuilderToggle to true if not currently building criteria\n  useEffect(() => {\n    if (!showCriteriaBuilder && currentCriteriaNodeId === '') setShowCriteriaBuilder(true);\n  }, [currentCriteriaNodeId, showCriteriaBuilder]);\n\n  return (\n    <div className={styles.root}>\n      <div>\n        <Header />\n        <Navigation />\n      </div>\n\n      {pathway && (\n        <div className={styles.main}>\n          <MuiThemeProvider theme={theme}>\n            <Sidebar />\n          </MuiThemeProvider>\n\n          <div className={styles.graph}>\n            {currentCriteriaNodeId !== '' && (\n              <div className={styles.graphHeader}>\n                <div className={styles.graphHeaderText}>\n                  <span>Criteria Builder</span>\n                </div>\n                <IconButton\n                  className={`${styles.toggleButton}-${showCriteriaBuilder ? 'on' : 'off'}`}\n                  onClick={toggleShowCriteria}\n                >\n                  <FontAwesomeIcon className={styles.toggleIcon} icon={faProjectDiagram} />\n                </IconButton>\n              </div>\n            )}\n            {currentCriteriaNodeId !== '' && showCriteriaBuilder ? (\n              <CriteriaBuilder />\n            ) : (\n              <DagreGraph />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Builder);\n","import React, { FC, memo, useMemo, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\n\nimport Builder from 'components/Builder';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport { useCurrentPathwayContext } from './CurrentPathwayProvider';\nimport { useCurrentNodeContext } from './CurrentNodeProvider';\n\nconst BuilderRoute: FC = () => {\n  const { id, nodeId } = useParams();\n  const { pathways } = usePathwaysContext();\n  const { setPathway } = useCurrentPathwayContext();\n  const { setCurrentNode } = useCurrentNodeContext();\n  const pathwayId = decodeURIComponent(id);\n  const pathwayIndex = useMemo(() => pathways.findIndex(pathway => pathway.id === pathwayId), [\n    pathwayId,\n    pathways\n  ]);\n  const pathway = pathways[pathwayIndex];\n  const currentNode = pathway?.nodes?.[decodeURIComponent(nodeId)];\n\n  useEffect(() => {\n    setPathway(pathway);\n  }, [pathway, setPathway]);\n\n  useEffect(() => {\n    setCurrentNode(currentNode);\n  }, [currentNode, setCurrentNode]);\n\n  if (pathway == null) return null;\n  if (currentNode == null) return <Redirect to={`/builder/${id}/node/Start`} />;\n\n  return <Builder />;\n};\n\nexport default memo(BuilderRoute);\n","import React, { FC, createContext, useContext, useState, ReactNode } from 'react';\n\ninterface UserContextInterface {\n  user: string | null;\n  setUser: Function;\n}\n\nexport const UserContext = createContext<UserContextInterface>({} as UserContextInterface);\n\ninterface UserProviderProps {\n  children: ReactNode;\n}\n\nexport const UserProvider: FC<UserProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<string | null>(null);\n  return <UserContext.Provider value={{ user, setUser }}>{children}</UserContext.Provider>;\n};\n\nexport const useUser = (): UserContextInterface => useContext(UserContext);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    label: {\n      padding: `0.2em 2em`,\n      textTransform: 'none',\n      fontSize: '1.2em',\n      fontWeight: 100\n    }\n  }),\n  { name: 'Tabs', index: 1 }\n);\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Tab as ReactTab, TabList, TabPanel, Tabs as ReactTabs } from 'react-tabs';\n\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\nimport shortid from 'shortid';\n\ninterface Tab {\n  label: string;\n  component: ReactNode;\n}\n\ninterface TabsProp {\n  tabs: Tab[];\n}\n\nconst Tabs: FC<TabsProp> = ({ tabs }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.root}>\n      <ReactTabs>\n        <TabList>\n          {tabs.map(tab => (\n            <ReactTab key={shortid.generate()}>\n              <Button classes={{ label: styles.label }}>{tab.label}</Button>\n            </ReactTab>\n          ))}\n        </TabList>\n\n        {tabs.map(tab => (\n          <TabPanel key={shortid.generate()}>{tab.component}</TabPanel>\n        ))}\n      </ReactTabs>\n    </div>\n  );\n};\n\nexport default memo(Tabs);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './Loading.module.scss';\n\nconst Loading: FC = () => {\n  return (\n    <div className={styles.root}>\n      <FontAwesomeIcon icon={faSpinner} className={styles.root} size=\"4x\" spin />\n    </div>\n  );\n};\n\nexport default memo(Loading);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    createPathwayButton: {\n      alignSelf: 'flex-end'\n    },\n    pathwayList: {\n      marginTop: '2em'\n    },\n    pathwaysListButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    }\n  }),\n  { name: 'PathwaysList', index: 1 }\n);\n","import React, { FC, useCallback, useRef, memo, FormEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  IconButton\n} from '@material-ui/core';\nimport shortid from 'shortid';\nimport produce from 'immer';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { createNewPathway } from 'utils/builder';\nimport { Pathway } from 'pathways-model';\n\ninterface PathwayModalProps {\n  open: boolean;\n  onClose: () => void;\n  editPathway?: Pathway;\n}\n\nconst PathwayModal: FC<PathwayModalProps> = ({ open, onClose, editPathway }) => {\n  const createNewPathwayMeta = !editPathway;\n  const styles = useStyles();\n  const history = useHistory();\n  const pathwayNameRef = useRef<HTMLInputElement>(null);\n  const pathwayDescRef = useRef<HTMLInputElement>(null);\n  const { addPathway, updatePathway } = usePathwaysContext();\n\n  const closeModal = useCallback(\n    (pathwayId: string): void => {\n      history.push(`/builder/${encodeURIComponent(pathwayId)}/node/Start`);\n      onClose();\n    },\n    [history, onClose]\n  );\n\n  const handleCreateNewPathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      const pathwayId = shortid.generate();\n      const name: string = pathwayNameRef.current?.value ?? '';\n      const description: string = pathwayDescRef.current?.value ?? '';\n      addPathway(createNewPathway(name, description, pathwayId));\n      closeModal(pathwayId);\n    },\n    [addPathway, closeModal]\n  );\n\n  const handleUpdatePathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      if (\n        editPathway &&\n        (pathwayNameRef.current?.value !== editPathway.name ||\n          pathwayDescRef.current?.value !== editPathway.description)\n      ) {\n        const newEditPathway = produce(editPathway, (draftEditPathway: Pathway) => {\n          if (pathwayNameRef.current?.value) draftEditPathway.name = pathwayNameRef.current.value;\n          if (pathwayDescRef.current?.value)\n            draftEditPathway.description = pathwayDescRef.current.value;\n        });\n        updatePathway(newEditPathway);\n      }\n      onClose();\n    },\n    [updatePathway, editPathway, onClose]\n  );\n\n  let name, description;\n  if (editPathway) {\n    name = editPathway.name;\n    const metaDescription = editPathway.description;\n    if (metaDescription && metaDescription !== '') description = metaDescription;\n  }\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"create-pathway\" fullWidth maxWidth=\"md\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={createNewPathwayMeta ? handleCreateNewPathway : handleUpdatePathway}>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            autoFocus\n            label=\"Pathway Name\"\n            fullWidth\n            required={createNewPathwayMeta}\n            inputRef={pathwayNameRef}\n            defaultValue={createNewPathwayMeta ? undefined : name}\n          />\n\n          <TextField\n            variant=\"outlined\"\n            label=\"Pathway Description\"\n            fullWidth\n            inputRef={pathwayDescRef}\n            defaultValue={createNewPathwayMeta ? undefined : description}\n            multiline\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={createNewPathwayMeta && <FontAwesomeIcon icon={faPlus} />}\n            type=\"submit\"\n          >\n            {createNewPathwayMeta ? 'Create' : 'Save'}\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(PathwayModal);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    container: {\n      display: 'inline-block'\n    },\n    paper: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      borderRadius: '10px',\n      border: '5px solid rgba(74, 74, 74, 0.5)',\n      backgroundColor: theme.palette.common.gray,\n      color: theme.palette.common.white,\n      padding: '0.5em',\n      mozBackgroundClip: 'padding' /* Firefox 3.6 */,\n      webkitBackgroundVlip: 'padding' /* Safari 4? Chrome 6? */,\n      backgroundClip: 'padding-box' /* Firefox 4, Safari 5, Opera 10, IE 9 */\n    },\n    displayText: {\n      marginRight: '4em',\n      whiteSpace: 'nowrap'\n    },\n    buttons: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minWidth: '2.5em',\n      minHeight: '2em',\n      cursor: 'pointer',\n      borderRadius: '15%',\n      marginRight: '0.5em'\n    }\n  }),\n  { name: 'ConfirmedDeletionButton' }\n);\n","import React, { FC, memo } from 'react';\nimport styles from './ActionButton.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\n\ninterface ButtonProps {\n  type: 'accept' | 'decline';\n  onClick?: () => void;\n}\n\ninterface ActionButtonProps extends ButtonProps {\n  size: 'small' | 'large' | 'medium';\n}\n\nconst LargeActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <button\n      className={`${styles.largeActionButton} button ${type === 'decline' && styles.largeDecline}`}\n      type=\"button\"\n      onClick={onClick}\n    >\n      {type[0].toUpperCase() + type.slice(1)}\n    </button>\n  );\n};\n\nconst SmallActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.smallActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n    </div>\n  );\n};\n\nconst MediumActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  const buttonText = {\n    accept: 'Submit',\n    decline: 'Cancel'\n  };\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.mediumActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n      {buttonText[type]}\n    </div>\n  );\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({ type, size, onClick }) => {\n  switch (size) {\n    case 'small':\n      return <SmallActionButton type={type} onClick={onClick} />;\n    case 'large':\n      return <LargeActionButton type={type} onClick={onClick} />;\n    case 'medium':\n      return <MediumActionButton type={type} onClick={onClick} />;\n  }\n};\n\nexport default memo(ActionButton);\n","import React, { FC, memo, useState, MouseEvent, useCallback } from 'react';\n\nimport { Button } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport useStyles from './styles';\n\nimport ActionButton from 'components/ActionButton';\n\ninterface ConfirmedDeletionButtonProps {\n  deleteId: string;\n  deleteMethod: (id: string) => void;\n  deleteType?: string;\n  deleteName?: string;\n}\n\nconst ConfirmedDeletionButton: FC<ConfirmedDeletionButtonProps> = ({\n  deleteId,\n  deleteMethod,\n  deleteType,\n  deleteName\n}) => {\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const displayText =\n    'Are you sure' +\n    (deleteType && deleteMethod\n      ? ' that you would like to delete the ' + deleteName + ' ' + deleteType + ' ?'\n      : '?');\n\n  const onClickHandler = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n    setOpen(true);\n  }, []);\n\n  const onAcceptHandler = useCallback((): void => {\n    deleteMethod(deleteId);\n    setOpen(false);\n    setAnchorEl(null);\n  }, [deleteId, deleteMethod]);\n\n  const onDeclineHandler = useCallback((): void => {\n    setOpen(false);\n    setAnchorEl(null);\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <ClickAwayListener onClickAway={onDeclineHandler}>\n        <Button\n          color=\"secondary\"\n          size=\"small\"\n          startIcon={<FontAwesomeIcon icon={faTrashAlt} />}\n          onClick={onClickHandler}\n        >\n          Delete\n        </Button>\n      </ClickAwayListener>\n      <Popover\n        classes={{ paper: styles.paper }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n      >\n        <div className={styles.displayText}> {displayText} </div>\n        <div className={styles.buttons}>\n          <ActionButton size=\"small\" type=\"accept\" onClick={onAcceptHandler} />\n          <ActionButton size=\"small\" type=\"decline\" onClick={onDeclineHandler} />\n        </div>\n      </Popover>\n    </div>\n  );\n};\n\nexport default memo(ConfirmedDeletionButton);\n","import React, { FC, memo, useState, useCallback, MouseEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faFileDownload } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Link\n} from '@material-ui/core';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport PathwayModal from './PathwayModal';\n\nimport useStyles from './styles';\nimport { Pathway } from 'pathways-model';\nimport { Link as RouterLink } from 'react-router-dom';\nimport ConfirmedDeletionButton from 'components/ConfirmedDeletionButton';\nimport ExportMenu from 'components/elements/ExportMenu';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\n\nconst PathwaysTable: FC = () => {\n  const styles = useStyles();\n  const { pathways, deletePathway } = usePathwaysContext();\n  const { setPathway } = useCurrentPathwayContext();\n  const [open, setOpen] = useState(false);\n  const [editablePathway, setEditablePathway] = useState<Pathway>();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const openEditPathwayModal = useCallback((pathway: Pathway): void => {\n    setOpen(true);\n    setEditablePathway(pathway);\n  }, []);\n\n  const closeEditPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  const openMenu = useCallback(\n    (event: MouseEvent<HTMLButtonElement>): void => {\n      setAnchorEl(event.currentTarget);\n      const pathway = pathways.filter(pathway => pathway.id === event.currentTarget.id);\n      if (pathway.length) setPathway(pathway[0]);\n    },\n    [pathways, setPathway]\n  );\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const deletion = useCallback(\n    (id: string): void => {\n      deletePathway(id);\n    },\n    [deletePathway]\n  );\n\n  return (\n    <div>\n      <TableContainer className={styles.pathwayList}>\n        <Table aria-label=\"pathway list\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Pathway Name</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Last Updated</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {pathways.map(pathway => (\n              <TableRow key={pathway.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Link\n                    component={RouterLink}\n                    to={`/builder/${encodeURIComponent(pathway.id)}`}\n                    color=\"primary\"\n                    underline=\"none\"\n                  >\n                    {pathway.name}\n                  </Link>\n                </TableCell>\n\n                <TableCell>draft</TableCell>\n                <TableCell>2 days ago</TableCell>\n\n                <TableCell align=\"right\">\n                  <Button\n                    className={styles.pathwaysListButton}\n                    color=\"primary\"\n                    size=\"small\"\n                    startIcon={<FontAwesomeIcon icon={faEdit} />}\n                    onClick={(): void => openEditPathwayModal(pathway)}\n                  >\n                    Edit Info\n                  </Button>\n                  <Button\n                    id={pathway.id}\n                    className={styles.pathwaysListButton}\n                    color=\"primary\"\n                    size=\"small\"\n                    startIcon={<FontAwesomeIcon icon={faFileDownload} />}\n                    onClick={openMenu}\n                  >\n                    Export\n                  </Button>\n                  <ConfirmedDeletionButton\n                    deleteType=\"pathway\"\n                    deleteName={pathway.name}\n                    deleteId={pathway.id}\n                    deleteMethod={deletion}\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <ExportMenu anchorEl={anchorEl} closeMenu={closeMenu} />\n      <PathwayModal open={open} onClose={closeEditPathwayModal} editPathway={editablePathway} />\n    </div>\n  );\n};\n\nexport default memo(PathwaysTable);\n","import React, { FC, useCallback, useState, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport Loading from 'components/elements/Loading';\nimport PathwaysTable from './PathwaysTable';\nimport PathwayModal from './PathwayModal';\n\nimport useStyles from './styles';\n\nconst PathwaysList: FC = () => {\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n  const { status } = usePathwaysContext();\n\n  const openNewPathwayModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeNewPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <Button\n        className={styles.createPathwayButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<FontAwesomeIcon icon={faPlus} />}\n        onClick={openNewPathwayModal}\n      >\n        Create Pathway\n      </Button>\n\n      <PathwayModal open={open} onClose={closeNewPathwayModal} />\n      {status === 'loading' ? <Loading /> : <PathwaysTable />}\n    </div>\n  );\n};\n\nexport default memo(PathwaysList);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    buttonRow: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    buildCriteriaButton: {\n      alignSelf: 'flex-end',\n      marginLeft: '20px'\n    },\n    criteriaList: {\n      marginTop: '2em'\n    },\n    editButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    },\n    input: {\n      display: 'none'\n    },\n    chooseFileInput: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    inputButton: {\n      whiteSpace: 'nowrap',\n      marginRight: '1em'\n    },\n    fileName: {\n      fontStyle: 'italic'\n    }\n  }),\n  { name: 'CriteriaList', index: 1 }\n);\n","import React, { FC, memo, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport moment from 'moment';\n\nimport useStyles from './styles';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport ConfirmedDeletionButton from 'components/ConfirmedDeletionButton';\n\nconst CriteriaTable: FC = () => {\n  const styles = useStyles();\n  const { criteria, deleteCriteria } = useCriteriaContext();\n\n  const renderDate = (datetime: number): string => {\n    return moment(datetime).fromNow();\n  };\n\n  const deletion = useCallback(\n    (id: string): void => {\n      deleteCriteria(id);\n    },\n    [deleteCriteria]\n  );\n\n  return (\n    <TableContainer className={styles.criteriaList}>\n      <Table aria-label=\"criteria list\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Criteria Name</TableCell>\n            <TableCell>Version</TableCell>\n            <TableCell>Added</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {criteria.map(c => (\n            <TableRow key={c.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {c.label}\n              </TableCell>\n              <TableCell>{c.version}</TableCell>\n              <TableCell>{renderDate(c.modified)}</TableCell>\n\n              <TableCell align=\"right\">\n                <Button\n                  className={styles.editButton}\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faEdit} />}\n                >\n                  Edit\n                </Button>\n                <ConfirmedDeletionButton\n                  deleteType=\"criterion\"\n                  deleteName={c.label}\n                  deleteId={c.id}\n                  deleteMethod={deletion}\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default memo(CriteriaTable);\n","import React, { FC, useCallback, useRef, memo, FormEvent, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileImport, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Input,\n  IconButton\n} from '@material-ui/core';\n\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport useStyles from './styles';\n\ninterface ImportCriteriaModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst ImportCriteriaModal: FC<ImportCriteriaModalProps> = ({ open, onClose }) => {\n  const styles = useStyles();\n  const [fileName, setFileName] = useState<string>('');\n  const importFileRef = useRef<HTMLInputElement>(null);\n\n  const { addCriteria } = useCriteriaContext();\n\n  const selectFile = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      const files = importFileRef?.current?.files;\n      if (files?.length) addCriteria(files[0]);\n      onClose();\n      setFileName('');\n    },\n    [addCriteria, onClose]\n  );\n\n  const handleChooseFile = useCallback(() => {\n    if (importFileRef?.current?.files?.[0]) setFileName(importFileRef.current.files[0].name);\n  }, [importFileRef]);\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"import-criteria\" fullWidth maxWidth=\"sm\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={selectFile}>\n        <DialogContent>\n          <div className={styles.chooseFileInput}>\n            <Input\n              id=\"choose-file-input\"\n              className={styles.input}\n              inputRef={importFileRef}\n              type=\"file\"\n              inputProps={{ accept: '.cql' }} // TODO: how to allow multiple types?\n              onChange={handleChooseFile}\n            />\n\n            <label htmlFor=\"choose-file-input\">\n              <Button\n                className={styles.inputButton}\n                variant=\"contained\"\n                color=\"primary\"\n                component=\"span\"\n              >\n                Choose File\n              </Button>\n            </label>\n\n            <div className={styles.fileName}>\n              {fileName ? <span>{fileName}</span> : <span>Choose file to import.</span>}\n            </div>\n          </div>\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faFileImport} />}\n            type=\"submit\"\n          >\n            Import\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(ImportCriteriaModal);\n","import React, { FC, memo, useState, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTools, faFileImport } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport Loading from 'components/elements/Loading';\nimport CriteriaTable from './CriteriaTable';\nimport ImportCriteriaModal from './ImportCriteriaModal';\n\nimport useStyles from './styles';\n\nconst CriteriaList: FC = () => {\n  const styles = useStyles();\n  const { status } = usePathwaysContext();\n\n  const [open, setOpen] = useState<boolean>(false);\n  const openImportModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeImportModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.buttonRow}>\n        <Button\n          className={styles.buildCriteriaButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={faFileImport} />}\n          onClick={openImportModal}\n        >\n          Import Library\n        </Button>\n        <Button\n          className={styles.buildCriteriaButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={faTools} />}\n        >\n          Build Criteria\n        </Button>\n      </div>\n\n      <ImportCriteriaModal open={open} onClose={closeImportModal} />\n\n      {status === 'loading' ? <Loading /> : <CriteriaTable />}\n    </div>\n  );\n};\n\nexport default memo(CriteriaList);\n","import React, { FC, memo } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from 'components/Header';\n\nimport BuilderRoute from './BuilderRoute';\nimport ThemeProvider from './ThemeProvider';\nimport { PathwaysProvider } from './PathwaysProvider';\nimport { UserProvider } from './UserProvider';\nimport { CriteriaProvider } from './CriteriaProvider';\nimport Tabs from './Tabs';\nimport PathwaysList from './PathwaysList';\nimport CriteriaList from './CriteriaList';\nimport { CurrentPathwayProvider } from './CurrentPathwayProvider';\nimport { CurrentNodeProvider } from './CurrentNodeProvider';\nimport { CurrentCriteriaProvider } from './CurrentCriteriaProvider';\nimport { SnackbarProvider } from './SnackbarProvider';\nimport { CriteriaBuilderProvider } from './CriteriaBuilderProvider';\n\nconst App: FC = () => {\n  return (\n    <ThemeProvider theme=\"light\">\n      <UserProvider>\n        <CurrentPathwayProvider>\n          <PathwaysProvider>\n            <CurrentNodeProvider>\n              <CriteriaProvider>\n                <SnackbarProvider>\n                  <CurrentCriteriaProvider>\n                    <CriteriaBuilderProvider>\n                      <Router>\n                        <Switch>\n                          <Route path=\"/builder/:id/node/:nodeId\">\n                            <BuilderRoute />\n                          </Route>\n                          <Route path=\"/builder/:id\">\n                            <BuilderRoute />\n                          </Route>\n                          <Route path=\"/\">\n                            <Header />\n                            <Tabs\n                              tabs={[\n                                { label: 'Pathway', component: <PathwaysList /> },\n                                { label: 'Criteria', component: <CriteriaList /> }\n                              ]}\n                            />\n                          </Route>\n                        </Switch>\n                      </Router>\n                    </CriteriaBuilderProvider>\n                  </CurrentCriteriaProvider>\n                </SnackbarProvider>\n              </CriteriaProvider>\n            </CurrentNodeProvider>\n          </PathwaysProvider>\n        </CurrentPathwayProvider>\n      </UserProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default memo(App);\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport './immer';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\n\nimport './styles/index.scss';\n\n// Enable why did you render for development mode\n// Will automatically track all memoized components\nif (process.env.NODE_ENV === 'development') {\n  const whyDidYouRender = require('@welldone-software/why-did-you-render');\n  whyDidYouRender(React, {\n    trackAllPureComponents: true\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n","export class ConfigManager {\n  constructor(config = {}) {\n    this.config = global.CONFIG ? { ...global.CONFIG, ...config } : { ...config };\n  }\n\n  get(name, defaultValue) {\n    const parts = name.split('.');\n    let context = this.config;\n    let value = null;\n    for (const i in parts) {\n      const part = parts[i];\n      value = context[part];\n      context = value;\n    }\n    return value || defaultValue;\n  }\n\n  add(conf) {\n    if (conf) {\n      this.config = {\n        ...this.config,\n        ...conf\n      };\n    }\n  }\n}\n\nconst config = new ConfigManager();\nexport default config;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3T0lc\",\"homeLink\":\"Header_homeLink__2ew4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Loading_root__3b6qy\"};"],"sourceRoot":""}