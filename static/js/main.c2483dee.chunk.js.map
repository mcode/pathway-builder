{"version":3,"sources":["components/ExpandedNode/ExpandedNode.module.scss","components/Header/Header.module.scss","components/elements/Loading/Loading.module.scss","camino-logo-dark.png","components/Graph/Graph.module.scss","components/BuildCriteriaProvider.tsx","styles/theme.tsx","components/ThemeProvider.tsx","components/Header/Header.tsx","utils/builder.ts","components/Navigation/styles.tsx","utils/useRefState.ts","components/CurrentPathwayProvider.tsx","components/Navigation/Navigation.tsx","components/Services/Services.tsx","components/PathwaysProvider.tsx","components/Sidebar/styles.tsx","components/CurrentNodeProvider.tsx","components/Sidebar/Sidebar.tsx","components/Sidebar/SidebarHeader.tsx","components/Sidebar/SidebarButton.tsx","components/elements/DropDown/DropDown.tsx","components/Sidebar/BranchNodeEditor.tsx","engine/cql-to-elm.ts","components/Sidebar/ActionNodeEditor.tsx","components/Sidebar/NullNodeEditor.tsx","components/CriteriaProvider.tsx","components/Sidebar/BranchTransition.tsx","components/Sidebar/OutlinedDiv.tsx","visualization/layout.ts","utils/nodeUtils.ts","components/ExpandedNode/ExpandedNode.tsx","components/Node/Node.tsx","components/Arrow/styles.tsx","components/Arrow/Arrow.tsx","components/Graph/Graph.tsx","components/Builder/styles.tsx","components/Builder/Builder.tsx","components/BuilderRoute.tsx","components/UserProvider.tsx","components/Tabs/styles.tsx","components/Tabs/Tabs.tsx","components/elements/Loading/Loading.tsx","components/PathwaysList/styles.tsx","components/PathwaysList/PathwayModal.tsx","components/PathwaysList/PathwaysTable.tsx","components/PathwaysList/PathwaysList.tsx","components/CriteriaList/styles.tsx","components/CriteriaList/CriteriaTable.tsx","components/CriteriaList/ImportCriteriaModal.tsx","components/CriteriaList/CriteriaList.tsx","components/App.tsx","index.js","utils/ConfigManager.js","components/Node/Node.module.scss"],"names":["module","exports","BuildCriteriaContext","createContext","BuildCriteriaProvider","memo","children","useState","buildCriteriaNodeId","setBuildCriteriaNodeId","updateBuildCriteriaNodeId","useCallback","id","Provider","value","useBuildCriteriaContext","useContext","variables","spacing","globalPadding","colors","white","black","blue","red","gray","grayMedium","grayBlue","grayLighter","grayDark","green","typography","fontFamily","join","materialUiOverridesBase","MuiButton","root","borderRadius","backgroundColor","color","label","fontWeight","iconSizeMedium","fontSize","iconSizeSmall","MuiTableHead","MuiTableCell","head","padding","borderBottom","MuiFormControl","margin","MuiFormLabel","fontStyle","MuiInputBase","input","transitionDelay","transitionProperty","MuiTooltip","tooltip","MuiOutlinedInput","MuiSelect","icon","MuiPaper","rounded","MuiDialogTitle","MuiDialogContent","MuiDialogActions","materialUiOverridesDark","borderColor","notchedOutline","MuiMenuItem","paletteBase","primary","main","secondary","error","common","background","default","text","grey","800","lightTheme","createMuiTheme","palette","overrides","darkTheme","deepmerge","projectorTheme","getTheme","theme","useProjector","ThemeContext","ThemeProvider","setUseProjector","muiTheme","toggleTheme","currentUseProjector","anchorEl","setAnchorEl","openMenu","event","currentTarget","closeMenu","handleToggleTheme","className","styles","header","to","homeLink","onClick","src","logo","alt","aria-controls","aria-haspopup","faCog","Menu","keepMounted","open","Boolean","onClose","MenuItem","downloadPathway","pathway","pathwayString","elm","library","identifier","version","schemaIdentifier","usings","def","localIdentifier","uri","localId","locator","statements","name","context","expression","type","operand","dataType","includes","valueSets","codes","codeSystems","pathwayToExport","preconditions","map","precondition","undefined","nodes","Object","keys","forEach","nodeKey","node","key","mergeElm","elmStatement","produce","getElmStatement","draftElmStatement","push","transitions","transition","condition","description","action","JSON","stringify","draftPathway","navigational","setNavigationalElm","exportPathway","pathwayBlob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","additionalElm","using","find","include","path","valueSet","code","codesystem","defaultStatementNames","createNode","shortid","generate","nodeTypeIsUndefined","addNode","setNodeType","nodeType","makeNodeAction","cql","makeNodeBranch","setNodeAction","addTransition","startNodeKey","endNodeKey","getNodeType","makeStyles","display","alignItems","height","justifyContent","backButton","width","navigationIcons","cursor","pathwayName","marginLeft","index","useRefState","initialValue","state","setState","stateRef","useRef","useEffect","current","CurrentPathwayContext","CurrentPathwayProvider","pathwayRef","_setPathway","setPathway","useCurrentPathwayContext","Navigation","useStyles","history","useHistory","handleGoBack","IconButton","aria-label","faChevronLeft","faEllipsisH","getContentAnchorEl","anchorOrigin","vertical","horizontal","alert","useGetService","status","result","setResult","fetch","headers","Accept","getObject","then","response","json","listOfFiles","f","options","typedFetch","listOfPromises","Promise","all","list","payload","catch","PathwaysContext","PathwaysProvider","pathways","pathwaysRef","setPathways","service","config","get","servicePayload","addPathway","currentPathways","deletePathway","filter","updatePathway","newPathway","findIndex","slice","usePathwaysContext","flexDirection","minWidth","overflowY","float","formControl","divider","headerLabelStart","displayText","sidebarHeader","sidebarHeaderGroup","sidebarHeaderButton","headerLabelGroup","headerLabel","headerLabelText","marginBottom","editIcon","sidebarButtonGroup","sidebarButton","marginRight","sidebarButtonText","outlinedDiv","outlinedDivError","toggleSidebar","cancelButton","alignSelf","marginTop","buildCriteriaContainer","saveButton","CurrentNodeContext","CurrentNodeProvider","currentNode","currentNodeRef","_setCurrentNode","setCurrentNode","useCurrentNodeContext","headerElement","isExpanded","setIsExpanded","sidebarContainerElement","changeNodeType","redirectToNode","encodeURIComponent","location","pathname","addPathwayNode","newNode","addBranchNode","addActionNode","resize","style","innerHeight","clientHeight","addEventListener","removeEventListener","displayAddButtons","length","ref","isTransition","buttonName","buttonIcon","faPlus","buttonText","faChevronRight","showInput","setShowInput","inputRef","nodeLabel","goToParentNode","goToNode","openNodeOptions","changeNodeLabel","setNodeLabel","handleShowInput","handleKeyPress","FormControl","fullWidth","Input","onBlur","onKeyPress","defaultValue","autoFocus","onFocus","target","select","clsx","faEdit","Button","variant","startIcon","onChange","handleSetSelected","InputLabel","htmlFor","Select","MenuProps","transformOrigin","displayEmpty","option","nodeTypeOptions","selectNodeType","handleAddTransition","actionTypeOptions","codeSystemOptions","addActionCQL","currentNodeKey","method","body","convertBasicCQL","resource","cqlId","replace","codesystemStatement","system","returnStatement","resourceType","retrieveStatement","defineStatement","coding","medicationCodeableConcept","escape","title","console","createCQL","setActionNodeElm","changeCode","draftAction","resetDisplay","changeDescription","changeTitle","selectActionType","actionType","selectCodeSystem","codeSystem","validateFunction","setActionResourceDisplay","onEnter","e","changeNodeTypeEnabled","TextField","inputProps","faCheckCircle","CriteriaContext","jsonToCriteria","rawElm","parse","modified","Date","now","CriteriaProvider","criteria","setCriteria","newCriteria","jsonCriterion","criterion","addCriteria","file","reader","FileReader","onload","currentCriteria","readAsText","deleteCriteria","useCriteriaContext","criteriaOptions","useMemo","c","transitionKey","transitionNode","useCriteriaSelected","setUseCriteriaSelected","criteriaDescription","criteriaIsValid","criteriaDisplayIsValid","hasCriteria","faTrashAlt","displayCriteria","buildCriteriaSelected","setBuildCriteriaSelected","criteriaName","setCriteriaName","transitionRef","handleUseCriteria","transitionId","removeTransitionCondition","selectCriteriaSource","criteriaSource","criteriaLabel","foundTransition","setTransitionCondition","setCriteriaDisplay","criteriaDisplay","setTransitionConditionDescription","handleCriteriaName","handleBuildCriteria","handleBuildCriteriaCancel","size","faTools","FormControlLabel","Box","control","Checkbox","faSave","disabled","InputComponent","OutlinedDiv","multiline","InputLabelProps","shrink","InputProps","inputComponent","classes","graphLayoutProvider","layout","nodeDimensions","nodeKeys","g","dagre","graphlib","Graph","setGraph","setDefaultEdgeLabel","nodeDimension","setNode","setEdge","nodeCoordinates","startNodeShift","x","y","edges","edge","edgeName","v","w","start","end","points","p","layoutDagre","rank","NaN","horizontalPosition","parents","canMove","initializeNodes","graph","assignRankToChildren","assignHorizontalPositionToNode","assignHorizontalPositionToNodesInRank","coordinates","NODE_HEIGHT","produceCoordinates","hPos","isNaN","i","hasOverlap","direction","Math","ceil","NODE_WIDTH","parentsOnHigherRank","parentKey","parent","floor","splice","childNode","spreadChildrenEvenly","sum","reduce","b","nodesInRank","nodesOverlap","otherNode","nodesEqual","child","indexOf","assignRankToNode","err","layoutCustom","isActionNode","isBranchNode","resourceNameConversion","MedicationRequest","ServiceRequest","CarePlan","ExpandedNode","actionNode","isAction","isActionable","ExpandedNodeMemo","ExpandedNodeField","descTitle","desc","returnElements","rel","faExternalLinkAlt","externalLink","renderAction","branch","infoTable","Node","forwardRef","pathwayNode","xCoordinate","yCoordinate","expanded","hasMetadata","setHasMetadata","onClickHandler","top","left","isCurrentNode","isTransitionOfCurrentBranch","some","topLevelClasses","expandedNodeClass","actionable","childActionable","childNotActionable","expandedNode","NodeIcon","faPlay","faPrescriptionBottleAlt","faSyringe","faBookMedical","faMicroscope","StatusIcon","faTimesCircle","arrow","stroke","strokeWidth","currentBranchArrow","arrowhead","fill","currentBranchArrowhead","ArrowPath","arrowheadId","widthOffset","pointsWithOffset","remainder","pathString","acc","point","arr","d","markerEnd","Arrow","isCurrentBranchArrow","edgeNameNoWhitespace","Tooltip","substring","markerWidth","markerHeight","refX","refY","orient","graphContainerWidth","interactive","nodeRefs","getGraphLayout","nodeElement","clientWidth","Array","from","graphLayout","setLayout","maxHeight","values","max","minX","min","toAdd","maxWidth","curr","lastSelectedNode","setExpanded","toggleExpanded","prevState","parentWidth","GraphMemo","pathwayId","useParams","nodeId","position","xmlns","zIndex","overflow","toggleButtonCss","graphHeader","graphHeaderText","paddingLeft","toggleButton","darken","toggleIcon","transform","useTheme","showCriteriaBuilder","setShowCriteriaBuilder","graphContainerElement","setGraphContainerElement","setGraphContainerWidth","toggleShowCriteria","handleGraphContainerElement","reactNode","ResizeSensor","faProjectDiagram","decodeURIComponent","pathwayIndex","UserContext","UserProvider","user","setUser","textTransform","tabs","tab","component","faSpinner","spin","createPathwayButton","pathwayList","pathwaysListButton","dialogCloseButton","editPathway","createNewPathwayMeta","pathwayNameRef","pathwayDescRef","closeModal","handleCreateNewPathway","preventDefault","Start","createNewPathway","handleUpdatePathway","newEditPathway","draftEditPathway","metaDescription","Dialog","aria-labelledby","DialogTitle","disableTypography","faTimes","onSubmit","DialogContent","required","DialogActions","setOpen","editablePathway","setEditablePathway","openEditPathwayModal","closeEditPathwayModal","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","Link","RouterLink","underline","align","faFileDownload","openNewPathwayModal","closeNewPathwayModal","buttonRow","buildCriteriaButton","criteriaList","editButton","chooseFileInput","inputButton","whiteSpace","fileName","datetime","moment","fromNow","setFileName","importFileRef","selectFile","files","handleChooseFile","accept","faFileImport","openImportModal","closeImportModal","enableMapSet","ReactDOM","render","getElementById","this","global","CONFIG","parts","split","conf"],"mappings":"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","file":"static/js/main.c2483dee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoTable\":\"ExpandedNode_infoTable__3v2tx\",\"descTitle\":\"ExpandedNode_descTitle__15ki8\",\"desc\":\"ExpandedNode_desc__3Xdkf\",\"externalLink\":\"ExpandedNode_externalLink__1Mr1x\",\"defaultTextButton\":\"ExpandedNode_defaultTextButton__2Bvq6\",\"commentsForm\":\"ExpandedNode_commentsForm__3Q20Y\",\"footer\":\"ExpandedNode_footer__FOCYI\",\"comments\":\"ExpandedNode_comments__9q-JW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3T0lc\",\"homeLink\":\"Header_homeLink__2ew4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Loading_root__3b6qy\"};","module.exports = __webpack_public_path__ + \"static/media/camino-logo-dark.c8fc712a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Graph_root__1SJOc\"};","import React, {\n  createContext,\n  FC,\n  ReactNode,\n  memo,\n  useState,\n  useCallback,\n  useContext\n} from 'react';\n\ninterface BuildCriteriaContextInterface {\n  buildCriteriaNodeId: string;\n  updateBuildCriteriaNodeId: (id: string) => void;\n}\n\nexport const BuildCriteriaContext = createContext<BuildCriteriaContextInterface>(\n  {} as BuildCriteriaContextInterface\n);\n\ninterface BuildCriteriaProviderProps {\n  children: ReactNode;\n}\n\nexport const BuildCriteriaProvider: FC<BuildCriteriaProviderProps> = memo(({ children }) => {\n  const [buildCriteriaNodeId, setBuildCriteriaNodeId] = useState<string>('');\n\n  const updateBuildCriteriaNodeId = useCallback(\n    (id: string) => {\n      setBuildCriteriaNodeId(id);\n    },\n    [setBuildCriteriaNodeId]\n  );\n\n  return (\n    <BuildCriteriaContext.Provider value={{ buildCriteriaNodeId, updateBuildCriteriaNodeId }}>\n      {children}\n    </BuildCriteriaContext.Provider>\n  );\n});\n\nexport const useBuildCriteriaContext = (): BuildCriteriaContextInterface =>\n  useContext(BuildCriteriaContext);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport deepmerge from 'deepmerge';\n\ndeclare module '@material-ui/core/styles/createMuiTheme' {\n  interface Theme {\n    variables: {\n      spacing: {\n        globalPadding: string;\n      };\n    };\n  }\n  // allow configuration using `createMuiTheme`\n  interface ThemeOptions {\n    variables?: {\n      spacing?: {\n        globalPadding?: string;\n      };\n    };\n  }\n}\n\nconst variables = {\n  spacing: {\n    globalPadding: '2em'\n  }\n};\n\nconst colors = {\n  white: '#fff',\n  black: '#222',\n  blue: '#5d89a1',\n  red: '#d95d77',\n  gray: '#4a4a4a',\n  grayMedium: '#bbbdc0',\n  grayBlue: '#cbd5df',\n  grayLighter: '#eaeef2',\n  grayDark: '#444',\n  green: '#2fa874'\n};\n\nconst typography = {\n  fontFamily: [\n    'Open Sans',\n    '-apple-system',\n    'BlinkMacSystemFont',\n    'Segoe UI',\n    'Roboto',\n    'Oxygen',\n    'Ubuntu',\n    'Cantarell',\n    'Fira Sans',\n    'Droid Sans',\n    'Helvetica Neue',\n    'sans-serif'\n  ].join(',')\n};\n\nconst materialUiOverridesBase = {\n  MuiButton: {\n    root: {\n      borderRadius: 0,\n      '&.Mui-disabled': {\n        backgroundColor: colors.grayMedium,\n        color: colors.white\n      }\n    },\n    label: {\n      fontWeight: 600\n    },\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    },\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    }\n  },\n  MuiTableHead: {\n    root: {\n      backgroundColor: colors.grayLighter\n    }\n  },\n  MuiTableCell: {\n    root: {\n      fontSize: '1em'\n    },\n    head: {\n      padding: '5px 16px',\n      borderBottom: 'none'\n    }\n  },\n  MuiFormControl: {\n    root: {\n      margin: '10px 0'\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      fontStyle: 'italic',\n      '&.Mui-error': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      fontWeight: 600\n    },\n    input: {\n      '&::selection': {\n        color: colors.white,\n        backgroundColor: colors.grayDark\n      },\n      '&:-webkit-autofill': {\n        transitionDelay: '9999s',\n        transitionProperty: 'background-color, color'\n      }\n    }\n  },\n  MuiTooltip: {\n    tooltip: {\n      fontSize: 14\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      borderRadius: '0'\n    }\n  },\n  MuiSelect: {\n    icon: {\n      fontSize: '2em'\n    }\n  },\n  MuiPaper: {\n    rounded: {\n      borderRadius: '0'\n    }\n  },\n  MuiDialogTitle: {\n    root: {\n      padding: '1em'\n    }\n  },\n  MuiDialogContent: {\n    root: {\n      padding: '0 4em'\n    }\n  },\n  MuiDialogActions: {\n    root: {\n      padding: '2em 4em'\n    }\n  }\n};\n\nconst materialUiOverridesDark = {\n  MuiFormControl: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      }\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      color: colors.white,\n      '&$focused': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      color: colors.white,\n      '&:hover': {\n        borderColor: colors.white,\n        backgroundColor: colors.grayDark\n      }\n    }\n  },\n  MuiTooltip: {\n    tooltip: {\n      fontSize: 14\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      },\n      '&:hover $notchedOutline': {\n        borderColor: colors.white\n      },\n      '&$focused $notchedOutline': {\n        borderColor: colors.white\n      }\n    },\n    notchedOutline: {\n      borderColor: colors.white\n    }\n  },\n  MuiSelect: {\n    icon: {\n      color: colors.white\n    }\n  },\n  MuiMenuItem: {\n    root: {\n      color: colors.grayDark\n    }\n  }\n};\n\nconst paletteBase = {\n  primary: {\n    main: colors.blue\n  },\n  secondary: {\n    main: colors.red\n  },\n  error: {\n    main: colors.red\n  },\n  common: colors,\n  background: {\n    default: colors.grayLighter\n  },\n  text: {\n    primary: colors.gray,\n    secondary: colors.gray\n  },\n  grey: {\n    800: '#4a4a4a'\n  }\n};\n\nconst lightTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: { ...paletteBase },\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nconst darkTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    text: {\n      primary: colors.white,\n      secondary: colors.white\n    }\n  }),\n  overrides: deepmerge(materialUiOverridesBase, materialUiOverridesDark),\n  variables: { ...variables }\n});\n\nconst projectorTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    background: {\n      default: colors.grayBlue\n    },\n    text: {\n      primary: colors.black,\n      secondary: colors.black\n    }\n  }),\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nexport default lightTheme;\nexport { lightTheme, darkTheme, projectorTheme };\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useState,\n  useCallback,\n  useContext,\n  ReactNode\n} from 'react';\nimport { ThemeProvider as MuiThemeProvider, Theme } from '@material-ui/core/styles';\nimport { lightTheme, darkTheme, projectorTheme } from '../styles/theme';\n\ninterface ThemeProviderProps {\n  theme: string;\n  children: ReactNode;\n}\n\ninterface ThemeContextInterface {\n  toggleTheme: () => void;\n  useProjector: boolean;\n}\n\nconst getTheme = ({ theme, useProjector }: { theme: string; useProjector: boolean }): Theme => {\n  if (useProjector) {\n    switch (theme) {\n      case 'dark':\n        // TODO: replace with dark projector theme\n        return darkTheme;\n\n      default:\n        return projectorTheme;\n    }\n  }\n\n  switch (theme) {\n    case 'dark':\n      return darkTheme;\n\n    default:\n      return lightTheme;\n  }\n};\n\nexport const ThemeContext = createContext({} as ThemeContextInterface);\nexport const useThemeToggle = (): (() => void) => {\n  const { toggleTheme } = useContext(ThemeContext);\n  return toggleTheme;\n};\nexport const useTheme = (theme: string): Theme => {\n  const { useProjector } = useContext(ThemeContext);\n  return getTheme({ theme, useProjector });\n};\n\nconst ThemeProvider: FC<ThemeProviderProps> = memo(({ theme = 'light', children }) => {\n  const [useProjector, setUseProjector] = useState(false);\n  const muiTheme = getTheme({ theme, useProjector });\n\n  const toggleTheme = useCallback(() => {\n    setUseProjector(currentUseProjector => !currentUseProjector);\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <ThemeContext.Provider value={{ useProjector, toggleTheme }}>\n        {children}\n      </ThemeContext.Provider>\n    </MuiThemeProvider>\n  );\n});\n\nexport default ThemeProvider;\n","import React, { FC, memo, useCallback, useState, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { useBuildCriteriaContext } from 'components/BuildCriteriaProvider';\nimport { useThemeToggle } from '../ThemeProvider';\n\nimport logo from 'camino-logo-dark.png';\nimport styles from './Header.module.scss';\n\nconst Header: FC = () => {\n  const { updateBuildCriteriaNodeId } = useBuildCriteriaContext();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const toggleTheme = useThemeToggle();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleToggleTheme = useCallback((): void => {\n    toggleTheme();\n    closeMenu();\n  }, [toggleTheme, closeMenu]);\n\n  return (\n    <header className={styles.header}>\n      <Link to=\"/\" className={styles.homeLink} onClick={(): void => updateBuildCriteriaNodeId('')}>\n        <img src={logo} alt=\"logo\" className={styles.logo} />\n      </Link>\n\n      <button onClick={openMenu} aria-controls=\"options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faCog} />\n      </button>\n\n      <Menu\n        id=\"options-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n      >\n        <MenuItem onClick={handleToggleTheme}>Toggle Theme</MenuItem>\n      </Menu>\n    </header>\n  );\n};\n\nexport default memo(Header);\n","import {\n  Pathway,\n  Precondition,\n  PathwayNode,\n  Transition,\n  Action,\n  ActionNode,\n  BranchNode\n} from 'pathways-model';\nimport { ElmLibrary, ElmStatement } from 'elm-model';\nimport shortid from 'shortid';\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\nimport produce from 'immer';\n\nexport function createNewPathway(name: string, description?: string, pathwayId?: string): Pathway {\n  return {\n    id: pathwayId ?? shortid.generate(),\n    name: name,\n    description: description ?? '',\n    library: '',\n    preconditions: [],\n    nodes: {\n      Start: {\n        key: 'Start',\n        label: 'Start',\n        transitions: []\n      }\n    }\n  };\n}\n\nexport function downloadPathway(pathway: Pathway): void {\n  const pathwayString = exportPathway(pathway);\n  // Create blob from pathwayString to save to file system\n  const pathwayBlob = new Blob([pathwayString], {\n    type: 'application/json'\n  });\n  // Temporarily create hidden <a> tag to download pathwayBlob\n  // File name is set to <pathway-name>.json\n  const url = window.URL.createObjectURL(pathwayBlob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = `${pathway.name}.json`;\n  a.click();\n  window.URL.revokeObjectURL(url);\n}\n\nexport function exportPathway(pathway: Pathway): string {\n  const elm: ElmLibrary = {\n    library: {\n      identifier: {\n        id: pathway.id,\n        version: '1.0.0'\n      },\n      schemaIdentifier: {\n        id: 'urn:hl7-org:elm',\n        version: 'r1'\n      },\n      usings: {\n        def: [\n          {\n            localIdentifier: 'System',\n            uri: 'urn:hl7-org:elm-types:r1'\n          },\n          {\n            localId: '1',\n            locator: '3:1-3:26',\n            localIdentifier: 'FHIR',\n            uri: 'http://hl7.org/fhir',\n            version: '4.0.0'\n          }\n        ]\n      },\n      statements: {\n        def: [\n          {\n            locator: '13:1-13:15',\n            name: 'Patient',\n            context: 'Patient',\n            expression: {\n              type: 'SingletonFrom',\n              operand: {\n                locator: '13:1-13:15',\n                dataType: '{http://hl7.org/fhir}Patient',\n                type: 'Retrieve'\n              }\n            }\n          }\n        ]\n      },\n      includes: { def: [] },\n      valueSets: { def: [] },\n      codes: { def: [] },\n      codeSystems: { def: [] }\n    }\n  };\n\n  const pathwayToExport: Pathway = {\n    ...pathway,\n    // Strip id from each precondition\n    preconditions: pathway.preconditions.map((precondition: Precondition) => ({\n      ...precondition,\n      id: undefined\n    })),\n    nodes: { ...pathway.nodes }\n  };\n\n  Object.keys(pathwayToExport.nodes).forEach((nodeKey: string) => {\n    const node = pathway.nodes[nodeKey];\n    if ('elm' in node && node.elm && node.key) {\n      mergeElm(elm, node.elm);\n      const elmStatement = produce(getElmStatement(node.elm), (draftElmStatement: ElmStatement) => {\n        // state.key is defined due to if statement above\n        // eslint-disable-next-line\n        draftElmStatement.name = node.key!;\n      });\n      elm.library.statements.def.push(elmStatement);\n    }\n\n    pathwayToExport.nodes[nodeKey] = {\n      ...pathwayToExport.nodes[nodeKey],\n      // Strip key from each node\n      key: undefined,\n      elm: undefined,\n      // Strip id from each node.transition\n      transitions: node.transitions.map((transition: Transition) => {\n        if (transition.condition?.elm) {\n          // Add tranistion.condition.elm to elm\n          mergeElm(elm, transition.condition.elm);\n          const elmStatement = produce(\n            getElmStatement(transition.condition.elm),\n            (draftElmStatement: ElmStatement) => {\n              draftElmStatement.name = transition.condition?.description ?? 'Unknown';\n            }\n          );\n          elm.library.statements.def.push(elmStatement);\n        }\n        return {\n          ...transition,\n          id: undefined,\n          condition: transition.condition ? { ...transition.condition, elm: undefined } : undefined\n        };\n      }),\n      // Strip id from each node.action\n      action:\n        (node as ActionNode).action == null\n          ? undefined\n          : (node as ActionNode).action.map((action: Action) => ({\n              ...action,\n              id: undefined\n            }))\n    };\n  });\n\n  return JSON.stringify(setNavigationalElm(pathwayToExport, elm), undefined, 2);\n}\n\nfunction mergeElm(elm: ElmLibrary, additionalElm: ElmLibrary): void {\n  // Merge usings\n  additionalElm.library.usings?.def.forEach(using => {\n    // Check if it is in ELM\n    if (!elm.library.usings?.def.find(def => def.uri === using.uri))\n      elm.library.usings?.def.push(using);\n  });\n\n  // Merge includes\n  additionalElm.library.includes?.def.forEach(include => {\n    if (!elm.library.includes?.def.find(def => def.path === include.path))\n      elm.library.includes?.def.push(include);\n  });\n\n  // Merge valueSets\n  additionalElm.library.valueSets?.def.forEach(valueSet => {\n    if (!elm.library.valueSets?.def.find(def => def.id === valueSet.id))\n      elm.library.valueSets?.def.push(valueSet);\n  });\n  // Merge codes\n  additionalElm.library.codes?.def.forEach(code => {\n    if (!elm.library.codes?.def.find(def => def.name === code.name))\n      elm.library.codes?.def.push(code);\n  });\n  // Merge codesystems\n  additionalElm.library.codeSystems?.def.forEach(codesystem => {\n    if (!elm.library.codeSystems?.def.find(def => def.name === codesystem.name))\n      elm.library.codeSystems?.def.push(codesystem);\n  });\n\n  // TODO: merge concepts\n}\n\nfunction getElmStatement(elm: ElmLibrary): ElmStatement {\n  const defaultStatementNames = [\n    'Patient',\n    'MeetsInclusionCriteria',\n    'InPopulation',\n    'Recommendation',\n    'Rationale',\n    'Errors'\n  ];\n  const elmStatement = elm.library.statements.def.find(\n    def => !defaultStatementNames.includes(def.name)\n  );\n\n  // elmStatement type is ElmStatement | undefined but criteria\n  // provider validates such a statement exists in the elm\n  return elmStatement as ElmStatement;\n}\n\n// TODO: possibly add more precondition methods\nexport function addPrecondition(\n  pathway: Pathway,\n  elementName: string,\n  expected: string,\n  cql: string\n): string {\n  const id = shortid.generate();\n  const precondition: Precondition = {\n    id: id,\n    elementName: elementName,\n    expected: expected,\n    cql: cql\n  };\n  pathway.preconditions.push(precondition);\n\n  return id;\n}\n\nexport function setNavigationalElm(pathway: Pathway, elm: object): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if (!draftPathway.elm) draftPathway.elm = {};\n    draftPathway.elm.navigational = elm;\n  });\n}\n\nexport function setPreconditionElm(pathway: Pathway, elm: object): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if (!draftPathway.elm) draftPathway.elm = {};\n    draftPathway.elm.preconditions = elm;\n  });\n}\n\nexport function createNode(key?: string): PathwayNode {\n  if (!key) key = shortid.generate();\n  const node: PathwayNode = {\n    key,\n    label: 'New Node',\n    transitions: [],\n    nodeTypeIsUndefined: true\n  };\n\n  return node;\n}\n\nexport function addNode(pathway: Pathway, node: PathwayNode): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.nodes[node.key as string] = node;\n  });\n}\n\nexport function addActionNode(pathway: Pathway): Pathway {\n  const node = createNode();\n  const newPathway = addNode(pathway, node);\n\n  return makeNodeAction(newPathway, node.key as string);\n}\n\nexport function setNodeLabel(pathway: Pathway, key: string, label: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.nodes[key].label = label;\n  });\n}\n\nexport function setNodeType(pathway: Pathway, nodeKey: string, nodeType: string): Pathway {\n  switch (nodeType) {\n    case 'action':\n      return makeNodeAction(pathway, nodeKey);\n    case 'branch':\n      return makeNodeBranch(pathway, nodeKey);\n    default:\n      return pathway;\n  }\n}\n\nexport function setNodeCriteriaSource(\n  pathway: Pathway,\n  key: string,\n  criteriaSource: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as BranchNode).criteriaSource = criteriaSource;\n  });\n}\n\nexport function setNodeAction(pathway: Pathway, key: string, action: Action[]): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as ActionNode).action = action;\n  });\n}\n\nexport function setNodeMcodeCriteria(\n  pathway: Pathway,\n  key: string,\n  mcodeCriteria: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as BranchNode).mcodeCriteria = mcodeCriteria;\n  });\n}\n\nexport function setNodeOtherCriteria(\n  pathway: Pathway,\n  key: string,\n  otherCriteria: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[key] as BranchNode).otherCriteria = otherCriteria;\n  });\n}\n\nexport function addTransition(pathway: Pathway, startNodeKey: string, endNodeKey: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transition: Transition = {\n      id: shortid.generate(),\n      transition: endNodeKey\n    };\n\n    draftPathway.nodes[startNodeKey].transitions.push(transition);\n  });\n}\n\nexport function setTransitionCondition(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string,\n  elm: ElmLibrary,\n  criteriaLabel?: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const foundTransition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n\n    const cql = criteriaLabel ? criteriaLabel : getElmStatement(elm).name;\n\n    if (foundTransition)\n      foundTransition.condition = {\n        description: description,\n        cql: cql,\n        elm: elm\n      };\n  });\n}\n\nexport function setActionNodeElm(pathway: Pathway, nodeKey: string, elm: ElmLibrary): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    (draftPathway.nodes[nodeKey] as ActionNode).elm = elm;\n    (draftPathway.nodes[nodeKey] as ActionNode).cql = getElmStatement(elm).name;\n  });\n}\n\n// TODO: possibly add more action methods\nexport function addAction(\n  pathway: Pathway,\n  key: string,\n  type: string,\n  description: string,\n  resource: MedicationRequest | ServiceRequest\n): string {\n  const id = shortid.generate();\n  const action = {\n    id: id,\n    type: type,\n    description: description,\n    resource: resource\n  };\n\n  const node = produce(pathway.nodes[key] as ActionNode, (draftState: ActionNode) => {\n    draftState.action.push(action);\n  });\n  pathway.nodes[key] = node;\n\n  return id;\n}\n\nexport function getNodeType(pathway: Pathway, key: string | undefined): string {\n  if (!key) {\n    return 'null';\n  }\n  const node = pathway.nodes[key];\n  if (node.nodeTypeIsUndefined) {\n    return 'null';\n  } else if (!(node as ActionNode).action && key !== 'Start') {\n    return 'branch';\n  } else {\n    return 'action';\n  }\n}\n\n/*\nSet Element Functions\n*/\nexport function setPathwayName(pathway: Pathway, name: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.name = name;\n  });\n}\n\nexport function setPathwayDescription(pathway: Pathway, description: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.description = description;\n  });\n}\n\nexport function setLibrary(pathway: Pathway, library: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    draftPathway.library = library;\n  });\n}\n\nexport function setTransition(\n  pathway: Pathway,\n  startNodeKey: string,\n  endNodeKey: string,\n  transitionId: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n    if (transition) transition.transition = endNodeKey;\n  });\n}\n\nexport function setTransitionConditionDescription(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const foundTransition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n\n    if (foundTransition?.condition) {\n      foundTransition.condition.description = description;\n    } else if (foundTransition) {\n      foundTransition.condition = {\n        description: description,\n        cql: ''\n      };\n    }\n  });\n}\n\nexport function setTransitionConditionElm(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  elm: ElmLibrary\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const foundTransition = draftPathway.nodes[startNodeKey]?.transitions?.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n\n    if (foundTransition?.condition) {\n      foundTransition.condition.elm = elm;\n      foundTransition.condition.cql = getElmStatement(elm).name;\n    }\n  });\n}\n\nexport function setActionType(\n  pathway: Pathway,\n  nodeKey: string,\n  actionId: string,\n  type: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if ((draftPathway.nodes[nodeKey] as ActionNode).action) {\n      const action = (draftPathway.nodes[nodeKey] as ActionNode).action.find(\n        (action: Action) => action.id === actionId\n      );\n      if (action) action.type = type;\n    }\n  });\n}\n\nexport function setActionDescription(\n  pathway: Pathway,\n  nodeKey: string,\n  actionId: string,\n  description: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const node = (draftPathway.nodes[nodeKey] as ActionNode).action;\n\n    if (node) {\n      const action = node.find((action: Action) => action.id === actionId);\n      if (action) {\n        action.description = description;\n      }\n    }\n  });\n}\n\nexport function setActionResource(\n  pathway: Pathway,\n  nodeKey: string,\n  actionId: string,\n  resource: MedicationRequest | ServiceRequest\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if ((draftPathway.nodes[nodeKey] as ActionNode).action) {\n      const action = (draftPathway.nodes[nodeKey] as ActionNode).action.find(\n        (action: Action) => action.id === actionId\n      );\n      if (action) action.resource = resource;\n    }\n  });\n}\n\nexport function setActionResourceDisplay(action: Action, display: string): Action {\n  return produce(action, (draftAction: Action) => {\n    if (draftAction.resource.medicationCodeableConcept) {\n      draftAction.resource.medicationCodeableConcept.coding[0].display = display;\n    } else if (draftAction.resource.title) {\n      draftAction.resource.description = display;\n    } else {\n      draftAction.resource.code.coding[0].display = display;\n    }\n  });\n}\n\nexport function makeNodeAction(pathway: Pathway, nodeKey: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const node = draftPathway.nodes[nodeKey] as ActionNode;\n\n    if (node.cql === undefined && node.action === undefined) {\n      node.cql = '';\n      node.action = [];\n      node.nodeTypeIsUndefined = undefined;\n    }\n  });\n}\n\nexport function makeNodeBranch(pathway: Pathway, nodeKey: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const node = draftPathway.nodes[nodeKey] as ActionNode;\n\n    if (\n      node.cql !== undefined ||\n      node.elm !== undefined ||\n      node.action !== undefined ||\n      node.nodeTypeIsUndefined !== undefined\n    ) {\n      delete node.cql;\n      delete node.elm;\n      delete node.action;\n      delete node.nodeTypeIsUndefined;\n    }\n  });\n}\n\nexport function createCQL(action: Action, nodeKey: string): string {\n  const resource = action.resource;\n  // CQl identifier cannot start with a number or contain '-'\n  const cqlId = `cql${shortid.generate().replace(/-/g, 'a')}`;\n  let cql = `library ${cqlId} version '1'\\nusing FHIR version '4.0.0'\\n`;\n\n  const codesystemStatement = (system: string): string => `codesystem \"${system}\": '${system}'\\n`;\n\n  const returnStatement = (resourceType: string): string =>\n    `return Tuple{ resourceType: '${resourceType}', id: R.id.value, status: R.status.value}`;\n\n  const retrieveStatement = (resourceType: string): string => `[${resourceType}: \"${cqlId} code\"]`;\n\n  const defineStatement = (): string => `define \"${nodeKey}\":`;\n\n  if (resource.resourceType === 'MedicationRequest') {\n    const coding = resource.medicationCodeableConcept.coding[0];\n\n    cql += codesystemStatement(coding.system);\n\n    // eslint-disable-next-line\n    cql += `code \"${cqlId} code\": '${escape(coding.code)}' from \"${coding.system}\" display '${\n      coding.display\n    }'\\n`;\n    cql += `${defineStatement()}\n      ${retrieveStatement('MedicationRequest')} R ${returnStatement('MedicationRequest')}`;\n  } else if (resource.resourceType === 'ServiceRequest') {\n    const coding = resource.code.coding[0];\n\n    cql += codesystemStatement(coding.system);\n\n    // eslint-disable-next-line\n    cql += `code \"${cqlId} code\": '${escape(coding.code)}' from \"${coding.system}\" display '${\n      coding.display\n    }'\\n`;\n    cql += `${defineStatement()}\n      if exists ${retrieveStatement('Procedure')} \n      then ${retrieveStatement('Procedure')} R ${returnStatement('Procedure')} \n      else ${retrieveStatement('ServiceRequest')} R ${returnStatement('ServiceRequest')}`;\n  } else if (resource.resourceType === 'CarePlan') {\n    cql += `${defineStatement()}\n      [CarePlan] R where R.title.value = '${escape(resource.title)}' ${returnStatement(\n      'CarePlan'\n    )}`;\n  } else {\n    console.error(\n      'Auto generating CQL for action - unsupported resource type: ' + resource.resourceType\n    );\n  }\n\n  return cql;\n}\n\n/*\nRemove Element Function\n*/\nexport function removePathwayDescription(pathway: Pathway): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.description;\n  });\n}\n\nexport function removePrecondition(pathway: Pathway, id: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const preconditions = draftPathway.preconditions.filter(\n      (precondition: Precondition) => precondition.id !== id\n    );\n    draftPathway.preconditions = preconditions;\n  });\n}\n\nexport function removeNavigationalElm(pathway: Pathway): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.elm?.navigational;\n  });\n}\n\nexport function removePreconditionElm(pathway: Pathway): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.elm?.preconditions;\n  });\n}\n\nexport function removeNode(pathway: Pathway, key: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    delete draftPathway.nodes[key];\n\n    Object.keys(draftPathway.nodes).forEach((nodeKey: string) => {\n      const node = draftPathway.nodes[nodeKey];\n      node.transitions.forEach((transition: Transition) => {\n        if (transition.transition === key)\n          draftPathway.nodes[nodeKey].transitions = draftPathway.nodes[nodeKey].transitions.filter(\n            (filterTransition: Transition) => transition.id !== filterTransition.id\n          );\n      });\n    });\n  });\n}\n\nexport function removeTransitionCondition(\n  pathway: Pathway,\n  nodeKey: string,\n  transitionId: string\n): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transition = draftPathway.nodes[nodeKey].transitions.find(\n      (transition: Transition) => transition.id === transitionId\n    );\n    if (transition) delete transition.condition;\n  });\n}\n\nexport function removeTransition(pathway: Pathway, nodeKey: string, transitionId: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    const transitions = draftPathway.nodes[nodeKey].transitions.filter(\n      (transition: Transition) => transition.id !== transitionId\n    );\n    draftPathway.nodes[nodeKey].transitions = transitions;\n  });\n}\n\nexport function removeAction(pathway: Pathway, nodeKey: string, actionId: string): Pathway {\n  return produce(pathway, (draftPathway: Pathway) => {\n    if ((draftPathway.nodes[nodeKey] as ActionNode).action) {\n      const actions = (draftPathway.nodes[nodeKey] as ActionNode).action.filter(\n        (action: Action) => action.id !== actionId\n      );\n      (draftPathway.nodes[nodeKey] as ActionNode).action = actions;\n    }\n  });\n}\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: '2em',\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary,\n      height: '6em',\n      justifyContent: 'space-between'\n    },\n    backButton: {\n      height: '45px',\n      width: '45px'\n    },\n    navigationIcons: {\n      fontSize: '20px',\n      color: theme.palette.grey['800'],\n      cursor: 'pointer'\n    },\n    pathwayName: {\n      fontSize: '1.4em',\n      marginLeft: '1.5em'\n    }\n  }),\n  { name: 'Navigation', index: 1 }\n);\n","import { useEffect, useRef, useState, MutableRefObject } from 'react';\n\nfunction useRefState<T>(initialValue: T): [T, MutableRefObject<T>, Function] {\n  const [state, setState] = useState<T>(initialValue);\n  const stateRef = useRef(state);\n  useEffect(() => {\n    stateRef.current = state;\n  }, [state]);\n  return [state, stateRef, setState];\n}\n\nexport default useRefState;\n","import React, {\n  ReactNode,\n  createContext,\n  useContext,\n  FC,\n  memo,\n  useCallback,\n  MutableRefObject\n} from 'react';\nimport { Pathway } from 'pathways-model';\nimport useRefState from 'utils/useRefState';\n\ninterface CurrentPathwayContextInterface {\n  pathway: Pathway | null;\n  pathwayRef: MutableRefObject<Pathway | null>;\n  setPathway: (value: Pathway) => void;\n}\n\nexport const CurrentPathwayContext = createContext<CurrentPathwayContextInterface>(\n  {} as CurrentPathwayContextInterface\n);\n\ninterface CurrentPathwayProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrentPathwayProvider: FC<CurrentPathwayProviderProps> = memo(({ children }) => {\n  const [pathway, pathwayRef, _setPathway] = useRefState<Pathway | null>(null);\n\n  const setPathway = useCallback(\n    (value: Pathway) => {\n      _setPathway(value);\n    },\n    [_setPathway]\n  );\n\n  return (\n    <CurrentPathwayContext.Provider value={{ pathway, pathwayRef, setPathway }}>\n      {children}\n    </CurrentPathwayContext.Provider>\n  );\n});\n\nexport const useCurrentPathwayContext = (): CurrentPathwayContextInterface =>\n  useContext(CurrentPathwayContext);\n","import React, { FC, useCallback, useState, MouseEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faEllipsisH } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\n\nimport { downloadPathway } from 'utils/builder';\nimport { useBuildCriteriaContext } from 'components/BuildCriteriaProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\n\nconst Navigation: FC = () => {\n  const { updateBuildCriteriaNodeId } = useBuildCriteriaContext();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const { pathway } = useCurrentPathwayContext();\n  const styles = useStyles();\n  const history = useHistory();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleGoBack = useCallback((): void => {\n    updateBuildCriteriaNodeId('');\n    history.push('/');\n  }, [history, updateBuildCriteriaNodeId]);\n\n  return (\n    <nav className={styles.root}>\n      <div>\n        <IconButton className={styles.backButton} onClick={handleGoBack} aria-label=\"go back\">\n          <FontAwesomeIcon icon={faChevronLeft} className={styles.navigationIcons} />\n        </IconButton>\n\n        <span className={styles.pathwayName}>{pathway?.name}</span>\n      </div>\n      <IconButton onClick={openMenu} aria-controls=\"pathway-options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faEllipsisH} className={styles.navigationIcons} />\n      </IconButton>\n      <Menu\n        id=\"pathway-options-menu\"\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n      >\n        <MenuItem\n          onClick={(): void => {\n            if (pathway) downloadPathway(pathway);\n            else alert('No pathway to download!');\n            closeMenu();\n          }}\n        >\n          Export Pathway\n        </MenuItem>\n      </Menu>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { useState, useEffect } from 'react';\nimport { Service } from 'pathways-objects';\n\nfunction getObject(url: string): Promise<Response> {\n  return fetch(url, {\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n}\n\nfunction typedFetch<T>(url: string, options?: object): Promise<T> {\n  return fetch(url, options).then(response => response.json() as Promise<T>);\n}\n\nfunction useGetService<T>(url: string): Service<Array<T>> {\n  const [result, setResult] = useState<Service<Array<T>>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    getObject(url)\n      .then(response => response.json() as Promise<string[]>)\n      .then(listOfFiles => listOfFiles.map(f => typedFetch<T>(url + '/' + f)))\n      .then(listOfPromises => Promise.all(listOfPromises))\n      .then(list => setResult({ status: 'loaded', payload: list }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, [url]);\n\n  return result;\n}\n\nexport default useGetService;\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  ReactNode\n} from 'react';\nimport { Pathway } from 'pathways-model';\nimport { ServiceLoaded } from 'pathways-objects';\nimport config from 'utils/ConfigManager';\nimport useGetService from './Services';\nimport useRefState from 'utils/useRefState';\n\ninterface PathwaysContextInterface {\n  pathways: Pathway[];\n  status: string;\n  addPathway: (pathway: Pathway) => void;\n  deletePathway: (id: string) => void;\n  updatePathway: (pathway: Pathway) => void;\n}\n\nexport const PathwaysContext = createContext<PathwaysContextInterface>(\n  {} as PathwaysContextInterface\n);\n\ninterface PathwaysProviderProps {\n  children: ReactNode;\n}\n\nexport const PathwaysProvider: FC<PathwaysProviderProps> = memo(function PathwaysProvider({\n  children\n}) {\n  const [pathways, pathwaysRef, setPathways] = useRefState<Pathway[]>([]);\n  const service = useGetService<Pathway>(config.get('demoPathwaysService'));\n  const servicePayload = (service as ServiceLoaded<Pathway[]>).payload;\n\n  const addPathway = useCallback(\n    (pathway: Pathway) => {\n      setPathways((currentPathways: Pathway[]) => [...currentPathways, pathway]);\n    },\n    [setPathways]\n  );\n\n  const deletePathway = useCallback(\n    (id: string) => {\n      setPathways((currentPathways: Pathway[]) =>\n        currentPathways.filter(pathway => pathway.id !== id)\n      );\n    },\n    [setPathways]\n  );\n\n  const updatePathway = useCallback(\n    (newPathway: Pathway) => {\n      const index = pathwaysRef.current.findIndex(pathway => pathway.id === newPathway.id);\n      setPathways((currentPathways: Pathway[]) => [\n        ...currentPathways.slice(0, index),\n        newPathway,\n        ...currentPathways.slice(index + 1)\n      ]);\n    },\n    [pathwaysRef, setPathways]\n  );\n\n  useEffect(() => {\n    if (servicePayload) setPathways(servicePayload);\n  }, [servicePayload, setPathways]);\n\n  switch (service.status) {\n    case 'error':\n      return <div>Error loading pathways</div>;\n\n    default:\n      return (\n        <PathwaysContext.Provider\n          value={{\n            pathways,\n            addPathway,\n            deletePathway,\n            updatePathway,\n            status: service.status\n          }}\n        >\n          {children}\n        </PathwaysContext.Provider>\n      );\n  }\n});\n\nexport const usePathwaysContext = (): PathwaysContextInterface => useContext(PathwaysContext);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding,\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.grey['800'],\n      width: '33%',\n      minWidth: '500px',\n      overflowY: 'scroll',\n      float: 'left'\n    },\n    formControl: {\n      margin: theme.spacing(1, 0),\n      minWidth: 375\n    },\n    divider: {\n      width: '100%'\n    },\n    headerLabelStart: {\n      cursor: 'default'\n    },\n    displayText: {\n      margin: '0 0 5px 0',\n      fontWeight: 900,\n      fontSize: '1em'\n    },\n    sidebarHeader: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    sidebarHeaderGroup: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    sidebarHeaderButton: {\n      height: '45px',\n      width: '45px',\n      color: theme.palette.text.primary\n    },\n    headerLabelGroup: {\n      display: 'flex',\n      cursor: 'pointer',\n      height: '60px'\n    },\n    headerLabel: {\n      display: 'flex',\n      alignItems: 'center',\n      fontSize: '1.6em',\n      fontWeight: 700,\n      margin: '0 5px'\n    },\n    headerLabelText: {\n      marginBottom: '5px'\n    },\n    editIcon: {\n      fontSize: '0.6em',\n      marginLeft: '10px'\n    },\n    sidebarButtonGroup: {\n      display: 'flex',\n      margin: '10px 0'\n    },\n    sidebarButton: {\n      minWidth: 180,\n      marginRight: '20px'\n    },\n    sidebarButtonText: {\n      fontStyle: 'italic'\n    },\n    outlinedDiv: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      '& div': {\n        width: '100%'\n      }\n    },\n    outlinedDivError: {\n      borderColor: `${theme.palette.error.main} !important`,\n      '&:hover': {\n        borderColor: `${theme.palette.error.main} !important`\n      }\n    },\n    toggleSidebar: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      float: 'left',\n      width: '50px',\n      minWidth: '50px',\n      height: '50px',\n      fontSize: '2em',\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.text.primary,\n      '&:hover': {\n        cursor: 'pointer'\n      }\n    },\n    cancelButton: {\n      alignSelf: 'flex-end',\n      marginTop: '5px',\n      padding: '5px 15px',\n      fontSize: '1em'\n    },\n    buildCriteriaContainer: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    saveButton: {\n      marginLeft: '1em'\n    }\n  }),\n  { name: 'Sidebar', index: 1 }\n);\n","import React, {\n  MutableRefObject,\n  createContext,\n  useCallback,\n  memo,\n  ReactNode,\n  FC,\n  useContext\n} from 'react';\nimport { PathwayNode } from 'pathways-model';\nimport useRefState from 'utils/useRefState';\n\ninterface CurrentNodeContextInterface {\n  currentNode: PathwayNode | null;\n  currentNodeRef: MutableRefObject<PathwayNode | null>;\n  setCurrentNode: (value: PathwayNode) => void;\n}\n\nexport const CurrentNodeContext = createContext<CurrentNodeContextInterface>(\n  {} as CurrentNodeContextInterface\n);\n\ninterface CurrentNodeProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrentNodeProvider: FC<CurrentNodeProviderProps> = memo(({ children }) => {\n  const [currentNode, currentNodeRef, _setCurrentNode] = useRefState<PathwayNode | null>(null);\n\n  const setCurrentNode = useCallback(\n    (value: PathwayNode) => {\n      _setCurrentNode(value);\n    },\n    [_setCurrentNode]\n  );\n\n  return (\n    <CurrentNodeContext.Provider value={{ currentNode, currentNodeRef, setCurrentNode }}>\n      {children}\n    </CurrentNodeContext.Provider>\n  );\n});\n\nexport const useCurrentNodeContext = (): CurrentNodeContextInterface =>\n  useContext(CurrentNodeContext);\n","import React, { FC, memo, useCallback, useState, useEffect, useRef, RefObject } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  SidebarHeader,\n  ActionNodeEditor,\n  BranchNodeEditor,\n  NullNodeEditor,\n  SidebarButton\n} from 'components/Sidebar';\nimport { setNodeType, addTransition, createNode, addNode, getNodeType } from 'utils/builder';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\n\ninterface SidebarProps {\n  headerElement: RefObject<HTMLDivElement>;\n}\n\nconst Sidebar: FC<SidebarProps> = ({ headerElement }) => {\n  const { updatePathway } = usePathwaysContext();\n  const { pathway, pathwayRef } = useCurrentPathwayContext();\n  const { currentNode, currentNodeRef } = useCurrentNodeContext();\n  const [isExpanded, setIsExpanded] = useState<boolean>(true);\n  const styles = useStyles();\n  const history = useHistory();\n  const sidebarContainerElement = useRef<HTMLDivElement>(null);\n\n  const toggleSidebar = useCallback((): void => {\n    setIsExpanded(!isExpanded);\n  }, [isExpanded]);\n\n  const changeNodeType = useCallback(\n    (nodeType: string): void => {\n      if (currentNodeRef.current?.key && pathwayRef.current)\n        updatePathway(setNodeType(pathwayRef.current, currentNodeRef.current.key, nodeType));\n    },\n    [pathwayRef, updatePathway, currentNodeRef]\n  );\n\n  const redirectToNode = useCallback(\n    nodeKey => {\n      if (!pathwayRef.current) return;\n\n      const url = `/builder/${encodeURIComponent(pathwayRef.current.id)}/node/${encodeURIComponent(\n        nodeKey\n      )}`;\n      if (url !== history.location.pathname) {\n        history.push(url);\n      }\n    },\n    [history, pathwayRef]\n  );\n\n  const addPathwayNode = useCallback(\n    (nodeType: string): void => {\n      if (!currentNodeRef.current?.key || !pathwayRef.current) return;\n\n      const newNode = createNode();\n      let newPathway = addNode(pathwayRef.current, newNode);\n      newPathway = addTransition(newPathway, currentNodeRef.current.key, newNode.key as string);\n      newPathway = setNodeType(newPathway, newNode.key as string, nodeType);\n      updatePathway(newPathway);\n      redirectToNode(newNode.key);\n    },\n    [pathwayRef, updatePathway, currentNodeRef, redirectToNode]\n  );\n\n  const addBranchNode = useCallback((): void => addPathwayNode('branch'), [addPathwayNode]);\n\n  const addActionNode = useCallback((): void => addPathwayNode('action'), [addPathwayNode]);\n\n  // Set the height of the sidebar container\n  useEffect(() => {\n    const resize = (): void => {\n      if (sidebarContainerElement?.current && headerElement?.current)\n        sidebarContainerElement.current.style.height =\n          window.innerHeight - headerElement.current.clientHeight + 'px';\n    };\n    resize();\n    window.addEventListener('resize', resize);\n    return (): void => window.removeEventListener('resize', resize);\n  }, [isExpanded, headerElement]);\n\n  if (!pathway) return <div>Error: No pathway</div>;\n  if (!currentNode) return <div>Error: No current node</div>;\n\n  const nodeType = getNodeType(pathway, currentNode.key);\n  // If the node does not have transitions it can be added to\n  const displayAddButtons = currentNode.key !== undefined && currentNode.transitions.length === 0;\n  return (\n    <>\n      {isExpanded && (\n        <div className={styles.root} ref={sidebarContainerElement}>\n          <SidebarHeader node={currentNode} isTransition={false} />\n\n          <hr className={styles.divider} />\n\n          {nodeType === 'null' && <NullNodeEditor changeNodeType={changeNodeType} />}\n\n          {nodeType === 'action' && <ActionNodeEditor changeNodeType={changeNodeType} />}\n\n          {nodeType === 'branch' && <BranchNodeEditor changeNodeType={changeNodeType} />}\n\n          {displayAddButtons && (\n            <>\n              {currentNode.key !== 'Start' && <hr className={styles.divider} />}\n              <SidebarButton\n                buttonName=\"Add Action Node\"\n                buttonIcon={faPlus}\n                buttonText=\"Any clinical or workflow step which is not a decision.\"\n                onClick={addActionNode}\n              />\n\n              <SidebarButton\n                buttonName=\"Add Branch Node\"\n                buttonIcon={faPlus}\n                buttonText=\"A logical branching point based on clinical or workflow criteria.\"\n                onClick={addBranchNode}\n              />\n            </>\n          )}\n        </div>\n      )}\n\n      <div className={styles.toggleSidebar} onClick={toggleSidebar}>\n        <FontAwesomeIcon icon={isExpanded ? faChevronLeft : faChevronRight} />\n      </div>\n    </>\n  );\n};\n\nexport default memo(Sidebar);\n","import React, { FC, memo, useCallback, useRef, useState, KeyboardEvent, FocusEvent } from 'react';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEdit,\n  faEllipsisH,\n  faChevronLeft,\n  faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, FormControl, Input } from '@material-ui/core';\n\nimport { PathwayNode } from 'pathways-model';\nimport { setNodeLabel } from 'utils/builder';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\n\ninterface SidebarHeaderProps {\n  node: PathwayNode;\n  isTransition: boolean;\n}\n\nconst SidebarHeader: FC<SidebarHeaderProps> = ({ node, isTransition }) => {\n  const { updatePathway } = usePathwaysContext();\n  const [showInput, setShowInput] = useState<boolean>(false);\n  const { pathwayRef } = useCurrentPathwayContext();\n  const inputRef = useRef<HTMLInputElement>(null);\n  const nodeLabel = node?.label || '';\n  const styles = useStyles();\n\n  const goToParentNode = useCallback(() => {\n    // TODO\n  }, []);\n\n  const goToNode = useCallback(() => {\n    // TODO\n  }, []);\n\n  const openNodeOptions = useCallback(() => {\n    // TODO\n  }, []);\n\n  const changeNodeLabel = useCallback(() => {\n    const label = inputRef.current?.value ?? '';\n    if (node.key && pathwayRef.current)\n      updatePathway(setNodeLabel(pathwayRef.current, node.key, label));\n    setShowInput(false);\n  }, [pathwayRef, updatePathway, node.key]);\n\n  const handleShowInput = useCallback(() => {\n    setShowInput(true);\n  }, []);\n\n  const handleKeyPress = useCallback(\n    (event: KeyboardEvent<HTMLDivElement>): void => {\n      if (event.key === 'Enter') changeNodeLabel();\n    },\n    [changeNodeLabel]\n  );\n\n  return (\n    <div className={styles.sidebarHeader}>\n      <div className={styles.sidebarHeaderGroup}>\n        {node.key !== 'Start' && !isTransition && (\n          <IconButton\n            className={styles.sidebarHeaderButton}\n            onClick={goToParentNode}\n            aria-label=\"go to parent node\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft} />\n          </IconButton>\n        )}\n\n        <div className={styles.headerLabelGroup} onClick={handleShowInput}>\n          {showInput && node.key !== 'Start' ? (\n            <FormControl className={styles.formControl} fullWidth>\n              <Input\n                className={styles.headerLabel}\n                type=\"text\"\n                inputRef={inputRef}\n                onBlur={changeNodeLabel}\n                onKeyPress={handleKeyPress}\n                defaultValue={nodeLabel}\n                autoFocus\n                onFocus={(event: FocusEvent<HTMLInputElement>): void => event.target.select()}\n              />\n            </FormControl>\n          ) : (\n            <div\n              className={clsx(\n                styles.headerLabel,\n                styles.headerLabelText,\n                node.key === 'Start' && styles.headerLabelStart\n              )}\n            >\n              {nodeLabel}\n              {node.key !== 'Start' && (\n                <FontAwesomeIcon className={styles.editIcon} icon={faEdit} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className={styles.sidebarHeaderGroup}>\n        <IconButton\n          className={styles.sidebarHeaderButton}\n          onClick={isTransition ? goToNode : openNodeOptions}\n          aria-label={isTransition ? 'go to transition node' : 'open node options'}\n        >\n          <FontAwesomeIcon icon={isTransition ? faChevronRight : faEllipsisH} />\n        </IconButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SidebarHeader);\n","import React, { FC, memo } from 'react';\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\n\ninterface SidebarButtonProps {\n  buttonName: string;\n  buttonIcon: IconDefinition;\n  buttonText: string;\n  onClick?: () => void;\n}\n\nconst SidebarButton: FC<SidebarButtonProps> = ({ buttonName, buttonIcon, buttonText, onClick }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.sidebarButtonGroup}>\n      <Button\n        className={styles.sidebarButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<FontAwesomeIcon icon={buttonIcon} />}\n        onClick={onClick}\n      >\n        {buttonName}\n      </Button>\n\n      <div className={styles.sidebarButtonText}>{buttonText}</div>\n    </div>\n  );\n};\n\nexport default memo(SidebarButton);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { InputLabel, FormControl, Select, MenuItem } from '@material-ui/core';\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface DropDownProps {\n  id: string;\n  label: string;\n  options: Array<Option>;\n  value?: string;\n  onChange: Function | null;\n}\n\nconst DropDown: FC<DropDownProps> = ({ id, label, options, value, onChange }: DropDownProps) => {\n  const handleSetSelected = useCallback(\n    (event: ChangeEvent<{ value: unknown }>): void => {\n      if (onChange) onChange(event);\n    },\n    [onChange]\n  );\n\n  return (\n    <FormControl variant=\"outlined\" fullWidth>\n      <InputLabel id={id} htmlFor={`${id}-select`}>\n        {label}\n      </InputLabel>\n\n      <Select\n        id={`${id}-select`}\n        value={value || ''}\n        onChange={handleSetSelected}\n        label={label}\n        error={value == null || value === ''}\n        MenuProps={{\n          getContentAnchorEl: null,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'center'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          }\n        }}\n        displayEmpty\n      >\n        {options.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(DropDown);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport { SidebarButton, BranchTransition } from '.';\nimport DropDown from 'components/elements/DropDown';\nimport { addTransition, createNode, addNode } from 'utils/builder';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\n\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\n\nconst nodeTypeOptions = [\n  { value: 'action', label: 'Action' },\n  { value: 'branch', label: 'Branch' }\n];\n\ninterface BranchNodeEditorProps {\n  changeNodeType: (event: string) => void;\n}\n\nconst BranchNodeEditor: FC<BranchNodeEditorProps> = ({ changeNodeType }) => {\n  const { updatePathway } = usePathwaysContext();\n  const { pathwayRef } = useCurrentPathwayContext();\n  const { currentNode, currentNodeRef } = useCurrentNodeContext();\n  const styles = useStyles();\n\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  const handleAddTransition = useCallback((): void => {\n    if (!pathwayRef.current) return;\n\n    const newNode = createNode();\n\n    const newPathway = addNode(pathwayRef.current, newNode);\n    updatePathway(\n      addTransition(newPathway, currentNodeRef.current?.key || '', newNode.key as string)\n    );\n  }, [pathwayRef, updatePathway, currentNodeRef]);\n\n  return (\n    <>\n      <DropDown\n        id=\"nodeType\"\n        label=\"Node Type\"\n        options={nodeTypeOptions}\n        onChange={selectNodeType}\n        value=\"branch\"\n      />\n      {currentNode?.transitions.map(transition => {\n        return <BranchTransition key={transition.id} transition={transition} />;\n      })}\n\n      <hr className={styles.divider} />\n\n      <SidebarButton\n        buttonName=\"Add Transition\"\n        buttonIcon={faPlus}\n        buttonText=\"Add transition logic for a clinical decision within a workflow.\"\n        onClick={handleAddTransition}\n      />\n    </>\n  );\n};\n\nexport default memo(BranchNodeEditor);\n","// External CQL -> ELM service\nimport { CqlObject } from './cql-extractor';\nimport config from 'utils/ConfigManager';\nimport {\n  extractJSONContent,\n  extractMultipartBoundary,\n  extractMultipartFileName\n} from 'utils/regexes';\n\nconst url = config.get('cqlToElmWebserviceUrl');\n\nexport interface ElmObject {\n  main: object;\n  libraries: {\n    [key: string]: object;\n  };\n}\n\n/**\n * Function that requests web_service to convert the cql into elm.\n * @param cql - cql file that is the input to the function.\n * @return The resulting elm translation of the cql file.\n */\nexport default function convertCQL(cql: CqlObject): Promise<ElmObject> {\n  // Connect to web service\n  const formdata = new FormData();\n  Object.keys(cql.libraries).forEach((key, i) => {\n    formdata.append(`${key}`, cql.libraries[key]);\n  });\n\n  formdata.append('main', cql.main);\n  return fetch(url, {\n    method: 'POST',\n    body: formdata\n  }).then(elm => {\n    const header = elm.headers.get('content-type');\n    let boundary = '';\n    if (header) {\n      // sample header= \"multipart/form-data;boundary=Boundary_1\"\n      const result = extractMultipartBoundary.exec(header);\n      boundary = result ? `--${result[1]}` : '';\n    }\n    const obj: ElmObject = { main: {}, libraries: {} };\n    return elm.text().then(text => {\n      const elms = text.split(boundary).reduce((oldArray, line, i) => {\n        const body = extractJSONContent.exec(line);\n        if (body) {\n          const elmName = extractMultipartFileName.exec(line);\n          if (elmName && elmName[1] === 'main') {\n            oldArray[elmName[1]] = JSON.parse(body[1]);\n          } else if (elmName) {\n            oldArray.libraries[elmName[1]] = JSON.parse(body[1]);\n          }\n        }\n        return oldArray;\n      }, obj);\n\n      return elms;\n    });\n  });\n}\n\nexport function convertBasicCQL(cql: string): Promise<object> {\n  // Connect to web service\n\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/cql',\n      Accept: 'application/elm+json'\n    },\n    body: cql\n  }).then(elm => elm.json());\n}\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { SidebarButton } from '.';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport {\n  setNodeAction,\n  createCQL,\n  setActionNodeElm,\n  setActionResourceDisplay\n} from 'utils/builder';\nimport DropDown from 'components/elements/DropDown';\nimport { ActionNode, Action } from 'pathways-model';\nimport { ElmLibrary } from 'elm-model';\nimport useStyles from './styles';\nimport shortid from 'shortid';\nimport { TextField } from '@material-ui/core';\nimport { convertBasicCQL } from 'engine/cql-to-elm';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport produce from 'immer';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\n\nconst nodeTypeOptions = [\n  { label: 'Action', value: 'action' },\n  { label: 'Branch', value: 'branch' }\n];\n\nconst actionTypeOptions = [\n  { label: 'Medication', value: 'MedicationRequest' },\n  { label: 'Procedure', value: 'ServiceRequest' },\n  { label: 'Regimen', value: 'CarePlan' }\n];\n\nconst codeSystemOptions = [\n  { label: 'ICD-9-CM', value: 'http://hl7.org/fhir/sid/icd-9-cm' },\n  { label: 'ICD-10-CM', value: 'http://hl7.org/fhir/sid/icd-10-cm' },\n  { label: 'LOINC', value: 'http://loinc.org' },\n  { label: 'NCI', value: 'http://ncimeta.nci.nih.gov' },\n  { label: 'RXNORM', value: 'http://www.nlm.nih.gov/research/umls/rxnorm' },\n  { label: 'SNOMED', value: 'http://snomed.info/sct' }\n];\n\ninterface ActionNodeEditorProps {\n  changeNodeType: (event: string) => void;\n}\n\nconst ActionNodeEditor: FC<ActionNodeEditorProps> = ({ changeNodeType }) => {\n  const { updatePathway } = usePathwaysContext();\n  const { pathwayRef } = useCurrentPathwayContext();\n  const { currentNode, currentNodeRef } = useCurrentNodeContext();\n  const styles = useStyles();\n\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  const addActionCQL = useCallback(\n    (action: Action, currentNodeKey: string): void => {\n      if (!pathwayRef.current) return;\n\n      const cql = createCQL(action, currentNodeKey);\n      convertBasicCQL(cql).then(elm => {\n        // Disable lint for no-null assertion since it is already checked above\n        // eslint-disable-next-line\n        updatePathway(setActionNodeElm(pathwayRef.current!, currentNodeKey, elm as ElmLibrary));\n      });\n    },\n    [pathwayRef, updatePathway]\n  );\n\n  const changeCode = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current?.key || !pathwayRef.current) return;\n\n      const code = event?.target.value || '';\n      const action = produce(\n        (currentNodeRef.current as ActionNode).action[0],\n        (draftAction: Action) => {\n          if (draftAction.resource.medicationCodeableConcept) {\n            draftAction.resource.medicationCodeableConcept.coding[0].code = code;\n          } else {\n            draftAction.resource.code.coding[0].code = code;\n          }\n        }\n      );\n      updatePathway(\n        setNodeAction(pathwayRef.current, currentNodeRef.current.key, [resetDisplay(action)])\n      );\n    },\n    [currentNodeRef, pathwayRef, updatePathway]\n  );\n\n  const changeDescription = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current?.key || !pathwayRef.current) return;\n\n      const description = event?.target.value || '';\n      const action = produce(\n        (currentNodeRef.current as ActionNode).action[0],\n        (draftAction: Action) => {\n          draftAction.description = description;\n        }\n      );\n      updatePathway(setNodeAction(pathwayRef.current, currentNodeRef.current.key, [action]));\n    },\n    [currentNodeRef, pathwayRef, updatePathway]\n  );\n\n  const changeTitle = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current?.key || !pathwayRef.current) return;\n\n      const title = event?.target.value || '';\n      const action = produce(\n        (currentNodeRef.current as ActionNode).action[0],\n        (draftAction: Action) => {\n          draftAction.resource.title = title;\n        }\n      );\n      updatePathway(\n        setNodeAction(pathwayRef.current, currentNodeRef.current.key, [resetDisplay(action)])\n      );\n\n      addActionCQL(action, currentNodeRef.current.key);\n    },\n    [currentNodeRef, pathwayRef, updatePathway, addActionCQL]\n  );\n\n  const selectActionType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current?.key || !pathwayRef.current) return;\n      const value = event?.target.value || '';\n      const actionType = actionTypeOptions.find(option => {\n        return option.value === value;\n      });\n      let action: Action;\n      if (actionType?.value === 'CarePlan') {\n        action = {\n          type: 'create',\n          description: '',\n          id: shortid.generate(),\n          resource: {\n            resourceType: actionType?.value,\n            title: ''\n          }\n        };\n      } else if (actionType?.value === 'MedicationRequest') {\n        action = {\n          type: 'create',\n          description: '',\n          id: shortid.generate(),\n          resource: {\n            resourceType: actionType?.value,\n            medicationCodeableConcept: {\n              coding: [\n                {\n                  system: '',\n                  code: '',\n                  display: ''\n                }\n              ]\n            }\n          }\n        };\n      } else {\n        action = {\n          type: 'create',\n          description: '',\n          id: shortid.generate(),\n          resource: {\n            resourceType: actionType?.value,\n            code: {\n              coding: [\n                {\n                  system: '',\n                  code: '',\n                  display: ''\n                }\n              ]\n            }\n          }\n        };\n      }\n\n      updatePathway(setNodeAction(pathwayRef.current, currentNodeRef.current.key, [action]));\n    },\n    [currentNodeRef, pathwayRef, updatePathway]\n  );\n\n  const selectCodeSystem = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current?.key || !pathwayRef.current) return;\n\n      const codeSystem = event?.target.value || '';\n      const action = produce(\n        (currentNodeRef.current as ActionNode).action[0],\n        (draftAction: Action) => {\n          if (draftAction.resource.medicationCodeableConcept) {\n            draftAction.resource.medicationCodeableConcept.coding[0].system = codeSystem;\n          } else {\n            draftAction.resource.code.coding[0].system = codeSystem;\n          }\n        }\n      );\n      updatePathway(\n        setNodeAction(pathwayRef.current, currentNodeRef.current.key, [resetDisplay(action)])\n      );\n    },\n    [currentNodeRef, pathwayRef, updatePathway]\n  );\n\n  const validateFunction = useCallback((): void => {\n    if (\n      currentNodeRef.current?.key &&\n      (currentNodeRef.current as ActionNode).action.length &&\n      pathwayRef.current\n    ) {\n      const action = setActionResourceDisplay(\n        (currentNodeRef.current as ActionNode).action[0],\n        'Example Text'\n      );\n      updatePathway(setNodeAction(pathwayRef.current, currentNodeRef.current.key, [action]));\n\n      addActionCQL(action, currentNodeRef.current.key);\n    } else {\n      console.error('No Actions -- Cannot Validate');\n    }\n  }, [currentNodeRef, pathwayRef, updatePathway, addActionCQL]);\n\n  const resetDisplay = (action: Action): Action => {\n    return produce(action, (draftAction: Action) => {\n      if (draftAction.resource.medicationCodeableConcept) {\n        draftAction.resource.medicationCodeableConcept.coding[0].display = '';\n      } else if (draftAction.resource.resourceType === 'CarePlan') {\n        draftAction.resource.description = '';\n      } else {\n        draftAction.resource.code.coding[0].display = ''; // TODO: actually validate\n      }\n    });\n  };\n\n  const onEnter = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key === 'Enter') {\n      validateFunction();\n    }\n  };\n\n  // The node has a key and is not the start node\n  const changeNodeTypeEnabled = currentNode?.key !== undefined && currentNode.key !== 'Start';\n  const action = (currentNode as ActionNode).action;\n  const resource = action?.length > 0 && action[0].resource;\n  let system = '';\n  let code = '';\n  let display = '';\n  if (resource.resourceType === 'MedicationRequest' || resource.resourceType === 'ServiceRequest') {\n    system = resource.code\n      ? resource.code.coding[0].system\n      : resource.medicationCodeableConcept.coding[0].system;\n    code = resource.code\n      ? resource.code.coding[0].code\n      : resource.medicationCodeableConcept.coding[0].code;\n    display = resource.code\n      ? resource.code.coding[0].display\n      : resource.medicationCodeableConcept.coding[0].display;\n  } else {\n    display = resource.description;\n  }\n\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <>\n          <DropDown\n            id=\"nodeType\"\n            label=\"Node Type\"\n            options={nodeTypeOptions}\n            onChange={selectNodeType}\n            value=\"action\"\n          />\n          <DropDown\n            id=\"actionType\"\n            label=\"Action Type\"\n            options={actionTypeOptions}\n            onChange={selectActionType}\n            value={resource.resourceType}\n          />\n          {(resource.resourceType === 'MedicationRequest' ||\n            resource.resourceType === 'ServiceRequest') && (\n            <>\n              <DropDown\n                id=\"codeSystem\"\n                label=\"Code System\"\n                options={codeSystemOptions}\n                onChange={selectCodeSystem}\n                value={system}\n              />\n              {system && (\n                <TextField\n                  id=\"code-input\"\n                  label=\"Code\"\n                  value={code}\n                  onChange={changeCode}\n                  variant=\"outlined\"\n                  error={code === ''}\n                  inputProps={{ onKeyPress: onEnter }}\n                />\n              )}\n              {code && (\n                <>\n                  {display ? (\n                    <div className={styles.displayText}>\n                      <FontAwesomeIcon icon={faCheckCircle} /> {display}\n                    </div>\n                  ) : (\n                    <SidebarButton\n                      buttonName=\"Validate\"\n                      buttonIcon={faCheckCircle}\n                      buttonText={display || 'Check validation of the input system and code'}\n                      onClick={validateFunction}\n                    />\n                  )}\n\n                  <TextField\n                    id=\"description-input\"\n                    label=\"Description\"\n                    value={action[0].description || ''}\n                    onChange={changeDescription}\n                    variant=\"outlined\"\n                    error={action[0].description === ''}\n                  />\n                </>\n              )}\n            </>\n          )}\n\n          {resource.resourceType === 'CarePlan' && (\n            // design for careplan ?\n            <>\n              <TextField\n                id=\"title-input\"\n                label=\"Title\"\n                value={resource.title || ''}\n                onChange={changeTitle}\n                variant=\"outlined\"\n                error={resource.title == null}\n                inputProps={{ onKeyPress: onEnter }}\n              />\n              {resource.title && (\n                <TextField\n                  id=\"description-input\"\n                  label=\"Description\"\n                  value={action[0].description || ''}\n                  onChange={changeDescription}\n                  variant=\"outlined\"\n                  error={action[0].description === ''}\n                />\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(ActionNodeEditor);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\n\nimport DropDown from 'components/elements/DropDown';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\n\nconst nodeTypeOptions = [\n  { label: '', value: '' },\n  { label: 'Action', value: 'action' },\n  { label: 'Branch', value: 'branch' }\n];\n\ninterface NullNodeEditorProps {\n  changeNodeType: (event: string) => void;\n}\n\nconst NullNodeEditor: FC<NullNodeEditorProps> = ({ changeNodeType }) => {\n  const { currentNode } = useCurrentNodeContext();\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  // The node has a key and is not the start node\n  const changeNodeTypeEnabled = currentNode?.key !== undefined && currentNode.key !== 'Start';\n\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <DropDown\n          id=\"nodeType\"\n          label=\"Node Type\"\n          options={nodeTypeOptions}\n          onChange={selectNodeType}\n          value=\"\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default memo(NullNodeEditor);\n","import React, {\n  createContext,\n  ReactNode,\n  FC,\n  useState,\n  memo,\n  useContext,\n  useCallback,\n  useEffect\n} from 'react';\nimport shortid from 'shortid';\nimport { ElmStatement } from 'elm-model';\nimport config from 'utils/ConfigManager';\nimport useGetService from './Services';\nimport { ServiceLoaded } from 'pathways-objects';\n\ninterface Criteria {\n  id: string;\n  label: string;\n  version: string;\n  modified: number;\n  elm: object;\n}\n\ninterface CriteriaContextInterface {\n  criteria: Criteria[];\n  addCriteria: (file: File) => void;\n  deleteCriteria: (id: string) => void;\n}\n\nexport const CriteriaContext = createContext<CriteriaContextInterface>(\n  {} as CriteriaContextInterface\n);\n\ninterface CriteriaProviderProps {\n  children: ReactNode;\n}\n\nfunction jsonToCriteria(rawElm: string): Criteria | undefined {\n  const elm = JSON.parse(rawElm);\n  if (!elm.library?.identifier) {\n    alert('Please upload ELM file');\n    return;\n  }\n  const defaultStatementNames = [\n    'Patient',\n    'MeetsInclusionCriteria',\n    'InPopulation',\n    'Recommendation',\n    'Rationale',\n    'Errors'\n  ];\n  const elmStatements: ElmStatement[] = elm.library.statements.def;\n  const elmStatement = elmStatements.find(def => !defaultStatementNames.includes(def.name));\n  if (!elmStatement) {\n    alert('No elm statement found in that file');\n    return;\n  }\n  const newCriteria: Criteria = {\n    id: shortid.generate(),\n    label: elm.library.identifier.id,\n    version: elm.library.identifier.version,\n    modified: Date.now(),\n    elm: elm\n  };\n  return newCriteria;\n}\n\nexport const CriteriaProvider: FC<CriteriaProviderProps> = memo(({ children }) => {\n  const [criteria, setCriteria] = useState<Criteria[]>([]);\n  const service = useGetService<Criteria>(config.get('demoCriteria'));\n  const payload = (service as ServiceLoaded<Criteria[]>).payload;\n\n  useEffect(() => {\n    if (payload) {\n      const newCriteria: Criteria[] = [];\n      payload.forEach(jsonCriterion => {\n        const criterion = jsonToCriteria(JSON.stringify(jsonCriterion));\n        if (criterion) newCriteria.push(criterion);\n      });\n      setCriteria(newCriteria);\n    }\n  }, [payload]);\n\n  const addCriteria = useCallback((file: File) => {\n    const reader = new FileReader();\n    reader.onload = (event: ProgressEvent<FileReader>): void => {\n      if (event.target?.result) {\n        const rawElm = event.target.result as string;\n        const newCriteria = jsonToCriteria(rawElm);\n        if (newCriteria) setCriteria(currentCriteria => [...currentCriteria, newCriteria]);\n      } else alert('Unable to read that file');\n    };\n    reader.readAsText(file);\n  }, []);\n\n  const deleteCriteria = useCallback((id: string) => {\n    setCriteria(currentCriteria => currentCriteria.filter(criteria => criteria.id !== id));\n  }, []);\n\n  return (\n    <CriteriaContext.Provider\n      value={{\n        criteria,\n        addCriteria,\n        deleteCriteria\n      }}\n    >\n      {children}\n    </CriteriaContext.Provider>\n  );\n});\n\nexport const useCriteriaContext = (): CriteriaContextInterface => useContext(CriteriaContext);\n","import React, {\n  FC,\n  memo,\n  useState,\n  useCallback,\n  ChangeEvent,\n  useEffect,\n  useMemo,\n  useRef\n} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faSave, faTools, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport DropDown from 'components/elements/DropDown';\nimport { Button, Checkbox, FormControlLabel, TextField, Box } from '@material-ui/core';\nimport {\n  removeTransitionCondition,\n  setTransitionCondition,\n  setTransitionConditionDescription\n} from 'utils/builder';\nimport { OutlinedDiv, SidebarHeader, SidebarButton } from '.';\nimport { Transition } from 'pathways-model';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { useBuildCriteriaContext } from 'components/BuildCriteriaProvider';\n\ninterface BranchTransitionProps {\n  transition: Transition;\n}\n\nconst BranchTransition: FC<BranchTransitionProps> = ({ transition }) => {\n  const { updatePathway } = usePathwaysContext();\n  const { criteria } = useCriteriaContext();\n  const { buildCriteriaNodeId, updateBuildCriteriaNodeId } = useBuildCriteriaContext();\n  const { pathway, pathwayRef } = useCurrentPathwayContext();\n  const { currentNodeRef } = useCurrentNodeContext();\n  const criteriaOptions = useMemo(() => criteria.map(c => ({ value: c.id, label: c.label })), [\n    criteria\n  ]);\n  const styles = useStyles();\n  const transitionKey = transition?.transition || '';\n  const transitionNode = pathway?.nodes[transitionKey];\n  const [useCriteriaSelected, setUseCriteriaSelected] = useState<boolean>(false);\n  const criteriaDescription = transition.condition?.description;\n  const criteriaIsValid = criteriaDescription != null;\n  const criteriaDisplayIsValid = criteriaDescription && criteriaDescription !== '';\n  const hasCriteria = transition.condition?.cql || transition.condition?.description;\n  const buttonText = hasCriteria ? 'DELETE' : 'CANCEL';\n  const icon = hasCriteria ? <FontAwesomeIcon icon={faTrashAlt} /> : null;\n  const displayCriteria =\n    useCriteriaSelected || transition.condition?.cql || transition.condition?.description;\n  const [buildCriteriaSelected, setBuildCriteriaSelected] = useState<boolean>(false);\n  const [criteriaName, setCriteriaName] = useState<string>('');\n  const transitionRef = useRef(transition);\n\n  const handleUseCriteria = useCallback((): void => {\n    if (hasCriteria && transition.id && currentNodeRef.current?.key && pathwayRef.current) {\n      // delete the transition criteria\n      updatePathway(\n        removeTransitionCondition(pathwayRef.current, currentNodeRef.current.key, transition.id)\n      );\n      setUseCriteriaSelected(false);\n    } else {\n      setUseCriteriaSelected(!useCriteriaSelected);\n    }\n  }, [useCriteriaSelected, currentNodeRef, pathwayRef, hasCriteria, transition.id, updatePathway]);\n\n  const selectCriteriaSource = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current?.key || !transitionRef.current.id || !pathwayRef.current) return;\n\n      const criteriaSource = event?.target.value || '';\n      let elm = undefined;\n      criteria.forEach(c => {\n        if (c.id === criteriaSource) {\n          elm = c.elm;\n        }\n      });\n      if (!elm) return;\n      const newPathway = setTransitionCondition(\n        pathwayRef.current,\n        currentNodeRef.current.key,\n        transitionRef.current.id,\n        transitionRef.current.condition?.description || '',\n        elm,\n        criteriaSource\n      );\n\n      updatePathway(newPathway);\n    },\n    [currentNodeRef, updatePathway, pathwayRef, transitionRef, criteria]\n  );\n\n  const setCriteriaDisplay = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeRef.current?.key || !transition.id || !pathwayRef.current) return;\n\n      const criteriaDisplay = event?.target.value || '';\n      updatePathway(\n        setTransitionConditionDescription(\n          pathwayRef.current,\n          currentNodeRef.current.key,\n          transition.id,\n          criteriaDisplay\n        )\n      );\n    },\n    [currentNodeRef, transition.id, updatePathway, pathwayRef]\n  );\n\n  const handleCriteriaName = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setCriteriaName(event?.target.value || '');\n    },\n    [setCriteriaName]\n  );\n\n  const handleBuildCriteria = useCallback((): void => {\n    updateBuildCriteriaNodeId(transition.id ?? '');\n    setBuildCriteriaSelected(!buildCriteriaSelected);\n  }, [buildCriteriaSelected, updateBuildCriteriaNodeId, transition]);\n\n  const handleBuildCriteriaCancel = useCallback((): void => {\n    if (buildCriteriaNodeId === transition.id) updateBuildCriteriaNodeId('');\n    setBuildCriteriaSelected(false);\n    setCriteriaName('');\n  }, [updateBuildCriteriaNodeId, setCriteriaName, buildCriteriaNodeId, transition]);\n\n  // Cancel current build criteria if clicked on another BranchTransition\n  useEffect(() => {\n    if (buildCriteriaNodeId !== '' && buildCriteriaNodeId !== transition.id) {\n      handleBuildCriteriaCancel();\n    }\n  }, [buildCriteriaNodeId, handleBuildCriteriaCancel, transition]);\n\n  return (\n    <>\n      <hr className={styles.divider} />\n\n      {transitionNode && <SidebarHeader node={transitionNode} isTransition={true} />}\n\n      {!displayCriteria && !buildCriteriaSelected && (\n        <SidebarButton\n          buttonName=\"Use Criteria\"\n          buttonIcon={faPlus}\n          buttonText=\"Add previously built or imported criteria logic to branch node.\"\n          onClick={handleUseCriteria}\n        />\n      )}\n\n      {displayCriteria && (\n        <OutlinedDiv label=\"Criteria Selector\" error={!criteriaIsValid || !criteriaDisplayIsValid}>\n          <>\n            <DropDown\n              id=\"Criteria\"\n              label=\"Criteria\"\n              options={criteriaOptions}\n              onChange={selectCriteriaSource}\n              value={transition.condition?.cql || undefined}\n            />\n\n            <TextField\n              label=\"Criteria Display\"\n              value={transition.condition?.description || ''}\n              variant=\"outlined\"\n              onChange={setCriteriaDisplay}\n              error={!criteriaDisplayIsValid}\n            />\n          </>\n\n          <Button\n            className={styles.cancelButton}\n            color=\"inherit\"\n            size=\"small\"\n            variant=\"outlined\"\n            startIcon={icon}\n            onClick={handleUseCriteria}\n          >\n            {buttonText}\n          </Button>\n        </OutlinedDiv>\n      )}\n\n      {!displayCriteria && !buildCriteriaSelected && (\n        <SidebarButton\n          buttonName=\"Build Criteria\"\n          buttonIcon={faTools}\n          buttonText=\"Create new criteria logic to add to branch node.\"\n          onClick={handleBuildCriteria}\n        />\n      )}\n\n      {buildCriteriaSelected && (\n        <OutlinedDiv label=\"Criteria Builder\" error={true}>\n          <TextField\n            error={criteriaName === ''}\n            label=\"Criteria Name\"\n            variant=\"outlined\"\n            onChange={handleCriteriaName}\n            fullWidth\n          />\n          <div className={styles.buildCriteriaContainer}>\n            <FormControlLabel\n              label={<Box fontStyle=\"italic\">Add to reusable criteria</Box>}\n              control={<Checkbox color=\"default\" />}\n            />\n            <Button\n              color=\"inherit\"\n              size=\"large\"\n              variant=\"outlined\"\n              onClick={handleBuildCriteriaCancel}\n            >\n              Cancel\n            </Button>\n            <Button\n              className={styles.saveButton}\n              color=\"inherit\"\n              size=\"large\"\n              variant=\"outlined\"\n              startIcon={<FontAwesomeIcon icon={faSave} />}\n              disabled\n            >\n              Save\n            </Button>\n          </div>\n        </OutlinedDiv>\n      )}\n    </>\n  );\n};\n\nexport default memo(BranchTransition);\n","import React, { FC, ReactNode } from 'react';\nimport clsx from 'clsx';\n\nimport TextField from '@material-ui/core/TextField';\nimport useStyles from './styles';\n\ninterface InputComponentProps {\n  children?: ReactNode;\n}\n\nconst InputComponent: FC<InputComponentProps> = ({ children }) => {\n  return <>{children}</>;\n};\n\ninterface OutlinedDivProps {\n  children: ReactNode;\n  label: string;\n  error: boolean;\n}\n\nconst OutlinedDiv: FC<OutlinedDivProps> = ({ children, label, error }) => {\n  const styles = useStyles();\n\n  return (\n    <TextField\n      variant=\"outlined\"\n      label={label}\n      multiline\n      InputLabelProps={{ shrink: true }}\n      InputProps={{\n        inputComponent: InputComponent,\n        classes: {\n          root: clsx(styles.outlinedDiv, error && styles.outlinedDivError),\n          notchedOutline: clsx(error && styles.outlinedDivError)\n        }\n      }}\n      inputProps={{ children }}\n    />\n  );\n};\n\n// This is not memoized since one of its props is children\nexport default OutlinedDiv;\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport { Pathway, PathwayNode } from 'pathways-model';\nimport { Node, Nodes, Layout, NodeCoordinates, Edges, NodeDimensions } from 'graph-model';\n\nimport dagre from 'dagre';\n\nimport config from 'utils/ConfigManager';\nconst graphLayoutProvider = config.get('graphLayoutProvider', 'dagre');\n\n/**\n * Obtain the graph layout for the pathway as coordinates for every node\n *\n * @param pathway - JSON pathway\n */\nexport default function layout(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  return graphLayoutProvider === 'dagre'\n    ? layoutDagre(pathway, nodeDimensions)\n    : layoutCustom(pathway);\n}\n\n/**\n * Layout the pathway using the Dagre layout engine.\n * @see {@link https://github.com/dagrejs/dagre}\n */\nfunction layoutDagre(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  const START = 'Start';\n  const NODE_HEIGHT = 50;\n  const NODE_WIDTH_FACTOR = 10; // factor to convert label length => width, assume font size roughly 10\n  const nodeKeys = Object.keys(pathway.nodes);\n  const g = new dagre.graphlib.Graph();\n\n  g.setGraph({});\n  g.setDefaultEdgeLabel(() => ({})); // dagre requires a default edge label, we want it to just be empty\n\n  nodeKeys.forEach(nodeKey => {\n    const node: PathwayNode = pathway.nodes[nodeKey];\n    const nodeDimension = nodeDimensions[nodeKey];\n\n    if (nodeDimension) {\n      g.setNode(nodeKey, {\n        label: node.label,\n        width: nodeDimension.width,\n        height: nodeDimension.height\n      });\n    } else {\n      g.setNode(nodeKey, {\n        label: node.label,\n        width: node.label.length * NODE_WIDTH_FACTOR,\n        height: NODE_HEIGHT\n      });\n    }\n\n    node.transitions.forEach(transition => {\n      const label = transition.condition\n        ? {\n            label: transition.condition.description,\n            width: 25,\n            height: 20\n          }\n        : {};\n\n      g.setEdge(nodeKey, transition.transition, label);\n    });\n  });\n\n  dagre.layout(g);\n  const nodeCoordinates: NodeCoordinates = {};\n  const startNodeShift = g.node(START).x;\n\n  for (const nodeKey of nodeKeys) {\n    const node = g.node(nodeKey);\n    // dagre returns coordinates for the center of the node,\n    // our renderer expects coordinates for the corner of the node.\n    // further, our renderer expects the Start node to be centered at x: 0\n    nodeCoordinates[nodeKey] = {\n      x: node.x - startNodeShift - node.width / 2,\n      y: node.y - node.height / 2,\n      width: node.width\n    };\n  }\n\n  const edges: Edges = {};\n\n  g.edges().forEach(e => {\n    const edge = g.edge(e);\n    const edgeName = `${e.v}, ${e.w}`;\n    const label = edge.label ? { text: edge.label, x: edge.x - startNodeShift, y: edge.y } : null;\n\n    edges[edgeName] = {\n      label,\n      start: e.v,\n      end: e.w,\n      points: edge.points.map(p => {\n        return {\n          x: p.x - startNodeShift,\n          y: p.y\n        };\n      })\n    };\n  });\n\n  return { nodeCoordinates, edges };\n}\n\n/**\n * Layout the pathway using our homegrown layout algorithm.\n */\nfunction layoutCustom(pathway: Pathway): Layout {\n  const START = 'Start';\n  const NODE_WIDTH = 100;\n  const NODE_HEIGHT = 50;\n  const MIN_MARGIN_X = 10;\n  const MIN_MARGIN_Y = 50;\n  const nodes: Nodes = initializeNodes(pathway);\n  const graph: string[][] = [[START]];\n  const HORIZONTAL_OFFSET = NODE_WIDTH + MIN_MARGIN_X;\n  const VERTICAL_OFFSET = NODE_HEIGHT + MIN_MARGIN_Y;\n\n  // Set the rank for every node\n  let rank = 0;\n  do {\n    // Iterate over each node on the current level\n    for (const nodeKey of graph[rank]) {\n      // Assign all children to the next rank\n      assignRankToChildren(nodes[nodeKey], rank + 1);\n    }\n\n    rank++;\n\n    // To start rank = 0 and graph.length = 1. In each iteration children will be added\n    // to the next rank incrementing the length of graph. When there are no new children\n    // the graph.length will remain unchanged but the rank would have increased by one.\n    // Therefore we stop when the rank and graph length are the same.\n  } while (graph.length !== rank);\n\n  // Set the position of nodes within the rank\n  assignHorizontalPositionToNode(nodes[START], -1 * (NODE_WIDTH / 2));\n  for (rank = 1; rank < graph.length; rank++) {\n    assignHorizontalPositionToNodesInRank(rank);\n  }\n\n  return {\n    nodeCoordinates: produceCoordinates(),\n    edges: {}\n  };\n\n  /**\n   * Convert the Nodes into a Coordinates object\n   *\n   * @returns Coordinates for every node\n   */\n  function produceCoordinates(): NodeCoordinates {\n    const coordinates: NodeCoordinates = {};\n\n    for (const nodeKey in nodes) {\n      const node = nodes[nodeKey];\n      coordinates[nodeKey] = {\n        x: node.horizontalPosition,\n        y: node.rank * VERTICAL_OFFSET\n      };\n    }\n\n    return coordinates;\n  }\n\n  /**\n   * Set the horizontal position for child elements of a parent\n   *\n   * @param parent - the parent Node\n   * @param nodes - the Nodes\n   */\n  function spreadChildrenEvenly(parent: Node): void {\n    const children = parent.children.filter(\n      c => isNaN(nodes[c].horizontalPosition) || nodes[c].canMove\n    );\n    if (children.length === 0) return;\n    if (children.length === 1) {\n      assignHorizontalPositionToNode(nodes[children[0]], parent.horizontalPosition);\n      return;\n    }\n    if (children.length % 2 === 1) children.splice(Math.ceil(children.length / 2), 1); // Remove middle element if odd\n\n    // TODO: this does not consider if there are connections between the children which order to put them in\n    for (let i = 0; i < children.length / 2; i++) {\n      // Set the left child i from the center\n      let childNode = nodes[children[children.length / 2 - i - 1]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition - (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n\n      // Set the right child i from the center\n      childNode = nodes[children[children.length / 2 + i]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition + (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n    }\n  }\n\n  /**\n   * Assigns the node given by nodeKey the horizontal position hPos if it is not already set\n   * @param node - the node to set the horizontal position of\n   * @param hPos - the horizontal position for the node\n   */\n  function assignHorizontalPositionToNode(node: Node, hPos: number): void {\n    if (isNaN(node.horizontalPosition) || node.canMove) {\n      node.horizontalPosition = hPos;\n\n      // Check the new position is not on top of another node\n      let i = 1;\n      while (hasOverlap(node)) {\n        // Update Horizontal position of this node\n        // Alternate directions moving further and further away\n        const direction = i % 2 === 0 ? -1 : 1;\n        node.horizontalPosition = hPos + direction * Math.ceil(i / 2) * HORIZONTAL_OFFSET;\n        i += 1;\n      }\n    }\n  }\n\n  /**\n   * Assigns the horizontal position of all nodes on the current level\n   *\n   * @param rank - the level of the graph to assign node positions of\n   */\n  function assignHorizontalPositionToNodesInRank(rank: number): void {\n    for (const nodeKey of graph[rank]) {\n      const node = nodes[nodeKey];\n      if (!isNaN(node.horizontalPosition)) continue;\n      const parentsOnHigherRank = node.parents.filter(p => nodes[p].rank < node.rank);\n      if (parentsOnHigherRank.length === 1) {\n        const parentKey = node.parents[0];\n        const parent = nodes[parentKey];\n\n        if (parent.children.length % 2 === 1) {\n          // Odd number of children: one directly below, others to the side\n          const childNode = nodes[parent.children[Math.floor(parent.children.length / 2)]];\n          assignHorizontalPositionToNode(childNode, parent.horizontalPosition);\n        }\n        spreadChildrenEvenly(parent);\n      } else {\n        // Multiple Parents: Place the node at the average of parents on higher rank\n        // TODO: collect all parents to be next to each other\n        const sum = parentsOnHigherRank\n          .map(p => nodes[p].horizontalPosition)\n          .reduce((a, b) => a + b, 0);\n\n        assignHorizontalPositionToNode(node, sum / parentsOnHigherRank.length);\n      }\n    }\n  }\n\n  /**\n   * Determines if the node overlaps with any other nodes in the rank\n   *\n   * @param node - the node to check for overlap with\n   * @returns true if the node overlaps with any other node in the rank, false otherwise\n   */\n  function hasOverlap(node: Node): boolean {\n    const nodesInRank = graph[node.rank].map(name => nodes[name]);\n\n    for (const otherNode of nodesInRank) {\n      if (nodesOverlap(node, otherNode)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Helper function to determine if two nodes are in the same slot\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the nodes share same rank and position, false otherwise\n   */\n  function nodesOverlap(node: Node, otherNode: Node): boolean {\n    if (nodesEqual(node, otherNode)) return false;\n    else\n      return (\n        !isNaN(node.rank) &&\n        !isNaN(node.horizontalPosition) &&\n        !isNaN(otherNode.rank) &&\n        !isNaN(otherNode.horizontalPosition) &&\n        node.rank === otherNode.rank &&\n        node.horizontalPosition === otherNode.horizontalPosition\n      );\n  }\n\n  /**\n   * Determine if two nodes are the same\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the two nodes are the same (have the same label)\n   */\n  function nodesEqual(node: Node, otherNode: Node): boolean {\n    return node.label === otherNode.label;\n  }\n\n  /**\n   * Assigns the rank to every child of node. If the child has a lower rank the entire\n   * subtree rooted at that child will be shifted down by recursively assigning rank to\n   * the children.\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param node - the node to get children from\n   * @param rank - the rank to assign to the children\n   */\n  function assignRankToChildren(node: Node, rank: number): void {\n    node.children.forEach(child => {\n      const childNode = nodes[child];\n\n      // If the child is on a higher rank than the parent (node) move subtree rooted at child down\n      if (childNode.rank < node.rank) {\n        // Remove node from previous rank\n        graph[childNode.rank].splice(graph[childNode.rank].indexOf(child), 1);\n\n        // Move this node down\n        assignRankToNode(child, rank);\n\n        // Move all children of this child down\n        assignRankToChildren(childNode, rank + 1);\n      } else if (isNaN(childNode.rank)) assignRankToNode(child, rank);\n    });\n  }\n\n  /**\n   * Assigns the node labeled by nodeKey the rank by updating graph and nodes data structures\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param nodeKey - the name of the node to set the rank of\n   * @param rank - the new rank for the node\n   */\n  function assignRankToNode(nodeKey: string, rank: number): void {\n    try {\n      graph[rank].push(nodeKey);\n    } catch (err) {\n      graph[rank] = [nodeKey];\n    } finally {\n      nodes[nodeKey].rank = rank;\n    }\n  }\n\n  /**\n   * Initialize the Nodes data structure for the graph representation\n   *\n   * @param pathway - JSON Pathway\n   * @returns initial Nodes data structure with default values\n   */\n  function initializeNodes(pathway: Pathway): Nodes {\n    const nodes: Nodes = {};\n\n    // Iniitalize each node with default values\n    let nodeKey: string;\n    for (nodeKey in pathway.nodes) {\n      nodes[nodeKey] = {\n        label: nodeKey,\n        rank: NaN,\n        horizontalPosition: NaN,\n        children: [],\n        parents: [],\n        canMove: true\n      };\n    }\n\n    // Set the child and parent properties of each node\n    Object.keys(pathway.nodes).forEach(nodeKey => {\n      const node: PathwayNode = pathway.nodes[nodeKey];\n\n      node.transitions.forEach(transition => {\n        if (!nodes[nodeKey].children.includes(transition.transition))\n          nodes[nodeKey].children.push(transition.transition);\n        if (!nodes[transition.transition].parents.includes(nodeKey))\n          nodes[transition.transition].parents.push(nodeKey);\n      });\n    });\n\n    nodes[START].rank = 0;\n\n    return nodes;\n  }\n}\n","import { PathwayNode, ActionNode } from 'pathways-model';\n\nexport function isActionNode(node: PathwayNode): node is ActionNode {\n  const { action } = node as ActionNode;\n  return action !== undefined;\n}\n\nexport function isBranchNode(node: PathwayNode): boolean {\n  const { action, label } = node as ActionNode;\n  return action === undefined && label !== 'Start';\n}\n\ntype ConversionResource = {\n  [key: string]: string;\n};\nexport const resourceNameConversion: ConversionResource = {\n  MedicationRequest: 'Medication',\n  ServiceRequest: 'Procedure',\n  CarePlan: 'Regimen'\n};\n","import React, { FC, ReactNode, ReactElement, memo } from 'react';\nimport { ActionNode } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from './ExpandedNode.module.scss';\nimport { isBranchNode, resourceNameConversion } from 'utils/nodeUtils';\n\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\ninterface ExpandedNodeProps {\n  actionNode: ActionNode;\n  isActionable: boolean;\n  isAction: boolean;\n}\nconst ExpandedNode: FC<ExpandedNodeProps> = memo(({ actionNode, isActionable, isAction }) => {\n  return (\n    <>\n      <ExpandedNodeMemo isAction={isAction} actionNode={actionNode} />\n    </>\n  );\n});\n\ntype ExpandedNodeFieldProps = {\n  title: string;\n  description: ReactNode;\n};\n\nconst ExpandedNodeField: FC<ExpandedNodeFieldProps> = ({ title, description }) => {\n  if (!description) return null;\n\n  return (\n    <tr>\n      <td className={styles.descTitle}>{title}</td>\n      <td className={styles.desc}>{description}</td>\n    </tr>\n  );\n};\n\nfunction isMedicationRequest(\n  request: MedicationRequest | ServiceRequest\n): request is MedicationRequest {\n  return (request as MedicationRequest).medicationCodeableConcept !== undefined;\n}\nfunction renderAction(actionNode: ActionNode): ReactElement[] {\n  let returnElements: ReactElement[] = [];\n  if (actionNode.action[0]) {\n    const resource = actionNode.action[0].resource;\n    const coding = isMedicationRequest(resource)\n      ? resource?.medicationCodeableConcept?.coding\n      : resource?.code?.coding;\n\n    const resourceType = resourceNameConversion[resource.resourceType]\n      ? resourceNameConversion[resource.resourceType]\n      : resource.resourceType;\n    returnElements = [\n      <ExpandedNodeField\n        key=\"Description\"\n        title=\"Description\"\n        description={actionNode.action[0].description}\n      />,\n      <ExpandedNodeField key=\"Type\" title=\"Type\" description={resourceType} />,\n      <ExpandedNodeField\n        key=\"System\"\n        title=\"System\"\n        description={\n          coding &&\n          coding[0].system && (\n            <>\n              {coding[0].system}\n              <a href={coding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n              </a>\n            </>\n          )\n        }\n      />,\n      <ExpandedNodeField key=\"Code\" title=\"Code\" description={coding && coding[0].code} />,\n      <ExpandedNodeField key=\"Display\" title=\"Display\" description={coding && coding[0].display} />,\n      <ExpandedNodeField key=\"Title\" title=\"Title\" description={resource.title} />\n    ];\n  }\n\n  return returnElements;\n}\ninterface ExpandedNodeMemoProps {\n  actionNode: ActionNode;\n  isAction: boolean;\n}\nconst ExpandedNodeMemo: FC<ExpandedNodeMemoProps> = memo(({ actionNode, isAction }) => {\n  const action = isAction && renderAction(actionNode);\n  const branch = isBranchNode(actionNode);\n  return (\n    <div className=\"expandedNode\">\n      <table className={styles.infoTable}>\n        <tbody>{action || branch}</tbody>\n      </table>\n    </div>\n  );\n});\n\nexport default ExpandedNode;\n","import React, { FC, Ref, forwardRef, memo, useCallback, useState, useEffect } from 'react';\nimport { ActionNode, PathwayNode } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './Node.module.scss';\nimport ExpandedNode from 'components/ExpandedNode';\nimport { isActionNode, isBranchNode } from 'utils/nodeUtils';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faMicroscope,\n  faPlay,\n  faPrescriptionBottleAlt,\n  faSyringe,\n  faCheckCircle,\n  faTimesCircle,\n  faBookMedical\n} from '@fortawesome/free-solid-svg-icons';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\n\ninterface NodeProps {\n  nodeKey: string;\n  pathwayNode: PathwayNode;\n  xCoordinate: number;\n  yCoordinate: number;\n  expanded?: boolean;\n  onClick?: (nodeKey: string) => void;\n  nodeType: string;\n}\n\nconst Node: FC<NodeProps & { ref: Ref<HTMLDivElement> }> = memo(\n  forwardRef<HTMLDivElement, NodeProps>(\n    (\n      { nodeKey, pathwayNode, xCoordinate, yCoordinate, expanded = false, onClick, nodeType },\n      ref\n    ) => {\n      const { currentNode } = useCurrentNodeContext();\n      const [hasMetadata, setHasMetadata] = useState<boolean>(\n        isActionNode(pathwayNode) ? pathwayNode.action.length > 0 : false\n      );\n\n      const onClickHandler = useCallback(() => {\n        if (onClick) onClick(nodeKey);\n      }, [onClick, nodeKey]);\n\n      useEffect(() => {\n        if (!hasMetadata && isActionNode(pathwayNode) && pathwayNode.action.length > 0) {\n          setHasMetadata(true);\n          if (!expanded) {\n            onClickHandler();\n          }\n        }\n      }, [hasMetadata, pathwayNode, setHasMetadata, onClickHandler, expanded]);\n\n      const { label } = pathwayNode;\n      const style = {\n        top: yCoordinate,\n        left: xCoordinate\n      };\n\n      const isCurrentNode = pathwayNode.key === currentNode?.key;\n      const isTransitionOfCurrentBranch =\n        currentNode &&\n        isBranchNode(currentNode) &&\n        currentNode.transitions.some(e => e?.transition === nodeKey);\n\n      const isActionable = isCurrentNode;\n      const topLevelClasses = [styles.node];\n      let expandedNodeClass = '';\n      if (expanded) topLevelClasses.push('expanded');\n      if (isActionable || isTransitionOfCurrentBranch) {\n        topLevelClasses.push(styles.actionable);\n        expandedNodeClass = styles.childActionable;\n      } else {\n        expandedNodeClass = styles.childNotActionable;\n      }\n      const isAction = isActionNode(pathwayNode);\n\n      return (\n        <div className={topLevelClasses.join(' ')} style={style} ref={ref}>\n          <div className={`nodeTitle ${onClickHandler && 'clickable'}`} onClick={onClickHandler}>\n            <div className=\"iconAndLabel\">\n              <NodeIcon pathwayNode={pathwayNode} nodeType={nodeType} />\n              {label}\n            </div>\n            <StatusIcon status={null} />\n          </div>\n          {expanded && (\n            <div className={`${styles.expandedNode} ${expandedNodeClass}`}>\n              <ExpandedNode\n                actionNode={pathwayNode as ActionNode}\n                isActionable={isActionable}\n                isAction={isAction}\n              />\n            </div>\n          )}\n        </div>\n      );\n    }\n  )\n);\n\ninterface NodeIconProps {\n  pathwayNode: PathwayNode;\n  nodeType: string;\n}\n\nconst NodeIcon: FC<NodeIconProps> = ({ pathwayNode, nodeType }) => {\n  let icon: IconDefinition | undefined;\n  if (pathwayNode.label === 'Start') {\n    icon = faPlay;\n  } else if (nodeType === 'action') {\n    const actionNode = pathwayNode as ActionNode;\n    if (actionNode.action.length > 0) {\n      const resourceType = actionNode.action[0].resource.resourceType;\n      if (resourceType === 'MedicationRequest') icon = faPrescriptionBottleAlt;\n      else if (resourceType === 'ServiceRequest') icon = faSyringe;\n      else if (resourceType === 'CarePlan') icon = faBookMedical;\n    }\n  } else if (nodeType === 'branch') {\n    icon = faMicroscope;\n  }\n\n  return icon ? <FontAwesomeIcon icon={icon} className={styles.icon} /> : null;\n};\n\ninterface StatusIconProps {\n  status: boolean | null;\n}\n\nconst StatusIcon: FC<StatusIconProps> = ({ status }) => {\n  if (status == null) {\n    return null;\n  }\n  const icon = status ? faCheckCircle : faTimesCircle;\n  return (\n    <div className=\"statusIcon\">\n      <FontAwesomeIcon icon={icon} className={styles.icon} />\n    </div>\n  );\n};\n\nexport default Node;\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    arrow: {\n      '& path': {\n        stroke: theme.palette.primary.main,\n        strokeWidth: 2\n      },\n      '& text': {\n        fontSize: '18px'\n      }\n    },\n    currentBranchArrow: {\n      '& path': {\n        stroke: theme.palette.secondary.main\n      }\n    },\n    arrowhead: {\n      '& polygon': {\n        fill: theme.palette.primary.main\n      }\n    },\n    currentBranchArrowhead: {\n      '& polygon': {\n        fill: theme.palette.secondary.main\n      }\n    }\n  }),\n  { name: 'Arrow', index: 1 }\n);\n","import React, { FC } from 'react';\nimport { Edge, Coordinate } from 'graph-model';\nimport { PathwayNode } from 'pathways-model';\nimport { isBranchNode } from 'utils/nodeUtils';\nimport useStyles from './styles';\nimport clsx from 'clsx';\nimport { Tooltip } from '@material-ui/core';\n\ninterface ArrowProps {\n  edge: Edge;\n  edgeName: string;\n  widthOffset: number;\n  currentNode: PathwayNode;\n}\n\ninterface ArrowPathProps {\n  points: Coordinate[];\n  arrowheadId: string;\n  widthOffset: number;\n}\n\nconst Arrow: FC<ArrowProps> = ({ edge, edgeName, widthOffset, currentNode }) => {\n  const styles = useStyles();\n  const isCurrentBranchArrow = isBranchNode(currentNode) && edge.start === currentNode.key;\n  const edgeNameNoWhitespace = edgeName.replace(' ', '');\n  const arrowheadId = `arrowhead-${edgeNameNoWhitespace}`;\n\n  const { label } = edge;\n  return (\n    <svg className={clsx(styles.arrow, isCurrentBranchArrow && styles.currentBranchArrow)}>\n      <ArrowPath points={edge.points} arrowheadId={arrowheadId} widthOffset={widthOffset} />\n      {label ? (\n        label.text.length > 12 ? (\n          <Tooltip title={label.text} aria-label=\"tooltip\">\n            <text x={label.x + widthOffset} y={label.y}>\n              {label.text.substring(0, 11) + '...'}\n            </text>\n          </Tooltip>\n        ) : (\n          <text x={label.x + widthOffset} y={label.y}>\n            {label.text}\n          </text>\n        )\n      ) : null}\n      <defs>\n        <marker\n          id={arrowheadId}\n          className={clsx(isCurrentBranchArrow ? styles.currentBranchArrowhead : styles.arrowhead)}\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n    </svg>\n  );\n};\n\n// Returns path for arrow from edge points\nconst ArrowPath: FC<ArrowPathProps> = ({ points, arrowheadId, widthOffset }) => {\n  const pointsWithOffset = points.map(p => ({ x: p.x + widthOffset, y: p.y }));\n  const length = pointsWithOffset.length;\n  pointsWithOffset[length - 1].y -= 17.5;\n  let pathString = `M ${pointsWithOffset[0].x} ${pointsWithOffset[0].y} `;\n\n  /**\n   * The points to use in the Cubic command is determined by the length of points array\n   * If i % 3 is 0, use all points including the 1st point\n   * If i % 3 is 1, use all points except the 1st point\n   * If i % 3 is 2, use all points including the 1st point and reuse every 3rd point\n   * We need points to be a multiple of 3 because the Cubic command expects 3 points\n   */\n  const writeCommandString = (remainder: number): string => {\n    return pointsWithOffset.reduce((acc, point, i, arr) => {\n      return i % 3 !== remainder\n        ? acc\n        : `${acc} C ${point.x} ${point.y} ${arr[i + 1].x} ${arr[i + 1].y} ${arr[i + 2].x}\n        ${arr[i + 2].y}`;\n    }, pathString);\n  };\n\n  pathString = writeCommandString(length % 3);\n\n  return <path d={pathString} fill=\"transparent\" markerEnd={`url(#${arrowheadId})`} />;\n};\n\nexport default Arrow;\n","import React, { FC, useCallback, useEffect, useMemo, useRef, useState, memo } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport graphLayout from 'visualization/layout';\nimport Node from 'components/Node';\nimport Arrow from 'components/Arrow';\nimport { useBuildCriteriaContext } from 'components/BuildCriteriaProvider';\nimport { Pathway, PathwayNode } from 'pathways-model';\nimport { Layout, NodeDimensions, NodeCoordinates, Edges } from 'graph-model';\nimport styles from './Graph.module.scss';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport { useCurrentNodeContext } from 'components/CurrentNodeProvider';\nimport { getNodeType } from 'utils/builder';\n\ninterface GraphProps {\n  graphContainerWidth: number;\n  interactive?: boolean;\n}\n\ninterface ExpandedNode {\n  [key: string]: boolean | string | null;\n}\n\nconst Graph: FC<GraphProps> = memo(function Graph({ graphContainerWidth, interactive = true }) {\n  const { pathway } = useCurrentPathwayContext();\n  const { currentNode } = useCurrentNodeContext();\n  const nodeRefs = useRef<{ [key: string]: HTMLDivElement }>({});\n\n  // Get the layout of the graph\n  const getGraphLayout = useCallback((): Layout => {\n    const nodeDimensions: NodeDimensions = {};\n\n    // Retrieve dimensions from nodeRefs\n    if (nodeRefs?.current) {\n      Object.keys(nodeRefs.current).forEach(key => {\n        const nodeElement = nodeRefs.current[key];\n        const width = nodeElement.clientWidth;\n        // nodeElement can have multiple children so calculate the sum to get the node height\n        const height = Array.from(nodeElement.children).reduce(\n          (acc, child) => acc + child.clientHeight,\n          0\n        );\n\n        nodeDimensions[key] = { width, height };\n      });\n    }\n\n    if (pathway) return graphLayout(pathway, nodeDimensions);\n    else return {} as Layout;\n  }, [pathway]);\n\n  const [layout, setLayout] = useState(getGraphLayout());\n  const { nodeCoordinates, edges } = layout;\n  const maxHeight = useMemo(() => {\n    return nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          .map(x => x.y)\n          .reduce((a, b) => Math.max(a, b))\n      : 0;\n  }, [nodeCoordinates]);\n\n  // If a node has a negative x value, shift nodes and edges to the right by that value\n  const minX =\n    nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          .map(x => x.x + graphContainerWidth / 2)\n          .reduce((a, b) => Math.min(a, b))\n      : 0;\n\n  if (minX < 0) {\n    const toAdd = minX * -1;\n    Object.keys(nodeCoordinates).forEach(key => {\n      const node = nodeCoordinates[key];\n      node.x += toAdd;\n    });\n\n    Object.keys(edges).forEach(key => {\n      const edge = edges[key];\n\n      edge.points.forEach(p => (p.x += toAdd));\n      if (edge.label) edge.label.x += toAdd;\n    });\n  }\n\n  // Find node that is farthest to the right\n  const maxWidth = useMemo(() => {\n    return nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          // Add width of the node to account for x coordinate starting at top left corner\n          .map(x => x.x + graphContainerWidth / 2 + (x.width ?? 0))\n          .reduce((a, b) => Math.max(a, b))\n      : 0;\n  }, [nodeCoordinates, graphContainerWidth]);\n\n  const [expanded, setExpanded] = useState<ExpandedNode>(() =>\n    Object.keys(layout).reduce(\n      (acc, curr: string) => {\n        acc[curr] = false;\n        return acc;\n      },\n      { lastSelectedNode: null } as ExpandedNode\n    )\n  );\n\n  const toggleExpanded = useCallback((key: string) => {\n    if (key === 'Start') {\n      setExpanded(prevState => ({\n        ...prevState,\n        lastSelectedNode: key\n      }));\n    } else {\n      setExpanded(prevState => ({\n        ...prevState,\n        [key]:\n          !prevState[key] || prevState.lastSelectedNode === key ? !prevState[key] : prevState[key],\n        lastSelectedNode: key\n      }));\n    }\n  }, []);\n\n  // Recalculate graph layout if a node is expanded\n  useEffect(() => {\n    setLayout(getGraphLayout());\n  }, [pathway, expanded, getGraphLayout]);\n\n  if (!pathway) return <div>Error: No pathway loaded</div>;\n  else if (!currentNode) return <div>Error: No node selected</div>;\n  else\n    return (\n      <GraphMemo\n        interactive={interactive}\n        maxHeight={maxHeight}\n        nodeCoordinates={nodeCoordinates}\n        edges={edges}\n        pathway={pathway}\n        nodeRefs={nodeRefs}\n        parentWidth={graphContainerWidth}\n        maxWidth={maxWidth}\n        expanded={expanded}\n        toggleExpanded={toggleExpanded}\n        currentNode={currentNode}\n      />\n    );\n});\n\ninterface GraphMemoProps {\n  interactive: boolean;\n  maxHeight: number;\n  nodeCoordinates: NodeCoordinates;\n  edges: Edges;\n  pathway: Pathway;\n  nodeRefs: React.MutableRefObject<{\n    [key: string]: HTMLDivElement;\n  }>;\n  parentWidth: number;\n  maxWidth: number;\n  expanded: ExpandedNode;\n  toggleExpanded: (key: string) => void;\n  currentNode: PathwayNode;\n}\n\nconst GraphMemo: FC<GraphMemoProps> = memo(function GraphMemo({\n  interactive,\n  maxHeight,\n  nodeCoordinates,\n  edges,\n  pathway,\n  nodeRefs,\n  parentWidth,\n  maxWidth,\n  expanded,\n  toggleExpanded,\n  currentNode\n}) {\n  const { id: pathwayId } = useParams();\n  const history = useHistory();\n  const { updateBuildCriteriaNodeId } = useBuildCriteriaContext();\n  const redirectToNode = useCallback(\n    nodeId => {\n      const url = `/builder/${encodeURIComponent(pathwayId)}/node/${encodeURIComponent(nodeId)}`;\n      if (url !== history.location.pathname) {\n        history.push(url);\n      }\n    },\n    [history, pathwayId]\n  );\n  const onClickHandler = useCallback(\n    (nodeKey: string) => {\n      if (interactive) {\n        redirectToNode(nodeKey);\n        toggleExpanded(nodeKey);\n        updateBuildCriteriaNodeId('');\n      }\n    },\n    [redirectToNode, toggleExpanded, updateBuildCriteriaNodeId, interactive]\n  );\n\n  return (\n    <div\n      id=\"graph-root\"\n      className={styles.root}\n      style={{\n        height: interactive ? maxHeight + 150 : 'inherit',\n        width: maxWidth + 'px',\n        position: 'relative',\n        marginRight: '5px'\n      }}\n    >\n      {nodeCoordinates !== undefined\n        ? Object.keys(nodeCoordinates).map(nodeKey => {\n            return (\n              <Node\n                key={nodeKey}\n                nodeKey={nodeKey}\n                ref={(node: HTMLDivElement): void => {\n                  if (node) nodeRefs.current[nodeKey] = node;\n                  else delete nodeRefs.current[nodeKey];\n                }}\n                pathwayNode={pathway.nodes[nodeKey]}\n                xCoordinate={nodeCoordinates[nodeKey].x + parentWidth / 2}\n                yCoordinate={nodeCoordinates[nodeKey].y}\n                expanded={Boolean(expanded[nodeKey])}\n                onClick={onClickHandler}\n                nodeType={getNodeType(pathway, nodeKey)}\n              />\n            );\n          })\n        : []}\n\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{\n          width: maxWidth + 100,\n          height: maxHeight,\n          zIndex: 1,\n          top: 0,\n          left: 0,\n          overflow: 'visible'\n        }}\n      >\n        {edges !== undefined\n          ? Object.keys(edges).map(edgeName => {\n              const edge = edges[edgeName];\n              return (\n                <Arrow\n                  key={edgeName}\n                  edge={edge}\n                  edgeName={edgeName}\n                  widthOffset={parentWidth / 2}\n                  currentNode={currentNode}\n                />\n              );\n            })\n          : []}\n      </svg>\n    </div>\n  );\n});\n\nexport default Graph;\n","import { makeStyles, Theme as AugmentedTheme, darken } from '@material-ui/core/styles';\n\nconst toggleButtonCss = {\n  borderRadius: '0%',\n  marginLeft: '1px',\n  width: '50px',\n  height: '50px'\n};\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    display: {\n      display: 'flex'\n    },\n    graph: {\n      width: '100%',\n      height: '100%',\n      'overflow-y': 'scroll'\n    },\n    graphHeader: {\n      display: 'flex',\n      height: '50px',\n      backgroundColor: theme.palette.common.white,\n      marginLeft: '1px'\n    },\n    graphHeaderText: {\n      height: '50px',\n      display: 'flex',\n      width: '100%',\n      backgroundColor: theme.palette.primary.main,\n      alignItems: 'center',\n      color: theme.palette.common.white,\n      fontSize: '1.4em',\n      paddingLeft: '1.5em'\n    },\n    toggleButton: {\n      '&-on': {\n        ...toggleButtonCss,\n        backgroundColor: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: darken(theme.palette.primary.main, 0.1)\n        }\n      },\n      '&-off': {\n        ...toggleButtonCss,\n        backgroundColor: theme.palette.text.primary,\n        '&:hover': {\n          backgroundColor: darken(theme.palette.text.primary, 0.1)\n        }\n      }\n    },\n    toggleIcon: {\n      transform: 'rotate(90deg) scaleY(-1)',\n      color: theme.palette.common.white\n    }\n  }),\n  { name: 'Builder', index: 1 }\n);\n","import React, { FC, useRef, useEffect, memo, useState, useCallback } from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { useBuildCriteriaContext } from 'components/BuildCriteriaProvider';\n\nimport Header from 'components/Header';\nimport Navigation from 'components/Navigation';\nimport Sidebar from 'components/Sidebar';\nimport Graph from 'components/Graph';\nimport { useTheme } from 'components/ThemeProvider';\nimport useStyles from './styles';\nimport { IconButton } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faProjectDiagram } from '@fortawesome/free-solid-svg-icons';\nimport { useCurrentPathwayContext } from 'components/CurrentPathwayProvider';\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor';\n\nconst Builder: FC = () => {\n  const styles = useStyles();\n  const { pathway } = useCurrentPathwayContext();\n  const { buildCriteriaNodeId } = useBuildCriteriaContext();\n  const headerElement = useRef<HTMLDivElement>(null);\n  const theme = useTheme('dark');\n  const [showCriteriaBuilder, setShowCriteriaBuilder] = useState<boolean>(true);\n  const [graphContainerElement, setGraphContainerElement] = useState<HTMLDivElement | null>(null);\n  const [graphContainerWidth, setGraphContainerWidth] = useState<number>(0);\n\n  const toggleShowCriteria = useCallback((): void => {\n    setShowCriteriaBuilder(!showCriteriaBuilder);\n  }, [showCriteriaBuilder]);\n\n  const handleGraphContainerElement = useCallback((reactNode: HTMLDivElement) => {\n    setGraphContainerElement(reactNode);\n    if (reactNode) {\n      setGraphContainerWidth(reactNode.clientWidth);\n    }\n  }, []);\n\n  // Recalculate graph layout if graph container size changes\n  useEffect(() => {\n    if (graphContainerElement) {\n      new ResizeSensor(graphContainerElement, function() {\n        setGraphContainerWidth(graphContainerElement.clientWidth);\n      });\n    }\n  }, [graphContainerElement]);\n\n  // Set the height of the graph container\n  useEffect(() => {\n    const resize = (): void => {\n      if (graphContainerElement && headerElement?.current)\n        graphContainerElement.style.height =\n          window.innerHeight - headerElement.current.clientHeight + 'px';\n    };\n    resize();\n    window.addEventListener('resize', resize);\n    return (): void => window.removeEventListener('resize', resize);\n  }, [pathway, headerElement, graphContainerElement]);\n\n  // Reset criteriaBuilderToggle to true if not currently building criteria\n  useEffect(() => {\n    if (!showCriteriaBuilder && buildCriteriaNodeId === '') setShowCriteriaBuilder(true);\n  }, [buildCriteriaNodeId, showCriteriaBuilder]);\n\n  return (\n    <>\n      <div ref={headerElement}>\n        <Header />\n        <Navigation />\n      </div>\n\n      {pathway && (\n        <div className={styles.display}>\n          <MuiThemeProvider theme={theme}>\n            <Sidebar headerElement={headerElement} />\n          </MuiThemeProvider>\n\n          <div ref={handleGraphContainerElement} className={styles.graph}>\n            {buildCriteriaNodeId !== '' && (\n              <div className={styles.graphHeader}>\n                <div className={styles.graphHeaderText}>\n                  <span>Criteria Builder</span>\n                </div>\n                <IconButton\n                  className={`${styles.toggleButton}-${showCriteriaBuilder ? 'on' : 'off'}`}\n                  onClick={toggleShowCriteria}\n                >\n                  <FontAwesomeIcon className={styles.toggleIcon} icon={faProjectDiagram} />\n                </IconButton>\n              </div>\n            )}\n            {buildCriteriaNodeId !== '' && showCriteriaBuilder ? (\n              // Empty section for authoring tool\n              <div />\n            ) : (\n              <Graph graphContainerWidth={graphContainerWidth} />\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default memo(Builder);\n","import React, { FC, memo, useMemo, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\n\nimport Builder from 'components/Builder';\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport { useCurrentPathwayContext } from './CurrentPathwayProvider';\nimport { useCurrentNodeContext } from './CurrentNodeProvider';\n\nconst BuilderRoute: FC = () => {\n  const { id, nodeId } = useParams();\n  const { pathways } = usePathwaysContext();\n  const { setPathway } = useCurrentPathwayContext();\n  const { setCurrentNode } = useCurrentNodeContext();\n  const pathwayId = decodeURIComponent(id);\n  const pathwayIndex = useMemo(() => pathways.findIndex(pathway => pathway.id === pathwayId), [\n    pathwayId,\n    pathways\n  ]);\n  const pathway = pathways[pathwayIndex];\n  const currentNode = pathway?.nodes?.[decodeURIComponent(nodeId)];\n\n  useEffect(() => {\n    setPathway(pathway);\n  }, [pathway, setPathway]);\n\n  useEffect(() => {\n    setCurrentNode(currentNode);\n  }, [currentNode, setCurrentNode]);\n\n  if (pathway == null) return null;\n  if (currentNode == null) return <Redirect to={`/builder/${id}/node/Start`} />;\n\n  return <Builder />;\n};\n\nexport default memo(BuilderRoute);\n","import React, { FC, createContext, useContext, useState, ReactNode } from 'react';\n\ninterface UserContextInterface {\n  user: string | null;\n  setUser: Function;\n}\n\nexport const UserContext = createContext<UserContextInterface>({} as UserContextInterface);\n\ninterface UserProviderProps {\n  children: ReactNode;\n}\n\nexport const UserProvider: FC<UserProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<string | null>(null);\n  return <UserContext.Provider value={{ user, setUser }}>{children}</UserContext.Provider>;\n};\n\nexport const useUser = (): UserContextInterface => useContext(UserContext);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    label: {\n      padding: `0.2em 2em`,\n      textTransform: 'none',\n      fontSize: '1.2em',\n      fontWeight: 100\n    }\n  }),\n  { name: 'Tabs', index: 1 }\n);\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Tab as ReactTab, TabList, TabPanel, Tabs as ReactTabs } from 'react-tabs';\n\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\nimport shortid from 'shortid';\n\ninterface Tab {\n  label: string;\n  component: ReactNode;\n}\n\ninterface TabsProp {\n  tabs: Tab[];\n}\n\nconst Tabs: FC<TabsProp> = ({ tabs }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.root}>\n      <ReactTabs>\n        <TabList>\n          {tabs.map(tab => (\n            <ReactTab key={shortid.generate()}>\n              <Button classes={{ label: styles.label }}>{tab.label}</Button>\n            </ReactTab>\n          ))}\n        </TabList>\n\n        {tabs.map(tab => (\n          <TabPanel key={shortid.generate()}>{tab.component}</TabPanel>\n        ))}\n      </ReactTabs>\n    </div>\n  );\n};\n\nexport default memo(Tabs);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './Loading.module.scss';\n\nconst Loading: FC = () => {\n  return (\n    <div className={styles.root}>\n      <FontAwesomeIcon icon={faSpinner} className={styles.root} size=\"4x\" spin />\n    </div>\n  );\n};\n\nexport default memo(Loading);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    createPathwayButton: {\n      alignSelf: 'flex-end'\n    },\n    pathwayList: {\n      marginTop: '2em'\n    },\n    pathwaysListButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    }\n  }),\n  { name: 'PathwaysList', index: 1 }\n);\n","import React, { FC, useCallback, useRef, memo, FormEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  IconButton\n} from '@material-ui/core';\nimport shortid from 'shortid';\nimport produce from 'immer';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport useStyles from './styles';\nimport { createNewPathway } from 'utils/builder';\nimport { Pathway } from 'pathways-model';\n\ninterface PathwayModalProps {\n  open: boolean;\n  onClose: () => void;\n  editPathway?: Pathway;\n}\n\nconst PathwayModal: FC<PathwayModalProps> = ({ open, onClose, editPathway }) => {\n  const createNewPathwayMeta = !editPathway;\n  const styles = useStyles();\n  const history = useHistory();\n  const pathwayNameRef = useRef<HTMLInputElement>(null);\n  const pathwayDescRef = useRef<HTMLInputElement>(null);\n  const { addPathway, updatePathway } = usePathwaysContext();\n\n  const closeModal = useCallback(\n    (pathwayId: string): void => {\n      history.push(`/builder/${encodeURIComponent(pathwayId)}/node/Start`);\n      onClose();\n    },\n    [history, onClose]\n  );\n\n  const handleCreateNewPathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      const pathwayId = shortid.generate();\n      const name: string = pathwayNameRef.current?.value ?? '';\n      const description: string = pathwayDescRef.current?.value ?? '';\n      addPathway(createNewPathway(name, description, pathwayId));\n      closeModal(pathwayId);\n    },\n    [addPathway, closeModal]\n  );\n\n  const handleUpdatePathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      if (\n        editPathway &&\n        (pathwayNameRef.current?.value !== editPathway.name ||\n          pathwayDescRef.current?.value !== editPathway.description)\n      ) {\n        const newEditPathway = produce(editPathway, (draftEditPathway: Pathway) => {\n          if (pathwayNameRef.current?.value) draftEditPathway.name = pathwayNameRef.current?.value;\n          draftEditPathway.description = pathwayDescRef.current?.value;\n        });\n        updatePathway(newEditPathway);\n      }\n      onClose();\n    },\n    [updatePathway, editPathway, onClose]\n  );\n\n  let name, description;\n  if (editPathway) {\n    name = editPathway.name;\n    const metaDescription = editPathway.description;\n    if (metaDescription && metaDescription !== '') description = metaDescription;\n  }\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"create-pathway\" fullWidth maxWidth=\"md\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={createNewPathwayMeta ? handleCreateNewPathway : handleUpdatePathway}>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            autoFocus\n            label=\"Pathway Name\"\n            fullWidth\n            required={createNewPathwayMeta}\n            inputRef={pathwayNameRef}\n            defaultValue={createNewPathwayMeta ? undefined : name}\n          />\n\n          <TextField\n            variant=\"outlined\"\n            label=\"Pathway Description\"\n            fullWidth\n            inputRef={pathwayDescRef}\n            defaultValue={createNewPathwayMeta ? undefined : description}\n            multiline\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={createNewPathwayMeta && <FontAwesomeIcon icon={faPlus} />}\n            type=\"submit\"\n          >\n            {createNewPathwayMeta ? 'Create' : 'Save'}\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(PathwayModal);\n","import React, { FC, memo, useState, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faFileDownload, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Link\n} from '@material-ui/core';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport { downloadPathway } from 'utils/builder';\nimport PathwayModal from './PathwayModal';\n\nimport useStyles from './styles';\nimport { Pathway } from 'pathways-model';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst PathwaysTable: FC = () => {\n  const styles = useStyles();\n  const { pathways, deletePathway } = usePathwaysContext();\n  const [open, setOpen] = useState(false);\n  const [editablePathway, setEditablePathway] = useState<Pathway>();\n\n  const openEditPathwayModal = useCallback((pathway: Pathway): void => {\n    setOpen(true);\n    setEditablePathway(pathway);\n  }, []);\n\n  const closeEditPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div>\n      <TableContainer className={styles.pathwayList}>\n        <Table aria-label=\"pathway list\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Pathway Name</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Last Updated</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {pathways.map(pathway => (\n              <TableRow key={pathway.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Link\n                    component={RouterLink}\n                    to={`/builder/${encodeURIComponent(pathway.id)}`}\n                    color=\"primary\"\n                    underline=\"none\"\n                  >\n                    {pathway.name}\n                  </Link>\n                </TableCell>\n\n                <TableCell>draft</TableCell>\n                <TableCell>2 days ago</TableCell>\n\n                <TableCell align=\"right\">\n                  <Button\n                    className={styles.pathwaysListButton}\n                    color=\"primary\"\n                    size=\"small\"\n                    startIcon={<FontAwesomeIcon icon={faEdit} />}\n                    onClick={(): void => openEditPathwayModal(pathway)}\n                  >\n                    Edit Info\n                  </Button>\n                  <Button\n                    className={styles.pathwaysListButton}\n                    color=\"primary\"\n                    size=\"small\"\n                    startIcon={<FontAwesomeIcon icon={faFileDownload} />}\n                    onClick={(): void => downloadPathway(pathway)}\n                  >\n                    Export\n                  </Button>\n                  <Button\n                    color=\"secondary\"\n                    size=\"small\"\n                    startIcon={<FontAwesomeIcon icon={faTrashAlt} />}\n                    onClick={(): void => deletePathway(pathway.id)}\n                  >\n                    Delete\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <PathwayModal open={open} onClose={closeEditPathwayModal} editPathway={editablePathway} />\n    </div>\n  );\n};\n\nexport default memo(PathwaysTable);\n","import React, { FC, useCallback, useState, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport Loading from 'components/elements/Loading';\nimport PathwaysTable from './PathwaysTable';\nimport PathwayModal from './PathwayModal';\n\nimport useStyles from './styles';\n\nconst PathwaysList: FC = () => {\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n  const { status } = usePathwaysContext();\n\n  const openNewPathwayModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeNewPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <Button\n        className={styles.createPathwayButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<FontAwesomeIcon icon={faPlus} />}\n        onClick={openNewPathwayModal}\n      >\n        Create Pathway\n      </Button>\n\n      <PathwayModal open={open} onClose={closeNewPathwayModal} />\n      {status === 'loading' ? <Loading /> : <PathwaysTable />}\n    </div>\n  );\n};\n\nexport default memo(PathwaysList);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    buttonRow: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    buildCriteriaButton: {\n      alignSelf: 'flex-end',\n      marginLeft: '20px'\n    },\n    criteriaList: {\n      marginTop: '2em'\n    },\n    editButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    },\n    input: {\n      display: 'none'\n    },\n    chooseFileInput: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    inputButton: {\n      whiteSpace: 'nowrap',\n      marginRight: '1em'\n    },\n    fileName: {\n      fontStyle: 'italic'\n    }\n  }),\n  { name: 'CriteriaList', index: 1 }\n);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport moment from 'moment';\n\nimport useStyles from './styles';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\n\nconst CriteriaTable: FC = () => {\n  const styles = useStyles();\n  const { criteria, deleteCriteria } = useCriteriaContext();\n\n  const renderDate = (datetime: number): string => {\n    return moment(datetime).fromNow();\n  };\n\n  return (\n    <TableContainer className={styles.criteriaList}>\n      <Table aria-label=\"criteria list\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Criteria Name</TableCell>\n            <TableCell>Version</TableCell>\n            <TableCell>Added</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {criteria.map(c => (\n            <TableRow key={c.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {c.label}\n              </TableCell>\n              <TableCell>{c.version}</TableCell>\n              <TableCell>{renderDate(c.modified)}</TableCell>\n\n              <TableCell align=\"right\">\n                <Button\n                  className={styles.editButton}\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faEdit} />}\n                >\n                  Edit\n                </Button>\n\n                <Button\n                  color=\"secondary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faTrashAlt} />}\n                  onClick={(): void => deleteCriteria(c.id)}\n                >\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default memo(CriteriaTable);\n","import React, { FC, useCallback, useRef, memo, FormEvent, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileImport, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Input,\n  IconButton\n} from '@material-ui/core';\n\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport useStyles from './styles';\n\ninterface ImportCriteriaModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst ImportCriteriaModal: FC<ImportCriteriaModalProps> = ({ open, onClose }) => {\n  const styles = useStyles();\n  const [fileName, setFileName] = useState<string>('');\n  const importFileRef = useRef<HTMLInputElement>(null);\n\n  const { addCriteria } = useCriteriaContext();\n\n  const selectFile = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      const files = importFileRef?.current?.files;\n      if (files?.length) addCriteria(files[0]);\n      onClose();\n      setFileName('');\n    },\n    [addCriteria, onClose]\n  );\n\n  const handleChooseFile = useCallback(() => {\n    if (importFileRef?.current?.files?.[0]) setFileName(importFileRef.current.files[0].name);\n  }, [importFileRef]);\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"import-criteria\" fullWidth maxWidth=\"sm\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={selectFile}>\n        <DialogContent>\n          <div className={styles.chooseFileInput}>\n            <Input\n              id=\"choose-file-input\"\n              className={styles.input}\n              inputRef={importFileRef}\n              type=\"file\"\n              inputProps={{ accept: '.json' }}\n              onChange={handleChooseFile}\n            />\n\n            <label htmlFor=\"choose-file-input\">\n              <Button\n                className={styles.inputButton}\n                variant=\"contained\"\n                color=\"primary\"\n                component=\"span\"\n              >\n                Choose File\n              </Button>\n            </label>\n\n            <div className={styles.fileName}>\n              {fileName ? <span>{fileName}</span> : <span>Choose ELM file to import.</span>}\n            </div>\n          </div>\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faFileImport} />}\n            type=\"submit\"\n          >\n            Import\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(ImportCriteriaModal);\n","import React, { FC, memo, useState, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTools, faFileImport } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwaysContext } from 'components/PathwaysProvider';\nimport Loading from 'components/elements/Loading';\nimport CriteriaTable from './CriteriaTable';\nimport ImportCriteriaModal from './ImportCriteriaModal';\n\nimport useStyles from './styles';\n\nconst CriteriaList: FC = () => {\n  const styles = useStyles();\n  const { status } = usePathwaysContext();\n\n  const [open, setOpen] = useState<boolean>(false);\n  const openImportModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeImportModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.buttonRow}>\n        <Button\n          className={styles.buildCriteriaButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={faFileImport} />}\n          onClick={openImportModal}\n        >\n          Import Library\n        </Button>\n        <Button\n          className={styles.buildCriteriaButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={faTools} />}\n        >\n          Build Criteria\n        </Button>\n      </div>\n\n      <ImportCriteriaModal open={open} onClose={closeImportModal} />\n\n      {status === 'loading' ? <Loading /> : <CriteriaTable />}\n    </div>\n  );\n};\n\nexport default memo(CriteriaList);\n","import React, { FC, memo } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from 'components/Header';\n\nimport BuilderRoute from './BuilderRoute';\nimport ThemeProvider from './ThemeProvider';\nimport { PathwaysProvider } from './PathwaysProvider';\nimport { UserProvider } from './UserProvider';\nimport { CriteriaProvider } from './CriteriaProvider';\nimport Tabs from './Tabs';\nimport PathwaysList from './PathwaysList';\nimport CriteriaList from './CriteriaList';\nimport { CurrentPathwayProvider } from './CurrentPathwayProvider';\nimport { CurrentNodeProvider } from './CurrentNodeProvider';\nimport { BuildCriteriaProvider } from './BuildCriteriaProvider';\n\nconst App: FC = () => {\n  return (\n    <ThemeProvider theme=\"light\">\n      <UserProvider>\n        <CurrentPathwayProvider>\n          <PathwaysProvider>\n            <CurrentNodeProvider>\n              <CriteriaProvider>\n                <BuildCriteriaProvider>\n                  <Router>\n                    <Switch>\n                      <Route path=\"/builder/:id/node/:nodeId\">\n                        <BuilderRoute />\n                      </Route>\n                      <Route path=\"/builder/:id\">\n                        <BuilderRoute />\n                      </Route>\n                      <Route path=\"/\">\n                        <Header />\n                        <Tabs\n                          tabs={[\n                            { label: 'Pathway', component: <PathwaysList /> },\n                            { label: 'Criteria', component: <CriteriaList /> }\n                          ]}\n                        />\n                      </Route>\n                    </Switch>\n                  </Router>\n                </BuildCriteriaProvider>\n              </CriteriaProvider>\n            </CurrentNodeProvider>\n          </PathwaysProvider>\n        </CurrentPathwayProvider>\n      </UserProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default memo(App);\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { enableMapSet } from 'immer';\n\nimport App from 'components/App';\n\nimport './styles/index.scss';\n\n// Enable use of immer produce on maps\nenableMapSet();\n\n// Enable why did you render for development mode\n// Will automatically track all memoized components\nif (process.env.NODE_ENV === 'development') {\n  const whyDidYouRender = require('@welldone-software/why-did-you-render');\n  whyDidYouRender(React, {\n    trackAllPureComponents: true\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n","export class ConfigManager {\n  constructor(config = {}) {\n    this.config = global.CONFIG ? { ...global.CONFIG, ...config } : { ...config };\n  }\n\n  get(name, defaultValue) {\n    const parts = name.split('.');\n    let context = this.config;\n    let value = null;\n    for (const i in parts) {\n      const part = parts[i];\n      value = context[part];\n      context = value;\n    }\n    return value || defaultValue;\n  }\n\n  add(conf) {\n    if (conf) {\n      this.config = {\n        ...this.config,\n        ...conf\n      };\n    }\n  }\n}\n\nconst config = new ConfigManager();\nexport default config;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__38uoJ\",\"icon\":\"Node_icon__354W4\",\"actionable\":\"Node_actionable__bHXKd\",\"expandedNode\":\"Node_expandedNode__1ar-A\",\"childNotActionable\":\"Node_childNotActionable__1bfBq\",\"childActionable\":\"Node_childActionable__SwUjD\"};"],"sourceRoot":""}